rule1:: isa(E4_2-involve, "involves"), agent(E4_2-involve, E4_1-freezing), isa(E4_1-freezing, "Freezing") -> effect(E4_2-involve, E4_3-change), isa(E4_3-change, "changing"), object(E4_3-change, E4_4-water), isa(E4_4-water, "water"), from(E4_3-change, E4_8-state), isa(E4_8-state, "its liquid state"), to(E4_3-change, E4_12-state), isa(E4_12-state, "its solid state"), by(E4_3-change, E4_18-remove), isa(E4_18-remove, "the removal").
rule2:: isa(E4_3-change, "changing"), object(E4_3-change, E4_4-water), isa(E4_4-water, "water"), from(E4_3-change, E4_8-state), isa(E4_8-state, "its liquid state"), to(E4_3-change, E4_12-state), isa(E4_12-state, "its solid state"), by(E4_3-change, E4_18-remove), isa(E4_18-remove, "the removal") -> effect(E4_2-involve, E4_3-change), isa(E4_2-involve, "involves"), agent(E4_2-involve, E4_1-freezing), isa(E4_1-freezing, "Freezing").
rule3:: isa(E1_7-sweat, "sweat"), agent(E1_7-sweat, E1_6-body), isa(E1_6-body, "our bodies"), in(E1_7-sweat, E1_4-weather), isa(E1_4-weather, "the hot weather") -> effect(E1_7-sweat, E1_12-bring), isa(E1_12-bring, "bringing"), object(E1_12-bring, E1_13-water), isa(E1_13-water, "water"), to(E1_12-bring, E1_16-skin), isa(E1_16-skin, "our skin").
rule4:: isa(E1_12-bring, "bringing"), object(E1_12-bring, E1_13-water), isa(E1_13-water, "water"), to(E1_12-bring, E1_16-skin), isa(E1_16-skin, "our skin") -> effect(E1_7-sweat, E1_12-bring), isa(E1_7-sweat, "sweat"), agent(E1_7-sweat, E1_6-body), isa(E1_6-body, "our bodies"), in(E1_7-sweat, E1_4-weather), isa(E1_4-weather, "the hot weather").
rule5:: isa(E2_13-go, "going dormant") -> enable(E2_13-go, E2_8-winter), isa(E2_8-winter, "the long winters by storing food and going dormant").
rule6:: isa(E2_8-winter, "the long winters by storing food and going dormant") -> enable(E2_13-go, E2_8-winter), isa(E2_13-go, "going dormant").
rule7:: isa(E2_10-store, "storing"), object(E2_10-store, E2_11-food), isa(E2_11-food, "food") -> enable(E2_10-store, E2_8-winter), isa(E2_8-winter, "the long winters by storing food and going dormant").
rule8:: isa(E2_8-winter, "the long winters by storing food and going dormant") -> enable(E2_10-store, E2_8-winter), isa(E2_10-store, "storing"), object(E2_10-store, E2_11-food), isa(E2_11-food, "food").
rule9:: isa(E3_3-lens, "A hand lens") -> purpose(E3_3-lens, E3_7-view), isa(E3_7-view, "view"), object(E3_7-view, E3_8-object), isa(E3_8-object, "objects"), in(E3_7-view, E3_11-detail), isa(E3_11-detail, "more detail").
rule10:: isa(E3_7-view, "view"), object(E3_7-view, E3_8-object), isa(E3_8-object, "objects"), in(E3_7-view, E3_11-detail), isa(E3_11-detail, "more detail") -> purpose(E3_3-lens, E3_7-view), isa(E3_3-lens, "A hand lens").
rule11:: isa(E4_18-remove, "the removal"), object(E4_18-remove, E4_20-heat), isa(E4_20-heat, "heat") -> enable(E4_18-remove, E4_3-change), isa(E4_3-change, "changing"), object(E4_3-change, E4_4-water), isa(E4_4-water, "water"), from(E4_3-change, E4_8-state), isa(E4_8-state, "its liquid state"), to(E4_3-change, E4_12-state), isa(E4_12-state, "its solid state"), by(E4_3-change, E4_18-remove), isa(E4_18-remove, "the removal").
rule12:: isa(E4_3-change, "changing"), object(E4_3-change, E4_4-water), isa(E4_4-water, "water"), from(E4_3-change, E4_8-state), isa(E4_8-state, "its liquid state"), to(E4_3-change, E4_12-state), isa(E4_12-state, "its solid state"), by(E4_3-change, E4_18-remove), isa(E4_18-remove, "the removal") -> enable(E4_18-remove, E4_3-change), isa(E4_18-remove, "the removal"), object(E4_18-remove, E4_20-heat), isa(E4_20-heat, "heat").
rule13:: isa(E5_4-make, "not make"), agent(E5_4-make, E5_1-animal), isa(E5_1-animal, "Animals"), object(E5_4-make, E5_7-food), isa(E5_7-food, "their own food") -> effect(E5_4-make, E5_11-eat), isa(E5_11-eat, "eat"), agent(E5_11-eat, E5_9-they), isa(E5_9-they, "they").
rule14:: isa(E5_11-eat, "eat"), agent(E5_11-eat, E5_9-they), isa(E5_9-they, "they") -> effect(E5_4-make, E5_11-eat), isa(E5_4-make, "not make"), agent(E5_4-make, E5_1-animal), isa(E5_1-animal, "Animals"), object(E5_4-make, E5_7-food), isa(E5_7-food, "their own food").
rule15:: isa(E5_11-eat, "eat"), agent(E5_11-eat, E5_9-they), isa(E5_9-they, "they") -> requirement(E5_11-eat, E5_13-get), isa(E5_13-get, "get"), object(E5_13-get, E5_14-nutrient), isa(E5_14-nutrient, "nutrients").
rule16:: isa(E5_13-get, "get"), object(E5_13-get, E5_14-nutrient), isa(E5_14-nutrient, "nutrients") -> requirement(E5_11-eat, E5_13-get), isa(E5_11-eat, "eat"), agent(E5_11-eat, E5_9-they), isa(E5_9-they, "they").
rule17:: isa(E10_1-decomposer, "Decomposers") -> example(E10_1-decomposer, E10_4-thing), isa(E10_4-thing, "living things").
rule18:: isa(E10_4-thing, "living things") -> example(E10_1-decomposer, E10_4-thing), isa(E10_1-decomposer, "Decomposers").
rule19:: isa(E11_1-gravity, "Gravity") -> example(E11_1-gravity, E11_4-force), isa(E11_4-force, "the force").
rule20:: isa(E11_4-force, "the force") -> example(E11_1-gravity, E11_4-force), isa(E11_1-gravity, "Gravity").
rule21:: isa(E12_6-sweat, "sweat") -> example(E12_6-sweat, E12_14-adjust), isa(E12_14-adjust, "adjust"), agent(E12_14-adjust, E12_12-organism), isa(E12_12-organism, "an organism"), object(E12_14-adjust, E12_10-that), isa(E12_10-that, "that"), to(E12_14-adjust, E12_17-temperature), isa(E12_17-temperature, "hot temperatures").
rule22:: isa(E12_14-adjust, "adjust"), agent(E12_14-adjust, E12_12-organism), isa(E12_12-organism, "an organism"), object(E12_14-adjust, E12_10-that), isa(E12_10-that, "that"), to(E12_14-adjust, E12_17-temperature), isa(E12_17-temperature, "hot temperatures") -> example(E12_6-sweat, E12_14-adjust), isa(E12_6-sweat, "sweat").
rule23:: isa(E14_4-use, "use"), agent(E14_4-use, E14_2-student), isa(E14_2-student, "A student"), object(E14_4-use, E14_7-lens), isa(E14_7-lens, "a hand lens") -> effect(E14_4-use, E14_9-get), isa(E14_9-get, "get"), object(E14_9-get, E14_12-look), isa(E14_12-look, "a better look at the spots").
rule24:: isa(E14_9-get, "get"), object(E14_9-get, E14_12-look), isa(E14_12-look, "a better look at the spots") -> effect(E14_4-use, E14_9-get), isa(E14_4-use, "use"), agent(E14_4-use, E14_2-student), isa(E14_2-student, "A student"), object(E14_4-use, E14_7-lens), isa(E14_7-lens, "a hand lens").
rule25:: isa(E19_4-use, "use"), agent(E19_4-use, E19_2-student), isa(E19_2-student, "A student"), object(E19_4-use, E19_7-cylinder), isa(E19_7-cylinder, "a graduated cylinder") -> effect(E19_4-use, E19_9-measure), isa(E19_9-measure, "measure"), object(E19_9-measure, E19_12-milliliter), isa(E19_12-milliliter, "10 milliliters of water").
rule26:: isa(E19_9-measure, "measure"), object(E19_9-measure, E19_12-milliliter), isa(E19_12-milliliter, "10 milliliters of water") -> effect(E19_4-use, E19_9-measure), isa(E19_4-use, "use"), agent(E19_4-use, E19_2-student), isa(E19_2-student, "A student"), object(E19_4-use, E19_7-cylinder), isa(E19_7-cylinder, "a graduated cylinder").
rule27:: isa(E3_5-use, "used"), object(E3_5-use, E3_3-lens), isa(E3_3-lens, "A hand lens") -> effect(E3_5-use, E3_7-view), isa(E3_7-view, "view"), object(E3_7-view, E3_8-object), isa(E3_8-object, "objects"), in(E3_7-view, E3_11-detail), isa(E3_11-detail, "more detail").
rule28:: isa(E3_7-view, "view"), object(E3_7-view, E3_8-object), isa(E3_8-object, "objects"), in(E3_7-view, E3_11-detail), isa(E3_11-detail, "more detail") -> effect(E3_5-use, E3_7-view), isa(E3_5-use, "used"), object(E3_5-use, E3_3-lens), isa(E3_3-lens, "A hand lens").
rule29:: isa(E22_2-cause, "causes"), agent(E22_2-cause, E22_1-gravity), isa(E22_1-gravity, "Gravity"), object(E22_2-cause, E22_4-ball), isa(E22_4-ball, "the ball") -> effect(E22_2-cause, E22_6-fall), isa(E22_6-fall, "fall"), to(E22_6-fall, E22_9-ground), isa(E22_9-ground, "the ground").
rule30:: isa(E22_6-fall, "fall"), to(E22_6-fall, E22_9-ground), isa(E22_9-ground, "the ground") -> effect(E22_2-cause, E22_6-fall), isa(E22_2-cause, "causes"), agent(E22_2-cause, E22_1-gravity), isa(E22_1-gravity, "Gravity"), object(E22_2-cause, E22_4-ball), isa(E22_4-ball, "the ball").
rule31:: isa(E17_10-friction, "friction") -> cause(E17_10-friction, E17_4-produce), isa(E17_4-produce, "produces"), object(E17_4-produce, E17_6-smoke), isa(E17_6-smoke, "the smoke").
rule32:: isa(E17_4-produce, "produces"), object(E17_4-produce, E17_6-smoke), isa(E17_6-smoke, "the smoke") -> cause(E17_10-friction, E17_4-produce), isa(E17_10-friction, "friction").
rule33:: isa(E18_1-rest, "Resting") -> requirement(E18_1-rest, E18_7-maintain), isa(E18_7-maintain, "maintain"), agent(E18_7-maintain, E18_5-human), isa(E18_5-human, "humans"), object(E18_7-maintain, E18_9-health), isa(E18_9-health, "good health").
rule34:: isa(E18_7-maintain, "maintain"), agent(E18_7-maintain, E18_5-human), isa(E18_5-human, "humans"), object(E18_7-maintain, E18_9-health), isa(E18_9-health, "good health") -> requirement(E18_1-rest, E18_7-maintain), isa(E18_1-rest, "Resting").
rule35:: isa(E21_7-decomposer, "decomposers") -> purpose(E21_7-decomposer, E21_9-return), isa(E21_9-return, "return"), object(E21_9-return, E21_10-nutrient), isa(E21_10-nutrient, "nutrients"), to(E21_9-return, E21_14-chain), isa(E21_14-chain, "the food chain").
rule36:: isa(E21_9-return, "return"), object(E21_9-return, E21_10-nutrient), isa(E21_10-nutrient, "nutrients"), to(E21_9-return, E21_14-chain), isa(E21_14-chain, "the food chain") -> purpose(E21_7-decomposer, E21_9-return), isa(E21_7-decomposer, "decomposers").
rule37:: isa(E21_9-return, "return"), object(E21_9-return, E21_10-nutrient), isa(E21_10-nutrient, "nutrients"), to(E21_9-return, E21_14-chain), isa(E21_14-chain, "the food chain") -> when(E21_9-return, E21_5-die), isa(E21_5-die, "die"), agent(E21_5-die, E21_2-plant), isa(E21_2-plant, "plants"), agent(E21_5-die, E21_4-animal), isa(E21_4-animal, "animals").
rule38:: isa(E21_5-die, "die"), agent(E21_5-die, E21_2-plant), isa(E21_2-plant, "plants"), agent(E21_5-die, E21_4-animal), isa(E21_4-animal, "animals") -> when(E21_9-return, E21_5-die), isa(E21_9-return, "return"), object(E21_9-return, E21_10-nutrient), isa(E21_10-nutrient, "nutrients"), to(E21_9-return, E21_14-chain), isa(E21_14-chain, "the food chain").
rule39:: isa(E22_6-fall, "fall"), to(E22_6-fall, E22_9-ground), isa(E22_9-ground, "the ground") -> cause(E22_6-fall, E22_1-gravity), isa(E22_1-gravity, "Gravity").
rule40:: isa(E22_1-gravity, "Gravity") -> cause(E22_6-fall, E22_1-gravity), isa(E22_6-fall, "fall"), to(E22_6-fall, E22_9-ground), isa(E22_9-ground, "the ground").
