rule1:: isa(E1S7-sweat, "sweat"), agent(E1S7-sweat, E1S6-body), isa(E1S6-body, "our bodies"), object(E1S7-sweat, E1S9-perspiration), isa(E1S9-perspiration, "perspiration"), in(E1S7-sweat, E1S4-weather), isa(E1S4-weather, "the hot weather") -> effect(E1S7-sweat, E1S12-bring), isa(E1S12-bring, "bringing"), object(E1S12-bring, E1S13-water), isa(E1S13-water, "water"), to(E1S12-bring, E1S16-skin), isa(E1S16-skin, "our skin").
rule2:: isa(E1S12-bring, "bringing"), object(E1S12-bring, E1S13-water), isa(E1S13-water, "water"), to(E1S12-bring, E1S16-skin), isa(E1S16-skin, "our skin") -> effect(E1S7-sweat, E1S12-bring), isa(E1S7-sweat, "sweat"), agent(E1S7-sweat, E1S6-body), isa(E1S6-body, "our bodies"), object(E1S7-sweat, E1S9-perspiration), isa(E1S9-perspiration, "perspiration"), in(E1S7-sweat, E1S4-weather), isa(E1S4-weather, "the hot weather").
rule3:: isa(E4S2-involve, "involves"), agent(E4S2-involve, E4S1-freezing), isa(E4S1-freezing, "Freezing") -> effect(E4S2-involve, E4S3-change), isa(E4S3-change, "changing"), object(E4S3-change, E4S4-water), isa(E4S4-water, "water"), from(E4S3-change, E4S8-state), isa(E4S8-state, "its liquid state"), to(E4S3-change, E4S12-state), isa(E4S12-state, "its solid state"), by(E4S3-change, E4S18-remove), isa(E4S18-remove, "the removal").
rule4:: isa(E4S3-change, "changing"), object(E4S3-change, E4S4-water), isa(E4S4-water, "water"), from(E4S3-change, E4S8-state), isa(E4S8-state, "its liquid state"), to(E4S3-change, E4S12-state), isa(E4S12-state, "its solid state"), by(E4S3-change, E4S18-remove), isa(E4S18-remove, "the removal") -> effect(E4S2-involve, E4S3-change), isa(E4S2-involve, "involves"), agent(E4S2-involve, E4S1-freezing), isa(E4S1-freezing, "Freezing").
rule5:: isa(E2S13-go, "going dormant") -> enable(E2S13-go, E2S4-prepare), isa(E2S4-prepare, "prepare"), agent(E2S4-prepare, E2S3-animal), isa(E2S3-animal, "some animals"), arg(E2S4-prepare, E2S1-when), isa(E2S1-when, "When"), for(E2S4-prepare, E2S8-winter), isa(E2S8-winter, "the long winters").
rule6:: isa(E2S4-prepare, "prepare"), agent(E2S4-prepare, E2S3-animal), isa(E2S3-animal, "some animals"), arg(E2S4-prepare, E2S1-when), isa(E2S1-when, "When"), for(E2S4-prepare, E2S8-winter), isa(E2S8-winter, "the long winters") -> enable(E2S13-go, E2S4-prepare), isa(E2S13-go, "going dormant").
rule7:: isa(E2S10-store, "storing"), object(E2S10-store, E2S11-food), isa(E2S11-food, "food") -> enable(E2S10-store, E2S4-prepare), isa(E2S4-prepare, "prepare"), agent(E2S4-prepare, E2S3-animal), isa(E2S3-animal, "some animals"), arg(E2S4-prepare, E2S1-when), isa(E2S1-when, "When"), for(E2S4-prepare, E2S8-winter), isa(E2S8-winter, "the long winters").
rule8:: isa(E2S4-prepare, "prepare"), agent(E2S4-prepare, E2S3-animal), isa(E2S3-animal, "some animals"), arg(E2S4-prepare, E2S1-when), isa(E2S1-when, "When"), for(E2S4-prepare, E2S8-winter), isa(E2S8-winter, "the long winters") -> enable(E2S10-store, E2S4-prepare), isa(E2S10-store, "storing"), object(E2S10-store, E2S11-food), isa(E2S11-food, "food").
rule9:: isa(E2S18-hibernate, "") -> example(E2S18-hibernate, E2S4-prepare), isa(E2S4-prepare, "prepare"), agent(E2S4-prepare, E2S3-animal), isa(E2S3-animal, "some animals"), arg(E2S4-prepare, E2S1-when), isa(E2S1-when, "When"), for(E2S4-prepare, E2S8-winter), isa(E2S8-winter, "the long winters").
rule10:: isa(E2S4-prepare, "prepare"), agent(E2S4-prepare, E2S3-animal), isa(E2S3-animal, "some animals"), arg(E2S4-prepare, E2S1-when), isa(E2S1-when, "When"), for(E2S4-prepare, E2S8-winter), isa(E2S8-winter, "the long winters") -> example(E2S18-hibernate, E2S4-prepare), isa(E2S18-hibernate, "").
rule11:: isa(E3S3-lens, "A hand lens") -> purpose(E3S3-lens, E3S7-view), isa(E3S7-view, "view"), object(E3S7-view, E3S8-object), isa(E3S8-object, "objects"), in(E3S7-view, E3S11-detail), isa(E3S11-detail, "more detail").
rule12:: isa(E3S7-view, "view"), object(E3S7-view, E3S8-object), isa(E3S8-object, "objects"), in(E3S7-view, E3S11-detail), isa(E3S11-detail, "more detail") -> purpose(E3S3-lens, E3S7-view), isa(E3S3-lens, "A hand lens").
rule13:: isa(E4S18-remove, "the removal"), object(E4S18-remove, E4S20-heat), isa(E4S20-heat, "heat") -> enable(E4S18-remove, E4S3-change), isa(E4S3-change, "changing"), object(E4S3-change, E4S4-water), isa(E4S4-water, "water"), from(E4S3-change, E4S8-state), isa(E4S8-state, "its liquid state"), to(E4S3-change, E4S12-state), isa(E4S12-state, "its solid state"), by(E4S3-change, E4S18-remove), isa(E4S18-remove, "the removal").
rule14:: isa(E4S3-change, "changing"), object(E4S3-change, E4S4-water), isa(E4S4-water, "water"), from(E4S3-change, E4S8-state), isa(E4S8-state, "its liquid state"), to(E4S3-change, E4S12-state), isa(E4S12-state, "its solid state"), by(E4S3-change, E4S18-remove), isa(E4S18-remove, "the removal") -> enable(E4S18-remove, E4S3-change), isa(E4S18-remove, "the removal"), object(E4S18-remove, E4S20-heat), isa(E4S20-heat, "heat").
rule15:: isa(E5S4-make, "not make"), agent(E5S4-make, E5S1-animal), isa(E5S1-animal, "Animals"), object(E5S4-make, E5S7-food), isa(E5S7-food, "their own food") -> effect(E5S4-make, E5S11-eat), isa(E5S11-eat, "eat"), agent(E5S11-eat, E5S9-they), isa(E5S9-they, "they").
rule16:: isa(E5S11-eat, "eat"), agent(E5S11-eat, E5S9-they), isa(E5S9-they, "they") -> effect(E5S4-make, E5S11-eat), isa(E5S4-make, "not make"), agent(E5S4-make, E5S1-animal), isa(E5S1-animal, "Animals"), object(E5S4-make, E5S7-food), isa(E5S7-food, "their own food").
rule17:: isa(E5S11-eat, "eat"), agent(E5S11-eat, E5S9-they), isa(E5S9-they, "they") -> requirement(E5S11-eat, E5S13-get), isa(E5S13-get, "get"), object(E5S13-get, E5S14-nutrient), isa(E5S14-nutrient, "nutrients").
rule18:: isa(E5S13-get, "get"), object(E5S13-get, E5S14-nutrient), isa(E5S14-nutrient, "nutrients") -> requirement(E5S11-eat, E5S13-get), isa(E5S11-eat, "eat"), agent(E5S11-eat, E5S9-they), isa(E5S9-they, "they").
rule19:: isa(E7S1-get, "Getting"), object(E7S1-get, E7S3-rest), isa(E7S3-rest, "rest") -> part(E7S1-get, E7S10-live), isa(E7S10-live, "living"), object(E7S10-live, E7S13-life), isa(E7S13-life, "a healthy life").
rule20:: isa(E7S10-live, "living"), object(E7S10-live, E7S13-life), isa(E7S13-life, "a healthy life") -> part(E7S1-get, E7S10-live), isa(E7S1-get, "Getting"), object(E7S1-get, E7S3-rest), isa(E7S3-rest, "rest").
rule21:: isa(E10S1-decomposer, "Decomposers") -> example(E10S1-decomposer, E10S4-thing), isa(E10S4-thing, "living things").
rule22:: isa(E10S4-thing, "living things") -> example(E10S1-decomposer, E10S4-thing), isa(E10S1-decomposer, "Decomposers").
rule23:: isa(E11S1-gravity, "Gravity") -> example(E11S1-gravity, E11S4-force), isa(E11S4-force, "the force").
rule24:: isa(E11S4-force, "the force") -> example(E11S1-gravity, E11S4-force), isa(E11S1-gravity, "Gravity").
rule25:: isa(E12S6-sweat, "sweat") -> example(E12S6-sweat, E12S14-adjust), isa(E12S14-adjust, "adjust"), agent(E12S14-adjust, E12S12-organism), isa(E12S12-organism, "an organism"), object(E12S14-adjust, E12S10-that), isa(E12S10-that, "that"), to(E12S14-adjust, E12S17-temperature), isa(E12S17-temperature, "hot temperatures").
rule26:: isa(E12S14-adjust, "adjust"), agent(E12S14-adjust, E12S12-organism), isa(E12S12-organism, "an organism"), object(E12S14-adjust, E12S10-that), isa(E12S10-that, "that"), to(E12S14-adjust, E12S17-temperature), isa(E12S17-temperature, "hot temperatures") -> example(E12S6-sweat, E12S14-adjust), isa(E12S6-sweat, "sweat").
rule27:: isa(E13S3-store, "storing"), object(E13S3-store, E13S4-nut), isa(E13S4-nut, "nuts") -> effect(E13S3-store, E13S6-prepare), isa(E13S6-prepare, "preparing"), agent(E13S6-prepare, E13S2-squirrel), isa(E13S2-squirrel, "A squirrel"), for(E13S6-prepare, E13S10-change), isa(E13S10-change, "a seasonal change in the environment").
rule28:: isa(E13S6-prepare, "preparing"), agent(E13S6-prepare, E13S2-squirrel), isa(E13S2-squirrel, "A squirrel"), for(E13S6-prepare, E13S10-change), isa(E13S10-change, "a seasonal change in the environment") -> effect(E13S3-store, E13S6-prepare), isa(E13S3-store, "storing"), object(E13S3-store, E13S4-nut), isa(E13S4-nut, "nuts").
rule29:: isa(E14S4-use, "use"), agent(E14S4-use, E14S2-student), isa(E14S2-student, "A student"), object(E14S4-use, E14S7-lens), isa(E14S7-lens, "a hand lens") -> effect(E14S4-use, E14S9-get), isa(E14S9-get, "get"), object(E14S9-get, E14S12-look), isa(E14S12-look, "a better look at the spots").
rule30:: isa(E14S9-get, "get"), object(E14S9-get, E14S12-look), isa(E14S12-look, "a better look at the spots") -> effect(E14S4-use, E14S9-get), isa(E14S4-use, "use"), agent(E14S4-use, E14S2-student), isa(E14S2-student, "A student"), object(E14S4-use, E14S7-lens), isa(E14S7-lens, "a hand lens").
rule31:: isa(E19S4-use, "use"), agent(E19S4-use, E19S2-student), isa(E19S2-student, "A student"), object(E19S4-use, E19S7-cylinder), isa(E19S7-cylinder, "a graduated cylinder") -> effect(E19S4-use, E19S9-measure), isa(E19S9-measure, "measure"), object(E19S9-measure, E19S12-milliliter), isa(E19S12-milliliter, "10 milliliters of water").
rule32:: isa(E19S9-measure, "measure"), object(E19S9-measure, E19S12-milliliter), isa(E19S12-milliliter, "10 milliliters of water") -> effect(E19S4-use, E19S9-measure), isa(E19S4-use, "use"), agent(E19S4-use, E19S2-student), isa(E19S2-student, "A student"), object(E19S4-use, E19S7-cylinder), isa(E19S7-cylinder, "a graduated cylinder").
rule33:: isa(E2S17-call, "called"), object(E2S17-call, E2S15-it), isa(E2S15-it, "it") -> effect(E2S17-call, E2S18-hibernate), isa(E2S18-hibernate, "").
rule34:: isa(E2S18-hibernate, "") -> effect(E2S17-call, E2S18-hibernate), isa(E2S17-call, "called"), object(E2S17-call, E2S15-it), isa(E2S15-it, "it").
rule35:: isa(E3S5-use, "used"), object(E3S5-use, E3S3-lens), isa(E3S3-lens, "A hand lens") -> effect(E3S5-use, E3S7-view), isa(E3S7-view, "view"), object(E3S7-view, E3S8-object), isa(E3S8-object, "objects"), in(E3S7-view, E3S11-detail), isa(E3S11-detail, "more detail").
rule36:: isa(E3S7-view, "view"), object(E3S7-view, E3S8-object), isa(E3S8-object, "objects"), in(E3S7-view, E3S11-detail), isa(E3S11-detail, "more detail") -> effect(E3S5-use, E3S7-view), isa(E3S5-use, "used"), object(E3S5-use, E3S3-lens), isa(E3S3-lens, "A hand lens").
rule37:: isa(E20S14-call, "called"), object(E20S14-call, E20S3-fur), isa(E20S3-fur, "The white fur of an arctic fox blends"), arg(E20S14-call, E20S9-in), isa(E20S9-in, "in with the snow") -> effect(E20S14-call, E20S15-camouflage), isa(E20S15-camouflage, "camouflage").
rule38:: isa(E20S15-camouflage, "camouflage") -> effect(E20S14-call, E20S15-camouflage), isa(E20S14-call, "called"), object(E20S14-call, E20S3-fur), isa(E20S3-fur, "The white fur of an arctic fox blends"), arg(E20S14-call, E20S9-in), isa(E20S9-in, "in with the snow").
rule39:: isa(E22S2-cause, "causes"), agent(E22S2-cause, E22S1-gravity), isa(E22S1-gravity, "Gravity") -> effect(E22S2-cause, E22S6-fall), isa(E22S6-fall, "fall"), agent(E22S6-fall, E22S4-ball), isa(E22S4-ball, "the ball"), to(E22S6-fall, E22S9-ground), isa(E22S9-ground, "the ground").
rule40:: isa(E22S6-fall, "fall"), agent(E22S6-fall, E22S4-ball), isa(E22S4-ball, "the ball"), to(E22S6-fall, E22S9-ground), isa(E22S9-ground, "the ground") -> effect(E22S2-cause, E22S6-fall), isa(E22S2-cause, "causes"), agent(E22S2-cause, E22S1-gravity), isa(E22S1-gravity, "Gravity").
rule41:: isa(E15S1-decrease, "Decreasing"), object(E15S1-decrease, E15S3-temperature), isa(E15S3-temperature, "the temperature") -> effect(E15S1-decrease, E15S8-change), isa(E15S8-change, "change"), object(E15S8-change, E15S9-water), isa(E15S9-water, "water"), from(E15S8-change, E15S12-liquid), isa(E15S12-liquid, "a liquid"), to(E15S8-change, E15S15-solid), isa(E15S15-solid, "a solid").
rule42:: isa(E15S8-change, "change"), object(E15S8-change, E15S9-water), isa(E15S9-water, "water"), from(E15S8-change, E15S12-liquid), isa(E15S12-liquid, "a liquid"), to(E15S8-change, E15S15-solid), isa(E15S15-solid, "a solid") -> effect(E15S1-decrease, E15S8-change), isa(E15S1-decrease, "Decreasing"), object(E15S1-decrease, E15S3-temperature), isa(E15S3-temperature, "the temperature").
rule43:: isa(E17S10-friction, "friction") -> cause(E17S10-friction, E17S4-produce), isa(E17S4-produce, "produces"), object(E17S4-produce, E17S6-smoke), isa(E17S6-smoke, "the smoke").
rule44:: isa(E17S4-produce, "produces"), object(E17S4-produce, E17S6-smoke), isa(E17S6-smoke, "the smoke") -> cause(E17S10-friction, E17S4-produce), isa(E17S10-friction, "friction").
rule45:: isa(E18S1-rest, "Resting") -> requirement(E18S1-rest, E18S7-maintain), isa(E18S7-maintain, "maintain"), agent(E18S7-maintain, E18S5-human), isa(E18S5-human, "humans"), object(E18S7-maintain, E18S9-health), isa(E18S9-health, "good health").
rule46:: isa(E18S7-maintain, "maintain"), agent(E18S7-maintain, E18S5-human), isa(E18S5-human, "humans"), object(E18S7-maintain, E18S9-health), isa(E18S9-health, "good health") -> requirement(E18S1-rest, E18S7-maintain), isa(E18S1-rest, "Resting").
rule47:: isa(E20S15-camouflage, "camouflage") -> example(E20S15-camouflage, E20S3-fur), isa(E20S3-fur, "The white fur of an arctic fox blends"), of(E20S3-fur, E20S8-blend), isa(E20S8-blend, "an arctic fox blends").
rule48:: isa(E20S3-fur, "The white fur of an arctic fox blends"), of(E20S3-fur, E20S8-blend), isa(E20S8-blend, "an arctic fox blends") -> example(E20S15-camouflage, E20S3-fur), isa(E20S15-camouflage, "camouflage").
rule49:: isa(E21S7-decomposer, "decomposers") -> purpose(E21S7-decomposer, E21S9-return), isa(E21S9-return, "return"), object(E21S9-return, E21S10-nutrient), isa(E21S10-nutrient, "nutrients"), to(E21S9-return, E21S14-chain), isa(E21S14-chain, "the food chain").
rule50:: isa(E21S9-return, "return"), object(E21S9-return, E21S10-nutrient), isa(E21S10-nutrient, "nutrients"), to(E21S9-return, E21S14-chain), isa(E21S14-chain, "the food chain") -> purpose(E21S7-decomposer, E21S9-return), isa(E21S7-decomposer, "decomposers").
rule51:: isa(E21S9-return, "return"), object(E21S9-return, E21S10-nutrient), isa(E21S10-nutrient, "nutrients"), to(E21S9-return, E21S14-chain), isa(E21S14-chain, "the food chain") -> when(E21S9-return, E21S5-die), isa(E21S5-die, "die"), agent(E21S5-die, E21S2-plant), isa(E21S2-plant, "plants"), agent(E21S5-die, E21S4-animal), isa(E21S4-animal, "animals"), arg(E21S5-die, E21S1-when), isa(E21S1-when, "When").
rule52:: isa(E21S5-die, "die"), agent(E21S5-die, E21S2-plant), isa(E21S2-plant, "plants"), agent(E21S5-die, E21S4-animal), isa(E21S4-animal, "animals"), arg(E21S5-die, E21S1-when), isa(E21S1-when, "When") -> when(E21S9-return, E21S5-die), isa(E21S9-return, "return"), object(E21S9-return, E21S10-nutrient), isa(E21S10-nutrient, "nutrients"), to(E21S9-return, E21S14-chain), isa(E21S14-chain, "the food chain").
rule53:: isa(E22S6-fall, "fall"), agent(E22S6-fall, E22S4-ball), isa(E22S4-ball, "the ball"), to(E22S6-fall, E22S9-ground), isa(E22S9-ground, "the ground") -> cause(E22S6-fall, E22S1-gravity), isa(E22S1-gravity, "Gravity").
rule54:: isa(E22S1-gravity, "Gravity") -> cause(E22S6-fall, E22S1-gravity), isa(E22S6-fall, "fall"), agent(E22S6-fall, E22S4-ball), isa(E22S4-ball, "the ball"), to(E22S6-fall, E22S9-ground), isa(E22S9-ground, "the ground").
