rule1:: isa(E1S7-sweat, "sweat"), agent(E1S7-sweat, "our bodies"), object(E1S7-sweat, "perspiration"), in(E1S7-sweat, "the hot weather") -> effect(E1S7-sweat, E1S12-bring), isa(E1S12-bring, "bringing"), object(E1S12-bring, "water"), to(E1S12-bring, "our skin").
rule2:: isa(E1S12-bring, "bringing"), object(E1S12-bring, "water"), to(E1S12-bring, "our skin") -> effect(E1S7-sweat, E1S12-bring), isa(E1S7-sweat, "sweat"), agent(E1S7-sweat, "our bodies"), object(E1S7-sweat, "perspiration"), in(E1S7-sweat, "the hot weather").
rule3:: isa(E4S2-involve, "involves"), agent(E4S2-involve, "Freezing") -> effect(E4S2-involve, E4S3-change), isa(E4S3-change, "changing"), object(E4S3-change, "water"), from(E4S3-change, "its liquid state"), to(E4S3-change, "its solid state"), by(E4S3-change, "the removal").
rule4:: isa(E4S3-change, "changing"), object(E4S3-change, "water"), from(E4S3-change, "its liquid state"), to(E4S3-change, "its solid state"), by(E4S3-change, "the removal") -> effect(E4S2-involve, E4S3-change), isa(E4S2-involve, "involves"), agent(E4S2-involve, "Freezing").
rule5:: isa(E2S13-go, "going dormant") -> enable(E2S13-go, E2S4-prepare), isa(E2S4-prepare, "prepare"), agent(E2S4-prepare, "some animals"), for(E2S4-prepare, "the long winters").
rule6:: isa(E2S4-prepare, "prepare"), agent(E2S4-prepare, "some animals"), for(E2S4-prepare, "the long winters") -> enable(E2S13-go, E2S4-prepare), isa(E2S13-go, "going dormant").
rule7:: isa(E2S10-store, "storing"), object(E2S10-store, "food") -> enable(E2S10-store, E2S4-prepare), isa(E2S4-prepare, "prepare"), agent(E2S4-prepare, "some animals"), for(E2S4-prepare, "the long winters").
rule8:: isa(E2S4-prepare, "prepare"), agent(E2S4-prepare, "some animals"), for(E2S4-prepare, "the long winters") -> enable(E2S10-store, E2S4-prepare), isa(E2S10-store, "storing"), object(E2S10-store, "food").
rule9:: isa(E2S18-hibernate, "") -> example(E2S18-hibernate, E2S4-prepare), isa(E2S4-prepare, "prepare"), agent(E2S4-prepare, "some animals"), for(E2S4-prepare, "the long winters").
rule10:: isa(E2S4-prepare, "prepare"), agent(E2S4-prepare, "some animals"), for(E2S4-prepare, "the long winters") -> example(E2S18-hibernate, E2S4-prepare), isa(E2S18-hibernate, "").
rule11:: isa(E3S3-lens, "A hand lens") -> purpose(E3S3-lens, E3S7-view), isa(E3S7-view, "view"), object(E3S7-view, "objects"), in(E3S7-view, "more detail").
rule12:: isa(E3S7-view, "view"), object(E3S7-view, "objects"), in(E3S7-view, "more detail") -> purpose(E3S3-lens, E3S7-view), isa(E3S3-lens, "A hand lens").
rule13:: isa(E4S18-remove, "the removal"), object(E4S18-remove, "heat") -> enable(E4S18-remove, E4S3-change), isa(E4S3-change, "changing"), object(E4S3-change, "water"), from(E4S3-change, "its liquid state"), to(E4S3-change, "its solid state"), by(E4S3-change, "the removal").
rule14:: isa(E4S3-change, "changing"), object(E4S3-change, "water"), from(E4S3-change, "its liquid state"), to(E4S3-change, "its solid state"), by(E4S3-change, "the removal") -> enable(E4S18-remove, E4S3-change), isa(E4S18-remove, "the removal"), object(E4S18-remove, "heat").
rule15:: isa(E5S4-make, "not make"), agent(E5S4-make, "Animals"), object(E5S4-make, "their own food") -> effect(E5S4-make, E5S11-eat), isa(E5S11-eat, "eat"), agent(E5S11-eat, "they").
rule16:: isa(E5S11-eat, "eat"), agent(E5S11-eat, "they") -> effect(E5S4-make, E5S11-eat), isa(E5S4-make, "not make"), agent(E5S4-make, "Animals"), object(E5S4-make, "their own food").
rule17:: isa(E5S11-eat, "eat"), agent(E5S11-eat, "they") -> requirement(E5S11-eat, E5S13-get), isa(E5S13-get, "get"), object(E5S13-get, "nutrients").
rule18:: isa(E5S13-get, "get"), object(E5S13-get, "nutrients") -> requirement(E5S11-eat, E5S13-get), isa(E5S11-eat, "eat"), agent(E5S11-eat, "they").
rule19:: isa(E7S1-get, "Getting"), object(E7S1-get, "rest") -> part(E7S1-get, E7S10-live), isa(E7S10-live, "living"), object(E7S10-live, "a healthy life").
rule20:: isa(E7S10-live, "living"), object(E7S10-live, "a healthy life") -> part(E7S1-get, E7S10-live), isa(E7S1-get, "Getting"), object(E7S1-get, "rest").
rule21:: isa(E10S1-decomposer, "Decomposers") -> example(E10S1-decomposer, E10S4-thing), isa(E10S4-thing, "living things"), agent(E10S4-thing, "Decomposers").
rule22:: isa(E10S4-thing, "living things"), agent(E10S4-thing, "Decomposers") -> example(E10S1-decomposer, E10S4-thing), isa(E10S1-decomposer, "Decomposers").
rule23:: isa(E11S1-gravity, "Gravity") -> example(E11S1-gravity, E11S4-force), isa(E11S4-force, "the force"), agent(E11S4-force, "Gravity").
rule24:: isa(E11S4-force, "the force"), agent(E11S4-force, "Gravity") -> example(E11S1-gravity, E11S4-force), isa(E11S1-gravity, "Gravity").
rule25:: isa(E12S6-sweat, "sweat") -> example(E12S6-sweat, E12S14-adjust), isa(E12S14-adjust, "adjust"), agent(E12S14-adjust, "an organism"), object(E12S14-adjust, "that"), to(E12S14-adjust, "hot temperatures").
rule26:: isa(E12S14-adjust, "adjust"), agent(E12S14-adjust, "an organism"), object(E12S14-adjust, "that"), to(E12S14-adjust, "hot temperatures") -> example(E12S6-sweat, E12S14-adjust), isa(E12S6-sweat, "sweat").
rule27:: isa(E13S3-store, "storing"), object(E13S3-store, "nuts") -> effect(E13S3-store, E13S6-prepare), isa(E13S6-prepare, "preparing"), agent(E13S6-prepare, "A squirrel"), for(E13S6-prepare, "a seasonal change in the environment").
rule28:: isa(E13S6-prepare, "preparing"), agent(E13S6-prepare, "A squirrel"), for(E13S6-prepare, "a seasonal change in the environment") -> effect(E13S3-store, E13S6-prepare), isa(E13S3-store, "storing"), object(E13S3-store, "nuts").
rule29:: isa(E14S4-use, "use"), agent(E14S4-use, "A student"), object(E14S4-use, "a hand lens") -> effect(E14S4-use, E14S9-get), isa(E14S9-get, "get"), object(E14S9-get, "a better look at the spots").
rule30:: isa(E14S9-get, "get"), object(E14S9-get, "a better look at the spots") -> effect(E14S4-use, E14S9-get), isa(E14S4-use, "use"), agent(E14S4-use, "A student"), object(E14S4-use, "a hand lens").
rule31:: isa(E19S4-use, "use"), agent(E19S4-use, "A student"), object(E19S4-use, "a graduated cylinder") -> effect(E19S4-use, E19S9-measure), isa(E19S9-measure, "measure"), object(E19S9-measure, "10 milliliters of water").
rule32:: isa(E19S9-measure, "measure"), object(E19S9-measure, "10 milliliters of water") -> effect(E19S4-use, E19S9-measure), isa(E19S4-use, "use"), agent(E19S4-use, "A student"), object(E19S4-use, "a graduated cylinder").
rule33:: isa(E2S17-call, "When some animals prepare for the long winters by storing food and going dormant it is called") -> effect(E2S17-call, E2S18-hibernate), isa(E2S18-hibernate, "").
rule34:: isa(E2S18-hibernate, "") -> effect(E2S17-call, E2S18-hibernate), isa(E2S17-call, "When some animals prepare for the long winters by storing food and going dormant it is called").
rule35:: isa(E3S5-use, "A hand lens is used") -> effect(E3S5-use, E3S7-view), isa(E3S7-view, "view"), object(E3S7-view, "objects"), in(E3S7-view, "more detail").
rule36:: isa(E3S7-view, "view"), object(E3S7-view, "objects"), in(E3S7-view, "more detail") -> effect(E3S5-use, E3S7-view), isa(E3S5-use, "A hand lens is used").
rule37:: isa(E20S14-call, "The white fur of an arctic fox blends is called") -> effect(E20S14-call, E20S15-camouflage), isa(E20S15-camouflage, "camouflage").
rule38:: isa(E20S15-camouflage, "camouflage") -> effect(E20S14-call, E20S15-camouflage), isa(E20S14-call, "The white fur of an arctic fox blends is called").
rule39:: isa(E22S2-cause, "causes"), agent(E22S2-cause, "Gravity") -> effect(E22S2-cause, E22S6-fall), isa(E22S6-fall, "fall"), agent(E22S6-fall, "the ball"), to(E22S6-fall, "the ground").
rule40:: isa(E22S6-fall, "fall"), agent(E22S6-fall, "the ball"), to(E22S6-fall, "the ground") -> effect(E22S2-cause, E22S6-fall), isa(E22S2-cause, "causes"), agent(E22S2-cause, "Gravity").
rule41:: isa(E15S1-decrease, "Decreasing"), object(E15S1-decrease, "the temperature") -> effect(E15S1-decrease, E15S8-change), isa(E15S8-change, "change"), object(E15S8-change, "water"), from(E15S8-change, "a liquid"), to(E15S8-change, "a solid").
rule42:: isa(E15S8-change, "change"), object(E15S8-change, "water"), from(E15S8-change, "a liquid"), to(E15S8-change, "a solid") -> effect(E15S1-decrease, E15S8-change), isa(E15S1-decrease, "Decreasing"), object(E15S1-decrease, "the temperature").
rule43:: isa(E17S10-friction, "friction") -> cause(E17S10-friction, E17S4-produce), isa(E17S4-produce, "produces"), agent(E17S4-produce, "that"), object(E17S4-produce, "the smoke").
rule44:: isa(E17S4-produce, "produces"), agent(E17S4-produce, "that"), object(E17S4-produce, "the smoke") -> cause(E17S10-friction, E17S4-produce), isa(E17S10-friction, "friction").
rule45:: isa(E18S1-rest, "Resting") -> requirement(E18S1-rest, E18S7-maintain), isa(E18S7-maintain, "maintain"), agent(E18S7-maintain, "humans"), object(E18S7-maintain, "good health").
rule46:: isa(E18S7-maintain, "maintain"), agent(E18S7-maintain, "humans"), object(E18S7-maintain, "good health") -> requirement(E18S1-rest, E18S7-maintain), isa(E18S1-rest, "Resting").
rule47:: isa(E20S15-camouflage, "camouflage") -> example(E20S15-camouflage, E20S3-fur), isa(E20S3-fur, "The white fur"), of(E20S3-fur, "an arctic fox blends").
rule48:: isa(E20S3-fur, "The white fur"), of(E20S3-fur, "an arctic fox blends") -> example(E20S15-camouflage, E20S3-fur), isa(E20S15-camouflage, "camouflage").
rule49:: isa(E21S7-decomposer, "decomposers") -> purpose(E21S7-decomposer, E21S9-return), isa(E21S9-return, "return"), object(E21S9-return, "nutrients"), to(E21S9-return, "the food chain").
rule50:: isa(E21S9-return, "return"), object(E21S9-return, "nutrients"), to(E21S9-return, "the food chain") -> purpose(E21S7-decomposer, E21S9-return), isa(E21S7-decomposer, "decomposers").
rule51:: isa(E21S9-return, "return"), object(E21S9-return, "nutrients"), to(E21S9-return, "the food chain") -> when(E21S9-return, E21S5-die), isa(E21S5-die, "die"), agent(E21S5-die, "plants"), agent(E21S5-die, "animals").
rule52:: isa(E21S5-die, "die"), agent(E21S5-die, "plants"), agent(E21S5-die, "animals") -> when(E21S9-return, E21S5-die), isa(E21S9-return, "return"), object(E21S9-return, "nutrients"), to(E21S9-return, "the food chain").
rule53:: isa(E22S6-fall, "fall"), agent(E22S6-fall, "the ball"), to(E22S6-fall, "the ground") -> cause(E22S6-fall, E22S1-gravity), isa(E22S1-gravity, "Gravity").
rule54:: isa(E22S1-gravity, "Gravity") -> cause(E22S6-fall, E22S1-gravity), isa(E22S6-fall, "fall"), agent(E22S6-fall, "the ball"), to(E22S6-fall, "the ground").
