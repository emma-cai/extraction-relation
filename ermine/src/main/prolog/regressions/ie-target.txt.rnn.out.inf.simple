english(ie-target.rule1, "In the hot weather our bodies sweat perspiration bringing water to our[our] skin").
ie-target.rule1:: agent(sweat, body), object(sweat, perspiration), in(sweat, weather) -> effect(sweat, bring), agent(bring, body), object(bring, water), to(bring, skin).
english(ie-target.rule2, "In the hot weather our bodies sweat perspiration bringing water to our[our] skin").
ie-target.rule2:: agent(bring, body), object(bring, water), to(bring, skin) -> effect(sweat, bring), agent(sweat, body), object(sweat, perspiration), in(sweat, weather).
english(ie-target.rule3, "When some animals prepare for the long winters by storing food and going dormant it is called hibernation").
ie-target.rule3:: agent(store, animal), object(store, food) -> enable(store, prepare), agent(prepare, animal), for(prepare, winter).
english(ie-target.rule4, "When some animals prepare for the long winters by storing food and going dormant it is called hibernation").
ie-target.rule4:: agent(prepare, animal), for(prepare, winter) -> enable(store, prepare), agent(store, animal), object(store, food).
english(ie-target.rule5, "When some animals prepare for the long winters by storing food and going dormant it is called hibernation").
ie-target.rule5:: agent(prepare, animal), for(prepare, winter) -> example(prepare, hibernation).
english(ie-target.rule6, "When some animals prepare for the long winters by storing food and going dormant it is called hibernation").
ie-target.rule6:: example(prepare, hibernation), agent(prepare, animal), for(prepare, winter).
english(ie-target.rule7, "A hand lens is used to view objects in more detail").
ie-target.rule7:: purpose(lens, view), agent(view, lens), object(view, object), in(view, detail).
english(ie-target.rule8, "A hand lens is used to view objects in more detail").
ie-target.rule8:: agent(view, lens), object(view, object), in(view, detail) -> purpose(lens, view).
english(ie-target.rule9, "Freezing involves changing water from its[A hand lens] liquid state to its[its liquid state] solid state ice by the removal of heat").
ie-target.rule9:: agent(removal, freezing), object(removal, heat) -> enable(removal, change), agent(change, freezing), object(change, water), from(change, state), to(change, state).
english(ie-target.rule10, "Freezing involves changing water from its[A hand lens] liquid state to its[its liquid state] solid state ice by the removal of heat").
ie-target.rule10:: agent(change, freezing), object(change, water), from(change, state), to(change, state) -> enable(removal, change), agent(removal, freezing), object(removal, heat).
english(ie-target.rule11, "Animals can not make their[some animals] own food so they[some animals] must eat to get nutrients").
ie-target.rule11:: agent(make, animal), object(make, food) -> effect(make, eat), agent(eat, animal).
english(ie-target.rule12, "Animals can not make their[some animals] own food so they[some animals] must eat to get nutrients").
ie-target.rule12:: agent(eat, animal) -> effect(make, eat), agent(make, animal), object(make, food).
english(ie-target.rule13, "Animals can not make their[some animals] own food so they[some animals] must eat to get nutrients").
ie-target.rule13:: agent(eat, animal) -> requirement(eat, get), agent(get, animal), object(get, nutrient).
english(ie-target.rule14, "Animals can not make their[some animals] own food so they[some animals] must eat to get nutrients").
ie-target.rule14:: agent(get, animal), object(get, nutrient) -> requirement(eat, get), agent(eat, animal).
english(ie-target.rule15, "The friction between the two surfaces converts kinetic energy into heat").
ie-target.rule15:: between(friction, surface), agent(convert, friction), object(convert, energy), into(convert, heat).
english(ie-target.rule16, "The friction between the two surfaces converts kinetic energy into heat").
ie-target.rule16:: between(friction, surface), agent(convert, friction), object(convert, energy), into(convert, heat).
english(ie-target.rule17, "The friction between the two surfaces converts kinetic energy into heat").
ie-target.rule17:: between(friction, surface), agent(convert, friction), object(convert, energy), into(convert, heat).
english(ie-target.rule18, "The friction between the two surfaces converts kinetic energy into heat").
ie-target.rule18:: between(friction, surface), agent(convert, friction), object(convert, energy), into(convert, heat).
english(ie-target.rule19, "The friction between the two surfaces converts kinetic energy into heat").
ie-target.rule19:: between(friction, surface), agent(convert, friction), object(convert, energy), into(convert, heat).
english(ie-target.rule20, "Getting enough rest is also an important part of living a healthy life").
ie-target.rule20:: object(get, rest) -> part(get, live), object(live, life).
english(ie-target.rule21, "Getting enough rest is also an important part of living a healthy life").
ie-target.rule21:: object(live, life) -> part(get, live), object(get, rest).
english(ie-target.rule22, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
ie-target.rule22:: example(decomposer, thing), agent(break, thing), object(break, organism).
english(ie-target.rule23, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
ie-target.rule23:: agent(break, thing), object(break, organism) -> example(decomposer, thing).
english(ie-target.rule24, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
ie-target.rule24:: example(decomposer, thing), agent(recycle, thing), object(recycle, nutrient), into(recycle, soil).
english(ie-target.rule25, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
ie-target.rule25:: agent(recycle, thing), object(recycle, nutrient), into(recycle, soil) -> example(decomposer, thing).
english(ie-target.rule26, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
ie-target.rule26:: example(decomposer, thing).
english(ie-target.rule27, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
ie-target.rule27:: example(decomposer, thing).
english(ie-target.rule28, "Gravity is the force that pulls an object toward the center of the Earth").
ie-target.rule28:: example(gravity, force), of(center, Earth), toward(object, center), agent(pull, force), object(pull, object).
english(ie-target.rule29, "Gravity is the force that pulls an object toward the center of the Earth").
ie-target.rule29:: of(center, Earth), toward(object, center), agent(pull, force), object(pull, object) -> example(gravity, force).
english(ie-target.rule30, "Gravity is the force that pulls an object toward the center of the Earth").
ie-target.rule30:: example(gravity, force).
english(ie-target.rule31, "Gravity is the force that pulls an object toward the center of the Earth").
ie-target.rule31:: example(gravity, force).
english(ie-target.rule32, "A human 's body produces sweat is a way that an organism may adjust to hot temperatures").
ie-target.rule32:: example(sweat, adjust), agent(adjust, organism), object(adjust, sweat), to(adjust, temperature).
english(ie-target.rule33, "A human 's body produces sweat is a way that an organism may adjust to hot temperatures").
ie-target.rule33:: agent(adjust, organism), object(adjust, sweat), to(adjust, temperature) -> example(sweat, adjust).
english(ie-target.rule34, "A human 's body produces sweat is a way that an organism may adjust to hot temperatures").
ie-target.rule34:: example(sweat, adjust), agent(adjust, organism), object(adjust, way), to(adjust, temperature).
english(ie-target.rule35, "A human 's body produces sweat is a way that an organism may adjust to hot temperatures").
ie-target.rule35:: agent(adjust, organism), object(adjust, way), to(adjust, temperature) -> example(sweat, adjust).
english(ie-target.rule36, "A squirrel storing nuts is preparing for a seasonal change in the environment").
ie-target.rule36:: agent(store, squirrel), object(store, nut) -> effect(store, prepare), agent(prepare, squirrel), for(prepare, change).
english(ie-target.rule37, "A squirrel storing nuts is preparing for a seasonal change in the environment").
ie-target.rule37:: agent(prepare, squirrel), for(prepare, change) -> effect(store, prepare), agent(store, squirrel), object(store, nut).
english(ie-target.rule38, "A student should use a hand lens to get a better look at the spots").
ie-target.rule38:: agent(use, student), object(use, lens) -> effect(use, get), agent(get, student), at(look, spot), arg(get, look).
english(ie-target.rule39, "A student should use a hand lens to get a better look at the spots").
ie-target.rule39:: agent(get, student), at(look, spot), arg(get, look) -> effect(use, get), agent(use, student), object(use, lens).
english(ie-target.rule40, "Decreasing the temperature is one way to change water from a liquid to a solid").
ie-target.rule40:: object(decrease, temperature) -> effect(decrease, change), object(change, water), from(change, liquid), to(change, solid).
english(ie-target.rule41, "Decreasing the temperature is one way to change water from a liquid to a solid").
ie-target.rule41:: object(change, water), from(change, liquid), to(change, solid) -> effect(decrease, change), object(decrease, temperature).
english(ie-target.rule42, "Animals get energy for growth and repair from food").
ie-target.rule42:: agent(get, animal), object(get, energy), for(get, growth), for(get, repair).
english(ie-target.rule43, "Animals get energy for growth and repair from food").
ie-target.rule43:: agent(get, animal), object(get, energy), for(get, growth), for(get, repair).
english(ie-target.rule44, "Animals get energy for growth and repair from food").
ie-target.rule44:: agent(get, animal), object(get, energy), for(get, growth), for(get, repair).
english(ie-target.rule45, "Animals get energy for growth and repair from food").
ie-target.rule45:: agent(get, animal), object(get, energy), for(get, growth), for(get, repair).
english(ie-target.rule46, "Animals get energy for growth and repair from food").
ie-target.rule46:: agent(get, animal), object(get, energy), for(get, growth), for(get, repair).
english(ie-target.rule47, "The heat that produces the smoke is caused by friction").
ie-target.rule47:: cause(friction, produce), agent(produce, heat), object(produce, smoke).
english(ie-target.rule48, "The heat that produces the smoke is caused by friction").
ie-target.rule48:: agent(produce, heat), object(produce, smoke) -> cause(friction, produce).
english(ie-target.rule49, "Resting is necessary for humans to maintain good health").
ie-target.rule49:: agent(rest, human) -> requirement(rest, maintain), agent(maintain, human), object(maintain, health).
english(ie-target.rule50, "Resting is necessary for humans to maintain good health").
ie-target.rule50:: agent(maintain, human), object(maintain, health) -> requirement(rest, maintain), agent(rest, human).
english(ie-target.rule51, "A student should use a graduated cylinder to measure exactly 10 milliliters mL of water").
ie-target.rule51:: agent(use, student), object(use, cylinder) -> effect(use, measure), of(milliliter, water), agent(measure, student), object(measure, milliliter).
english(ie-target.rule52, "A student should use a graduated cylinder to measure exactly 10 milliliters mL of water").
ie-target.rule52:: of(milliliter, water), agent(measure, student), object(measure, milliliter) -> effect(use, measure), agent(use, student), object(use, cylinder).
english(ie-target.rule53, "A student should use a graduated cylinder to measure exactly 10 milliliters mL of water").
ie-target.rule53:: agent(use, student), object(use, cylinder) -> effect(use, measure), agent(measure, student), object(measure, ml).
english(ie-target.rule54, "A student should use a graduated cylinder to measure exactly 10 milliliters mL of water").
ie-target.rule54:: agent(measure, student), object(measure, ml) -> effect(use, measure), agent(use, student), object(use, cylinder).
english(ie-target.rule55, "The white fur of an arctic fox blends in with the snow is called camouflage").
ie-target.rule55:: of(fur, blend) -> example(fur, camouflage).
english(ie-target.rule56, "The white fur of an arctic fox blends in with the snow is called camouflage").
ie-target.rule56:: example(fur, camouflage), of(fur, blend).
english(ie-target.rule57, "When plants and animals die decomposers help return nutrients to the food chain").
ie-target.rule57:: purpose(decomposer, return), agent(return, decomposer), object(return, nutrient), to(return, chain).
english(ie-target.rule58, "When plants and animals die decomposers help return nutrients to the food chain").
ie-target.rule58:: agent(return, decomposer), object(return, nutrient), to(return, chain) -> purpose(decomposer, return).
english(ie-target.rule59, "When plants and animals die decomposers help return nutrients to the food chain").
ie-target.rule59:: agent(return, decomposer), object(return, nutrient), to(return, chain) -> when(return, die), agent(die, plant).
english(ie-target.rule60, "When plants and animals die decomposers help return nutrients to the food chain").
ie-target.rule60:: agent(die, plant) -> when(return, die), agent(return, decomposer), object(return, nutrient), to(return, chain).
english(ie-target.rule61, "When plants and animals die decomposers help return nutrients to the food chain").
ie-target.rule61:: agent(return, decomposer), object(return, nutrient), to(return, chain) -> when(return, die), agent(die, animal).
english(ie-target.rule62, "When plants and animals die decomposers help return nutrients to the food chain").
ie-target.rule62:: agent(die, animal) -> when(return, die), agent(return, decomposer), object(return, nutrient), to(return, chain).
english(ie-target.rule63, "Gravity causes the ball to fall to the ground").
ie-target.rule63:: cause(gravity, fall), agent(fall, ball), to(fall, ground).
english(ie-target.rule64, "Gravity causes the ball to fall to the ground").
ie-target.rule64:: agent(fall, ball), to(fall, ground) -> cause(gravity, fall).
