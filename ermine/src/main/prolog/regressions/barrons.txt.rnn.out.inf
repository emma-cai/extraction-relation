english(barrons.rule1, "Animals and plants are living things").
pretty(barrons.rule1, "EXAMPLE(Animal, Thing), Animal = 'Animals', Thing = 'living things'.").
barrons.rule1:: isa(A1S4-animal, "Animals") -> example(A1S4-animal, A6S4-thing), isa(A6S4-thing, "living things").
english(barrons.rule2, "Animals and plants are living things").
pretty(barrons.rule2, "EXAMPLE(Animal, Thing), Animal = 'Animals', Thing = 'living things'.").
barrons.rule2:: isa(A6S4-thing, "living things") -> example(A1S4-animal, A6S4-thing), isa(A1S4-animal, "Animals").
english(barrons.rule3, "Animals and plants are living things").
pretty(barrons.rule3, "EXAMPLE(Plant, Thing), Plant = 'plants', Thing = 'living things'.").
barrons.rule3:: isa(A3S4-plant, "plants") -> example(A3S4-plant, A6S4-thing), isa(A6S4-thing, "living things").
english(barrons.rule4, "Animals and plants are living things").
pretty(barrons.rule4, "EXAMPLE(Plant, Thing), Plant = 'plants', Thing = 'living things'.").
barrons.rule4:: isa(A6S4-thing, "living things") -> example(A3S4-plant, A6S4-thing), isa(A3S4-plant, "plants").
english(barrons.rule5, "They[Animals and plants] have basic needs necessities in order to survive").
pretty(barrons.rule5, "EFFECT(have(Animal, Need), survive(Animal)), Animal = 'Animals', Need = 'basic needs'.").
barrons.rule5:: isa(E2S5-have, "have"), agent(E2S5-have, A1S4-animal), isa(A1S4-animal, "Animals"), object(E2S5-have, A4S5-need), isa(A4S5-need, "basic needs") -> effect(E2S5-have, E11S5-survive), isa(E11S5-survive, "survive"), agent(E11S5-survive, A1S4-animal).
english(barrons.rule6, "They[Animals and plants] have basic needs necessities in order to survive").
pretty(barrons.rule6, "EFFECT(have(Animal, Need), survive(Animal)), Animal = 'Animals', Need = 'basic needs'.").
barrons.rule6:: isa(E11S5-survive, "survive"), agent(E11S5-survive, A1S4-animal), isa(A1S4-animal, "Animals") -> effect(E2S5-have, E11S5-survive), isa(E2S5-have, "have"), agent(E2S5-have, A1S4-animal), object(E2S5-have, A4S5-need), isa(A4S5-need, "basic needs").
english(barrons.rule7, "They[Animals and plants] have basic needs necessities in order to survive").
pretty(barrons.rule7, "EFFECT(have(Animal, Need), survive(Plant)), Animal = 'Animals', Need = 'basic needs', Plant = 'plants'.").
barrons.rule7:: isa(E2S5-have, "have"), agent(E2S5-have, A1S4-animal), isa(A1S4-animal, "Animals"), object(E2S5-have, A4S5-need), isa(A4S5-need, "basic needs") -> effect(E2S5-have, E11S5-survive), isa(E11S5-survive, "survive"), agent(E11S5-survive, A3S4-plant), isa(A3S4-plant, "plants").
english(barrons.rule8, "They[Animals and plants] have basic needs necessities in order to survive").
pretty(barrons.rule8, "EFFECT(have(Animal, Need), survive(Plant)), Animal = 'Animals', Need = 'basic needs', Plant = 'plants'.").
barrons.rule8:: isa(E11S5-survive, "survive"), agent(E11S5-survive, A3S4-plant), isa(A3S4-plant, "plants") -> effect(E2S5-have, E11S5-survive), isa(E2S5-have, "have"), agent(E2S5-have, A1S4-animal), isa(A1S4-animal, "Animals"), object(E2S5-have, A4S5-need), isa(A4S5-need, "basic needs").
english(barrons.rule9, "They[Animals and plants] have basic needs necessities in order to survive").
pretty(barrons.rule9, "EFFECT(have(Plant, Need), survive(Animal)), Plant = 'plants', Need = 'basic needs', Animal = 'Animals'.").
barrons.rule9:: isa(E2S5-have, "have"), agent(E2S5-have, A3S4-plant), isa(A3S4-plant, "plants"), object(E2S5-have, A4S5-need), isa(A4S5-need, "basic needs") -> effect(E2S5-have, E11S5-survive), isa(E11S5-survive, "survive"), agent(E11S5-survive, A1S4-animal), isa(A1S4-animal, "Animals").
english(barrons.rule10, "They[Animals and plants] have basic needs necessities in order to survive").
pretty(barrons.rule10, "EFFECT(have(Plant, Need), survive(Animal)), Plant = 'plants', Need = 'basic needs', Animal = 'Animals'.").
barrons.rule10:: isa(E11S5-survive, "survive"), agent(E11S5-survive, A1S4-animal), isa(A1S4-animal, "Animals") -> effect(E2S5-have, E11S5-survive), isa(E2S5-have, "have"), agent(E2S5-have, A3S4-plant), isa(A3S4-plant, "plants"), object(E2S5-have, A4S5-need), isa(A4S5-need, "basic needs").
english(barrons.rule11, "They[Animals and plants] have basic needs necessities in order to survive").
pretty(barrons.rule11, "EFFECT(have(Plant, Need), survive(Plant)), Plant = 'plants', Need = 'basic needs'.").
barrons.rule11:: isa(E2S5-have, "have"), agent(E2S5-have, A3S4-plant), isa(A3S4-plant, "plants"), object(E2S5-have, A4S5-need), isa(A4S5-need, "basic needs") -> effect(E2S5-have, E11S5-survive), isa(E11S5-survive, "survive"), agent(E11S5-survive, A3S4-plant).
english(barrons.rule12, "They[Animals and plants] have basic needs necessities in order to survive").
pretty(barrons.rule12, "EFFECT(have(Plant, Need), survive(Plant)), Plant = 'plants', Need = 'basic needs'.").
barrons.rule12:: isa(E11S5-survive, "survive"), agent(E11S5-survive, A3S4-plant), isa(A3S4-plant, "plants") -> effect(E2S5-have, E11S5-survive), isa(E2S5-have, "have"), agent(E2S5-have, A3S4-plant), object(E2S5-have, A4S5-need), isa(A4S5-need, "basic needs").
english(barrons.rule13, "Animals need air water and food to live and survive").
pretty(barrons.rule13, "EFFECT(need(Animal, Air), live(Animal)), Animal = 'Animals', Air = 'air'.").
barrons.rule13:: isa(E2S7-need, "need"), agent(E2S7-need, A1S7-animal), isa(A1S7-animal, "Animals"), object(E2S7-need, A3S7-air), isa(A3S7-air, "air") -> effect(E2S7-need, E10S7-live), isa(E10S7-live, "live"), agent(E10S7-live, A1S7-animal).
english(barrons.rule14, "Animals need air water and food to live and survive").
pretty(barrons.rule14, "EFFECT(need(Animal, Air), live(Animal)), Animal = 'Animals', Air = 'air'.").
barrons.rule14:: isa(E10S7-live, "live"), agent(E10S7-live, A1S7-animal), isa(A1S7-animal, "Animals") -> effect(E2S7-need, E10S7-live), isa(E2S7-need, "need"), agent(E2S7-need, A1S7-animal), object(E2S7-need, A3S7-air), isa(A3S7-air, "air").
english(barrons.rule15, "Animals need air water and food to live and survive").
pretty(barrons.rule15, "EFFECT(need(Animal, Water), live(Animal)), Animal = 'Animals', Water = 'water'.").
barrons.rule15:: isa(E2S7-need, "need"), agent(E2S7-need, A1S7-animal), isa(A1S7-animal, "Animals"), object(E2S7-need, A5S7-water), isa(A5S7-water, "water") -> effect(E2S7-need, E10S7-live), isa(E10S7-live, "live"), agent(E10S7-live, A1S7-animal).
english(barrons.rule16, "Animals need air water and food to live and survive").
pretty(barrons.rule16, "EFFECT(need(Animal, Water), live(Animal)), Animal = 'Animals', Water = 'water'.").
barrons.rule16:: isa(E10S7-live, "live"), agent(E10S7-live, A1S7-animal), isa(A1S7-animal, "Animals") -> effect(E2S7-need, E10S7-live), isa(E2S7-need, "need"), agent(E2S7-need, A1S7-animal), object(E2S7-need, A5S7-water), isa(A5S7-water, "water").
english(barrons.rule17, "Animals need air water and food to live and survive").
pretty(barrons.rule17, "EFFECT(need(Animal, Food), live(Animal)), Animal = 'Animals', Food = 'food'.").
barrons.rule17:: isa(E2S7-need, "need"), agent(E2S7-need, A1S7-animal), isa(A1S7-animal, "Animals"), object(E2S7-need, A8S7-food), isa(A8S7-food, "food") -> effect(E2S7-need, E10S7-live), isa(E10S7-live, "live"), agent(E10S7-live, A1S7-animal).
english(barrons.rule18, "Animals need air water and food to live and survive").
pretty(barrons.rule18, "EFFECT(need(Animal, Food), live(Animal)), Animal = 'Animals', Food = 'food'.").
barrons.rule18:: isa(E10S7-live, "live"), agent(E10S7-live, A1S7-animal), isa(A1S7-animal, "Animals") -> effect(E2S7-need, E10S7-live), isa(E2S7-need, "need"), agent(E2S7-need, A1S7-animal), object(E2S7-need, A8S7-food), isa(A8S7-food, "food").
english(barrons.rule19, "Animals need air water and food to live and survive").
pretty(barrons.rule19, "EFFECT(need(Animal, Air), survive(Animal)), Animal = 'Animals', Air = 'air'.").
barrons.rule19:: isa(E2S7-need, "need"), agent(E2S7-need, A1S7-animal), isa(A1S7-animal, "Animals"), object(E2S7-need, A3S7-air), isa(A3S7-air, "air") -> effect(E2S7-need, E12S7-survive), isa(E12S7-survive, "survive"), agent(E12S7-survive, A1S7-animal).
english(barrons.rule20, "Animals need air water and food to live and survive").
pretty(barrons.rule20, "EFFECT(need(Animal, Air), survive(Animal)), Animal = 'Animals', Air = 'air'.").
barrons.rule20:: isa(E12S7-survive, "survive"), agent(E12S7-survive, A1S7-animal), isa(A1S7-animal, "Animals") -> effect(E2S7-need, E12S7-survive), isa(E2S7-need, "need"), agent(E2S7-need, A1S7-animal), object(E2S7-need, A3S7-air), isa(A3S7-air, "air").
english(barrons.rule21, "Animals need air water and food to live and survive").
pretty(barrons.rule21, "EFFECT(need(Animal, Water), survive(Animal)), Animal = 'Animals', Water = 'water'.").
barrons.rule21:: isa(E2S7-need, "need"), agent(E2S7-need, A1S7-animal), isa(A1S7-animal, "Animals"), object(E2S7-need, A5S7-water), isa(A5S7-water, "water") -> effect(E2S7-need, E12S7-survive), isa(E12S7-survive, "survive"), agent(E12S7-survive, A1S7-animal).
english(barrons.rule22, "Animals need air water and food to live and survive").
pretty(barrons.rule22, "EFFECT(need(Animal, Water), survive(Animal)), Animal = 'Animals', Water = 'water'.").
barrons.rule22:: isa(E12S7-survive, "survive"), agent(E12S7-survive, A1S7-animal), isa(A1S7-animal, "Animals") -> effect(E2S7-need, E12S7-survive), isa(E2S7-need, "need"), agent(E2S7-need, A1S7-animal), object(E2S7-need, A5S7-water), isa(A5S7-water, "water").
english(barrons.rule23, "Animals need air water and food to live and survive").
pretty(barrons.rule23, "EFFECT(need(Animal, Food), survive(Animal)), Animal = 'Animals', Food = 'food'.").
barrons.rule23:: isa(E2S7-need, "need"), agent(E2S7-need, A1S7-animal), isa(A1S7-animal, "Animals"), object(E2S7-need, A8S7-food), isa(A8S7-food, "food") -> effect(E2S7-need, E12S7-survive), isa(E12S7-survive, "survive"), agent(E12S7-survive, A1S7-animal).
english(barrons.rule24, "Animals need air water and food to live and survive").
pretty(barrons.rule24, "EFFECT(need(Animal, Food), survive(Animal)), Animal = 'Animals', Food = 'food'.").
barrons.rule24:: isa(E12S7-survive, "survive"), agent(E12S7-survive, A1S7-animal), isa(A1S7-animal, "Animals") -> effect(E2S7-need, E12S7-survive), isa(E2S7-need, "need"), agent(E2S7-need, A1S7-animal), object(E2S7-need, A8S7-food), isa(A8S7-food, "food").
english(barrons.rule25, "Animals take in air by breathing").
pretty(barrons.rule25, "isa(take in, 'take in') -> take in_by(Animal, Air, Breathing).").
barrons.rule25:: isa(E2S8-take, "take in") -> agent(E2S8-take, A1S8-animal), isa(A1S8-animal, "Animals"), object(E2S8-take, A4S8-air), isa(A4S8-air, "air"), by(E2S8-take, A6S8-breathing), isa(A6S8-breathing, "breathing").
english(barrons.rule26, "Animals take in air by breathing").
pretty(barrons.rule26, "isa(Animal, 'Animals') -> take in_by(Animal, Air, Breathing).").
barrons.rule26:: isa(A1S8-animal, "Animals") -> isa(E2S8-take, "take in"), agent(E2S8-take, A1S8-animal), object(E2S8-take, A4S8-air), isa(A4S8-air, "air"), by(E2S8-take, A6S8-breathing), isa(A6S8-breathing, "breathing").
english(barrons.rule27, "Animals take in air by breathing").
pretty(barrons.rule27, "isa(Air, 'air') -> take in_by(Animal, Air, Breathing).").
barrons.rule27:: isa(A4S8-air, "air") -> isa(E2S8-take, "take in"), agent(E2S8-take, A1S8-animal), isa(A1S8-animal, "Animals"), object(E2S8-take, A4S8-air), by(E2S8-take, A6S8-breathing), isa(A6S8-breathing, "breathing").
english(barrons.rule28, "Animals take in air by breathing").
pretty(barrons.rule28, "isa(Breathing, 'breathing') -> take in_by(Animal, Air, Breathing).").
barrons.rule28:: isa(A6S8-breathing, "breathing") -> isa(E2S8-take, "take in"), agent(E2S8-take, A1S8-animal), isa(A1S8-animal, "Animals"), object(E2S8-take, A4S8-air), isa(A4S8-air, "air"), by(E2S8-take, A6S8-breathing).
english(barrons.rule29, "They[Animals] need oxygen which is in the air").
pretty(barrons.rule29, "isa(need, 'need') -> need(Animal, Oxygen).").
barrons.rule29:: isa(E2S9-need, "need") -> agent(E2S9-need, A1S7-animal), isa(A1S7-animal, "Animals"), object(E2S9-need, A3S9-oxygen), isa(A3S9-oxygen, "oxygen").
english(barrons.rule30, "They[Animals] need oxygen which is in the air").
pretty(barrons.rule30, "isa(Animal, 'Animals') -> need(Animal, Oxygen).").
barrons.rule30:: isa(A1S7-animal, "Animals") -> isa(E2S9-need, "need"), agent(E2S9-need, A1S7-animal), object(E2S9-need, A3S9-oxygen), isa(A3S9-oxygen, "oxygen").
english(barrons.rule31, "They[Animals] need oxygen which is in the air").
pretty(barrons.rule31, "isa(Oxygen, 'oxygen') -> need(Animal, Oxygen).").
barrons.rule31:: isa(A3S9-oxygen, "oxygen") -> isa(E2S9-need, "need"), agent(E2S9-need, A1S7-animal), isa(A1S7-animal, "Animals"), object(E2S9-need, A3S9-oxygen).
english(barrons.rule32, "Oxygen allows the animal to make and use energy which it[the animal] needs to survive").
pretty(barrons.rule32, "PURPOSE(Oxygen, make(Animal, Energy)), Oxygen = 'Oxygen', Animal = 'the animal', Energy = 'energy'.").
barrons.rule32:: isa(A1S10-oxygen, "Oxygen") -> purpose(A1S10-oxygen, E6S10-make), isa(E6S10-make, "make"), agent(E6S10-make, A4S10-animal), isa(A4S10-animal, "the animal"), object(E6S10-make, A9S10-energy), isa(A9S10-energy, "energy").
english(barrons.rule33, "Oxygen allows the animal to make and use energy which it[the animal] needs to survive").
pretty(barrons.rule33, "PURPOSE(Oxygen, make(Animal, Energy)), Oxygen = 'Oxygen', Animal = 'the animal', Energy = 'energy'.").
barrons.rule33:: isa(E6S10-make, "make"), agent(E6S10-make, A4S10-animal), isa(A4S10-animal, "the animal"), object(E6S10-make, A9S10-energy), isa(A9S10-energy, "energy") -> purpose(A1S10-oxygen, E6S10-make), isa(A1S10-oxygen, "Oxygen").
english(barrons.rule34, "Oxygen allows the animal to make and use energy which it[the animal] needs to survive").
pretty(barrons.rule34, "PURPOSE(Oxygen, use(Animal)), Oxygen = 'Oxygen', Animal = 'the animal'.").
barrons.rule34:: isa(A1S10-oxygen, "Oxygen") -> purpose(A1S10-oxygen, E8S10-use), isa(E8S10-use, "use"), agent(E8S10-use, A4S10-animal), isa(A4S10-animal, "the animal").
english(barrons.rule35, "Oxygen allows the animal to make and use energy which it[the animal] needs to survive").
pretty(barrons.rule35, "PURPOSE(Oxygen, use(Animal)), Oxygen = 'Oxygen', Animal = 'the animal'.").
barrons.rule35:: isa(E8S10-use, "use"), agent(E8S10-use, A4S10-animal), isa(A4S10-animal, "the animal") -> purpose(A1S10-oxygen, E8S10-use), isa(A1S10-oxygen, "Oxygen").
english(barrons.rule36, "Oxygen allows the animal to make and use energy which it[the animal] needs to survive").
pretty(barrons.rule36, "EFFECT(make(Animal, Energy), survive(Animal)), Animal = 'the animal', Energy = 'energy'.").
barrons.rule36:: isa(E6S10-make, "make"), agent(E6S10-make, A4S10-animal), isa(A4S10-animal, "the animal"), object(E6S10-make, A9S10-energy), isa(A9S10-energy, "energy") -> effect(E6S10-make, E15S10-survive), isa(E15S10-survive, "survive"), agent(E15S10-survive, A4S10-animal).
english(barrons.rule37, "Oxygen allows the animal to make and use energy which it[the animal] needs to survive").
pretty(barrons.rule37, "EFFECT(make(Animal, Energy), survive(Animal)), Animal = 'the animal', Energy = 'energy'.").
barrons.rule37:: isa(E15S10-survive, "survive"), agent(E15S10-survive, A4S10-animal), isa(A4S10-animal, "the animal") -> effect(E6S10-make, E15S10-survive), isa(E6S10-make, "make"), agent(E6S10-make, A4S10-animal), object(E6S10-make, A9S10-energy), isa(A9S10-energy, "energy").
english(barrons.rule38, "Animals also need water to survive").
pretty(barrons.rule38, "EFFECT(need(Animal, Water), survive(Animal)), Animal = 'Animals', Water = 'water'.").
barrons.rule38:: isa(E3S11-need, "need"), agent(E3S11-need, A1S11-animal), isa(A1S11-animal, "Animals"), object(E3S11-need, A4S11-water), isa(A4S11-water, "water") -> effect(E3S11-need, E6S11-survive), isa(E6S11-survive, "survive"), agent(E6S11-survive, A1S11-animal).
english(barrons.rule39, "Animals also need water to survive").
pretty(barrons.rule39, "EFFECT(need(Animal, Water), survive(Animal)), Animal = 'Animals', Water = 'water'.").
barrons.rule39:: isa(E6S11-survive, "survive"), agent(E6S11-survive, A1S11-animal), isa(A1S11-animal, "Animals") -> effect(E3S11-need, E6S11-survive), isa(E3S11-need, "need"), agent(E3S11-need, A1S11-animal), object(E3S11-need, A4S11-water), isa(A4S11-water, "water").
english(barrons.rule40, "Water is used to break down and move materials throughout the body").
pretty(barrons.rule40, "PURPOSE(Water, break down(Water)), Water = 'Water'.").
barrons.rule40:: isa(A1S12-water, "Water") -> purpose(A1S12-water, E5S12-break), isa(E5S12-break, "break down"), agent(E5S12-break, A1S12-water).
english(barrons.rule41, "Water is used to break down and move materials throughout the body").
pretty(barrons.rule41, "PURPOSE(Water, break down(Water)), Water = 'Water'.").
barrons.rule41:: isa(E5S12-break, "break down"), agent(E5S12-break, A1S12-water), isa(A1S12-water, "Water") -> purpose(A1S12-water, E5S12-break).
english(barrons.rule42, "Water is used to break down and move materials throughout the body").
pretty(barrons.rule42, "PURPOSE(Water, move_throughout(Water, Material, Body)), Water = 'Water', Material = 'materials', Body = 'the body'.").
barrons.rule42:: isa(A1S12-water, "Water") -> purpose(A1S12-water, E8S12-move), isa(E8S12-move, "move"), agent(E8S12-move, A1S12-water), object(E8S12-move, A9S12-material), isa(A9S12-material, "materials"), throughout(E8S12-move, A12S12-body), isa(A12S12-body, "the body").
english(barrons.rule43, "Water is used to break down and move materials throughout the body").
pretty(barrons.rule43, "PURPOSE(Water, move_throughout(Water, Material, Body)), Water = 'Water', Material = 'materials', Body = 'the body'.").
barrons.rule43:: isa(E8S12-move, "move"), agent(E8S12-move, A1S12-water), isa(A1S12-water, "Water"), object(E8S12-move, A9S12-material), isa(A9S12-material, "materials"), throughout(E8S12-move, A12S12-body), isa(A12S12-body, "the body") -> purpose(A1S12-water, E8S12-move).
english(barrons.rule44, "Animals can not make their[Animals] own food so they[Animals] must eat to get nutrients").
pretty(barrons.rule44, "EFFECT(not make(Animal, Food), eat(Animal)), Animal = 'Animals', Food = 'their[Animals] own food', Animal = 'Animals'.").
barrons.rule44:: isa(E4S13-make, "not make"), agent(E4S13-make, A1S13-animal), isa(A1S13-animal, "Animals"), object(E4S13-make, A7S13-food), isa(A7S13-food, "their[Animals] own food") -> effect(E4S13-make, E11S13-eat), isa(E11S13-eat, "eat"), agent(E11S13-eat, A1S7-animal), isa(A1S7-animal, "Animals").
english(barrons.rule45, "Animals can not make their[Animals] own food so they[Animals] must eat to get nutrients").
pretty(barrons.rule45, "EFFECT(not make(Animal, Food), eat(Animal)), Animal = 'Animals', Food = 'their[Animals] own food', Animal = 'Animals'.").
barrons.rule45:: isa(E11S13-eat, "eat"), agent(E11S13-eat, A1S7-animal), isa(A1S7-animal, "Animals") -> effect(E4S13-make, E11S13-eat), isa(E4S13-make, "not make"), agent(E4S13-make, A1S13-animal), isa(A1S13-animal, "Animals"), object(E4S13-make, A7S13-food), isa(A7S13-food, "their[Animals] own food").
english(barrons.rule46, "Animals can not make their[Animals] own food so they[Animals] must eat to get nutrients").
pretty(barrons.rule46, "REQUIREMENT(eat(Animal), get(Animal, Nutrient)), Animal = 'Animals', Nutrient = 'nutrients'.").
barrons.rule46:: isa(E11S13-eat, "eat"), agent(E11S13-eat, A1S7-animal), isa(A1S7-animal, "Animals") -> requirement(E11S13-eat, E13S13-get), isa(E13S13-get, "get"), agent(E13S13-get, A1S7-animal), object(E13S13-get, A14S13-nutrient), isa(A14S13-nutrient, "nutrients").
english(barrons.rule47, "Animals can not make their[Animals] own food so they[Animals] must eat to get nutrients").
pretty(barrons.rule47, "REQUIREMENT(eat(Animal), get(Animal, Nutrient)), Animal = 'Animals', Nutrient = 'nutrients'.").
barrons.rule47:: isa(E13S13-get, "get"), agent(E13S13-get, A1S7-animal), isa(A1S7-animal, "Animals"), object(E13S13-get, A14S13-nutrient), isa(A14S13-nutrient, "nutrients") -> requirement(E11S13-eat, E13S13-get), isa(E11S13-eat, "eat"), agent(E11S13-eat, A1S7-animal).
english(barrons.rule48, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule48, "EFFECT(need(Plant, Air), live(Plant)), Plant = 'Plants', Air = 'air'.").
barrons.rule48:: isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), isa(A1S15-plant, "Plants"), object(E2S15-need, A3S15-air), isa(A3S15-air, "air") -> effect(E2S15-need, E12S15-live), isa(E12S15-live, "live"), agent(E12S15-live, A1S15-plant).
english(barrons.rule49, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule49, "EFFECT(need(Plant, Air), live(Plant)), Plant = 'Plants', Air = 'air'.").
barrons.rule49:: isa(E12S15-live, "live"), agent(E12S15-live, A1S15-plant), isa(A1S15-plant, "Plants") -> effect(E2S15-need, E12S15-live), isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), object(E2S15-need, A3S15-air), isa(A3S15-air, "air").
english(barrons.rule50, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule50, "EFFECT(need(Plant, Water), live(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule50:: isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), isa(A1S15-plant, "Plants"), object(E2S15-need, A5S15-water), isa(A5S15-water, "water") -> effect(E2S15-need, E12S15-live), isa(E12S15-live, "live"), agent(E12S15-live, A1S15-plant).
english(barrons.rule51, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule51, "EFFECT(need(Plant, Water), live(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule51:: isa(E12S15-live, "live"), agent(E12S15-live, A1S15-plant), isa(A1S15-plant, "Plants") -> effect(E2S15-need, E12S15-live), isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), object(E2S15-need, A5S15-water), isa(A5S15-water, "water").
english(barrons.rule52, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule52, "EFFECT(need(Plant, Nutrient), live(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule52:: isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), isa(A1S15-plant, "Plants"), object(E2S15-need, A7S15-nutrient), isa(A7S15-nutrient, "nutrients") -> effect(E2S15-need, E12S15-live), isa(E12S15-live, "live"), agent(E12S15-live, A1S15-plant).
english(barrons.rule53, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule53, "EFFECT(need(Plant, Nutrient), live(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule53:: isa(E12S15-live, "live"), agent(E12S15-live, A1S15-plant), isa(A1S15-plant, "Plants") -> effect(E2S15-need, E12S15-live), isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), object(E2S15-need, A7S15-nutrient), isa(A7S15-nutrient, "nutrients").
english(barrons.rule54, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule54, "EFFECT(need(Plant, Light), live(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule54:: isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), isa(A1S15-plant, "Plants"), object(E2S15-need, A10S15-light), isa(A10S15-light, "light") -> effect(E2S15-need, E12S15-live), isa(E12S15-live, "live"), agent(E12S15-live, A1S15-plant).
english(barrons.rule55, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule55, "EFFECT(need(Plant, Light), live(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule55:: isa(E12S15-live, "live"), agent(E12S15-live, A1S15-plant), isa(A1S15-plant, "Plants") -> effect(E2S15-need, E12S15-live), isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), object(E2S15-need, A10S15-light), isa(A10S15-light, "light").
english(barrons.rule56, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule56, "EFFECT(need(Plant, Air), survive(Plant)), Plant = 'Plants', Air = 'air'.").
barrons.rule56:: isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), isa(A1S15-plant, "Plants"), object(E2S15-need, A3S15-air), isa(A3S15-air, "air") -> effect(E2S15-need, E14S15-survive), isa(E14S15-survive, "survive"), agent(E14S15-survive, A1S15-plant).
english(barrons.rule57, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule57, "EFFECT(need(Plant, Air), survive(Plant)), Plant = 'Plants', Air = 'air'.").
barrons.rule57:: isa(E14S15-survive, "survive"), agent(E14S15-survive, A1S15-plant), isa(A1S15-plant, "Plants") -> effect(E2S15-need, E14S15-survive), isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), object(E2S15-need, A3S15-air), isa(A3S15-air, "air").
english(barrons.rule58, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule58, "EFFECT(need(Plant, Water), survive(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule58:: isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), isa(A1S15-plant, "Plants"), object(E2S15-need, A5S15-water), isa(A5S15-water, "water") -> effect(E2S15-need, E14S15-survive), isa(E14S15-survive, "survive"), agent(E14S15-survive, A1S15-plant).
english(barrons.rule59, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule59, "EFFECT(need(Plant, Water), survive(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule59:: isa(E14S15-survive, "survive"), agent(E14S15-survive, A1S15-plant), isa(A1S15-plant, "Plants") -> effect(E2S15-need, E14S15-survive), isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), object(E2S15-need, A5S15-water), isa(A5S15-water, "water").
english(barrons.rule60, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule60, "EFFECT(need(Plant, Nutrient), survive(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule60:: isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), isa(A1S15-plant, "Plants"), object(E2S15-need, A7S15-nutrient), isa(A7S15-nutrient, "nutrients") -> effect(E2S15-need, E14S15-survive), isa(E14S15-survive, "survive"), agent(E14S15-survive, A1S15-plant).
english(barrons.rule61, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule61, "EFFECT(need(Plant, Nutrient), survive(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule61:: isa(E14S15-survive, "survive"), agent(E14S15-survive, A1S15-plant), isa(A1S15-plant, "Plants") -> effect(E2S15-need, E14S15-survive), isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), object(E2S15-need, A7S15-nutrient), isa(A7S15-nutrient, "nutrients").
english(barrons.rule62, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule62, "EFFECT(need(Plant, Light), survive(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule62:: isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), isa(A1S15-plant, "Plants"), object(E2S15-need, A10S15-light), isa(A10S15-light, "light") -> effect(E2S15-need, E14S15-survive), isa(E14S15-survive, "survive"), agent(E14S15-survive, A1S15-plant).
english(barrons.rule63, "Plants need air water nutrients and light to live and survive").
pretty(barrons.rule63, "EFFECT(need(Plant, Light), survive(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule63:: isa(E14S15-survive, "survive"), agent(E14S15-survive, A1S15-plant), isa(A1S15-plant, "Plants") -> effect(E2S15-need, E14S15-survive), isa(E2S15-need, "need"), agent(E2S15-need, A1S15-plant), object(E2S15-need, A10S15-light), isa(A10S15-light, "light").
english(barrons.rule64, "Plants take in air through their[Plants] leaves").
pretty(barrons.rule64, "isa(take in, 'take in') -> take in_through(Plant, Air, Leaf).").
barrons.rule64:: isa(E2S16-take, "take in") -> agent(E2S16-take, A1S16-plant), isa(A1S16-plant, "Plants"), object(E2S16-take, A4S16-air), isa(A4S16-air, "air"), through(E2S16-take, A7S16-leaf), isa(A7S16-leaf, "their[Plants] leaves").
english(barrons.rule65, "Plants take in air through their[Plants] leaves").
pretty(barrons.rule65, "isa(Plant, 'Plants') -> take in_through(Plant, Air, Leaf).").
barrons.rule65:: isa(A1S16-plant, "Plants") -> isa(E2S16-take, "take in"), agent(E2S16-take, A1S16-plant), object(E2S16-take, A4S16-air), isa(A4S16-air, "air"), through(E2S16-take, A7S16-leaf), isa(A7S16-leaf, "their[Plants] leaves").
english(barrons.rule66, "Plants take in air through their[Plants] leaves").
pretty(barrons.rule66, "isa(Air, 'air') -> take in_through(Plant, Air, Leaf).").
barrons.rule66:: isa(A4S16-air, "air") -> isa(E2S16-take, "take in"), agent(E2S16-take, A1S16-plant), isa(A1S16-plant, "Plants"), object(E2S16-take, A4S16-air), through(E2S16-take, A7S16-leaf), isa(A7S16-leaf, "their[Plants] leaves").
english(barrons.rule67, "Plants take in air through their[Plants] leaves").
pretty(barrons.rule67, "isa(Leaf, 'their[Plants] leaves') -> take in_through(Plant, Air, Leaf).").
barrons.rule67:: isa(A7S16-leaf, "their[Plants] leaves") -> isa(E2S16-take, "take in"), agent(E2S16-take, A1S16-plant), isa(A1S16-plant, "Plants"), object(E2S16-take, A4S16-air), isa(A4S16-air, "air"), through(E2S16-take, A7S16-leaf).
english(barrons.rule68, "This is necessary for the plant to create food").
pretty(barrons.rule68, "REQUIREMENT(This, create(Plant, Food)), This = 'This', Plant = 'the plant', Food = 'food'.").
barrons.rule68:: isa(A1S18-this, "This") -> requirement(A1S18-this, E8S18-create), isa(E8S18-create, "create"), agent(E8S18-create, A6S18-plant), isa(A6S18-plant, "the plant"), object(E8S18-create, A9S18-food), isa(A9S18-food, "food").
english(barrons.rule69, "This is necessary for the plant to create food").
pretty(barrons.rule69, "REQUIREMENT(This, create(Plant, Food)), This = 'This', Plant = 'the plant', Food = 'food'.").
barrons.rule69:: isa(E8S18-create, "create"), agent(E8S18-create, A6S18-plant), isa(A6S18-plant, "the plant"), object(E8S18-create, A9S18-food), isa(A9S18-food, "food") -> requirement(A1S18-this, E8S18-create), isa(A1S18-this, "This").
english(barrons.rule70, "Plants make their[Plants] own food by a process called photosynthesis").
pretty(barrons.rule70, "isa(make, 'make') -> make_by(Plant, Food, Process).").
barrons.rule70:: isa(E2S19-make, "make") -> agent(E2S19-make, A1S19-plant), isa(A1S19-plant, "Plants"), object(E2S19-make, A5S19-food), isa(A5S19-food, "their[Plants] own food"), by(E2S19-make, A8S19-process), isa(A8S19-process, "a process called photosynthesis").
english(barrons.rule71, "Plants make their[Plants] own food by a process called photosynthesis").
pretty(barrons.rule71, "isa(Plant, 'Plants') -> make_by(Plant, Food, Process).").
barrons.rule71:: isa(A1S19-plant, "Plants") -> isa(E2S19-make, "make"), agent(E2S19-make, A1S19-plant), object(E2S19-make, A5S19-food), isa(A5S19-food, "their[Plants] own food"), by(E2S19-make, A8S19-process), isa(A8S19-process, "a process called photosynthesis").
english(barrons.rule72, "Plants make their[Plants] own food by a process called photosynthesis").
pretty(barrons.rule72, "isa(Food, 'their[Plants] own food') -> make_by(Plant, Food, Process).").
barrons.rule72:: isa(A5S19-food, "their[Plants] own food") -> isa(E2S19-make, "make"), agent(E2S19-make, A1S19-plant), isa(A1S19-plant, "Plants"), object(E2S19-make, A5S19-food), by(E2S19-make, A8S19-process), isa(A8S19-process, "a process called photosynthesis").
english(barrons.rule73, "Plants make their[Plants] own food by a process called photosynthesis").
pretty(barrons.rule73, "isa(Process, 'a process') -> make_by(Plant, Food, Process).").
barrons.rule73:: isa(A8S19-process, "a process called photosynthesis") -> isa(E2S19-make, "make"), agent(E2S19-make, A1S19-plant), isa(A1S19-plant, "Plants"), object(E2S19-make, A5S19-food), isa(A5S19-food, "their[Plants] own food"), by(E2S19-make, A8S19-process).
english(barrons.rule74, "Water is used by the plant to move materials up from the roots to make food").
pretty(barrons.rule74, "EFFECT(use(Plant, Water), move(Plant, Material, Up)), Plant = 'the plant', Water = 'Water', Material = 'materials', Up = 'up from the roots'.").
barrons.rule74:: isa(E3S20-use, "use"), agent(E3S20-use, A6S20-plant), isa(A6S20-plant, "the plant"), object(E3S20-use, A1S20-water), isa(A1S20-water, "Water") -> effect(E3S20-use, E8S20-move), isa(E8S20-move, "move"), agent(E8S20-move, A6S20-plant), object(E8S20-move, A9S20-material), isa(A9S20-material, "materials"), arg(E8S20-move, A10S20-up), isa(A10S20-up, "up from the roots").
english(barrons.rule75, "Water is used by the plant to move materials up from the roots to make food").
pretty(barrons.rule75, "EFFECT(use(Plant, Water), move(Plant, Material, Up)), Plant = 'the plant', Water = 'Water', Material = 'materials', Up = 'up from the roots'.").
barrons.rule75:: isa(E8S20-move, "move"), agent(E8S20-move, A6S20-plant), isa(A6S20-plant, "the plant"), object(E8S20-move, A9S20-material), isa(A9S20-material, "materials"), arg(E8S20-move, A10S20-up), isa(A10S20-up, "up from the roots") -> effect(E3S20-use, E8S20-move), isa(E3S20-use, "use"), agent(E3S20-use, A6S20-plant), object(E3S20-use, A1S20-water), isa(A1S20-water, "Water").
english(barrons.rule76, "Water is used by the plant to move materials up from the roots to make food").
pretty(barrons.rule76, "PURPOSE(Water, move(Plant, Material, Up)), Water = 'Water', Plant = 'the plant', Material = 'materials', Up = 'up from the roots'.").
barrons.rule76:: isa(A1S20-water, "Water") -> purpose(A1S20-water, E8S20-move), isa(E8S20-move, "move"), agent(E8S20-move, A6S20-plant), isa(A6S20-plant, "the plant"), object(E8S20-move, A9S20-material), isa(A9S20-material, "materials"), arg(E8S20-move, A10S20-up), isa(A10S20-up, "up from the roots").
english(barrons.rule77, "Water is used by the plant to move materials up from the roots to make food").
pretty(barrons.rule77, "PURPOSE(Water, move(Plant, Material, Up)), Water = 'Water', Plant = 'the plant', Material = 'materials', Up = 'up from the roots'.").
barrons.rule77:: isa(E8S20-move, "move"), agent(E8S20-move, A6S20-plant), isa(A6S20-plant, "the plant"), object(E8S20-move, A9S20-material), isa(A9S20-material, "materials"), arg(E8S20-move, A10S20-up), isa(A10S20-up, "up from the roots") -> purpose(A1S20-water, E8S20-move), isa(A1S20-water, "Water").
english(barrons.rule78, "Water is used by the plant to move materials up from the roots to make food").
pretty(barrons.rule78, "EFFECT(move(Plant, Material, Up), make(Plant, Food)), Plant = 'the plant', Material = 'materials', Up = 'up from the roots', Food = 'food'.").
barrons.rule78:: isa(E8S20-move, "move"), agent(E8S20-move, A6S20-plant), isa(A6S20-plant, "the plant"), object(E8S20-move, A9S20-material), isa(A9S20-material, "materials"), arg(E8S20-move, A10S20-up), isa(A10S20-up, "up from the roots") -> effect(E8S20-move, E15S20-make), isa(E15S20-make, "make"), agent(E15S20-make, A6S20-plant), object(E15S20-make, A16S20-food), isa(A16S20-food, "food").
english(barrons.rule79, "Water is used by the plant to move materials up from the roots to make food").
pretty(barrons.rule79, "EFFECT(move(Plant, Material, Up), make(Plant, Food)), Plant = 'the plant', Material = 'materials', Up = 'up from the roots', Food = 'food'.").
barrons.rule79:: isa(E15S20-make, "make"), agent(E15S20-make, A6S20-plant), isa(A6S20-plant, "the plant"), object(E15S20-make, A16S20-food), isa(A16S20-food, "food") -> effect(E8S20-move, E15S20-make), isa(E8S20-move, "move"), agent(E8S20-move, A6S20-plant), object(E8S20-move, A9S20-material), isa(A9S20-material, "materials"), arg(E8S20-move, A10S20-up), isa(A10S20-up, "up from the roots").
english(barrons.rule80, "Nutrients from the soil enter the plant through its[the soil] roots").
pretty(barrons.rule80, "isa(Soil, 'the soil') -> enter_through(Nutrient, Plant, Root).").
barrons.rule80:: isa(A4S21-soil, "the soil") -> from(A1S21-nutrient, A4S21-soil), isa(E5S21-enter, "enter"), agent(E5S21-enter, A1S21-nutrient), isa(A1S21-nutrient, "Nutrients"), object(E5S21-enter, A7S21-plant), isa(A7S21-plant, "the plant"), through(E5S21-enter, A10S21-root), isa(A10S21-root, "its[the soil] roots").
english(barrons.rule81, "Nutrients from the soil enter the plant through its[the soil] roots").
pretty(barrons.rule81, "isa(enter, 'enter') -> enter_through(Nutrient, Plant, Root).").
barrons.rule81:: isa(E5S21-enter, "enter") -> from(A1S21-nutrient, A4S21-soil), isa(A4S21-soil, "the soil"), agent(E5S21-enter, A1S21-nutrient), isa(A1S21-nutrient, "Nutrients"), object(E5S21-enter, A7S21-plant), isa(A7S21-plant, "the plant"), through(E5S21-enter, A10S21-root), isa(A10S21-root, "its[the soil] roots").
english(barrons.rule82, "Nutrients from the soil enter the plant through its[the soil] roots").
pretty(barrons.rule82, "isa(Nutrient, 'Nutrients from the soil') -> enter_through(Nutrient, Plant, Root).").
barrons.rule82:: isa(A1S21-nutrient, "Nutrients") -> from(A1S21-nutrient, A4S21-soil), isa(A4S21-soil, "the soil"), isa(E5S21-enter, "enter"), agent(E5S21-enter, A1S21-nutrient), object(E5S21-enter, A7S21-plant), isa(A7S21-plant, "the plant"), through(E5S21-enter, A10S21-root), isa(A10S21-root, "its[the soil] roots").
english(barrons.rule83, "Nutrients from the soil enter the plant through its[the soil] roots").
pretty(barrons.rule83, "isa(Plant, 'the plant') -> enter_through(Nutrient, Plant, Root).").
barrons.rule83:: isa(A7S21-plant, "the plant") -> from(A1S21-nutrient, A4S21-soil), isa(A4S21-soil, "the soil"), isa(E5S21-enter, "enter"), agent(E5S21-enter, A1S21-nutrient), isa(A1S21-nutrient, "Nutrients"), object(E5S21-enter, A7S21-plant), through(E5S21-enter, A10S21-root), isa(A10S21-root, "its[the soil] roots").
english(barrons.rule84, "Nutrients from the soil enter the plant through its[the soil] roots").
pretty(barrons.rule84, "isa(Root, 'its[the soil] roots') -> enter_through(Nutrient, Plant, Root).").
barrons.rule84:: isa(A10S21-root, "its[the soil] roots") -> from(A1S21-nutrient, A4S21-soil), isa(A4S21-soil, "the soil"), isa(E5S21-enter, "enter"), agent(E5S21-enter, A1S21-nutrient), isa(A1S21-nutrient, "Nutrients"), object(E5S21-enter, A7S21-plant), isa(A7S21-plant, "the plant"), through(E5S21-enter, A10S21-root).
english(barrons.rule85, "Nutrients are necessary for the plant to survive").
pretty(barrons.rule85, "REQUIREMENT(Nutrient, survive(Plant)), Nutrient = 'Nutrients', Plant = 'the plant'.").
barrons.rule85:: isa(A1S22-nutrient, "Nutrients") -> requirement(A1S22-nutrient, E8S22-survive), isa(E8S22-survive, "survive"), agent(E8S22-survive, A6S22-plant), isa(A6S22-plant, "the plant").
english(barrons.rule86, "Nutrients are necessary for the plant to survive").
pretty(barrons.rule86, "REQUIREMENT(Nutrient, survive(Plant)), Nutrient = 'Nutrients', Plant = 'the plant'.").
barrons.rule86:: isa(E8S22-survive, "survive"), agent(E8S22-survive, A6S22-plant), isa(A6S22-plant, "the plant") -> requirement(A1S22-nutrient, E8S22-survive), isa(A1S22-nutrient, "Nutrients").
english(barrons.rule87, "If the living organism does not get the air water food nutrients or light it[the living organism] needs to survive it[the living organism] will die").
pretty(barrons.rule87, "EFFECT(not get(Organism, Air), die(Water)), Organism = 'the living organism', Air = 'the air', Water = 'water'.").
barrons.rule87:: isa(E7S25-get, "not get"), agent(E7S25-get, A4S25-organism), isa(A4S25-organism, "the living organism"), object(E7S25-get, A9S25-air), isa(A9S25-air, "the air") -> effect(E7S25-get, E25S25-die), isa(E25S25-die, "die"), agent(E25S25-die, A11S25-water), isa(A11S25-water, "water").
english(barrons.rule88, "If the living organism does not get the air water food nutrients or light it[the living organism] needs to survive it[the living organism] will die").
pretty(barrons.rule88, "EFFECT(not get(Organism, Air), die(Water)), Organism = 'the living organism', Air = 'the air', Water = 'water'.").
barrons.rule88:: isa(E25S25-die, "die"), agent(E25S25-die, A11S25-water), isa(A11S25-water, "water") -> effect(E7S25-get, E25S25-die), isa(E7S25-get, "not get"), agent(E7S25-get, A4S25-organism), isa(A4S25-organism, "the living organism"), object(E7S25-get, A9S25-air), isa(A9S25-air, "the air").
english(barrons.rule89, "If the living organism does not get the air water food nutrients or light it[the living organism] needs to survive it[the living organism] will die").
pretty(barrons.rule89, "EFFECT(not get(Organism, Air), die(Food)), Organism = 'the living organism', Air = 'the air', Food = 'food'.").
barrons.rule89:: isa(E7S25-get, "not get"), agent(E7S25-get, A4S25-organism), isa(A4S25-organism, "the living organism"), object(E7S25-get, A9S25-air), isa(A9S25-air, "the air") -> effect(E7S25-get, E25S25-die), isa(E25S25-die, "die"), agent(E25S25-die, A13S25-food), isa(A13S25-food, "food").
english(barrons.rule90, "If the living organism does not get the air water food nutrients or light it[the living organism] needs to survive it[the living organism] will die").
pretty(barrons.rule90, "EFFECT(not get(Organism, Air), die(Food)), Organism = 'the living organism', Air = 'the air', Food = 'food'.").
barrons.rule90:: isa(E25S25-die, "die"), agent(E25S25-die, A13S25-food), isa(A13S25-food, "food") -> effect(E7S25-get, E25S25-die), isa(E7S25-get, "not get"), agent(E7S25-get, A4S25-organism), isa(A4S25-organism, "the living organism"), object(E7S25-get, A9S25-air), isa(A9S25-air, "the air").
english(barrons.rule91, "If the living organism does not get the air water food nutrients or light it[the living organism] needs to survive it[the living organism] will die").
pretty(barrons.rule91, "EFFECT(not get(Organism, Air), die(Nutrient)), Organism = 'the living organism', Air = 'the air', Nutrient = 'nutrients'.").
barrons.rule91:: isa(E7S25-get, "not get"), agent(E7S25-get, A4S25-organism), isa(A4S25-organism, "the living organism"), object(E7S25-get, A9S25-air), isa(A9S25-air, "the air") -> effect(E7S25-get, E25S25-die), isa(E25S25-die, "die"), agent(E25S25-die, A15S25-nutrient), isa(A15S25-nutrient, "nutrients").
english(barrons.rule92, "If the living organism does not get the air water food nutrients or light it[the living organism] needs to survive it[the living organism] will die").
pretty(barrons.rule92, "EFFECT(not get(Organism, Air), die(Nutrient)), Organism = 'the living organism', Air = 'the air', Nutrient = 'nutrients'.").
barrons.rule92:: isa(E25S25-die, "die"), agent(E25S25-die, A15S25-nutrient), isa(A15S25-nutrient, "nutrients") -> effect(E7S25-get, E25S25-die), isa(E7S25-get, "not get"), agent(E7S25-get, A4S25-organism), isa(A4S25-organism, "the living organism"), object(E7S25-get, A9S25-air), isa(A9S25-air, "the air").
english(barrons.rule93, "If the living organism does not get the air water food nutrients or light it[the living organism] needs to survive it[the living organism] will die").
pretty(barrons.rule93, "EFFECT(not get(Organism, Air), die(Light)), Organism = 'the living organism', Air = 'the air', Light = 'light'.").
barrons.rule93:: isa(E7S25-get, "not get"), agent(E7S25-get, A4S25-organism), isa(A4S25-organism, "the living organism"), object(E7S25-get, A9S25-air), isa(A9S25-air, "the air") -> effect(E7S25-get, E25S25-die), isa(E25S25-die, "die"), agent(E25S25-die, A18S25-light), isa(A18S25-light, "light").
english(barrons.rule94, "If the living organism does not get the air water food nutrients or light it[the living organism] needs to survive it[the living organism] will die").
pretty(barrons.rule94, "EFFECT(not get(Organism, Air), die(Light)), Organism = 'the living organism', Air = 'the air', Light = 'light'.").
barrons.rule94:: isa(E25S25-die, "die"), agent(E25S25-die, A18S25-light), isa(A18S25-light, "light") -> effect(E7S25-get, E25S25-die), isa(E7S25-get, "not get"), agent(E7S25-get, A4S25-organism), isa(A4S25-organism, "the living organism"), object(E7S25-get, A9S25-air), isa(A9S25-air, "the air").
english(barrons.rule95, "Nonliving things are all around us").
pretty(barrons.rule95, "isa(We, 'us') -> nonlive(All, Thing).").
barrons.rule95:: isa(A6S26-we, "us") -> around(A4S26-all, A6S26-we), isa(E1S26-nonlive, "nonlive"), agent(E1S26-nonlive, A4S26-all), isa(A4S26-all, "all"), object(E1S26-nonlive, A2S26-thing), isa(A2S26-thing, "things").
english(barrons.rule96, "Nonliving things are all around us").
pretty(barrons.rule96, "isa(nonlive, 'Nonliving') -> nonlive(All, Thing).").
barrons.rule96:: isa(E1S26-nonlive, "nonlive") -> around(A4S26-all, A6S26-we), isa(A6S26-we, "us"), agent(E1S26-nonlive, A4S26-all), isa(A4S26-all, "all"), object(E1S26-nonlive, A2S26-thing), isa(A2S26-thing, "things").
english(barrons.rule97, "Nonliving things are all around us").
pretty(barrons.rule97, "isa(All, 'all around us') -> nonlive(All, Thing).").
barrons.rule97:: isa(A4S26-all, "all") -> around(A4S26-all, A6S26-we), isa(A6S26-we, "us"), isa(E1S26-nonlive, "nonlive"), agent(E1S26-nonlive, A4S26-all), object(E1S26-nonlive, A2S26-thing), isa(A2S26-thing, "things").
english(barrons.rule98, "Nonliving things are all around us").
pretty(barrons.rule98, "isa(Thing, 'things') -> nonlive(All, Thing).").
barrons.rule98:: isa(A2S26-thing, "things") -> around(A4S26-all, A6S26-we), isa(A6S26-we, "us"), isa(E1S26-nonlive, "nonlive"), agent(E1S26-nonlive, A4S26-all), isa(A4S26-all, "all"), object(E1S26-nonlive, A2S26-thing).
english(barrons.rule99, "They[living things organisms] do not have a life cycle").
pretty(barrons.rule99, "isa(not have, 'not have') -> not have(Thing, Cycle).").
barrons.rule99:: isa(E4S28-have, "not have") -> agent(E4S28-have, A6S6-thing), isa(A6S6-thing, "living things"), object(E4S28-have, A7S28-cycle), isa(A7S28-cycle, "a life cycle").
english(barrons.rule100, "They[living things organisms] do not have a life cycle").
pretty(barrons.rule100, "isa(Thing, 'living things') -> not have(Thing, Cycle).").
barrons.rule100:: isa(A6S6-thing, "living things") -> isa(E4S28-have, "not have"), agent(E4S28-have, A6S6-thing), object(E4S28-have, A7S28-cycle), isa(A7S28-cycle, "a life cycle").
english(barrons.rule101, "They[living things organisms] do not have a life cycle").
pretty(barrons.rule101, "isa(Cycle, 'a life cycle') -> not have(Thing, Cycle).").
barrons.rule101:: isa(A7S28-cycle, "a life cycle") -> isa(E4S28-have, "not have"), agent(E4S28-have, A6S6-thing), isa(A6S6-thing, "living things"), object(E4S28-have, A7S28-cycle).
english(barrons.rule102, "A nonliving thing does not need anything to exist").
pretty(barrons.rule102, "EFFECT(not need(Thing, Anything), exist(Thing)), Thing = 'A nonliving thing', Anything = 'anything'.").
barrons.rule102:: isa(E6S31-need, "not need"), agent(E6S31-need, A3S31-thing), isa(A3S31-thing, "A nonliving thing"), object(E6S31-need, A7S31-anything), isa(A7S31-anything, "anything") -> effect(E6S31-need, E9S31-exist), isa(E9S31-exist, "exist"), agent(E9S31-exist, A3S31-thing).
english(barrons.rule103, "A nonliving thing does not need anything to exist").
pretty(barrons.rule103, "EFFECT(not need(Thing, Anything), exist(Thing)), Thing = 'A nonliving thing', Anything = 'anything'.").
barrons.rule103:: isa(E9S31-exist, "exist"), agent(E9S31-exist, A3S31-thing), isa(A3S31-thing, "A nonliving thing") -> effect(E6S31-need, E9S31-exist), isa(E6S31-need, "not need"), agent(E6S31-need, A3S31-thing), object(E6S31-need, A7S31-anything), isa(A7S31-anything, "anything").
english(barrons.rule104, "A swing set is a nonliving thing that is man-made").
pretty(barrons.rule104, "EXAMPLE(Set, be(Thing, Man-made)), Set = 'A swing set', Thing = 'a nonliving thing', Man-made = 'man-made'.").
barrons.rule104:: isa(A3S33-set, "A swing set") -> example(A3S33-set, E9S33-be), isa(E9S33-be, "be"), agent(E9S33-be, A7S33-thing), isa(A7S33-thing, "a nonliving thing"), object(E9S33-be, A10S33-man-made), isa(A10S33-man-made, "man-made").
english(barrons.rule105, "A swing set is a nonliving thing that is man-made").
pretty(barrons.rule105, "EXAMPLE(Set, be(Thing, Man-made)), Set = 'A swing set', Thing = 'a nonliving thing', Man-made = 'man-made'.").
barrons.rule105:: isa(E9S33-be, "be"), agent(E9S33-be, A7S33-thing), isa(A7S33-thing, "a nonliving thing"), object(E9S33-be, A10S33-man-made), isa(A10S33-man-made, "man-made") -> example(A3S33-set, E9S33-be), isa(A3S33-set, "A swing set").
english(barrons.rule106, "A swing set is a nonliving thing that is man-made").
pretty(barrons.rule106, "EXAMPLE(Set, Thing), Set = 'A swing set', Thing = 'a nonliving thing'.").
barrons.rule106:: isa(A3S33-set, "A swing set") -> example(A3S33-set, A7S33-thing), isa(A7S33-thing, "a nonliving thing").
english(barrons.rule107, "A swing set is a nonliving thing that is man-made").
pretty(barrons.rule107, "EXAMPLE(Set, Thing), Set = 'A swing set', Thing = 'a nonliving thing'.").
barrons.rule107:: isa(A7S33-thing, "a nonliving thing") -> example(A3S33-set, A7S33-thing), isa(A3S33-set, "A swing set").
english(barrons.rule108, "Your desk pencil and paper are all nonliving things").
pretty(barrons.rule108, "EXAMPLE(Paper, Thing), Paper = 'paper', Thing = 'all nonliving things'.").
barrons.rule108:: isa(A7S34-paper, "paper") -> example(A7S34-paper, A11S34-thing), isa(A11S34-thing, "all nonliving things").
english(barrons.rule109, "Your desk pencil and paper are all nonliving things").
pretty(barrons.rule109, "EXAMPLE(Paper, Thing), Paper = 'paper', Thing = 'all nonliving things'.").
barrons.rule109:: isa(A11S34-thing, "all nonliving things") -> example(A7S34-paper, A11S34-thing), isa(A7S34-paper, "paper").
english(barrons.rule110, "Your desk pencil and paper are all nonliving things").
pretty(barrons.rule110, "EXAMPLE(Paper, Thing), Paper = 'paper', Thing = 'all nonliving things'.").
barrons.rule110:: isa(A7S34-paper, "paper") -> example(A7S34-paper, A11S34-thing), isa(A11S34-thing, "all nonliving things").
english(barrons.rule111, "Your desk pencil and paper are all nonliving things").
pretty(barrons.rule111, "EXAMPLE(Paper, Thing), Paper = 'paper', Thing = 'all nonliving things'.").
barrons.rule111:: isa(A11S34-thing, "all nonliving things") -> example(A7S34-paper, A11S34-thing), isa(A7S34-paper, "paper").
english(barrons.rule112, "Air and water are nonliving but are necessary for living things to live and survive").
pretty(barrons.rule112, "REQUIREMENT(Air, live(Thing)), Air = 'Air', Thing = 'living things'.").
barrons.rule112:: isa(A1S36-Air, "Air") -> requirement(A1S36-Air, E13S36-live), isa(E13S36-live, "live"), agent(E13S36-live, A11S36-thing), isa(A11S36-thing, "living things").
english(barrons.rule113, "Air and water are nonliving but are necessary for living things to live and survive").
pretty(barrons.rule113, "REQUIREMENT(Air, live(Thing)), Air = 'Air', Thing = 'living things'.").
barrons.rule113:: isa(E13S36-live, "live"), agent(E13S36-live, A11S36-thing), isa(A11S36-thing, "living things") -> requirement(A1S36-Air, E13S36-live), isa(A1S36-Air, "Air").
english(barrons.rule114, "Air and water are nonliving but are necessary for living things to live and survive").
pretty(barrons.rule114, "REQUIREMENT(Air, survive(Thing)), Air = 'Air', Thing = 'living things'.").
barrons.rule114:: isa(A1S36-Air, "Air") -> requirement(A1S36-Air, E15S36-survive), isa(E15S36-survive, "survive"), agent(E15S36-survive, A11S36-thing), isa(A11S36-thing, "living things").
english(barrons.rule115, "Air and water are nonliving but are necessary for living things to live and survive").
pretty(barrons.rule115, "REQUIREMENT(Air, survive(Thing)), Air = 'Air', Thing = 'living things'.").
barrons.rule115:: isa(E15S36-survive, "survive"), agent(E15S36-survive, A11S36-thing), isa(A11S36-thing, "living things") -> requirement(A1S36-Air, E15S36-survive), isa(A1S36-Air, "Air").
english(barrons.rule116, "These life processes are also known as the requirements for life").
pretty(barrons.rule116, "PURPOSE(know_as(Process, Requirement), Life), Process = 'These life processes', Requirement = 'the requirements for life', Life = 'life'.").
barrons.rule116:: isa(E6S39-know, "know"), object(E6S39-know, A3S39-process), isa(A3S39-process, "These life processes"), as(E6S39-know, A9S39-requirement), isa(A9S39-requirement, "the requirements for life") -> purpose(E6S39-know, A11S39-life), isa(A11S39-life, "life").
english(barrons.rule117, "These life processes are also known as the requirements for life").
pretty(barrons.rule117, "PURPOSE(know_as(Process, Requirement), Life), Process = 'These life processes', Requirement = 'the requirements for life', Life = 'life'.").
barrons.rule117:: isa(A11S39-life, "life") -> purpose(E6S39-know, A11S39-life), isa(E6S39-know, "know"), object(E6S39-know, A3S39-process), isa(A3S39-process, "These life processes"), as(E6S39-know, A9S39-requirement), isa(A9S39-requirement, "the requirements for life").
english(barrons.rule118, "As they[Most animals] grow their[Most animals] bones get longer and bigger they[Most animals] grow more hair and are able to take care of themselves by getting food shelter and water").
pretty(barrons.rule118, "isa(grow, 'grow') -> grow(Animal, Hair).").
barrons.rule118:: isa(E12S41-grow, "grow") -> agent(E12S41-grow, A2S40-animal), isa(A2S40-animal, "Most animals"), object(E12S41-grow, A14S41-hair), isa(A14S41-hair, "hair").
english(barrons.rule119, "As they[Most animals] grow their[Most animals] bones get longer and bigger they[Most animals] grow more hair and are able to take care of themselves by getting food shelter and water").
pretty(barrons.rule119, "isa(Animal, 'Most animals') -> grow(Animal, Hair).").
barrons.rule119:: isa(A2S40-animal, "Most animals") -> isa(E12S41-grow, "grow"), agent(E12S41-grow, A2S40-animal), object(E12S41-grow, A14S41-hair), isa(A14S41-hair, "hair").
english(barrons.rule120, "As they[Most animals] grow their[Most animals] bones get longer and bigger they[Most animals] grow more hair and are able to take care of themselves by getting food shelter and water").
pretty(barrons.rule120, "isa(Hair, 'hair') -> grow(Animal, Hair).").
barrons.rule120:: isa(A14S41-hair, "hair") -> isa(E12S41-grow, "grow"), agent(E12S41-grow, A2S40-animal), isa(A2S40-animal, "Most animals"), object(E12S41-grow, A14S41-hair).
english(barrons.rule121, "As they[Most animals] grow their[Most animals] bones get longer and bigger they[Most animals] grow more hair and are able to take care of themselves by getting food shelter and water").
pretty(barrons.rule121, "EFFECT(grow(Animal, Longer, Bigger), grow(Animal, Hair)), Animal = 'Most animals', Longer = 'longer', Bigger = 'bigger', Hair = 'hair'.").
barrons.rule121:: isa(E3S41-grow, "grow"), agent(E3S41-grow, A2S40-animal), isa(A2S40-animal, "Most animals"), arg(E3S41-grow, A7S41-longer), isa(A7S41-longer, "their[Most animals] bones get longer"), arg(E3S41-grow, A9S41-bigger), isa(A9S41-bigger, "bigger") -> effect(E3S41-grow, E12S41-grow), isa(E12S41-grow, "grow"), agent(E12S41-grow, A2S40-animal), object(E12S41-grow, A14S41-hair), isa(A14S41-hair, "hair").
english(barrons.rule122, "As they[Most animals] grow their[Most animals] bones get longer and bigger they[Most animals] grow more hair and are able to take care of themselves by getting food shelter and water").
pretty(barrons.rule122, "EFFECT(grow(Animal, Longer, Bigger), grow(Animal, Hair)), Animal = 'Most animals', Longer = 'longer', Bigger = 'bigger', Hair = 'hair'.").
barrons.rule122:: isa(E12S41-grow, "grow"), agent(E12S41-grow, A2S40-animal), isa(A2S40-animal, "Most animals"), object(E12S41-grow, A14S41-hair), isa(A14S41-hair, "hair") -> effect(E3S41-grow, E12S41-grow), isa(E3S41-grow, "grow"), agent(E3S41-grow, A2S40-animal), arg(E3S41-grow, A7S41-longer), isa(A7S41-longer, "their[Most animals] bones get longer"), arg(E3S41-grow, A9S41-bigger), isa(A9S41-bigger, "bigger").
english(barrons.rule123, "As they[Most animals] grow their[Most animals] bones get longer and bigger they[Most animals] grow more hair and are able to take care of themselves by getting food shelter and water").
pretty(barrons.rule123, "ENABLE(get(Food), take(Care)), Food = 'food', Care = 'care of themselves'.").
barrons.rule123:: isa(E25S41-get, "get"), object(E25S41-get, A26S41-food), isa(A26S41-food, "food") -> enable(E25S41-get, E20S41-take), of(A21S41-care, A23S41-themselves), isa(A23S41-themselves, "themselves"), isa(E20S41-take, "take"), object(E20S41-take, A21S41-care), isa(A21S41-care, "care").
english(barrons.rule124, "As they[Most animals] grow their[Most animals] bones get longer and bigger they[Most animals] grow more hair and are able to take care of themselves by getting food shelter and water").
pretty(barrons.rule124, "ENABLE(get(Food), take(Care)), Food = 'food', Care = 'care of themselves'.").
barrons.rule124:: of(A21S41-care, A23S41-themselves), isa(A23S41-themselves, "themselves"), isa(E20S41-take, "take"), object(E20S41-take, A21S41-care), isa(A21S41-care, "care") -> enable(E25S41-get, E20S41-take), isa(E25S41-get, "get"), object(E25S41-get, A26S41-food), isa(A26S41-food, "food").
english(barrons.rule125, "As they[Most animals] grow their[Most animals] bones get longer and bigger they[Most animals] grow more hair and are able to take care of themselves by getting food shelter and water").
pretty(barrons.rule125, "ENABLE(get(Shelter), take(Care)), Shelter = 'shelter', Care = 'care of themselves'.").
barrons.rule125:: isa(E25S41-get, "get"), object(E25S41-get, A28S41-shelter), isa(A28S41-shelter, "shelter") -> enable(E25S41-get, E20S41-take), of(A21S41-care, A23S41-themselves), isa(A23S41-themselves, "themselves"), isa(E20S41-take, "take"), object(E20S41-take, A21S41-care), isa(A21S41-care, "care").
english(barrons.rule126, "As they[Most animals] grow their[Most animals] bones get longer and bigger they[Most animals] grow more hair and are able to take care of themselves by getting food shelter and water").
pretty(barrons.rule126, "ENABLE(get(Shelter), take(Care)), Shelter = 'shelter', Care = 'care of themselves'.").
barrons.rule126:: of(A21S41-care, A23S41-themselves), isa(A23S41-themselves, "themselves"), isa(E20S41-take, "take"), object(E20S41-take, A21S41-care), isa(A21S41-care, "care") -> enable(E25S41-get, E20S41-take), isa(E25S41-get, "get"), object(E25S41-get, A28S41-shelter), isa(A28S41-shelter, "shelter").
english(barrons.rule127, "As they[Most animals] grow their[Most animals] bones get longer and bigger they[Most animals] grow more hair and are able to take care of themselves by getting food shelter and water").
pretty(barrons.rule127, "ENABLE(get(Water), take(Care)), Water = 'water', Care = 'care of themselves'.").
barrons.rule127:: isa(E25S41-get, "get"), object(E25S41-get, A31S41-water), isa(A31S41-water, "water") -> enable(E25S41-get, E20S41-take), of(A21S41-care, A23S41-themselves), isa(A23S41-themselves, "themselves"), isa(E20S41-take, "take"), object(E20S41-take, A21S41-care), isa(A21S41-care, "care").
english(barrons.rule128, "As they[Most animals] grow their[Most animals] bones get longer and bigger they[Most animals] grow more hair and are able to take care of themselves by getting food shelter and water").
pretty(barrons.rule128, "ENABLE(get(Water), take(Care)), Water = 'water', Care = 'care of themselves'.").
barrons.rule128:: of(A21S41-care, A23S41-themselves), isa(A23S41-themselves, "themselves"), isa(E20S41-take, "take"), object(E20S41-take, A21S41-care), isa(A21S41-care, "care") -> enable(E25S41-get, E20S41-take), isa(E25S41-get, "get"), object(E25S41-get, A31S41-water), isa(A31S41-water, "water").
english(barrons.rule129, "Plants reproduce by producing flowers and fruits that have seeds").
pretty(barrons.rule129, "ENABLE(produce(Plant, Flower, Fruit), reproduce(Plant)), Plant = 'Plants', Flower = 'flowers', Fruit = 'fruits'.").
barrons.rule129:: isa(E4S47-produce, "produce"), agent(E4S47-produce, A1S47-plant), isa(A1S47-plant, "Plants"), arg(E4S47-produce, A5S47-flower), isa(A5S47-flower, "flowers"), arg(E4S47-produce, A7S47-fruit), isa(A7S47-fruit, "fruits") -> enable(E4S47-produce, E2S47-reproduce), isa(E2S47-reproduce, "reproduce"), agent(E2S47-reproduce, A1S47-plant).
english(barrons.rule130, "Plants reproduce by producing flowers and fruits that have seeds").
pretty(barrons.rule130, "ENABLE(produce(Plant, Flower, Fruit), reproduce(Plant)), Plant = 'Plants', Flower = 'flowers', Fruit = 'fruits'.").
barrons.rule130:: isa(E2S47-reproduce, "reproduce"), agent(E2S47-reproduce, A1S47-plant), isa(A1S47-plant, "Plants") -> enable(E4S47-produce, E2S47-reproduce), isa(E4S47-produce, "produce"), agent(E4S47-produce, A1S47-plant), arg(E4S47-produce, A5S47-flower), isa(A5S47-flower, "flowers"), arg(E4S47-produce, A7S47-fruit), isa(A7S47-fruit, "fruits").
english(barrons.rule131, "Other plants develop outgrowths that can grow into adult plants").
pretty(barrons.rule131, "isa(develop, 'develop') -> develop(Plant, Outgrowth).").
barrons.rule131:: isa(E3S49-develop, "develop") -> agent(E3S49-develop, A2S49-plant), isa(A2S49-plant, "Other plants"), object(E3S49-develop, A4S49-outgrowth), isa(A4S49-outgrowth, "outgrowths that can grow into adult plants").
english(barrons.rule132, "Other plants develop outgrowths that can grow into adult plants").
pretty(barrons.rule132, "isa(Plant, 'Other plants') -> develop(Plant, Outgrowth).").
barrons.rule132:: isa(A2S49-plant, "Other plants") -> isa(E3S49-develop, "develop"), agent(E3S49-develop, A2S49-plant), object(E3S49-develop, A4S49-outgrowth), isa(A4S49-outgrowth, "outgrowths that can grow into adult plants").
english(barrons.rule133, "Other plants develop outgrowths that can grow into adult plants").
pretty(barrons.rule133, "isa(Outgrowth, 'outgrowths that can grow into adult plants') -> develop(Plant, Outgrowth).").
barrons.rule133:: isa(A4S49-outgrowth, "outgrowths that can grow into adult plants") -> isa(E3S49-develop, "develop"), agent(E3S49-develop, A2S49-plant), isa(A2S49-plant, "Other plants"), object(E3S49-develop, A4S49-outgrowth).
english(barrons.rule134, "All living things need nutrients to survive").
pretty(barrons.rule134, "EFFECT(need(Thing, Nutrient), survive(Thing)), Thing = 'All living things', Nutrient = 'nutrients'.").
barrons.rule134:: isa(E4S50-need, "need"), agent(E4S50-need, A3S50-thing), isa(A3S50-thing, "All living things"), object(E4S50-need, A5S50-nutrient), isa(A5S50-nutrient, "nutrients") -> effect(E4S50-need, E7S50-survive), isa(E7S50-survive, "survive"), agent(E7S50-survive, A3S50-thing).
english(barrons.rule135, "All living things need nutrients to survive").
pretty(barrons.rule135, "EFFECT(need(Thing, Nutrient), survive(Thing)), Thing = 'All living things', Nutrient = 'nutrients'.").
barrons.rule135:: isa(E7S50-survive, "survive"), agent(E7S50-survive, A3S50-thing), isa(A3S50-thing, "All living things") -> effect(E4S50-need, E7S50-survive), isa(E4S50-need, "need"), agent(E4S50-need, A3S50-thing), object(E4S50-need, A5S50-nutrient), isa(A5S50-nutrient, "nutrients").
english(barrons.rule136, "Animals take in food as a nutrient to give them[Animals] energy and help them[Animals] grow").
pretty(barrons.rule136, "EFFECT(take in_as(Animal, Food, Nutrient), grow(Animal)), Animal = 'Animals', Food = 'food', Nutrient = 'a nutrient', Animal = 'Animals'.").
barrons.rule136:: isa(E2S51-take, "take in"), agent(E2S51-take, A1S51-animal), isa(A1S51-animal, "Animals"), object(E2S51-take, A4S51-food), isa(A4S51-food, "food"), as(E2S51-take, A7S51-nutrient), isa(A7S51-nutrient, "a nutrient") -> effect(E2S51-take, E15S51-grow), isa(E15S51-grow, "grow"), agent(E15S51-grow, A1S7-animal), isa(A1S7-animal, "Animals").
english(barrons.rule137, "Animals take in food as a nutrient to give them[Animals] energy and help them[Animals] grow").
pretty(barrons.rule137, "EFFECT(take in_as(Animal, Food, Nutrient), grow(Animal)), Animal = 'Animals', Food = 'food', Nutrient = 'a nutrient', Animal = 'Animals'.").
barrons.rule137:: isa(E15S51-grow, "grow"), agent(E15S51-grow, A1S7-animal), isa(A1S7-animal, "Animals") -> effect(E2S51-take, E15S51-grow), isa(E2S51-take, "take in"), agent(E2S51-take, A1S51-animal), isa(A1S51-animal, "Animals"), object(E2S51-take, A4S51-food), isa(A4S51-food, "food"), as(E2S51-take, A7S51-nutrient), isa(A7S51-nutrient, "a nutrient").
english(barrons.rule138, "Animals take in food as a nutrient to give them[Animals] energy and help them[Animals] grow").
pretty(barrons.rule138, "EFFECT(take in_as(Animal, Food, Nutrient), give(Animal, Energy)), Animal = 'Animals', Food = 'food', Nutrient = 'a nutrient', Animal = 'Animals', Energy = 'energy'.").
barrons.rule138:: isa(E2S51-take, "take in"), agent(E2S51-take, A1S51-animal), isa(A1S51-animal, "Animals"), object(E2S51-take, A4S51-food), isa(A4S51-food, "food"), as(E2S51-take, A7S51-nutrient), isa(A7S51-nutrient, "a nutrient") -> effect(E2S51-take, E9S51-give), isa(E9S51-give, "give"), object(E9S51-give, A1S7-animal), isa(A1S7-animal, "Animals"), arg(E9S51-give, A11S51-energy), isa(A11S51-energy, "energy").
english(barrons.rule139, "Animals take in food as a nutrient to give them[Animals] energy and help them[Animals] grow").
pretty(barrons.rule139, "EFFECT(take in_as(Animal, Food, Nutrient), give(Animal, Energy)), Animal = 'Animals', Food = 'food', Nutrient = 'a nutrient', Animal = 'Animals', Energy = 'energy'.").
barrons.rule139:: isa(E9S51-give, "give"), object(E9S51-give, A1S7-animal), isa(A1S7-animal, "Animals"), arg(E9S51-give, A11S51-energy), isa(A11S51-energy, "energy") -> effect(E2S51-take, E9S51-give), isa(E2S51-take, "take in"), agent(E2S51-take, A1S51-animal), isa(A1S51-animal, "Animals"), object(E2S51-take, A4S51-food), isa(A4S51-food, "food"), as(E2S51-take, A7S51-nutrient), isa(A7S51-nutrient, "a nutrient").
english(barrons.rule140, "Animals take in food as a nutrient to give them[Animals] energy and help them[Animals] grow").
pretty(barrons.rule140, "EFFECT(give(Animal, Energy), grow(Animal)), Animal = 'Animals', Energy = 'energy'.").
barrons.rule140:: isa(E9S51-give, "give"), object(E9S51-give, A1S7-animal), isa(A1S7-animal, "Animals"), arg(E9S51-give, A11S51-energy), isa(A11S51-energy, "energy") -> effect(E9S51-give, E15S51-grow), isa(E15S51-grow, "grow"), agent(E15S51-grow, A1S7-animal).
english(barrons.rule141, "Animals take in food as a nutrient to give them[Animals] energy and help them[Animals] grow").
pretty(barrons.rule141, "EFFECT(give(Animal, Energy), grow(Animal)), Animal = 'Animals', Energy = 'energy'.").
barrons.rule141:: isa(E15S51-grow, "grow"), agent(E15S51-grow, A1S7-animal), isa(A1S7-animal, "Animals") -> effect(E9S51-give, E15S51-grow), isa(E9S51-give, "give"), object(E9S51-give, A1S7-animal), arg(E9S51-give, A11S51-energy), isa(A11S51-energy, "energy").
english(barrons.rule142, "Plants get their[Plants] nutrients from the soil which helps them[Plants] grow and perform photosynthesis").
pretty(barrons.rule142, "EFFECT(get_from(Plant, Nutrient, Soil), grow(Plant)), Plant = 'Plants', Nutrient = 'their[Plants] nutrients', Soil = 'the soil', Plant = 'Plants'.").
barrons.rule142:: isa(E2S52-get, "get"), agent(E2S52-get, A1S52-plant), isa(A1S52-plant, "Plants"), object(E2S52-get, A4S52-nutrient), isa(A4S52-nutrient, "their[Plants] nutrients"), from(E2S52-get, A7S52-soil), isa(A7S52-soil, "the soil") -> effect(E2S52-get, E12S52-grow), isa(E12S52-grow, "grow"), agent(E12S52-grow, A1S15-plant), isa(A1S15-plant, "Plants").
english(barrons.rule143, "Plants get their[Plants] nutrients from the soil which helps them[Plants] grow and perform photosynthesis").
pretty(barrons.rule143, "EFFECT(get_from(Plant, Nutrient, Soil), grow(Plant)), Plant = 'Plants', Nutrient = 'their[Plants] nutrients', Soil = 'the soil', Plant = 'Plants'.").
barrons.rule143:: isa(E12S52-grow, "grow"), agent(E12S52-grow, A1S15-plant), isa(A1S15-plant, "Plants") -> effect(E2S52-get, E12S52-grow), isa(E2S52-get, "get"), agent(E2S52-get, A1S52-plant), isa(A1S52-plant, "Plants"), object(E2S52-get, A4S52-nutrient), isa(A4S52-nutrient, "their[Plants] nutrients"), from(E2S52-get, A7S52-soil), isa(A7S52-soil, "the soil").
english(barrons.rule144, "Plants get their[Plants] nutrients from the soil which helps them[Plants] grow and perform photosynthesis").
pretty(barrons.rule144, "EFFECT(get_from(Plant, Nutrient, Soil), perform(Plant, Photosynthesis)), Plant = 'Plants', Nutrient = 'their[Plants] nutrients', Soil = 'the soil', Plant = 'Plants', Photosynthesis = 'photosynthesis'.").
barrons.rule144:: isa(E2S52-get, "get"), agent(E2S52-get, A1S52-plant), isa(A1S52-plant, "Plants"), object(E2S52-get, A4S52-nutrient), isa(A4S52-nutrient, "their[Plants] nutrients"), from(E2S52-get, A7S52-soil), isa(A7S52-soil, "the soil") -> effect(E2S52-get, E14S52-perform), isa(E14S52-perform, "perform"), agent(E14S52-perform, A1S15-plant), isa(A1S15-plant, "Plants"), object(E14S52-perform, A15S52-photosynthesis), isa(A15S52-photosynthesis, "photosynthesis").
english(barrons.rule145, "Plants get their[Plants] nutrients from the soil which helps them[Plants] grow and perform photosynthesis").
pretty(barrons.rule145, "EFFECT(get_from(Plant, Nutrient, Soil), perform(Plant, Photosynthesis)), Plant = 'Plants', Nutrient = 'their[Plants] nutrients', Soil = 'the soil', Plant = 'Plants', Photosynthesis = 'photosynthesis'.").
barrons.rule145:: isa(E14S52-perform, "perform"), agent(E14S52-perform, A1S15-plant), isa(A1S15-plant, "Plants"), object(E14S52-perform, A15S52-photosynthesis), isa(A15S52-photosynthesis, "photosynthesis") -> effect(E2S52-get, E14S52-perform), isa(E2S52-get, "get"), agent(E2S52-get, A1S52-plant), isa(A1S52-plant, "Plants"), object(E2S52-get, A4S52-nutrient), isa(A4S52-nutrient, "their[Plants] nutrients"), from(E2S52-get, A7S52-soil), isa(A7S52-soil, "the soil").
english(barrons.rule146, "Plants get their[Plants] nutrients from the soil which helps them[Plants] grow and perform photosynthesis").
pretty(barrons.rule146, "PURPOSE(Soil, grow(Plant)), Soil = 'the soil', Plant = 'Plants'.").
barrons.rule146:: isa(A7S52-soil, "the soil") -> purpose(A7S52-soil, E12S52-grow), isa(E12S52-grow, "grow"), agent(E12S52-grow, A1S15-plant), isa(A1S15-plant, "Plants").
english(barrons.rule147, "Plants get their[Plants] nutrients from the soil which helps them[Plants] grow and perform photosynthesis").
pretty(barrons.rule147, "PURPOSE(Soil, grow(Plant)), Soil = 'the soil', Plant = 'Plants'.").
barrons.rule147:: isa(E12S52-grow, "grow"), agent(E12S52-grow, A1S15-plant), isa(A1S15-plant, "Plants") -> purpose(A7S52-soil, E12S52-grow), isa(A7S52-soil, "the soil").
english(barrons.rule148, "Plants get their[Plants] nutrients from the soil which helps them[Plants] grow and perform photosynthesis").
pretty(barrons.rule148, "PURPOSE(Soil, perform(Plant, Photosynthesis)), Soil = 'the soil', Plant = 'Plants', Photosynthesis = 'photosynthesis'.").
barrons.rule148:: isa(A7S52-soil, "the soil") -> purpose(A7S52-soil, E14S52-perform), isa(E14S52-perform, "perform"), agent(E14S52-perform, A1S15-plant), isa(A1S15-plant, "Plants"), object(E14S52-perform, A15S52-photosynthesis), isa(A15S52-photosynthesis, "photosynthesis").
english(barrons.rule149, "Plants get their[Plants] nutrients from the soil which helps them[Plants] grow and perform photosynthesis").
pretty(barrons.rule149, "PURPOSE(Soil, perform(Plant, Photosynthesis)), Soil = 'the soil', Plant = 'Plants', Photosynthesis = 'photosynthesis'.").
barrons.rule149:: isa(E14S52-perform, "perform"), agent(E14S52-perform, A1S15-plant), isa(A1S15-plant, "Plants"), object(E14S52-perform, A15S52-photosynthesis), isa(A15S52-photosynthesis, "photosynthesis") -> purpose(A7S52-soil, E14S52-perform), isa(A7S52-soil, "the soil").
english(barrons.rule150, "Photosynthesis is the process by which plants make their[Plants] own food").
pretty(barrons.rule150, "PURPOSE(photosynthesize(Plant), make(Plant)), Plant = 'plants'.").
barrons.rule150:: isa(E1S53-photosynthesis, "photosynthesize"), agent(E1S53-photosynthesis, A7S53-plant), isa(A7S53-plant, "plants") -> purpose(E1S53-photosynthesis, E8S53-make), isa(E8S53-make, "make"), agent(E8S53-make, A7S53-plant).
english(barrons.rule151, "Photosynthesis is the process by which plants make their[Plants] own food").
pretty(barrons.rule151, "PURPOSE(photosynthesize(Plant), make(Plant)), Plant = 'plants'.").
barrons.rule151:: isa(E8S53-make, "make"), agent(E8S53-make, A7S53-plant), isa(A7S53-plant, "plants") -> purpose(E1S53-photosynthesis, E8S53-make), isa(E1S53-photosynthesis, "photosynthesize"), agent(E1S53-photosynthesis, A7S53-plant).
english(barrons.rule152, "Photosynthesis is the process by which plants make their[Plants] own food").
pretty(barrons.rule152, "EXAMPLE(Photosynthesis, make(Plant)), Photosynthesis = 'Photosynthesis', Plant = 'plants'.").
barrons.rule152:: isa(A1S53-photosynthesis, "Photosynthesis") -> example(A1S53-photosynthesis, E8S53-make), isa(E8S53-make, "make"), agent(E8S53-make, A7S53-plant), isa(A7S53-plant, "plants").
english(barrons.rule153, "Photosynthesis is the process by which plants make their[Plants] own food").
pretty(barrons.rule153, "EXAMPLE(Photosynthesis, make(Plant)), Photosynthesis = 'Photosynthesis', Plant = 'plants'.").
barrons.rule153:: isa(E8S53-make, "make"), agent(E8S53-make, A7S53-plant), isa(A7S53-plant, "plants") -> example(A1S53-photosynthesis, E8S53-make), isa(A1S53-photosynthesis, "Photosynthesis").
english(barrons.rule154, "Photosynthesis is the process by which plants make their[Plants] own food").
pretty(barrons.rule154, "EXAMPLE(Photosynthesis, Process), Photosynthesis = 'Photosynthesis', Process = 'the process'.").
barrons.rule154:: isa(A1S53-photosynthesis, "Photosynthesis") -> example(A1S53-photosynthesis, A4S53-process), isa(A4S53-process, "the process").
english(barrons.rule155, "Photosynthesis is the process by which plants make their[Plants] own food").
pretty(barrons.rule155, "EXAMPLE(Photosynthesis, Process), Photosynthesis = 'Photosynthesis', Process = 'the process'.").
barrons.rule155:: isa(A4S53-process, "the process") -> example(A1S53-photosynthesis, A4S53-process), isa(A1S53-photosynthesis, "Photosynthesis").
english(barrons.rule156, "All living things do some type of breathing").
pretty(barrons.rule156, "isa(Breathing, 'breathing') -> do(Thing, Type).").
barrons.rule156:: isa(A8S54-breathing, "breathing") -> of(A6S54-type, A8S54-breathing), isa(E4S54-do, "do"), agent(E4S54-do, A3S54-thing), isa(A3S54-thing, "All living things"), object(E4S54-do, A6S54-type), isa(A6S54-type, "some type").
english(barrons.rule157, "All living things do some type of breathing").
pretty(barrons.rule157, "isa(do, 'do') -> do(Thing, Type).").
barrons.rule157:: isa(E4S54-do, "do") -> of(A6S54-type, A8S54-breathing), isa(A8S54-breathing, "breathing"), agent(E4S54-do, A3S54-thing), isa(A3S54-thing, "All living things"), object(E4S54-do, A6S54-type), isa(A6S54-type, "some type").
english(barrons.rule158, "All living things do some type of breathing").
pretty(barrons.rule158, "isa(Thing, 'All living things') -> do(Thing, Type).").
barrons.rule158:: isa(A3S54-thing, "All living things") -> of(A6S54-type, A8S54-breathing), isa(A8S54-breathing, "breathing"), isa(E4S54-do, "do"), agent(E4S54-do, A3S54-thing), object(E4S54-do, A6S54-type), isa(A6S54-type, "some type").
english(barrons.rule159, "All living things do some type of breathing").
pretty(barrons.rule159, "isa(Type, 'some type of breathing') -> do(Thing, Type).").
barrons.rule159:: isa(A6S54-type, "some type") -> of(A6S54-type, A8S54-breathing), isa(A8S54-breathing, "breathing"), isa(E4S54-do, "do"), agent(E4S54-do, A3S54-thing), isa(A3S54-thing, "All living things"), object(E4S54-do, A6S54-type).
english(barrons.rule160, "Most animals take in oxygen through their[Most animals] mouths").
pretty(barrons.rule160, "isa(take in, 'take in') -> take in_through(Animal, Oxygen, Mouth).").
barrons.rule160:: isa(E3S55-take, "take in") -> agent(E3S55-take, A2S55-animal), isa(A2S55-animal, "Most animals"), object(E3S55-take, A5S55-oxygen), isa(A5S55-oxygen, "oxygen"), through(E3S55-take, A8S55-mouth), isa(A8S55-mouth, "their[Most animals] mouths").
english(barrons.rule161, "Most animals take in oxygen through their[Most animals] mouths").
pretty(barrons.rule161, "isa(Animal, 'Most animals') -> take in_through(Animal, Oxygen, Mouth).").
barrons.rule161:: isa(A2S55-animal, "Most animals") -> isa(E3S55-take, "take in"), agent(E3S55-take, A2S55-animal), object(E3S55-take, A5S55-oxygen), isa(A5S55-oxygen, "oxygen"), through(E3S55-take, A8S55-mouth), isa(A8S55-mouth, "their[Most animals] mouths").
english(barrons.rule162, "Most animals take in oxygen through their[Most animals] mouths").
pretty(barrons.rule162, "isa(Oxygen, 'oxygen') -> take in_through(Animal, Oxygen, Mouth).").
barrons.rule162:: isa(A5S55-oxygen, "oxygen") -> isa(E3S55-take, "take in"), agent(E3S55-take, A2S55-animal), isa(A2S55-animal, "Most animals"), object(E3S55-take, A5S55-oxygen), through(E3S55-take, A8S55-mouth), isa(A8S55-mouth, "their[Most animals] mouths").
english(barrons.rule163, "Most animals take in oxygen through their[Most animals] mouths").
pretty(barrons.rule163, "isa(Mouth, 'their[Most animals] mouths') -> take in_through(Animal, Oxygen, Mouth).").
barrons.rule163:: isa(A8S55-mouth, "their[Most animals] mouths") -> isa(E3S55-take, "take in"), agent(E3S55-take, A2S55-animal), isa(A2S55-animal, "Most animals"), object(E3S55-take, A5S55-oxygen), isa(A5S55-oxygen, "oxygen"), through(E3S55-take, A8S55-mouth).
english(barrons.rule164, "Both inhale take in oxygen which is used to create energy").
pretty(barrons.rule164, "EFFECT(inhale take in(Both, Oxygen), create(Both, Energy)), Both = 'Both', Oxygen = 'oxygen', Energy = 'energy'.").
barrons.rule164:: isa(E2S57-inhale, "inhale take in"), agent(E2S57-inhale, A1S57-both), isa(A1S57-both, "Both"), object(E2S57-inhale, A7S57-oxygen), isa(A7S57-oxygen, "oxygen") -> effect(E2S57-inhale, E13S57-create), isa(E13S57-create, "create"), agent(E13S57-create, A1S57-both), object(E13S57-create, A14S57-energy), isa(A14S57-energy, "energy").
english(barrons.rule165, "Both inhale take in oxygen which is used to create energy").
pretty(barrons.rule165, "EFFECT(inhale take in(Both, Oxygen), create(Both, Energy)), Both = 'Both', Oxygen = 'oxygen', Energy = 'energy'.").
barrons.rule165:: isa(E13S57-create, "create"), agent(E13S57-create, A1S57-both), isa(A1S57-both, "Both"), object(E13S57-create, A14S57-energy), isa(A14S57-energy, "energy") -> effect(E2S57-inhale, E13S57-create), isa(E2S57-inhale, "inhale take in"), agent(E2S57-inhale, A1S57-both), object(E2S57-inhale, A7S57-oxygen), isa(A7S57-oxygen, "oxygen").
english(barrons.rule166, "Animals exhale give off carbon dioxide which is used by plants").
pretty(barrons.rule166, "isa(exhale give off, 'exhale give off') -> exhale give off(Animal, Dioxide).").
barrons.rule166:: isa(E2S59-exhale, "exhale give off") -> agent(E2S59-exhale, A1S59-animal), isa(A1S59-animal, "Animals"), object(E2S59-exhale, A8S59-dioxide), isa(A8S59-dioxide, "carbon dioxide").
english(barrons.rule167, "Animals exhale give off carbon dioxide which is used by plants").
pretty(barrons.rule167, "isa(Animal, 'Animals') -> exhale give off(Animal, Dioxide).").
barrons.rule167:: isa(A1S59-animal, "Animals") -> isa(E2S59-exhale, "exhale give off"), agent(E2S59-exhale, A1S59-animal), object(E2S59-exhale, A8S59-dioxide), isa(A8S59-dioxide, "carbon dioxide").
english(barrons.rule168, "Animals exhale give off carbon dioxide which is used by plants").
pretty(barrons.rule168, "isa(Dioxide, 'carbon dioxide') -> exhale give off(Animal, Dioxide).").
barrons.rule168:: isa(A8S59-dioxide, "carbon dioxide") -> isa(E2S59-exhale, "exhale give off"), agent(E2S59-exhale, A1S59-animal), isa(A1S59-animal, "Animals"), object(E2S59-exhale, A8S59-dioxide).
english(barrons.rule169, "Plants take in carbon dioxide and give off oxygen").
pretty(barrons.rule169, "isa(take in, 'take in') -> take in(Plant, Dioxide).").
barrons.rule169:: isa(E2S60-take, "take in") -> agent(E2S60-take, A1S60-plant), isa(A1S60-plant, "Plants"), object(E2S60-take, A5S60-dioxide), isa(A5S60-dioxide, "carbon dioxide").
english(barrons.rule170, "Plants take in carbon dioxide and give off oxygen").
pretty(barrons.rule170, "isa(Plant, 'Plants') -> take in(Plant, Dioxide).").
barrons.rule170:: isa(A1S60-plant, "Plants") -> isa(E2S60-take, "take in"), agent(E2S60-take, A1S60-plant), object(E2S60-take, A5S60-dioxide), isa(A5S60-dioxide, "carbon dioxide").
english(barrons.rule171, "Plants take in carbon dioxide and give off oxygen").
pretty(barrons.rule171, "isa(Dioxide, 'carbon dioxide') -> take in(Plant, Dioxide).").
barrons.rule171:: isa(A5S60-dioxide, "carbon dioxide") -> isa(E2S60-take, "take in"), agent(E2S60-take, A1S60-plant), isa(A1S60-plant, "Plants"), object(E2S60-take, A5S60-dioxide).
english(barrons.rule172, "Some offspring are born looking like their[Plants] parents").
pretty(barrons.rule172, "EFFECT(bear(Offspring), look_like(Parent)), Offspring = 'Some offspring', Parent = 'their[Plants] parents'.").
barrons.rule172:: isa(E4S63-bear, "bear"), object(E4S63-bear, A2S63-offspring), isa(A2S63-offspring, "Some offspring") -> effect(E4S63-bear, E5S63-look), isa(E5S63-look, "look"), like(E5S63-look, A8S63-parent), isa(A8S63-parent, "their[Plants] parents").
english(barrons.rule173, "Some offspring are born looking like their[Plants] parents").
pretty(barrons.rule173, "EFFECT(bear(Offspring), look_like(Parent)), Offspring = 'Some offspring', Parent = 'their[Plants] parents'.").
barrons.rule173:: isa(E5S63-look, "look"), like(E5S63-look, A8S63-parent), isa(A8S63-parent, "their[Plants] parents") -> effect(E4S63-bear, E5S63-look), isa(E4S63-bear, "bear"), object(E4S63-bear, A2S63-offspring), isa(A2S63-offspring, "Some offspring").
english(barrons.rule174, "Animals take in food to get nutrients").
pretty(barrons.rule174, "EFFECT(take in(Animal, Food), get(Animal, Nutrient)), Animal = 'Animals', Food = 'food', Nutrient = 'nutrients'.").
barrons.rule174:: isa(E2S66-take, "take in"), agent(E2S66-take, A1S66-animal), isa(A1S66-animal, "Animals"), object(E2S66-take, A4S66-food), isa(A4S66-food, "food") -> effect(E2S66-take, E6S66-get), isa(E6S66-get, "get"), agent(E6S66-get, A1S66-animal), object(E6S66-get, A7S66-nutrient), isa(A7S66-nutrient, "nutrients").
english(barrons.rule175, "Animals take in food to get nutrients").
pretty(barrons.rule175, "EFFECT(take in(Animal, Food), get(Animal, Nutrient)), Animal = 'Animals', Food = 'food', Nutrient = 'nutrients'.").
barrons.rule175:: isa(E6S66-get, "get"), agent(E6S66-get, A1S66-animal), isa(A1S66-animal, "Animals"), object(E6S66-get, A7S66-nutrient), isa(A7S66-nutrient, "nutrients") -> effect(E2S66-take, E6S66-get), isa(E2S66-take, "take in"), agent(E2S66-take, A1S66-animal), object(E2S66-take, A4S66-food), isa(A4S66-food, "food").
english(barrons.rule176, "The waste leaves the body in the form of feces").
pretty(barrons.rule176, "isa(leave, 'leaves') -> leave_in(Waste, Body, Form).").
barrons.rule176:: isa(E3S69-leave, "leave") -> agent(E3S69-leave, A2S69-waste), isa(A2S69-waste, "The waste"), object(E3S69-leave, A5S69-body), isa(A5S69-body, "the body"), in(E3S69-leave, A8S69-form), isa(A8S69-form, "the form of feces").
english(barrons.rule177, "The waste leaves the body in the form of feces").
pretty(barrons.rule177, "isa(Waste, 'The waste') -> leave_in(Waste, Body, Form).").
barrons.rule177:: isa(A2S69-waste, "The waste") -> isa(E3S69-leave, "leave"), agent(E3S69-leave, A2S69-waste), object(E3S69-leave, A5S69-body), isa(A5S69-body, "the body"), in(E3S69-leave, A8S69-form), isa(A8S69-form, "the form of feces").
english(barrons.rule178, "The waste leaves the body in the form of feces").
pretty(barrons.rule178, "isa(Body, 'the body') -> leave_in(Waste, Body, Form).").
barrons.rule178:: isa(A5S69-body, "the body") -> isa(E3S69-leave, "leave"), agent(E3S69-leave, A2S69-waste), isa(A2S69-waste, "The waste"), object(E3S69-leave, A5S69-body), in(E3S69-leave, A8S69-form), isa(A8S69-form, "the form of feces").
english(barrons.rule179, "The waste leaves the body in the form of feces").
pretty(barrons.rule179, "isa(Form, 'the form of feces') -> leave_in(Waste, Body, Form).").
barrons.rule179:: isa(A8S69-form, "the form of feces") -> isa(E3S69-leave, "leave"), agent(E3S69-leave, A2S69-waste), isa(A2S69-waste, "The waste"), object(E3S69-leave, A5S69-body), isa(A5S69-body, "the body"), in(E3S69-leave, A8S69-form).
english(barrons.rule180, "Animals get rid of their[Animals] gaseous waste by exhaling carbon dioxide through their[Animals] mouth and nose").
pretty(barrons.rule180, "ENABLE(exhale_through(Animal, Dioxide, Mouth, through(Nose)), rid_of(Animal, Waste)), Animal = 'Animals', Dioxide = 'carbon dioxide', Mouth = 'their[Animals] mouth', Nose = 'nose', Waste = 'their[Animals] gaseous waste'.").
barrons.rule180:: isa(E9S71-exhale, "exhale"), agent(E9S71-exhale, A1S71-animal), isa(A1S71-animal, "Animals"), object(E9S71-exhale, A11S71-dioxide), isa(A11S71-dioxide, "carbon dioxide"), through(E9S71-exhale, A14S71-mouth), isa(A14S71-mouth, "their[Animals] mouth"), through(E9S71-exhale, A16S71-nose), isa(A16S71-nose, "nose") -> enable(E9S71-exhale, E3S71-rid), isa(E3S71-rid, "rid"), agent(E3S71-rid, A1S71-animal), of(E3S71-rid, A7S71-waste), isa(A7S71-waste, "their[Animals] gaseous waste").
english(barrons.rule181, "Animals get rid of their[Animals] gaseous waste by exhaling carbon dioxide through their[Animals] mouth and nose").
pretty(barrons.rule181, "ENABLE(exhale_through(Animal, Dioxide, Mouth, through(Nose)), rid_of(Animal, Waste)), Animal = 'Animals', Dioxide = 'carbon dioxide', Mouth = 'their[Animals] mouth', Nose = 'nose', Waste = 'their[Animals] gaseous waste'.").
barrons.rule181:: isa(E3S71-rid, "rid"), agent(E3S71-rid, A1S71-animal), isa(A1S71-animal, "Animals"), of(E3S71-rid, A7S71-waste), isa(A7S71-waste, "their[Animals] gaseous waste") -> enable(E9S71-exhale, E3S71-rid), isa(E9S71-exhale, "exhale"), agent(E9S71-exhale, A1S71-animal), object(E9S71-exhale, A11S71-dioxide), isa(A11S71-dioxide, "carbon dioxide"), through(E9S71-exhale, A14S71-mouth), isa(A14S71-mouth, "their[Animals] mouth"), through(E9S71-exhale, A16S71-nose), isa(A16S71-nose, "nose").
english(barrons.rule182, "Plants are living organisms").
pretty(barrons.rule182, "EXAMPLE(Plant, Organism), Plant = 'Plants', Organism = 'living organisms'.").
barrons.rule182:: isa(A1S74-plant, "Plants") -> example(A1S74-plant, A4S74-organism), isa(A4S74-organism, "living organisms").
english(barrons.rule183, "Plants are living organisms").
pretty(barrons.rule183, "EXAMPLE(Plant, Organism), Plant = 'Plants', Organism = 'living organisms'.").
barrons.rule183:: isa(A4S74-organism, "living organisms") -> example(A1S74-plant, A4S74-organism), isa(A1S74-plant, "Plants").
english(barrons.rule184, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule184, "EFFECT(require(Plant, Air), live(Plant)), Plant = 'Plants', Air = 'air in order'.").
barrons.rule184:: in(A3S75-air, A12S75-order), isa(A12S75-order, "order"), isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), isa(A1S75-plant, "Plants"), object(E2S75-require, A3S75-air), isa(A3S75-air, "air") -> effect(E2S75-require, E14S75-live), isa(E14S75-live, "live"), agent(E14S75-live, A1S75-plant).
english(barrons.rule185, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule185, "EFFECT(require(Plant, Air), live(Plant)), Plant = 'Plants', Air = 'air in order'.").
barrons.rule185:: isa(E14S75-live, "live"), agent(E14S75-live, A1S75-plant), isa(A1S75-plant, "Plants") -> effect(E2S75-require, E14S75-live), in(A3S75-air, A12S75-order), isa(A12S75-order, "order"), isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), object(E2S75-require, A3S75-air), isa(A3S75-air, "air").
english(barrons.rule186, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule186, "EFFECT(require(Plant, Water), live(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule186:: isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), isa(A1S75-plant, "Plants"), object(E2S75-require, A5S75-water), isa(A5S75-water, "water") -> effect(E2S75-require, E14S75-live), isa(E14S75-live, "live"), agent(E14S75-live, A1S75-plant).
english(barrons.rule187, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule187, "EFFECT(require(Plant, Water), live(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule187:: isa(E14S75-live, "live"), agent(E14S75-live, A1S75-plant), isa(A1S75-plant, "Plants") -> effect(E2S75-require, E14S75-live), isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), object(E2S75-require, A5S75-water), isa(A5S75-water, "water").
english(barrons.rule188, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule188, "EFFECT(require(Plant, Nutrient), live(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule188:: isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), isa(A1S75-plant, "Plants"), object(E2S75-require, A7S75-nutrient), isa(A7S75-nutrient, "nutrients") -> effect(E2S75-require, E14S75-live), isa(E14S75-live, "live"), agent(E14S75-live, A1S75-plant).
english(barrons.rule189, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule189, "EFFECT(require(Plant, Nutrient), live(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule189:: isa(E14S75-live, "live"), agent(E14S75-live, A1S75-plant), isa(A1S75-plant, "Plants") -> effect(E2S75-require, E14S75-live), isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), object(E2S75-require, A7S75-nutrient), isa(A7S75-nutrient, "nutrients").
english(barrons.rule190, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule190, "EFFECT(require(Plant, Light), live(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule190:: isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), isa(A1S75-plant, "Plants"), object(E2S75-require, A10S75-light), isa(A10S75-light, "light") -> effect(E2S75-require, E14S75-live), isa(E14S75-live, "live"), agent(E14S75-live, A1S75-plant).
english(barrons.rule191, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule191, "EFFECT(require(Plant, Light), live(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule191:: isa(E14S75-live, "live"), agent(E14S75-live, A1S75-plant), isa(A1S75-plant, "Plants") -> effect(E2S75-require, E14S75-live), isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), object(E2S75-require, A10S75-light), isa(A10S75-light, "light").
english(barrons.rule192, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule192, "EFFECT(require(Plant, Air), survive(Plant)), Plant = 'Plants', Air = 'air in order'.").
barrons.rule192:: in(A3S75-air, A12S75-order), isa(A12S75-order, "order"), isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), isa(A1S75-plant, "Plants"), object(E2S75-require, A3S75-air), isa(A3S75-air, "air") -> effect(E2S75-require, E16S75-survive), isa(E16S75-survive, "survive"), agent(E16S75-survive, A1S75-plant).
english(barrons.rule193, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule193, "EFFECT(require(Plant, Air), survive(Plant)), Plant = 'Plants', Air = 'air in order'.").
barrons.rule193:: isa(E16S75-survive, "survive"), agent(E16S75-survive, A1S75-plant), isa(A1S75-plant, "Plants") -> effect(E2S75-require, E16S75-survive), in(A3S75-air, A12S75-order), isa(A12S75-order, "order"), isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), object(E2S75-require, A3S75-air), isa(A3S75-air, "air").
english(barrons.rule194, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule194, "EFFECT(require(Plant, Water), survive(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule194:: isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), isa(A1S75-plant, "Plants"), object(E2S75-require, A5S75-water), isa(A5S75-water, "water") -> effect(E2S75-require, E16S75-survive), isa(E16S75-survive, "survive"), agent(E16S75-survive, A1S75-plant).
english(barrons.rule195, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule195, "EFFECT(require(Plant, Water), survive(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule195:: isa(E16S75-survive, "survive"), agent(E16S75-survive, A1S75-plant), isa(A1S75-plant, "Plants") -> effect(E2S75-require, E16S75-survive), isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), object(E2S75-require, A5S75-water), isa(A5S75-water, "water").
english(barrons.rule196, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule196, "EFFECT(require(Plant, Nutrient), survive(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule196:: isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), isa(A1S75-plant, "Plants"), object(E2S75-require, A7S75-nutrient), isa(A7S75-nutrient, "nutrients") -> effect(E2S75-require, E16S75-survive), isa(E16S75-survive, "survive"), agent(E16S75-survive, A1S75-plant).
english(barrons.rule197, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule197, "EFFECT(require(Plant, Nutrient), survive(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule197:: isa(E16S75-survive, "survive"), agent(E16S75-survive, A1S75-plant), isa(A1S75-plant, "Plants") -> effect(E2S75-require, E16S75-survive), isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), object(E2S75-require, A7S75-nutrient), isa(A7S75-nutrient, "nutrients").
english(barrons.rule198, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule198, "EFFECT(require(Plant, Light), survive(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule198:: isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), isa(A1S75-plant, "Plants"), object(E2S75-require, A10S75-light), isa(A10S75-light, "light") -> effect(E2S75-require, E16S75-survive), isa(E16S75-survive, "survive"), agent(E16S75-survive, A1S75-plant).
english(barrons.rule199, "Plants require air water nutrients and light in order to live and survive").
pretty(barrons.rule199, "EFFECT(require(Plant, Light), survive(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule199:: isa(E16S75-survive, "survive"), agent(E16S75-survive, A1S75-plant), isa(A1S75-plant, "Plants") -> effect(E2S75-require, E16S75-survive), isa(E2S75-require, "require"), agent(E2S75-require, A1S75-plant), object(E2S75-require, A10S75-light), isa(A10S75-light, "light").
english(barrons.rule200, "Plants contain little green particles called chloroplasts which are made up of chlorophyll").
pretty(barrons.rule200, "isa(contain, 'contain') -> contain(Plant, Particle).").
barrons.rule200:: isa(E2S76-contain, "contain") -> agent(E2S76-contain, A1S76-plant), isa(A1S76-plant, "Plants"), object(E2S76-contain, A5S76-particle), isa(A5S76-particle, "little green particles").
english(barrons.rule201, "Plants contain little green particles called chloroplasts which are made up of chlorophyll").
pretty(barrons.rule201, "isa(Plant, 'Plants') -> contain(Plant, Particle).").
barrons.rule201:: isa(A1S76-plant, "Plants") -> isa(E2S76-contain, "contain"), agent(E2S76-contain, A1S76-plant), object(E2S76-contain, A5S76-particle), isa(A5S76-particle, "little green particles").
english(barrons.rule202, "Plants contain little green particles called chloroplasts which are made up of chlorophyll").
pretty(barrons.rule202, "isa(Particle, 'little green particles') -> contain(Plant, Particle).").
barrons.rule202:: isa(A5S76-particle, "little green particles") -> isa(E2S76-contain, "contain"), agent(E2S76-contain, A1S76-plant), isa(A1S76-plant, "Plants"), object(E2S76-contain, A5S76-particle).
english(barrons.rule203, "Plants are the only living organism that can make its[Air and water] own food").
pretty(barrons.rule203, "EXAMPLE(Plant, make(Organism, Food)), Plant = 'Plants', Organism = 'the only living organism', Food = 'its[Air and water] own food'.").
barrons.rule203:: isa(A1S77-plant, "Plants") -> example(A1S77-plant, A6S77-organism), isa(E9S77-make, "make"), agent(E9S77-make, A6S77-organism), isa(A6S77-organism, "the only living organism"), object(E9S77-make, A12S77-food), isa(A12S77-food, "its[Air and water] own food"), isa(A1S77-plant, A6S77-organism).
english(barrons.rule204, "Plants are the only living organism that can make its[Air and water] own food").
pretty(barrons.rule204, "EXAMPLE(Plant, make(Organism, Food)), Plant = 'Plants', Organism = 'the only living organism', Food = 'its[Air and water] own food'.").
barrons.rule204:: isa(E9S77-make, "make"), agent(E9S77-make, A6S77-organism), isa(A6S77-organism, "the only living organism"), object(E9S77-make, A12S77-food), isa(A12S77-food, "its[Air and water] own food") -> example(A1S77-plant, A6S77-organism), isa(A1S77-plant, "Plants"), isa(A1S77-plant, A6S77-organism).
english(barrons.rule205, "Plants are the only living organism that can make its[Air and water] own food").
pretty(barrons.rule205, "EXAMPLE(Plant, Organism), Plant = 'Plants', Organism = 'the only living organism'.").
barrons.rule205:: isa(A1S77-plant, "Plants") -> example(A1S77-plant, A6S77-organism), isa(A6S77-organism, "the only living organism").
english(barrons.rule206, "Plants are the only living organism that can make its[Air and water] own food").
pretty(barrons.rule206, "EXAMPLE(Plant, Organism), Plant = 'Plants', Organism = 'the only living organism'.").
barrons.rule206:: isa(A6S77-organism, "the only living organism") -> example(A1S77-plant, A6S77-organism), isa(A1S77-plant, "Plants").
english(barrons.rule207, "Other living organisms depend on plants to survive").
pretty(barrons.rule207, "EFFECT(depend_on(Organism, Plant), survive(Organism)), Organism = 'Other living organisms', Plant = 'plants'.").
barrons.rule207:: isa(E4S79-depend, "depend"), agent(E4S79-depend, A3S79-organism), isa(A3S79-organism, "Other living organisms"), on(E4S79-depend, A6S79-plant), isa(A6S79-plant, "plants") -> effect(E4S79-depend, E8S79-survive), isa(E8S79-survive, "survive"), agent(E8S79-survive, A3S79-organism).
english(barrons.rule208, "Other living organisms depend on plants to survive").
pretty(barrons.rule208, "EFFECT(depend_on(Organism, Plant), survive(Organism)), Organism = 'Other living organisms', Plant = 'plants'.").
barrons.rule208:: isa(E8S79-survive, "survive"), agent(E8S79-survive, A3S79-organism), isa(A3S79-organism, "Other living organisms") -> effect(E4S79-depend, E8S79-survive), isa(E4S79-depend, "depend"), agent(E4S79-depend, A3S79-organism), on(E4S79-depend, A6S79-plant), isa(A6S79-plant, "plants").
english(barrons.rule209, "Plants provide animals with food and gases oxygen that their[Plants are living organisms] bodies need to grow breathe and make energy").
pretty(barrons.rule209, "isa(Food, 'food') -> provide(Plant, Animal).").
barrons.rule209:: isa(A5S80-food, "food") -> with(A3S80-animal, A5S80-food), with(A3S80-animal, A7S80-gas), isa(A7S80-gas, "gases"), isa(E2S80-provide, "provide"), agent(E2S80-provide, A1S80-plant), isa(A1S80-plant, "Plants"), object(E2S80-provide, A3S80-animal), isa(A3S80-animal, "animals").
english(barrons.rule210, "Plants provide animals with food and gases oxygen that their[Plants are living organisms] bodies need to grow breathe and make energy").
pretty(barrons.rule210, "isa(Gas, 'gases') -> provide(Plant, Animal).").
barrons.rule210:: isa(A7S80-gas, "gases") -> with(A3S80-animal, A5S80-food), isa(A5S80-food, "food"), with(A3S80-animal, A7S80-gas), isa(E2S80-provide, "provide"), agent(E2S80-provide, A1S80-plant), isa(A1S80-plant, "Plants"), object(E2S80-provide, A3S80-animal), isa(A3S80-animal, "animals").
english(barrons.rule211, "Plants provide animals with food and gases oxygen that their[Plants are living organisms] bodies need to grow breathe and make energy").
pretty(barrons.rule211, "isa(provide, 'provide') -> provide(Plant, Animal).").
barrons.rule211:: isa(E2S80-provide, "provide") -> with(A3S80-animal, A5S80-food), isa(A5S80-food, "food"), with(A3S80-animal, A7S80-gas), isa(A7S80-gas, "gases"), agent(E2S80-provide, A1S80-plant), isa(A1S80-plant, "Plants"), object(E2S80-provide, A3S80-animal), isa(A3S80-animal, "animals").
english(barrons.rule212, "Plants provide animals with food and gases oxygen that their[Plants are living organisms] bodies need to grow breathe and make energy").
pretty(barrons.rule212, "isa(Plant, 'Plants') -> provide(Plant, Animal).").
barrons.rule212:: isa(A1S80-plant, "Plants") -> with(A3S80-animal, A5S80-food), isa(A5S80-food, "food"), with(A3S80-animal, A7S80-gas), isa(A7S80-gas, "gases"), isa(E2S80-provide, "provide"), agent(E2S80-provide, A1S80-plant), object(E2S80-provide, A3S80-animal), isa(A3S80-animal, "animals").
english(barrons.rule213, "Plants provide animals with food and gases oxygen that their[Plants are living organisms] bodies need to grow breathe and make energy").
pretty(barrons.rule213, "isa(Animal, 'animals with food and gases oxygen that their[Plants are living organisms] bodies need to grow breathe and make energy') -> provide(Plant, Animal).").
barrons.rule213:: isa(A3S80-animal, "animals") -> with(A3S80-animal, A5S80-food), isa(A5S80-food, "food"), with(A3S80-animal, A7S80-gas), isa(A7S80-gas, "gases"), isa(E2S80-provide, "provide"), agent(E2S80-provide, A1S80-plant), isa(A1S80-plant, "Plants"), object(E2S80-provide, A3S80-animal).
english(barrons.rule214, "Photosynthesis is a process by which plants make their[Plants are living organisms] own food and give off oxygen and water that they[Plants are living organisms] are not using").
pretty(barrons.rule214, "PURPOSE(photosynthesize(Plant), make(Plant, Food)), Plant = 'plants', Food = 'their[Plants are living organisms] own food'.").
barrons.rule214:: isa(E1S81-photosynthesis, "photosynthesize"), agent(E1S81-photosynthesis, A7S81-plant), isa(A7S81-plant, "plants") -> purpose(E1S81-photosynthesis, E8S81-make), isa(E8S81-make, "make"), agent(E8S81-make, A7S81-plant), object(E8S81-make, A11S81-food), isa(A11S81-food, "their[Plants are living organisms] own food").
english(barrons.rule215, "Photosynthesis is a process by which plants make their[Plants are living organisms] own food and give off oxygen and water that they[Plants are living organisms] are not using").
pretty(barrons.rule215, "PURPOSE(photosynthesize(Plant), make(Plant, Food)), Plant = 'plants', Food = 'their[Plants are living organisms] own food'.").
barrons.rule215:: isa(E8S81-make, "make"), agent(E8S81-make, A7S81-plant), isa(A7S81-plant, "plants"), object(E8S81-make, A11S81-food), isa(A11S81-food, "their[Plants are living organisms] own food") -> purpose(E1S81-photosynthesis, E8S81-make), isa(E1S81-photosynthesis, "photosynthesize"), agent(E1S81-photosynthesis, A7S81-plant).
english(barrons.rule216, "Photosynthesis is a process by which plants make their[Plants are living organisms] own food and give off oxygen and water that they[Plants are living organisms] are not using").
pretty(barrons.rule216, "EXAMPLE(Photosynthesis, make(Plant, Food)), Photosynthesis = 'Photosynthesis', Plant = 'plants', Food = 'their[Plants are living organisms] own food'.").
barrons.rule216:: isa(A1S81-photosynthesis, "Photosynthesis") -> example(A1S81-photosynthesis, E8S81-make), isa(E8S81-make, "make"), agent(E8S81-make, A7S81-plant), isa(A7S81-plant, "plants"), object(E8S81-make, A11S81-food), isa(A11S81-food, "their[Plants are living organisms] own food").
english(barrons.rule217, "Photosynthesis is a process by which plants make their[Plants are living organisms] own food and give off oxygen and water that they[Plants are living organisms] are not using").
pretty(barrons.rule217, "EXAMPLE(Photosynthesis, make(Plant, Food)), Photosynthesis = 'Photosynthesis', Plant = 'plants', Food = 'their[Plants are living organisms] own food'.").
barrons.rule217:: isa(E8S81-make, "make"), agent(E8S81-make, A7S81-plant), isa(A7S81-plant, "plants"), object(E8S81-make, A11S81-food), isa(A11S81-food, "their[Plants are living organisms] own food") -> example(A1S81-photosynthesis, E8S81-make), isa(A1S81-photosynthesis, "Photosynthesis").
english(barrons.rule218, "Photosynthesis is a process by which plants make their[Plants are living organisms] own food and give off oxygen and water that they[Plants are living organisms] are not using").
pretty(barrons.rule218, "EXAMPLE(Photosynthesis, give off(Plant, Oxygen)), Photosynthesis = 'Photosynthesis', Plant = 'plants', Oxygen = 'oxygen'.").
barrons.rule218:: isa(A1S81-photosynthesis, "Photosynthesis") -> example(A1S81-photosynthesis, E13S81-give), isa(E13S81-give, "give off"), agent(E13S81-give, A7S81-plant), isa(A7S81-plant, "plants"), object(E13S81-give, A15S81-oxygen), isa(A15S81-oxygen, "oxygen").
english(barrons.rule219, "Photosynthesis is a process by which plants make their[Plants are living organisms] own food and give off oxygen and water that they[Plants are living organisms] are not using").
pretty(barrons.rule219, "EXAMPLE(Photosynthesis, give off(Plant, Oxygen)), Photosynthesis = 'Photosynthesis', Plant = 'plants', Oxygen = 'oxygen'.").
barrons.rule219:: isa(E13S81-give, "give off"), agent(E13S81-give, A7S81-plant), isa(A7S81-plant, "plants"), object(E13S81-give, A15S81-oxygen), isa(A15S81-oxygen, "oxygen") -> example(A1S81-photosynthesis, E13S81-give), isa(A1S81-photosynthesis, "Photosynthesis").
english(barrons.rule220, "Photosynthesis is a process by which plants make their[Plants are living organisms] own food and give off oxygen and water that they[Plants are living organisms] are not using").
pretty(barrons.rule220, "EXAMPLE(Photosynthesis, give off(Plant, Water)), Photosynthesis = 'Photosynthesis', Plant = 'plants', Water = 'water'.").
barrons.rule220:: isa(A1S81-photosynthesis, "Photosynthesis") -> example(A1S81-photosynthesis, E13S81-give), isa(E13S81-give, "give off"), agent(E13S81-give, A7S81-plant), isa(A7S81-plant, "plants"), object(E13S81-give, A17S81-water), isa(A17S81-water, "water").
english(barrons.rule221, "Photosynthesis is a process by which plants make their[Plants are living organisms] own food and give off oxygen and water that they[Plants are living organisms] are not using").
pretty(barrons.rule221, "EXAMPLE(Photosynthesis, give off(Plant, Water)), Photosynthesis = 'Photosynthesis', Plant = 'plants', Water = 'water'.").
barrons.rule221:: isa(E13S81-give, "give off"), agent(E13S81-give, A7S81-plant), isa(A7S81-plant, "plants"), object(E13S81-give, A17S81-water), isa(A17S81-water, "water") -> example(A1S81-photosynthesis, E13S81-give), isa(A1S81-photosynthesis, "Photosynthesis").
english(barrons.rule222, "Photosynthesis is a process by which plants make their[Plants are living organisms] own food and give off oxygen and water that they[Plants are living organisms] are not using").
pretty(barrons.rule222, "EXAMPLE(Photosynthesis, Process), Photosynthesis = 'Photosynthesis', Process = 'a process'.").
barrons.rule222:: isa(A1S81-photosynthesis, "Photosynthesis") -> example(A1S81-photosynthesis, A4S81-process), isa(A4S81-process, "a process").
english(barrons.rule223, "Photosynthesis is a process by which plants make their[Plants are living organisms] own food and give off oxygen and water that they[Plants are living organisms] are not using").
pretty(barrons.rule223, "EXAMPLE(Photosynthesis, Process), Photosynthesis = 'Photosynthesis', Process = 'a process'.").
barrons.rule223:: isa(A4S81-process, "a process") -> example(A1S81-photosynthesis, A4S81-process), isa(A1S81-photosynthesis, "Photosynthesis").
english(barrons.rule224, "The food made by the plant is a form of sugar called glucose").
pretty(barrons.rule224, "EXAMPLE(Food, call(Form)), Food = 'The food', Form = 'a form of sugar'.").
barrons.rule224:: isa(A2S82-food, "The food") -> example(A2S82-food, E12S82-call), of(A9S82-form, A11S82-sugar), isa(A11S82-sugar, "sugar"), isa(E12S82-call, "call"), agent(E12S82-call, A9S82-form), isa(A9S82-form, "a form").
english(barrons.rule225, "The food made by the plant is a form of sugar called glucose").
pretty(barrons.rule225, "EXAMPLE(Food, call(Form)), Food = 'The food', Form = 'a form of sugar'.").
barrons.rule225:: of(A9S82-form, A11S82-sugar), isa(A11S82-sugar, "sugar"), isa(E12S82-call, "call"), agent(E12S82-call, A9S82-form), isa(A9S82-form, "a form") -> example(A2S82-food, E12S82-call), isa(A2S82-food, "The food").
english(barrons.rule226, "The food made by the plant is a form of sugar called glucose").
pretty(barrons.rule226, "EXAMPLE(Food, Form), Food = 'The food', Form = 'a form of sugar'.").
barrons.rule226:: isa(A2S82-food, "The food") -> example(A2S82-food, A9S82-form), of(A9S82-form, A11S82-sugar), isa(A11S82-sugar, "sugar"), isa(A9S82-form, "a form").
english(barrons.rule227, "The food made by the plant is a form of sugar called glucose").
pretty(barrons.rule227, "EXAMPLE(Food, Form), Food = 'The food', Form = 'a form of sugar'.").
barrons.rule227:: of(A9S82-form, A11S82-sugar), isa(A11S82-sugar, "sugar"), isa(A9S82-form, "a form") -> example(A2S82-food, A9S82-form), isa(A2S82-food, "The food").
english(barrons.rule228, "Oxygen is a gas that is needed by many animals in order to survive").
pretty(barrons.rule228, "EXAMPLE(Oxygen, need(Animal, Oxygen)), Oxygen = 'Oxygen', Animal = 'many animals'.").
barrons.rule228:: isa(A1S83-oxygen, "Oxygen") -> example(A1S83-oxygen, E7S83-need), isa(E7S83-need, "need"), agent(E7S83-need, A10S83-animal), isa(A10S83-animal, "many animals"), object(E7S83-need, A1S83-oxygen).
english(barrons.rule229, "Oxygen is a gas that is needed by many animals in order to survive").
pretty(barrons.rule229, "EXAMPLE(Oxygen, need(Animal, Oxygen)), Oxygen = 'Oxygen', Animal = 'many animals'.").
barrons.rule229:: isa(E7S83-need, "need"), agent(E7S83-need, A10S83-animal), isa(A10S83-animal, "many animals"), object(E7S83-need, A1S83-oxygen), isa(A1S83-oxygen, "Oxygen") -> example(A1S83-oxygen, E7S83-need).
english(barrons.rule230, "Oxygen is a gas that is needed by many animals in order to survive").
pretty(barrons.rule230, "EXAMPLE(Oxygen, need(Animal, Gas)), Oxygen = 'Oxygen', Animal = 'many animals', Gas = 'a gas'.").
barrons.rule230:: isa(A1S83-oxygen, "Oxygen") -> example(A1S83-oxygen, E7S83-need), isa(E7S83-need, "need"), agent(E7S83-need, A10S83-animal), isa(A10S83-animal, "many animals"), object(E7S83-need, A4S83-gas), isa(A4S83-gas, "a gas").
english(barrons.rule231, "Oxygen is a gas that is needed by many animals in order to survive").
pretty(barrons.rule231, "EXAMPLE(Oxygen, need(Animal, Gas)), Oxygen = 'Oxygen', Animal = 'many animals', Gas = 'a gas'.").
barrons.rule231:: isa(E7S83-need, "need"), agent(E7S83-need, A10S83-animal), isa(A10S83-animal, "many animals"), object(E7S83-need, A4S83-gas), isa(A4S83-gas, "a gas") -> example(A1S83-oxygen, E7S83-need), isa(A1S83-oxygen, "Oxygen").
english(barrons.rule232, "Oxygen is a gas that is needed by many animals in order to survive").
pretty(barrons.rule232, "EXAMPLE(Oxygen, Gas), Oxygen = 'Oxygen', Gas = 'a gas'.").
barrons.rule232:: isa(A1S83-oxygen, "Oxygen") -> example(A1S83-oxygen, A4S83-gas), isa(A4S83-gas, "a gas").
english(barrons.rule233, "Oxygen is a gas that is needed by many animals in order to survive").
pretty(barrons.rule233, "EXAMPLE(Oxygen, Gas), Oxygen = 'Oxygen', Gas = 'a gas'.").
barrons.rule233:: isa(A4S83-gas, "a gas") -> example(A1S83-oxygen, A4S83-gas), isa(A1S83-oxygen, "Oxygen").
english(barrons.rule234, "Oxygen is a gas that is needed by many animals in order to survive").
pretty(barrons.rule234, "EFFECT(need(Animal, Oxygen), survive(Animal)), Animal = 'many animals', Oxygen = 'Oxygen'.").
barrons.rule234:: isa(E7S83-need, "need"), agent(E7S83-need, A10S83-animal), isa(A10S83-animal, "many animals"), object(E7S83-need, A1S83-oxygen), isa(A1S83-oxygen, "Oxygen") -> effect(E7S83-need, E14S83-survive), isa(E14S83-survive, "survive"), agent(E14S83-survive, A10S83-animal).
english(barrons.rule235, "Oxygen is a gas that is needed by many animals in order to survive").
pretty(barrons.rule235, "EFFECT(need(Animal, Oxygen), survive(Animal)), Animal = 'many animals', Oxygen = 'Oxygen'.").
barrons.rule235:: isa(E14S83-survive, "survive"), agent(E14S83-survive, A10S83-animal), isa(A10S83-animal, "many animals") -> effect(E7S83-need, E14S83-survive), isa(E7S83-need, "need"), agent(E7S83-need, A10S83-animal), object(E7S83-need, A1S83-oxygen), isa(A1S83-oxygen, "Oxygen").
english(barrons.rule236, "Oxygen is a gas that is needed by many animals in order to survive").
pretty(barrons.rule236, "EFFECT(need(Animal, Gas), survive(Animal)), Animal = 'many animals', Gas = 'a gas'.").
barrons.rule236:: isa(E7S83-need, "need"), agent(E7S83-need, A10S83-animal), isa(A10S83-animal, "many animals"), object(E7S83-need, A4S83-gas), isa(A4S83-gas, "a gas") -> effect(E7S83-need, E14S83-survive), isa(E14S83-survive, "survive"), agent(E14S83-survive, A10S83-animal).
english(barrons.rule237, "Oxygen is a gas that is needed by many animals in order to survive").
pretty(barrons.rule237, "EFFECT(need(Animal, Gas), survive(Animal)), Animal = 'many animals', Gas = 'a gas'.").
barrons.rule237:: isa(E14S83-survive, "survive"), agent(E14S83-survive, A10S83-animal), isa(A10S83-animal, "many animals") -> effect(E7S83-need, E14S83-survive), isa(E7S83-need, "need"), agent(E7S83-need, A10S83-animal), object(E7S83-need, A4S83-gas), isa(A4S83-gas, "a gas").
english(barrons.rule238, "Humans inhale breathe in oxygen and exhale breathe out carbon dioxide").
pretty(barrons.rule238, "isa(inhale breathe in, 'inhale breathe in') -> inhale breathe in(Human, Oxygen).").
barrons.rule238:: isa(E2S84-inhale, "inhale breathe in") -> agent(E2S84-inhale, A1S84-human), isa(A1S84-human, "Humans"), object(E2S84-inhale, A7S84-oxygen), isa(A7S84-oxygen, "oxygen").
english(barrons.rule239, "Humans inhale breathe in oxygen and exhale breathe out carbon dioxide").
pretty(barrons.rule239, "isa(Human, 'Humans') -> inhale breathe in(Human, Oxygen).").
barrons.rule239:: isa(A1S84-human, "Humans") -> isa(E2S84-inhale, "inhale breathe in"), agent(E2S84-inhale, A1S84-human), object(E2S84-inhale, A7S84-oxygen), isa(A7S84-oxygen, "oxygen").
english(barrons.rule240, "Humans inhale breathe in oxygen and exhale breathe out carbon dioxide").
pretty(barrons.rule240, "isa(Oxygen, 'oxygen') -> inhale breathe in(Human, Oxygen).").
barrons.rule240:: isa(A7S84-oxygen, "oxygen") -> isa(E2S84-inhale, "inhale breathe in"), agent(E2S84-inhale, A1S84-human), isa(A1S84-human, "Humans"), object(E2S84-inhale, A7S84-oxygen).
english(barrons.rule241, "Humans inhale breathe in oxygen and exhale breathe out carbon dioxide").
pretty(barrons.rule241, "isa(inhale breathe in, 'inhale breathe in') -> inhale breathe in(Human, Exhale).").
barrons.rule241:: isa(E2S84-inhale, "inhale breathe in") -> agent(E2S84-inhale, A1S84-human), isa(A1S84-human, "Humans"), object(E2S84-inhale, A9S84-exhale), isa(A9S84-exhale, "exhale breathe out carbon dioxide").
english(barrons.rule242, "Humans inhale breathe in oxygen and exhale breathe out carbon dioxide").
pretty(barrons.rule242, "isa(Human, 'Humans') -> inhale breathe in(Human, Exhale).").
barrons.rule242:: isa(A1S84-human, "Humans") -> isa(E2S84-inhale, "inhale breathe in"), agent(E2S84-inhale, A1S84-human), object(E2S84-inhale, A9S84-exhale), isa(A9S84-exhale, "exhale breathe out carbon dioxide").
english(barrons.rule243, "Humans inhale breathe in oxygen and exhale breathe out carbon dioxide").
pretty(barrons.rule243, "isa(Exhale, 'exhale breathe out carbon dioxide') -> inhale breathe in(Human, Exhale).").
barrons.rule243:: isa(A9S84-exhale, "exhale breathe out carbon dioxide") -> isa(E2S84-inhale, "inhale breathe in"), agent(E2S84-inhale, A1S84-human), isa(A1S84-human, "Humans"), object(E2S84-inhale, A9S84-exhale).
english(barrons.rule244, "They[The leaves of the plants] give off oxygen which animals need to survive").
pretty(barrons.rule244, "EFFECT(give off(Leaf, Oxygen), survive(Animal)), Leaf = 'The leaves of the plants', Oxygen = 'oxygen', Animal = 'animals'.").
barrons.rule244:: of(A2S85-leaf, A5S85-plant), isa(A5S85-plant, "the plants"), isa(E2S86-give, "give off"), agent(E2S86-give, A2S85-leaf), isa(A2S85-leaf, "The leaves"), object(E2S86-give, A4S86-oxygen), isa(A4S86-oxygen, "oxygen") -> effect(E2S86-give, E10S86-survive), isa(E10S86-survive, "survive"), agent(E10S86-survive, A7S86-animal), isa(A7S86-animal, "animals").
english(barrons.rule245, "They[The leaves of the plants] give off oxygen which animals need to survive").
pretty(barrons.rule245, "EFFECT(give off(Leaf, Oxygen), survive(Animal)), Leaf = 'The leaves of the plants', Oxygen = 'oxygen', Animal = 'animals'.").
barrons.rule245:: isa(E10S86-survive, "survive"), agent(E10S86-survive, A7S86-animal), isa(A7S86-animal, "animals") -> effect(E2S86-give, E10S86-survive), of(A2S85-leaf, A5S85-plant), isa(A5S85-plant, "the plants"), isa(E2S86-give, "give off"), agent(E2S86-give, A2S85-leaf), isa(A2S85-leaf, "The leaves"), object(E2S86-give, A4S86-oxygen), isa(A4S86-oxygen, "oxygen").
english(barrons.rule246, "Nutrients are taken in through the roots from the soil and help the plant survive").
pretty(barrons.rule246, "EFFECT(take_through(Plant, Nutrient, Root, from(Soil)), survive(Plant)), Plant = 'the plant', Nutrient = 'Nutrients', Root = 'the roots', Soil = 'the soil'.").
barrons.rule246:: isa(E3S88-take, "take"), agent(E3S88-take, A14S88-plant), isa(A14S88-plant, "the plant"), object(E3S88-take, A1S88-nutrient), isa(A1S88-nutrient, "Nutrients"), through(E3S88-take, A7S88-root), isa(A7S88-root, "the roots"), from(E3S88-take, A10S88-soil), isa(A10S88-soil, "the soil") -> effect(E3S88-take, E15S88-survive), isa(E15S88-survive, "survive"), agent(E15S88-survive, A14S88-plant).
english(barrons.rule247, "Nutrients are taken in through the roots from the soil and help the plant survive").
pretty(barrons.rule247, "EFFECT(take_through(Plant, Nutrient, Root, from(Soil)), survive(Plant)), Plant = 'the plant', Nutrient = 'Nutrients', Root = 'the roots', Soil = 'the soil'.").
barrons.rule247:: isa(E15S88-survive, "survive"), agent(E15S88-survive, A14S88-plant), isa(A14S88-plant, "the plant") -> effect(E3S88-take, E15S88-survive), isa(E3S88-take, "take"), agent(E3S88-take, A14S88-plant), object(E3S88-take, A1S88-nutrient), isa(A1S88-nutrient, "Nutrients"), through(E3S88-take, A7S88-root), isa(A7S88-root, "the roots"), from(E3S88-take, A10S88-soil), isa(A10S88-soil, "the soil").
english(barrons.rule248, "Nutrients are taken in through the roots from the soil and help the plant survive").
pretty(barrons.rule248, "PURPOSE(Nutrient, survive(Plant)), Nutrient = 'Nutrients', Plant = 'the plant'.").
barrons.rule248:: isa(A1S88-nutrient, "Nutrients") -> purpose(A1S88-nutrient, E15S88-survive), isa(E15S88-survive, "survive"), agent(E15S88-survive, A14S88-plant), isa(A14S88-plant, "the plant").
english(barrons.rule249, "Nutrients are taken in through the roots from the soil and help the plant survive").
pretty(barrons.rule249, "PURPOSE(Nutrient, survive(Plant)), Nutrient = 'Nutrients', Plant = 'the plant'.").
barrons.rule249:: isa(E15S88-survive, "survive"), agent(E15S88-survive, A14S88-plant), isa(A14S88-plant, "the plant") -> purpose(A1S88-nutrient, E15S88-survive), isa(A1S88-nutrient, "Nutrients").
english(barrons.rule250, "Light provides the energy for the entire process of photosynthesis").
pretty(barrons.rule250, "isa(Photosynthesis, 'photosynthesis') -> provide(Light, Energy).").
barrons.rule250:: isa(A10S91-photosynthesis, "photosynthesis") -> of(A8S91-process, A10S91-photosynthesis), for(A4S91-energy, A8S91-process), isa(A8S91-process, "the entire process"), isa(E2S91-provide, "provide"), agent(E2S91-provide, A1S91-light), isa(A1S91-light, "Light"), object(E2S91-provide, A4S91-energy), isa(A4S91-energy, "the energy").
english(barrons.rule251, "Light provides the energy for the entire process of photosynthesis").
pretty(barrons.rule251, "isa(Process, 'the entire process of photosynthesis') -> provide(Light, Energy).").
barrons.rule251:: isa(A8S91-process, "the entire process") -> of(A8S91-process, A10S91-photosynthesis), isa(A10S91-photosynthesis, "photosynthesis"), for(A4S91-energy, A8S91-process), isa(E2S91-provide, "provide"), agent(E2S91-provide, A1S91-light), isa(A1S91-light, "Light"), object(E2S91-provide, A4S91-energy), isa(A4S91-energy, "the energy").
english(barrons.rule252, "Light provides the energy for the entire process of photosynthesis").
pretty(barrons.rule252, "isa(provide, 'provides') -> provide(Light, Energy).").
barrons.rule252:: isa(E2S91-provide, "provide") -> of(A8S91-process, A10S91-photosynthesis), isa(A10S91-photosynthesis, "photosynthesis"), for(A4S91-energy, A8S91-process), isa(A8S91-process, "the entire process"), agent(E2S91-provide, A1S91-light), isa(A1S91-light, "Light"), object(E2S91-provide, A4S91-energy), isa(A4S91-energy, "the energy").
english(barrons.rule253, "Light provides the energy for the entire process of photosynthesis").
pretty(barrons.rule253, "isa(Light, 'Light') -> provide(Light, Energy).").
barrons.rule253:: isa(A1S91-light, "Light") -> of(A8S91-process, A10S91-photosynthesis), isa(A10S91-photosynthesis, "photosynthesis"), for(A4S91-energy, A8S91-process), isa(A8S91-process, "the entire process"), isa(E2S91-provide, "provide"), agent(E2S91-provide, A1S91-light), object(E2S91-provide, A4S91-energy), isa(A4S91-energy, "the energy").
english(barrons.rule254, "Light provides the energy for the entire process of photosynthesis").
pretty(barrons.rule254, "isa(Energy, 'the energy for the entire process of photosynthesis') -> provide(Light, Energy).").
barrons.rule254:: isa(A4S91-energy, "the energy") -> of(A8S91-process, A10S91-photosynthesis), isa(A10S91-photosynthesis, "photosynthesis"), for(A4S91-energy, A8S91-process), isa(A8S91-process, "the entire process"), isa(E2S91-provide, "provide"), agent(E2S91-provide, A1S91-light), isa(A1S91-light, "Light"), object(E2S91-provide, A4S91-energy).
english(barrons.rule255, "Each part of a plant has a specific job function").
pretty(barrons.rule255, "isa(Plant, 'a plant') -> have(Part, Job).").
barrons.rule255:: isa(A5S93-plant, "a plant") -> of(A2S93-part, A5S93-plant), isa(E6S93-have, "have"), agent(E6S93-have, A2S93-part), isa(A2S93-part, "Each part"), object(E6S93-have, A9S93-job), isa(A9S93-job, "a specific job").
english(barrons.rule256, "Each part of a plant has a specific job function").
pretty(barrons.rule256, "isa(have, 'has') -> have(Part, Job).").
barrons.rule256:: isa(E6S93-have, "have") -> of(A2S93-part, A5S93-plant), isa(A5S93-plant, "a plant"), agent(E6S93-have, A2S93-part), isa(A2S93-part, "Each part"), object(E6S93-have, A9S93-job), isa(A9S93-job, "a specific job").
english(barrons.rule257, "Each part of a plant has a specific job function").
pretty(barrons.rule257, "isa(Part, 'Each part of a plant') -> have(Part, Job).").
barrons.rule257:: isa(A2S93-part, "Each part") -> of(A2S93-part, A5S93-plant), isa(A5S93-plant, "a plant"), isa(E6S93-have, "have"), agent(E6S93-have, A2S93-part), object(E6S93-have, A9S93-job), isa(A9S93-job, "a specific job").
english(barrons.rule258, "Each part of a plant has a specific job function").
pretty(barrons.rule258, "isa(Job, 'a specific job') -> have(Part, Job).").
barrons.rule258:: isa(A9S93-job, "a specific job") -> of(A2S93-part, A5S93-plant), isa(A5S93-plant, "a plant"), isa(E6S93-have, "have"), agent(E6S93-have, A2S93-part), isa(A2S93-part, "Each part"), object(E6S93-have, A9S93-job).
english(barrons.rule259, "Roots anchor the plant in the soil").
pretty(barrons.rule259, "isa(anchor, 'anchor') -> anchor_in(Root, Plant, Soil).").
barrons.rule259:: isa(E2S95-anchor, "anchor") -> agent(E2S95-anchor, A1S95-root), isa(A1S95-root, "Roots"), object(E2S95-anchor, A4S95-plant), isa(A4S95-plant, "the plant"), in(E2S95-anchor, A7S95-soil), isa(A7S95-soil, "the soil").
english(barrons.rule260, "Roots anchor the plant in the soil").
pretty(barrons.rule260, "isa(Root, 'Roots') -> anchor_in(Root, Plant, Soil).").
barrons.rule260:: isa(A1S95-root, "Roots") -> isa(E2S95-anchor, "anchor"), agent(E2S95-anchor, A1S95-root), object(E2S95-anchor, A4S95-plant), isa(A4S95-plant, "the plant"), in(E2S95-anchor, A7S95-soil), isa(A7S95-soil, "the soil").
english(barrons.rule261, "Roots anchor the plant in the soil").
pretty(barrons.rule261, "isa(Plant, 'the plant') -> anchor_in(Root, Plant, Soil).").
barrons.rule261:: isa(A4S95-plant, "the plant") -> isa(E2S95-anchor, "anchor"), agent(E2S95-anchor, A1S95-root), isa(A1S95-root, "Roots"), object(E2S95-anchor, A4S95-plant), in(E2S95-anchor, A7S95-soil), isa(A7S95-soil, "the soil").
english(barrons.rule262, "Roots anchor the plant in the soil").
pretty(barrons.rule262, "isa(Soil, 'the soil') -> anchor_in(Root, Plant, Soil).").
barrons.rule262:: isa(A7S95-soil, "the soil") -> isa(E2S95-anchor, "anchor"), agent(E2S95-anchor, A1S95-root), isa(A1S95-root, "Roots"), object(E2S95-anchor, A4S95-plant), isa(A4S95-plant, "the plant"), in(E2S95-anchor, A7S95-soil).
english(barrons.rule263, "Roots absorb water and nutrients from the soil into the plant").
pretty(barrons.rule263, "isa(absorb, 'absorb') -> absorb_from(Root, Water, Soil).").
barrons.rule263:: isa(E2S96-absorb, "absorb") -> agent(E2S96-absorb, A1S96-root), isa(A1S96-root, "Roots"), object(E2S96-absorb, A3S96-water), isa(A3S96-water, "water"), from(E2S96-absorb, A8S96-soil), isa(A8S96-soil, "the soil into the plant").
english(barrons.rule264, "Roots absorb water and nutrients from the soil into the plant").
pretty(barrons.rule264, "isa(Root, 'Roots') -> absorb_from(Root, Water, Soil).").
barrons.rule264:: isa(A1S96-root, "Roots") -> isa(E2S96-absorb, "absorb"), agent(E2S96-absorb, A1S96-root), object(E2S96-absorb, A3S96-water), isa(A3S96-water, "water"), from(E2S96-absorb, A8S96-soil), isa(A8S96-soil, "the soil into the plant").
english(barrons.rule265, "Roots absorb water and nutrients from the soil into the plant").
pretty(barrons.rule265, "isa(Water, 'water') -> absorb_from(Root, Water, Soil).").
barrons.rule265:: isa(A3S96-water, "water") -> isa(E2S96-absorb, "absorb"), agent(E2S96-absorb, A1S96-root), isa(A1S96-root, "Roots"), object(E2S96-absorb, A3S96-water), from(E2S96-absorb, A8S96-soil), isa(A8S96-soil, "the soil into the plant").
english(barrons.rule266, "Roots absorb water and nutrients from the soil into the plant").
pretty(barrons.rule266, "isa(Soil, 'the soil into the plant') -> absorb_from(Root, Water, Soil).").
barrons.rule266:: isa(A8S96-soil, "the soil into the plant") -> isa(E2S96-absorb, "absorb"), agent(E2S96-absorb, A1S96-root), isa(A1S96-root, "Roots"), object(E2S96-absorb, A3S96-water), isa(A3S96-water, "water"), from(E2S96-absorb, A8S96-soil).
english(barrons.rule267, "Roots absorb water and nutrients from the soil into the plant").
pretty(barrons.rule267, "isa(absorb, 'absorb') -> absorb_from(Root, Nutrient, Soil).").
barrons.rule267:: isa(E2S96-absorb, "absorb") -> agent(E2S96-absorb, A1S96-root), isa(A1S96-root, "Roots"), object(E2S96-absorb, A5S96-nutrient), isa(A5S96-nutrient, "nutrients"), from(E2S96-absorb, A8S96-soil), isa(A8S96-soil, "the soil into the plant").
english(barrons.rule268, "Roots absorb water and nutrients from the soil into the plant").
pretty(barrons.rule268, "isa(Root, 'Roots') -> absorb_from(Root, Nutrient, Soil).").
barrons.rule268:: isa(A1S96-root, "Roots") -> isa(E2S96-absorb, "absorb"), agent(E2S96-absorb, A1S96-root), object(E2S96-absorb, A5S96-nutrient), isa(A5S96-nutrient, "nutrients"), from(E2S96-absorb, A8S96-soil), isa(A8S96-soil, "the soil into the plant").
english(barrons.rule269, "Roots absorb water and nutrients from the soil into the plant").
pretty(barrons.rule269, "isa(Nutrient, 'nutrients') -> absorb_from(Root, Nutrient, Soil).").
barrons.rule269:: isa(A5S96-nutrient, "nutrients") -> isa(E2S96-absorb, "absorb"), agent(E2S96-absorb, A1S96-root), isa(A1S96-root, "Roots"), object(E2S96-absorb, A5S96-nutrient), from(E2S96-absorb, A8S96-soil), isa(A8S96-soil, "the soil into the plant").
english(barrons.rule270, "Roots absorb water and nutrients from the soil into the plant").
pretty(barrons.rule270, "isa(Soil, 'the soil into the plant') -> absorb_from(Root, Nutrient, Soil).").
barrons.rule270:: isa(A8S96-soil, "the soil into the plant") -> isa(E2S96-absorb, "absorb"), agent(E2S96-absorb, A1S96-root), isa(A1S96-root, "Roots"), object(E2S96-absorb, A5S96-nutrient), isa(A5S96-nutrient, "nutrients"), from(E2S96-absorb, A8S96-soil).
english(barrons.rule271, "The stem is the pathway of water and nutrients from roots to leaves and flower").
pretty(barrons.rule271, "EXAMPLE(Stem, Pathway), Stem = 'The stem', Pathway = 'the pathway of water and nutrients from roots to leaves and flower'.").
barrons.rule271:: isa(A2S98-stem, "The stem") -> example(A2S98-stem, A5S98-pathway), from(A7S98-water, A11S98-root), isa(A11S98-root, "roots"), to(A7S98-water, A13S98-leaf), isa(A13S98-leaf, "leaves"), to(A7S98-water, A15S98-flower), isa(A15S98-flower, "flower"), of(A5S98-pathway, A7S98-water), isa(A7S98-water, "water"), of(A5S98-pathway, A9S98-nutrient), isa(A9S98-nutrient, "nutrients"), isa(A5S98-pathway, "the pathway").
english(barrons.rule272, "The stem is the pathway of water and nutrients from roots to leaves and flower").
pretty(barrons.rule272, "EXAMPLE(Stem, Pathway), Stem = 'The stem', Pathway = 'the pathway of water and nutrients from roots to leaves and flower'.").
barrons.rule272:: from(A7S98-water, A11S98-root), isa(A11S98-root, "roots"), to(A7S98-water, A13S98-leaf), isa(A13S98-leaf, "leaves"), to(A7S98-water, A15S98-flower), isa(A15S98-flower, "flower"), of(A5S98-pathway, A7S98-water), isa(A7S98-water, "water"), of(A5S98-pathway, A9S98-nutrient), isa(A9S98-nutrient, "nutrients"), isa(A5S98-pathway, "the pathway") -> example(A2S98-stem, A5S98-pathway), isa(A2S98-stem, "The stem").
english(barrons.rule273, "The stem supports and holds up the plant").
pretty(barrons.rule273, "isa(support, 'supports') -> support(Stem, Plant).").
barrons.rule273:: isa(E3S99-support, "support") -> agent(E3S99-support, A2S99-stem), isa(A2S99-stem, "The stem"), object(E3S99-support, A8S99-plant), isa(A8S99-plant, "the plant").
english(barrons.rule274, "The stem supports and holds up the plant").
pretty(barrons.rule274, "isa(Stem, 'The stem') -> support(Stem, Plant).").
barrons.rule274:: isa(A2S99-stem, "The stem") -> isa(E3S99-support, "support"), agent(E3S99-support, A2S99-stem), object(E3S99-support, A8S99-plant), isa(A8S99-plant, "the plant").
english(barrons.rule275, "The stem supports and holds up the plant").
pretty(barrons.rule275, "isa(Plant, 'the plant') -> support(Stem, Plant).").
barrons.rule275:: isa(A8S99-plant, "the plant") -> isa(E3S99-support, "support"), agent(E3S99-support, A2S99-stem), isa(A2S99-stem, "The stem"), object(E3S99-support, A8S99-plant).
english(barrons.rule276, "The stem is the pathway for transporting carrying water and nutrients").
pretty(barrons.rule276, "PURPOSE(be(Stem, Pathway), Water), Stem = 'The stem', Pathway = 'the pathway for transporting carrying water and nutrients', Water = 'transporting carrying water'.").
barrons.rule276:: isa(E3S100-be, "be"), agent(E3S100-be, A2S100-stem), isa(A2S100-stem, "The stem"), object(E3S100-be, A5S100-pathway), isa(A5S100-pathway, "the pathway") -> purpose(E3S100-be, A11S100-water), isa(A11S100-water, "transporting carrying water").
english(barrons.rule277, "The stem is the pathway for transporting carrying water and nutrients").
pretty(barrons.rule277, "PURPOSE(be(Stem, Pathway), Water), Stem = 'The stem', Pathway = 'the pathway for transporting carrying water and nutrients', Water = 'transporting carrying water'.").
barrons.rule277:: isa(A11S100-water, "transporting carrying water") -> purpose(E3S100-be, A11S100-water), isa(E3S100-be, "be"), agent(E3S100-be, A2S100-stem), isa(A2S100-stem, "The stem"), object(E3S100-be, A5S100-pathway), isa(A5S100-pathway, "the pathway").
english(barrons.rule278, "The stem is the pathway for transporting carrying water and nutrients").
pretty(barrons.rule278, "PURPOSE(be(Stem, Pathway), Nutrient), Stem = 'The stem', Pathway = 'the pathway for transporting carrying water and nutrients', Nutrient = 'nutrients'.").
barrons.rule278:: isa(E3S100-be, "be"), agent(E3S100-be, A2S100-stem), isa(A2S100-stem, "The stem"), object(E3S100-be, A5S100-pathway), isa(A5S100-pathway, "the pathway") -> purpose(E3S100-be, A13S100-nutrient), isa(A13S100-nutrient, "nutrients").
english(barrons.rule279, "The stem is the pathway for transporting carrying water and nutrients").
pretty(barrons.rule279, "PURPOSE(be(Stem, Pathway), Nutrient), Stem = 'The stem', Pathway = 'the pathway for transporting carrying water and nutrients', Nutrient = 'nutrients'.").
barrons.rule279:: isa(A13S100-nutrient, "nutrients") -> purpose(E3S100-be, A13S100-nutrient), isa(E3S100-be, "be"), agent(E3S100-be, A2S100-stem), isa(A2S100-stem, "The stem"), object(E3S100-be, A5S100-pathway), isa(A5S100-pathway, "the pathway").
english(barrons.rule280, "The stem is the pathway for transporting carrying water and nutrients").
pretty(barrons.rule280, "EXAMPLE(Stem, Pathway), Stem = 'The stem', Pathway = 'the pathway for transporting carrying water and nutrients'.").
barrons.rule280:: isa(A2S100-stem, "The stem") -> example(A2S100-stem, A5S100-pathway), for(A5S100-pathway, A11S100-water), isa(A11S100-water, "transporting carrying water"), for(A5S100-pathway, A13S100-nutrient), isa(A13S100-nutrient, "nutrients"), isa(A5S100-pathway, "the pathway").
english(barrons.rule281, "The stem is the pathway for transporting carrying water and nutrients").
pretty(barrons.rule281, "EXAMPLE(Stem, Pathway), Stem = 'The stem', Pathway = 'the pathway for transporting carrying water and nutrients'.").
barrons.rule281:: for(A5S100-pathway, A11S100-water), isa(A11S100-water, "transporting carrying water"), for(A5S100-pathway, A13S100-nutrient), isa(A13S100-nutrient, "nutrients"), isa(A5S100-pathway, "the pathway") -> example(A2S100-stem, A5S100-pathway), isa(A2S100-stem, "The stem").
english(barrons.rule282, "The stem transports extra food glucose made in the leaves to the roots to be stored for later use").
pretty(barrons.rule282, "EFFECT(transport_to(Stem, Food, Root), store_for(Use)), Stem = 'The stem', Food = 'extra food', Root = 'the roots', Use = 'later use'.").
barrons.rule282:: isa(E3S101-transport, "transport"), agent(E3S101-transport, A2S101-stem), isa(A2S101-stem, "The stem"), object(E3S101-transport, A5S101-food), isa(A5S101-food, "extra food"), to(E3S101-transport, A15S101-root), isa(A15S101-root, "the roots") -> effect(E3S101-transport, E18S101-store), isa(E18S101-store, "store"), for(E18S101-store, A21S101-use), isa(A21S101-use, "later use").
english(barrons.rule283, "The stem transports extra food glucose made in the leaves to the roots to be stored for later use").
pretty(barrons.rule283, "EFFECT(transport_to(Stem, Food, Root), store_for(Use)), Stem = 'The stem', Food = 'extra food', Root = 'the roots', Use = 'later use'.").
barrons.rule283:: isa(E18S101-store, "store"), for(E18S101-store, A21S101-use), isa(A21S101-use, "later use") -> effect(E3S101-transport, E18S101-store), isa(E3S101-transport, "transport"), agent(E3S101-transport, A2S101-stem), isa(A2S101-stem, "The stem"), object(E3S101-transport, A5S101-food), isa(A5S101-food, "extra food"), to(E3S101-transport, A15S101-root), isa(A15S101-root, "the roots").
english(barrons.rule284, "The stem transports extra food glucose made in the leaves to the roots to be stored for later use").
pretty(barrons.rule284, "EFFECT(transport_to(Stem, Glucose, Root), store_for(Use)), Stem = 'The stem', Glucose = 'glucose', Root = 'the roots', Use = 'later use'.").
barrons.rule284:: isa(E3S101-transport, "transport"), agent(E3S101-transport, A2S101-stem), isa(A2S101-stem, "The stem"), object(E3S101-transport, A7S101-glucose), isa(A7S101-glucose, "glucose"), to(E3S101-transport, A15S101-root), isa(A15S101-root, "the roots") -> effect(E3S101-transport, E18S101-store), isa(E18S101-store, "store"), for(E18S101-store, A21S101-use), isa(A21S101-use, "later use").
english(barrons.rule285, "The stem transports extra food glucose made in the leaves to the roots to be stored for later use").
pretty(barrons.rule285, "EFFECT(transport_to(Stem, Glucose, Root), store_for(Use)), Stem = 'The stem', Glucose = 'glucose', Root = 'the roots', Use = 'later use'.").
barrons.rule285:: isa(E18S101-store, "store"), for(E18S101-store, A21S101-use), isa(A21S101-use, "later use") -> effect(E3S101-transport, E18S101-store), isa(E3S101-transport, "transport"), agent(E3S101-transport, A2S101-stem), isa(A2S101-stem, "The stem"), object(E3S101-transport, A7S101-glucose), isa(A7S101-glucose, "glucose"), to(E3S101-transport, A15S101-root), isa(A15S101-root, "the roots").
english(barrons.rule286, "Leaves are the food-making factory of the plant").
pretty(barrons.rule286, "EXAMPLE(Leaf, Factory), Leaf = 'Leaves', Factory = 'the food-making factory of the plant'.").
barrons.rule286:: isa(A1S103-leaf, "Leaves") -> example(A1S103-leaf, A5S103-factory), of(A5S103-factory, A8S103-plant), isa(A8S103-plant, "the plant"), isa(A5S103-factory, "the food-making factory").
english(barrons.rule287, "Leaves are the food-making factory of the plant").
pretty(barrons.rule287, "EXAMPLE(Leaf, Factory), Leaf = 'Leaves', Factory = 'the food-making factory of the plant'.").
barrons.rule287:: of(A5S103-factory, A8S103-plant), isa(A8S103-plant, "the plant"), isa(A5S103-factory, "the food-making factory") -> example(A1S103-leaf, A5S103-factory), isa(A1S103-leaf, "Leaves").
english(barrons.rule288, "The flower is responsible for reproduction").
pretty(barrons.rule288, "PURPOSE(Flower, reproduce), Flower = 'The flower'.").
barrons.rule288:: isa(A2S106-flower, "The flower") -> purpose(A2S106-flower, E6S106-reproduction), isa(E6S106-reproduction, "reproduce").
english(barrons.rule289, "The flower is responsible for reproduction").
pretty(barrons.rule289, "PURPOSE(Flower, reproduce), Flower = 'The flower'.").
barrons.rule289:: isa(E6S106-reproduction, "reproduce") -> purpose(A2S106-flower, E6S106-reproduction), isa(A2S106-flower, "The flower").
english(barrons.rule290, "With the help of animals insects and birds rain and wind flowers can be pollinated fertilized so that seeds can be formed that will grow into new plants").
pretty(barrons.rule290, "EFFECT(pollinate_with(Flower, Help), form(Seed, Grow)), Flower = 'flowers', Help = 'the help of animals insects and birds rain and wind', Seed = 'seeds', Grow = 'grow into new plants'.").
barrons.rule290:: isa(E20S107-pollinate, "pollinate"), object(E20S107-pollinate, A17S107-flower), isa(A17S107-flower, "flowers"), with(E20S107-pollinate, A3S107-help), isa(A3S107-help, "the help of animals insects and birds rain and wind") -> effect(E20S107-pollinate, E29S107-form), isa(E29S107-form, "form"), object(E29S107-form, A26S107-seed), isa(A26S107-seed, "seeds"), arg(E29S107-form, A32S107-grow), isa(A32S107-grow, "that will grow into new plants").
english(barrons.rule291, "With the help of animals insects and birds rain and wind flowers can be pollinated fertilized so that seeds can be formed that will grow into new plants").
pretty(barrons.rule291, "EFFECT(pollinate_with(Flower, Help), form(Seed, Grow)), Flower = 'flowers', Help = 'the help of animals insects and birds rain and wind', Seed = 'seeds', Grow = 'grow into new plants'.").
barrons.rule291:: isa(E29S107-form, "form"), object(E29S107-form, A26S107-seed), isa(A26S107-seed, "seeds"), arg(E29S107-form, A32S107-grow), isa(A32S107-grow, "that will grow into new plants") -> effect(E20S107-pollinate, E29S107-form), isa(E20S107-pollinate, "pollinate"), object(E20S107-pollinate, A17S107-flower), isa(A17S107-flower, "flowers"), with(E20S107-pollinate, A3S107-help), isa(A3S107-help, "the help of animals insects and birds rain and wind").
english(barrons.rule292, "The flower is the reproductive part of the plant").
pretty(barrons.rule292, "EXAMPLE(Flower, Part), Flower = 'The flower', Part = 'the reproductive part of the plant'.").
barrons.rule292:: isa(A2S108-flower, "The flower") -> example(A2S108-flower, A6S108-part), of(A6S108-part, A9S108-plant), isa(A9S108-plant, "the plant"), isa(A6S108-part, "the reproductive part").
english(barrons.rule293, "The flower is the reproductive part of the plant").
pretty(barrons.rule293, "EXAMPLE(Flower, Part), Flower = 'The flower', Part = 'the reproductive part of the plant'.").
barrons.rule293:: of(A6S108-part, A9S108-plant), isa(A9S108-plant, "the plant"), isa(A6S108-part, "the reproductive part") -> example(A2S108-flower, A6S108-part), isa(A2S108-flower, "The flower").
english(barrons.rule294, "Flowers are usually bright colors and have nice scents for a reason").
pretty(barrons.rule294, "EXAMPLE(Flower, Color), Flower = 'Flowers', Color = 'bright colors'.").
barrons.rule294:: isa(A1S109-flower, "Flowers") -> example(A1S109-flower, A5S109-color), isa(A5S109-color, "bright colors").
english(barrons.rule295, "Flowers are usually bright colors and have nice scents for a reason").
pretty(barrons.rule295, "EXAMPLE(Flower, Color), Flower = 'Flowers', Color = 'bright colors'.").
barrons.rule295:: isa(A5S109-color, "bright colors") -> example(A1S109-flower, A5S109-color), isa(A1S109-flower, "Flowers").
english(barrons.rule296, "These colors and smells attract birds and insects to visit them[Flowers are usually bright colors and have nice scents for a reason] and help with the reproduction process").
pretty(barrons.rule296, "EFFECT(attract(Color, Bird), visit(Color)), Color = 'These colors', Bird = 'birds', Color = 'bright colors'.").
barrons.rule296:: isa(E5S110-attract, "attract"), agent(E5S110-attract, A2S110-color), isa(A2S110-color, "These colors"), object(E5S110-attract, A6S110-bird), isa(A6S110-bird, "birds") -> effect(E5S110-attract, E10S110-visit), isa(E10S110-visit, "visit"), object(E10S110-visit, A5S109-color), isa(A5S109-color, "bright colors").
english(barrons.rule297, "These colors and smells attract birds and insects to visit them[Flowers are usually bright colors and have nice scents for a reason] and help with the reproduction process").
pretty(barrons.rule297, "EFFECT(attract(Color, Bird), visit(Color)), Color = 'These colors', Bird = 'birds', Color = 'bright colors'.").
barrons.rule297:: isa(E10S110-visit, "visit"), object(E10S110-visit, A5S109-color), isa(A5S109-color, "bright colors") -> effect(E5S110-attract, E10S110-visit), isa(E5S110-attract, "attract"), agent(E5S110-attract, A2S110-color), isa(A2S110-color, "These colors"), object(E5S110-attract, A6S110-bird), isa(A6S110-bird, "birds").
english(barrons.rule298, "These colors and smells attract birds and insects to visit them[Flowers are usually bright colors and have nice scents for a reason] and help with the reproduction process").
pretty(barrons.rule298, "EFFECT(attract(Color, Bird), visit(Color, Have)), Color = 'These colors', Bird = 'birds', Have = 'have nice scents for a reason'.").
barrons.rule298:: isa(E5S110-attract, "attract"), agent(E5S110-attract, A2S110-color), isa(A2S110-color, "These colors"), object(E5S110-attract, A6S110-bird), isa(A6S110-bird, "birds") -> effect(E5S110-attract, E10S110-visit), for(A7S109-have, A12S109-reason), isa(A12S109-reason, "a reason"), isa(E10S110-visit, "visit"), agent(E10S110-visit, A2S110-color), object(E10S110-visit, A7S109-have), isa(A7S109-have, "have nice scents").
english(barrons.rule299, "These colors and smells attract birds and insects to visit them[Flowers are usually bright colors and have nice scents for a reason] and help with the reproduction process").
pretty(barrons.rule299, "EFFECT(attract(Color, Bird), visit(Color, Have)), Color = 'These colors', Bird = 'birds', Have = 'have nice scents for a reason'.").
barrons.rule299:: for(A7S109-have, A12S109-reason), isa(A12S109-reason, "a reason"), isa(E10S110-visit, "visit"), agent(E10S110-visit, A2S110-color), isa(A2S110-color, "These colors"), object(E10S110-visit, A7S109-have), isa(A7S109-have, "have nice scents") -> effect(E5S110-attract, E10S110-visit), isa(E5S110-attract, "attract"), agent(E5S110-attract, A2S110-color), object(E5S110-attract, A6S110-bird), isa(A6S110-bird, "birds").
english(barrons.rule300, "These colors and smells attract birds and insects to visit them[Flowers are usually bright colors and have nice scents for a reason] and help with the reproduction process").
pretty(barrons.rule300, "EFFECT(attract(Color, Insect), visit(Color)), Color = 'These colors', Insect = 'insects', Color = 'bright colors'.").
barrons.rule300:: isa(E5S110-attract, "attract"), agent(E5S110-attract, A2S110-color), isa(A2S110-color, "These colors"), object(E5S110-attract, A8S110-insect), isa(A8S110-insect, "insects") -> effect(E5S110-attract, E10S110-visit), isa(E10S110-visit, "visit"), object(E10S110-visit, A5S109-color), isa(A5S109-color, "bright colors").
english(barrons.rule301, "These colors and smells attract birds and insects to visit them[Flowers are usually bright colors and have nice scents for a reason] and help with the reproduction process").
pretty(barrons.rule301, "EFFECT(attract(Color, Insect), visit(Color)), Color = 'These colors', Insect = 'insects', Color = 'bright colors'.").
barrons.rule301:: isa(E10S110-visit, "visit"), object(E10S110-visit, A5S109-color), isa(A5S109-color, "bright colors") -> effect(E5S110-attract, E10S110-visit), isa(E5S110-attract, "attract"), agent(E5S110-attract, A2S110-color), isa(A2S110-color, "These colors"), object(E5S110-attract, A8S110-insect), isa(A8S110-insect, "insects").
english(barrons.rule302, "These colors and smells attract birds and insects to visit them[Flowers are usually bright colors and have nice scents for a reason] and help with the reproduction process").
pretty(barrons.rule302, "EFFECT(attract(Color, Insect), visit(Color, Have)), Color = 'These colors', Insect = 'insects', Have = 'have nice scents for a reason'.").
barrons.rule302:: isa(E5S110-attract, "attract"), agent(E5S110-attract, A2S110-color), isa(A2S110-color, "These colors"), object(E5S110-attract, A8S110-insect), isa(A8S110-insect, "insects") -> effect(E5S110-attract, E10S110-visit), for(A7S109-have, A12S109-reason), isa(A12S109-reason, "a reason"), isa(E10S110-visit, "visit"), agent(E10S110-visit, A2S110-color), object(E10S110-visit, A7S109-have), isa(A7S109-have, "have nice scents").
english(barrons.rule303, "These colors and smells attract birds and insects to visit them[Flowers are usually bright colors and have nice scents for a reason] and help with the reproduction process").
pretty(barrons.rule303, "EFFECT(attract(Color, Insect), visit(Color, Have)), Color = 'These colors', Insect = 'insects', Have = 'have nice scents for a reason'.").
barrons.rule303:: for(A7S109-have, A12S109-reason), isa(A12S109-reason, "a reason"), isa(E10S110-visit, "visit"), agent(E10S110-visit, A2S110-color), isa(A2S110-color, "These colors"), object(E10S110-visit, A7S109-have), isa(A7S109-have, "have nice scents") -> effect(E5S110-attract, E10S110-visit), isa(E5S110-attract, "attract"), agent(E5S110-attract, A2S110-color), object(E5S110-attract, A8S110-insect), isa(A8S110-insect, "insects").
english(barrons.rule304, "When plants reproduce the offspring has characteristics similar to the parents").
pretty(barrons.rule304, "WHEN(have(Offspring, Characteristic), reproduce(Plant)), Offspring = 'the offspring', Characteristic = 'characteristics similar to the parents', Plant = 'plants'.").
barrons.rule304:: isa(E7S114-have, "have"), agent(E7S114-have, A6S114-offspring), isa(A6S114-offspring, "the offspring"), object(E7S114-have, A8S114-characteristic), isa(A8S114-characteristic, "characteristics similar to the parents") -> when(E7S114-have, E3S114-reproduce), isa(E3S114-reproduce, "reproduce"), agent(E3S114-reproduce, A2S114-plant), isa(A2S114-plant, "plants").
english(barrons.rule305, "When plants reproduce the offspring has characteristics similar to the parents").
pretty(barrons.rule305, "WHEN(have(Offspring, Characteristic), reproduce(Plant)), Offspring = 'the offspring', Characteristic = 'characteristics similar to the parents', Plant = 'plants'.").
barrons.rule305:: isa(E3S114-reproduce, "reproduce"), agent(E3S114-reproduce, A2S114-plant), isa(A2S114-plant, "plants") -> when(E7S114-have, E3S114-reproduce), isa(E7S114-have, "have"), agent(E7S114-have, A6S114-offspring), isa(A6S114-offspring, "the offspring"), object(E7S114-have, A8S114-characteristic), isa(A8S114-characteristic, "characteristics similar to the parents").
english(barrons.rule306, "Seeds are formed when cells from the male and female parts of the plant combine").
pretty(barrons.rule306, "WHEN(form(Cell, Seed), combine(Cell)), Cell = 'cells from the male and female parts of the plant', Seed = 'Seeds'.").
barrons.rule306:: of(A11S115-part, A14S115-plant), isa(A14S115-plant, "the plant"), from(A5S115-cell, A11S115-part), isa(A11S115-part, "the male and female parts"), isa(E3S115-form, "form"), agent(E3S115-form, A5S115-cell), isa(A5S115-cell, "cells"), object(E3S115-form, A1S115-seed), isa(A1S115-seed, "Seeds") -> when(E3S115-form, E15S115-combine), isa(E15S115-combine, "combine"), agent(E15S115-combine, A5S115-cell).
english(barrons.rule307, "Seeds are formed when cells from the male and female parts of the plant combine").
pretty(barrons.rule307, "WHEN(form(Cell, Seed), combine(Cell)), Cell = 'cells from the male and female parts of the plant', Seed = 'Seeds'.").
barrons.rule307:: of(A11S115-part, A14S115-plant), isa(A14S115-plant, "the plant"), from(A5S115-cell, A11S115-part), isa(A11S115-part, "the male and female parts"), isa(E15S115-combine, "combine"), agent(E15S115-combine, A5S115-cell), isa(A5S115-cell, "cells") -> when(E3S115-form, E15S115-combine), isa(E3S115-form, "form"), agent(E3S115-form, A5S115-cell), object(E3S115-form, A1S115-seed), isa(A1S115-seed, "Seeds").
english(barrons.rule308, "If the seed surroundings swell up they[the seed surroundings] can form a fruit").
pretty(barrons.rule308, "isa(form, 'form') -> form(Surroundings, Fruit).").
barrons.rule308:: isa(E9S117-form, "form") -> agent(E9S117-form, A4S117-surroundings), isa(A4S117-surroundings, "the seed surroundings"), object(E9S117-form, A11S117-fruit), isa(A11S117-fruit, "a fruit").
english(barrons.rule309, "If the seed surroundings swell up they[the seed surroundings] can form a fruit").
pretty(barrons.rule309, "isa(Surroundings, 'the seed surroundings') -> form(Surroundings, Fruit).").
barrons.rule309:: isa(A4S117-surroundings, "the seed surroundings") -> isa(E9S117-form, "form"), agent(E9S117-form, A4S117-surroundings), object(E9S117-form, A11S117-fruit), isa(A11S117-fruit, "a fruit").
english(barrons.rule310, "If the seed surroundings swell up they[the seed surroundings] can form a fruit").
pretty(barrons.rule310, "isa(Fruit, 'a fruit') -> form(Surroundings, Fruit).").
barrons.rule310:: isa(A11S117-fruit, "a fruit") -> isa(E9S117-form, "form"), agent(E9S117-form, A4S117-surroundings), isa(A4S117-surroundings, "the seed surroundings"), object(E9S117-form, A11S117-fruit).
english(barrons.rule311, "If the seed surroundings swell up they[the seed surroundings] can form a fruit").
pretty(barrons.rule311, "EFFECT(swell up(Surroundings), form(Surroundings, Fruit)), Surroundings = 'the seed surroundings', Fruit = 'a fruit'.").
barrons.rule311:: isa(E5S117-swell, "swell up"), agent(E5S117-swell, A4S117-surroundings), isa(A4S117-surroundings, "the seed surroundings") -> effect(E5S117-swell, E9S117-form), isa(E9S117-form, "form"), agent(E9S117-form, A4S117-surroundings), object(E9S117-form, A11S117-fruit), isa(A11S117-fruit, "a fruit").
english(barrons.rule312, "If the seed surroundings swell up they[the seed surroundings] can form a fruit").
pretty(barrons.rule312, "EFFECT(swell up(Surroundings), form(Surroundings, Fruit)), Surroundings = 'the seed surroundings', Fruit = 'a fruit'.").
barrons.rule312:: isa(E9S117-form, "form"), agent(E9S117-form, A4S117-surroundings), isa(A4S117-surroundings, "the seed surroundings"), object(E9S117-form, A11S117-fruit), isa(A11S117-fruit, "a fruit") -> effect(E5S117-swell, E9S117-form), isa(E5S117-swell, "swell up"), agent(E5S117-swell, A4S117-surroundings).
english(barrons.rule313, "All fruits have seeds").
pretty(barrons.rule313, "isa(have, 'have') -> have(Fruit, Seed).").
barrons.rule313:: isa(E3S118-have, "have") -> agent(E3S118-have, A2S118-fruit), isa(A2S118-fruit, "All fruits"), object(E3S118-have, A4S118-seed), isa(A4S118-seed, "seeds").
english(barrons.rule314, "All fruits have seeds").
pretty(barrons.rule314, "isa(Fruit, 'All fruits') -> have(Fruit, Seed).").
barrons.rule314:: isa(A2S118-fruit, "All fruits") -> isa(E3S118-have, "have"), agent(E3S118-have, A2S118-fruit), object(E3S118-have, A4S118-seed), isa(A4S118-seed, "seeds").
english(barrons.rule315, "All fruits have seeds").
pretty(barrons.rule315, "isa(Seed, 'seeds') -> have(Fruit, Seed).").
barrons.rule315:: isa(A4S118-seed, "seeds") -> isa(E3S118-have, "have"), agent(E3S118-have, A2S118-fruit), isa(A2S118-fruit, "All fruits"), object(E3S118-have, A4S118-seed).
english(barrons.rule316, "Some have one big seed called the pit like a peach").
pretty(barrons.rule316, "isa(have, 'have') -> have_like(Some, Seed, Peach).").
barrons.rule316:: isa(E2S119-have, "have") -> agent(E2S119-have, A1S119-some), isa(A1S119-some, "Some"), object(E2S119-have, A5S119-seed), isa(A5S119-seed, "one big seed"), like(E2S119-have, A13S119-peach), isa(A13S119-peach, "a peach").
english(barrons.rule317, "Some have one big seed called the pit like a peach").
pretty(barrons.rule317, "isa(Some, 'Some') -> have_like(Some, Seed, Peach).").
barrons.rule317:: isa(A1S119-some, "Some") -> isa(E2S119-have, "have"), agent(E2S119-have, A1S119-some), object(E2S119-have, A5S119-seed), isa(A5S119-seed, "one big seed"), like(E2S119-have, A13S119-peach), isa(A13S119-peach, "a peach").
english(barrons.rule318, "Some have one big seed called the pit like a peach").
pretty(barrons.rule318, "isa(Seed, 'one big seed') -> have_like(Some, Seed, Peach).").
barrons.rule318:: isa(A5S119-seed, "one big seed") -> isa(E2S119-have, "have"), agent(E2S119-have, A1S119-some), isa(A1S119-some, "Some"), object(E2S119-have, A5S119-seed), like(E2S119-have, A13S119-peach), isa(A13S119-peach, "a peach").
english(barrons.rule319, "Some have one big seed called the pit like a peach").
pretty(barrons.rule319, "isa(Peach, 'a peach') -> have_like(Some, Seed, Peach).").
barrons.rule319:: isa(A13S119-peach, "a peach") -> isa(E2S119-have, "have"), agent(E2S119-have, A1S119-some), isa(A1S119-some, "Some"), object(E2S119-have, A5S119-seed), isa(A5S119-seed, "one big seed"), like(E2S119-have, A13S119-peach).
english(barrons.rule320, "Some fruits have a few seeds like an apple").
pretty(barrons.rule320, "isa(Apple, 'an apple') -> have(Fruit, Seed).").
barrons.rule320:: isa(A10S120-apple, "an apple") -> like(A6S120-seed, A10S120-apple), isa(E3S120-have, "have"), agent(E3S120-have, A2S120-fruit), isa(A2S120-fruit, "Some fruits"), object(E3S120-have, A6S120-seed), isa(A6S120-seed, "a few seeds").
english(barrons.rule321, "Some fruits have a few seeds like an apple").
pretty(barrons.rule321, "isa(have, 'have') -> have(Fruit, Seed).").
barrons.rule321:: isa(E3S120-have, "have") -> like(A6S120-seed, A10S120-apple), isa(A10S120-apple, "an apple"), agent(E3S120-have, A2S120-fruit), isa(A2S120-fruit, "Some fruits"), object(E3S120-have, A6S120-seed), isa(A6S120-seed, "a few seeds").
english(barrons.rule322, "Some fruits have a few seeds like an apple").
pretty(barrons.rule322, "isa(Fruit, 'Some fruits') -> have(Fruit, Seed).").
barrons.rule322:: isa(A2S120-fruit, "Some fruits") -> like(A6S120-seed, A10S120-apple), isa(A10S120-apple, "an apple"), isa(E3S120-have, "have"), agent(E3S120-have, A2S120-fruit), object(E3S120-have, A6S120-seed), isa(A6S120-seed, "a few seeds").
english(barrons.rule323, "Some fruits have a few seeds like an apple").
pretty(barrons.rule323, "isa(Seed, 'a few seeds like an apple') -> have(Fruit, Seed).").
barrons.rule323:: isa(A6S120-seed, "a few seeds") -> like(A6S120-seed, A10S120-apple), isa(A10S120-apple, "an apple"), isa(E3S120-have, "have"), agent(E3S120-have, A2S120-fruit), isa(A2S120-fruit, "Some fruits"), object(E3S120-have, A6S120-seed).
english(barrons.rule324, "Some fruits have many little seeds like a kiwi").
pretty(barrons.rule324, "isa(Kiwi, 'a kiwi') -> have(Fruit, Seed).").
barrons.rule324:: isa(A10S121-kiwi, "a kiwi") -> like(A6S121-seed, A10S121-kiwi), isa(E3S121-have, "have"), agent(E3S121-have, A2S121-fruit), isa(A2S121-fruit, "Some fruits"), object(E3S121-have, A6S121-seed), isa(A6S121-seed, "many little seeds").
english(barrons.rule325, "Some fruits have many little seeds like a kiwi").
pretty(barrons.rule325, "isa(have, 'have') -> have(Fruit, Seed).").
barrons.rule325:: isa(E3S121-have, "have") -> like(A6S121-seed, A10S121-kiwi), isa(A10S121-kiwi, "a kiwi"), agent(E3S121-have, A2S121-fruit), isa(A2S121-fruit, "Some fruits"), object(E3S121-have, A6S121-seed), isa(A6S121-seed, "many little seeds").
english(barrons.rule326, "Some fruits have many little seeds like a kiwi").
pretty(barrons.rule326, "isa(Fruit, 'Some fruits') -> have(Fruit, Seed).").
barrons.rule326:: isa(A2S121-fruit, "Some fruits") -> like(A6S121-seed, A10S121-kiwi), isa(A10S121-kiwi, "a kiwi"), isa(E3S121-have, "have"), agent(E3S121-have, A2S121-fruit), object(E3S121-have, A6S121-seed), isa(A6S121-seed, "many little seeds").
english(barrons.rule327, "Some fruits have many little seeds like a kiwi").
pretty(barrons.rule327, "isa(Seed, 'many little seeds like a kiwi') -> have(Fruit, Seed).").
barrons.rule327:: isa(A6S121-seed, "many little seeds") -> like(A6S121-seed, A10S121-kiwi), isa(A10S121-kiwi, "a kiwi"), isa(E3S121-have, "have"), agent(E3S121-have, A2S121-fruit), isa(A2S121-fruit, "Some fruits"), object(E3S121-have, A6S121-seed).
english(barrons.rule328, "Thorns on stems to protect the plant from being eaten").
pretty(barrons.rule328, "EFFECT(stem(Thorns), protect_from(Thorns, Plant, Eat)), Thorns = 'Thorns', Plant = 'the plant', Eat = 'being eaten'.").
barrons.rule328:: isa(E3S127-stem, "stem"), agent(E3S127-stem, A1S127-Thorns), isa(A1S127-Thorns, "Thorns") -> effect(E3S127-stem, E5S127-protect), isa(E5S127-protect, "protect"), agent(E5S127-protect, A1S127-Thorns), object(E5S127-protect, A7S127-plant), isa(A7S127-plant, "the plant"), from(E5S127-protect, A10S127-eat), isa(A10S127-eat, "being eaten").
english(barrons.rule329, "Thorns on stems to protect the plant from being eaten").
pretty(barrons.rule329, "EFFECT(stem(Thorns), protect_from(Thorns, Plant, Eat)), Thorns = 'Thorns', Plant = 'the plant', Eat = 'being eaten'.").
barrons.rule329:: isa(E5S127-protect, "protect"), agent(E5S127-protect, A1S127-Thorns), isa(A1S127-Thorns, "Thorns"), object(E5S127-protect, A7S127-plant), isa(A7S127-plant, "the plant"), from(E5S127-protect, A10S127-eat), isa(A10S127-eat, "being eaten") -> effect(E3S127-stem, E5S127-protect), isa(E3S127-stem, "stem"), agent(E3S127-stem, A1S127-Thorns).
english(barrons.rule330, "Colored or patterned leaves and/or flowers in order to blend into the environment").
pretty(barrons.rule330, "EFFECT(pattern(Colored, Leaf), blend_into(Colored, Environment)), Colored = 'Colored', Leaf = 'leaves', Environment = 'the environment'.").
barrons.rule330:: isa(E3S129-pattern, "pattern"), agent(E3S129-pattern, A1S129-Colored), isa(A1S129-Colored, "Colored"), object(E3S129-pattern, A4S129-leaf), isa(A4S129-leaf, "leaves") -> effect(E3S129-pattern, E10S129-blend), isa(E10S129-blend, "blend"), agent(E10S129-blend, A1S129-Colored), into(E10S129-blend, A13S129-environment), isa(A13S129-environment, "the environment").
english(barrons.rule331, "Colored or patterned leaves and/or flowers in order to blend into the environment").
pretty(barrons.rule331, "EFFECT(pattern(Colored, Leaf), blend_into(Colored, Environment)), Colored = 'Colored', Leaf = 'leaves', Environment = 'the environment'.").
barrons.rule331:: isa(E10S129-blend, "blend"), agent(E10S129-blend, A1S129-Colored), isa(A1S129-Colored, "Colored"), into(E10S129-blend, A13S129-environment), isa(A13S129-environment, "the environment") -> effect(E3S129-pattern, E10S129-blend), isa(E3S129-pattern, "pattern"), agent(E3S129-pattern, A1S129-Colored), object(E3S129-pattern, A4S129-leaf), isa(A4S129-leaf, "leaves").
english(barrons.rule332, "Colored or patterned leaves and/or flowers in order to blend into the environment").
pretty(barrons.rule332, "EFFECT(pattern(Colored, Flower), blend_into(Colored, Environment)), Colored = 'Colored', Flower = 'flowers', Environment = 'the environment'.").
barrons.rule332:: isa(E3S129-pattern, "pattern"), agent(E3S129-pattern, A1S129-Colored), isa(A1S129-Colored, "Colored"), object(E3S129-pattern, A6S129-flower), isa(A6S129-flower, "flowers") -> effect(E3S129-pattern, E10S129-blend), isa(E10S129-blend, "blend"), agent(E10S129-blend, A1S129-Colored), into(E10S129-blend, A13S129-environment), isa(A13S129-environment, "the environment").
english(barrons.rule333, "Colored or patterned leaves and/or flowers in order to blend into the environment").
pretty(barrons.rule333, "EFFECT(pattern(Colored, Flower), blend_into(Colored, Environment)), Colored = 'Colored', Flower = 'flowers', Environment = 'the environment'.").
barrons.rule333:: isa(E10S129-blend, "blend"), agent(E10S129-blend, A1S129-Colored), isa(A1S129-Colored, "Colored"), into(E10S129-blend, A13S129-environment), isa(A13S129-environment, "the environment") -> effect(E3S129-pattern, E10S129-blend), isa(E3S129-pattern, "pattern"), agent(E3S129-pattern, A1S129-Colored), object(E3S129-pattern, A6S129-flower), isa(A6S129-flower, "flowers").
english(barrons.rule334, "Roots grow longer to reach the water supply").
pretty(barrons.rule334, "EFFECT(grow(Root, Longer), reach(Root, Supply)), Root = 'Roots', Longer = 'longer', Supply = 'the water supply'.").
barrons.rule334:: isa(E2S130-grow, "grow"), agent(E2S130-grow, A1S130-root), isa(A1S130-root, "Roots"), arg(E2S130-grow, A3S130-longer), isa(A3S130-longer, "longer") -> effect(E2S130-grow, E5S130-reach), isa(E5S130-reach, "reach"), agent(E5S130-reach, A1S130-root), object(E5S130-reach, A8S130-supply), isa(A8S130-supply, "the water supply").
english(barrons.rule335, "Roots grow longer to reach the water supply").
pretty(barrons.rule335, "EFFECT(grow(Root, Longer), reach(Root, Supply)), Root = 'Roots', Longer = 'longer', Supply = 'the water supply'.").
barrons.rule335:: isa(E5S130-reach, "reach"), agent(E5S130-reach, A1S130-root), isa(A1S130-root, "Roots"), object(E5S130-reach, A8S130-supply), isa(A8S130-supply, "the water supply") -> effect(E2S130-grow, E5S130-reach), isa(E2S130-grow, "grow"), agent(E2S130-grow, A1S130-root), arg(E2S130-grow, A3S130-longer), isa(A3S130-longer, "longer").
english(barrons.rule336, "Leaves and stems develop tough outer coatings to protect the plant from the environment").
pretty(barrons.rule336, "EFFECT(develop(Coating), protect_from(Plant, Environment)), Coating = 'tough outer coatings', Plant = 'the plant', Environment = 'the environment'.").
barrons.rule336:: isa(E4S131-develop, "develop"), object(E4S131-develop, A7S131-coating), isa(A7S131-coating, "tough outer coatings") -> effect(E4S131-develop, E9S131-protect), isa(E9S131-protect, "protect"), object(E9S131-protect, A11S131-plant), isa(A11S131-plant, "the plant"), from(E9S131-protect, A14S131-environment), isa(A14S131-environment, "the environment").
english(barrons.rule337, "Leaves and stems develop tough outer coatings to protect the plant from the environment").
pretty(barrons.rule337, "EFFECT(develop(Coating), protect_from(Plant, Environment)), Coating = 'tough outer coatings', Plant = 'the plant', Environment = 'the environment'.").
barrons.rule337:: isa(E9S131-protect, "protect"), object(E9S131-protect, A11S131-plant), isa(A11S131-plant, "the plant"), from(E9S131-protect, A14S131-environment), isa(A14S131-environment, "the environment") -> effect(E4S131-develop, E9S131-protect), isa(E4S131-develop, "develop"), object(E4S131-develop, A7S131-coating), isa(A7S131-coating, "tough outer coatings").
english(barrons.rule338, "Stems become thicker to prevent water loss").
pretty(barrons.rule338, "EFFECT(become(Thicker), prevent(Loss)), Thicker = 'thicker', Loss = 'water loss'.").
barrons.rule338:: isa(E2S132-become, "become"), object(E2S132-become, A3S132-thicker), isa(A3S132-thicker, "thicker") -> effect(E2S132-become, E5S132-prevent), isa(E5S132-prevent, "prevent"), object(E5S132-prevent, A7S132-loss), isa(A7S132-loss, "water loss").
english(barrons.rule339, "Stems become thicker to prevent water loss").
pretty(barrons.rule339, "EFFECT(become(Thicker), prevent(Loss)), Thicker = 'thicker', Loss = 'water loss'.").
barrons.rule339:: isa(E5S132-prevent, "prevent"), object(E5S132-prevent, A7S132-loss), isa(A7S132-loss, "water loss") -> effect(E2S132-become, E5S132-prevent), isa(E2S132-become, "become"), object(E2S132-become, A3S132-thicker), isa(A3S132-thicker, "thicker").
english(barrons.rule340, "Plants have life cycles that may include beginning of life development into an adult reproduction as an adult and eventually death").
pretty(barrons.rule340, "isa(have, 'have') -> have(Plant, Cycle).").
barrons.rule340:: isa(E2S133-have, "have") -> agent(E2S133-have, A1S133-plant), isa(A1S133-plant, "Plants"), object(E2S133-have, A4S133-cycle), isa(A4S133-cycle, "life cycles").
english(barrons.rule341, "Plants have life cycles that may include beginning of life development into an adult reproduction as an adult and eventually death").
pretty(barrons.rule341, "isa(Plant, 'Plants') -> have(Plant, Cycle).").
barrons.rule341:: isa(A1S133-plant, "Plants") -> isa(E2S133-have, "have"), agent(E2S133-have, A1S133-plant), object(E2S133-have, A4S133-cycle), isa(A4S133-cycle, "life cycles").
english(barrons.rule342, "Plants have life cycles that may include beginning of life development into an adult reproduction as an adult and eventually death").
pretty(barrons.rule342, "isa(Cycle, 'life cycles') -> have(Plant, Cycle).").
barrons.rule342:: isa(A4S133-cycle, "life cycles") -> isa(E2S133-have, "have"), agent(E2S133-have, A1S133-plant), isa(A1S133-plant, "Plants"), object(E2S133-have, A4S133-cycle).
english(barrons.rule343, "The length of time from the beginning of the plant to its[beginning of life development into an adult reproduction as an adult and eventually death] death is called its[The length of time from the beginning of the plant to its death] life span").
pretty(barrons.rule343, "EXAMPLE(Length, Span), Length = 'The length of time from the beginning of the plant to its[beginning of life development into an adult reproduction as an adult and eventually death] death', Span = 'its[The length of time from the beginning of the plant to its death] life span'.").
barrons.rule343:: to(A10S134-plant, A13S134-death), isa(A13S134-death, "its[beginning of life development into an adult reproduction as an adult and eventually death] death"), of(A7S134-beginning, A10S134-plant), isa(A10S134-plant, "the plant"), from(A4S134-time, A7S134-beginning), isa(A7S134-beginning, "the beginning"), of(A2S134-length, A4S134-time), isa(A4S134-time, "time"), isa(A2S134-length, "The length") -> example(A2S134-length, A18S134-span), isa(A18S134-span, "its[The length of time from the beginning of the plant to its death] life span").
english(barrons.rule344, "The length of time from the beginning of the plant to its[beginning of life development into an adult reproduction as an adult and eventually death] death is called its[The length of time from the beginning of the plant to its death] life span").
pretty(barrons.rule344, "EXAMPLE(Length, Span), Length = 'The length of time from the beginning of the plant to its[beginning of life development into an adult reproduction as an adult and eventually death] death', Span = 'its[The length of time from the beginning of the plant to its death] life span'.").
barrons.rule344:: isa(A18S134-span, "its[The length of time from the beginning of the plant to its death] life span") -> example(A2S134-length, A18S134-span), to(A10S134-plant, A13S134-death), isa(A13S134-death, "its[beginning of life development into an adult reproduction as an adult and eventually death] death"), of(A7S134-beginning, A10S134-plant), isa(A10S134-plant, "the plant"), from(A4S134-time, A7S134-beginning), isa(A7S134-beginning, "the beginning"), of(A2S134-length, A4S134-time), isa(A4S134-time, "time"), isa(A2S134-length, "The length").
english(barrons.rule345, "Growth is the process by which plants increase in size").
pretty(barrons.rule345, "PURPOSE(grow(Plant), increase_in(Plant, Size)), Plant = 'plants', Size = 'size'.").
barrons.rule345:: isa(E1S136-growth, "grow"), agent(E1S136-growth, A7S136-plant), isa(A7S136-plant, "plants") -> purpose(E1S136-growth, E8S136-increase), isa(E8S136-increase, "increase"), agent(E8S136-increase, A7S136-plant), in(E8S136-increase, A10S136-size), isa(A10S136-size, "size").
english(barrons.rule346, "Growth is the process by which plants increase in size").
pretty(barrons.rule346, "PURPOSE(grow(Plant), increase_in(Plant, Size)), Plant = 'plants', Size = 'size'.").
barrons.rule346:: isa(E8S136-increase, "increase"), agent(E8S136-increase, A7S136-plant), isa(A7S136-plant, "plants"), in(E8S136-increase, A10S136-size), isa(A10S136-size, "size") -> purpose(E1S136-growth, E8S136-increase), isa(E1S136-growth, "grow"), agent(E1S136-growth, A7S136-plant).
english(barrons.rule347, "Growth is the process by which plants increase in size").
pretty(barrons.rule347, "EXAMPLE(Growth, increase_in(Plant, Size)), Growth = 'Growth', Plant = 'plants', Size = 'size'.").
barrons.rule347:: isa(A1S136-growth, "Growth") -> example(A1S136-growth, E8S136-increase), isa(E8S136-increase, "increase"), agent(E8S136-increase, A7S136-plant), isa(A7S136-plant, "plants"), in(E8S136-increase, A10S136-size), isa(A10S136-size, "size").
english(barrons.rule348, "Growth is the process by which plants increase in size").
pretty(barrons.rule348, "EXAMPLE(Growth, increase_in(Plant, Size)), Growth = 'Growth', Plant = 'plants', Size = 'size'.").
barrons.rule348:: isa(E8S136-increase, "increase"), agent(E8S136-increase, A7S136-plant), isa(A7S136-plant, "plants"), in(E8S136-increase, A10S136-size), isa(A10S136-size, "size") -> example(A1S136-growth, E8S136-increase), isa(A1S136-growth, "Growth").
english(barrons.rule349, "Growth is the process by which plants increase in size").
pretty(barrons.rule349, "EXAMPLE(Growth, Process), Growth = 'Growth', Process = 'the process'.").
barrons.rule349:: isa(A1S136-growth, "Growth") -> example(A1S136-growth, A4S136-process), isa(A4S136-process, "the process").
english(barrons.rule350, "Growth is the process by which plants increase in size").
pretty(barrons.rule350, "EXAMPLE(Growth, Process), Growth = 'Growth', Process = 'the process'.").
barrons.rule350:: isa(A4S136-process, "the process") -> example(A1S136-growth, A4S136-process), isa(A1S136-growth, "Growth").
english(barrons.rule351, "Animals are living organisms").
pretty(barrons.rule351, "EXAMPLE(Animal, Organism), Animal = 'Animals', Organism = 'living organisms'.").
barrons.rule351:: isa(A1S137-animal, "Animals") -> example(A1S137-animal, A4S137-organism), isa(A4S137-organism, "living organisms").
english(barrons.rule352, "Animals are living organisms").
pretty(barrons.rule352, "EXAMPLE(Animal, Organism), Animal = 'Animals', Organism = 'living organisms'.").
barrons.rule352:: isa(A4S137-organism, "living organisms") -> example(A1S137-animal, A4S137-organism), isa(A1S137-animal, "Animals").
english(barrons.rule353, "Animals require air water and food in order to live and survive").
pretty(barrons.rule353, "EFFECT(require(Animal, Air), live(Animal)), Animal = 'Animals', Air = 'air'.").
barrons.rule353:: isa(E2S138-require, "require"), agent(E2S138-require, A1S138-animal), isa(A1S138-animal, "Animals"), object(E2S138-require, A3S138-air), isa(A3S138-air, "air") -> effect(E2S138-require, E12S138-live), isa(E12S138-live, "live"), agent(E12S138-live, A1S138-animal).
english(barrons.rule354, "Animals require air water and food in order to live and survive").
pretty(barrons.rule354, "EFFECT(require(Animal, Air), live(Animal)), Animal = 'Animals', Air = 'air'.").
barrons.rule354:: isa(E12S138-live, "live"), agent(E12S138-live, A1S138-animal), isa(A1S138-animal, "Animals") -> effect(E2S138-require, E12S138-live), isa(E2S138-require, "require"), agent(E2S138-require, A1S138-animal), object(E2S138-require, A3S138-air), isa(A3S138-air, "air").
english(barrons.rule355, "Animals require air water and food in order to live and survive").
pretty(barrons.rule355, "EFFECT(require(Animal, Water), live(Animal)), Animal = 'Animals', Water = 'water'.").
barrons.rule355:: isa(E2S138-require, "require"), agent(E2S138-require, A1S138-animal), isa(A1S138-animal, "Animals"), object(E2S138-require, A5S138-water), isa(A5S138-water, "water") -> effect(E2S138-require, E12S138-live), isa(E12S138-live, "live"), agent(E12S138-live, A1S138-animal).
english(barrons.rule356, "Animals require air water and food in order to live and survive").
pretty(barrons.rule356, "EFFECT(require(Animal, Water), live(Animal)), Animal = 'Animals', Water = 'water'.").
barrons.rule356:: isa(E12S138-live, "live"), agent(E12S138-live, A1S138-animal), isa(A1S138-animal, "Animals") -> effect(E2S138-require, E12S138-live), isa(E2S138-require, "require"), agent(E2S138-require, A1S138-animal), object(E2S138-require, A5S138-water), isa(A5S138-water, "water").
english(barrons.rule357, "Animals require air water and food in order to live and survive").
pretty(barrons.rule357, "EFFECT(require(Animal, Food), live(Animal)), Animal = 'Animals', Food = 'food'.").
barrons.rule357:: isa(E2S138-require, "require"), agent(E2S138-require, A1S138-animal), isa(A1S138-animal, "Animals"), object(E2S138-require, A8S138-food), isa(A8S138-food, "food") -> effect(E2S138-require, E12S138-live), isa(E12S138-live, "live"), agent(E12S138-live, A1S138-animal).
english(barrons.rule358, "Animals require air water and food in order to live and survive").
pretty(barrons.rule358, "EFFECT(require(Animal, Food), live(Animal)), Animal = 'Animals', Food = 'food'.").
barrons.rule358:: isa(E12S138-live, "live"), agent(E12S138-live, A1S138-animal), isa(A1S138-animal, "Animals") -> effect(E2S138-require, E12S138-live), isa(E2S138-require, "require"), agent(E2S138-require, A1S138-animal), object(E2S138-require, A8S138-food), isa(A8S138-food, "food").
english(barrons.rule359, "Each animal has different structures that serve different functions for growth survival and reproduction").
pretty(barrons.rule359, "isa(have, 'has') -> have(Animal, Structure).").
barrons.rule359:: isa(E3S140-have, "have") -> agent(E3S140-have, A2S140-animal), isa(A2S140-animal, "Each animal"), object(E3S140-have, A5S140-structure), isa(A5S140-structure, "different structures").
english(barrons.rule360, "Each animal has different structures that serve different functions for growth survival and reproduction").
pretty(barrons.rule360, "isa(Animal, 'Each animal') -> have(Animal, Structure).").
barrons.rule360:: isa(A2S140-animal, "Each animal") -> isa(E3S140-have, "have"), agent(E3S140-have, A2S140-animal), object(E3S140-have, A5S140-structure), isa(A5S140-structure, "different structures").
english(barrons.rule361, "Each animal has different structures that serve different functions for growth survival and reproduction").
pretty(barrons.rule361, "isa(Structure, 'different structures') -> have(Animal, Structure).").
barrons.rule361:: isa(A5S140-structure, "different structures") -> isa(E3S140-have, "have"), agent(E3S140-have, A2S140-animal), isa(A2S140-animal, "Each animal"), object(E3S140-have, A5S140-structure).
english(barrons.rule362, "Groups of cells make up tissues").
pretty(barrons.rule362, "isa(Cell, 'cells') -> make up(Group, Tissue).").
barrons.rule362:: isa(A3S142-cell, "cells") -> of(A1S142-group, A3S142-cell), isa(E4S142-make, "make up"), agent(E4S142-make, A1S142-group), isa(A1S142-group, "Groups"), object(E4S142-make, A6S142-tissue), isa(A6S142-tissue, "tissues").
english(barrons.rule363, "Groups of cells make up tissues").
pretty(barrons.rule363, "isa(make up, 'make up') -> make up(Group, Tissue).").
barrons.rule363:: isa(E4S142-make, "make up") -> of(A1S142-group, A3S142-cell), isa(A3S142-cell, "cells"), agent(E4S142-make, A1S142-group), isa(A1S142-group, "Groups"), object(E4S142-make, A6S142-tissue), isa(A6S142-tissue, "tissues").
english(barrons.rule364, "Groups of cells make up tissues").
pretty(barrons.rule364, "isa(Group, 'Groups of cells') -> make up(Group, Tissue).").
barrons.rule364:: isa(A1S142-group, "Groups") -> of(A1S142-group, A3S142-cell), isa(A3S142-cell, "cells"), isa(E4S142-make, "make up"), agent(E4S142-make, A1S142-group), object(E4S142-make, A6S142-tissue), isa(A6S142-tissue, "tissues").
english(barrons.rule365, "Groups of cells make up tissues").
pretty(barrons.rule365, "isa(Tissue, 'tissues') -> make up(Group, Tissue).").
barrons.rule365:: isa(A6S142-tissue, "tissues") -> of(A1S142-group, A3S142-cell), isa(A3S142-cell, "cells"), isa(E4S142-make, "make up"), agent(E4S142-make, A1S142-group), isa(A1S142-group, "Groups"), object(E4S142-make, A6S142-tissue).
english(barrons.rule366, "Muscles and skin are examples of tissues").
pretty(barrons.rule366, "EXAMPLE(Muscle, Tissue), Muscle = 'Muscles', Tissue = 'tissues'.").
barrons.rule366:: isa(A1S143-muscle, "Muscles") -> example(A1S143-muscle, A7S143-tissue), isa(A7S143-tissue, "tissues").
english(barrons.rule367, "Muscles and skin are examples of tissues").
pretty(barrons.rule367, "EXAMPLE(Muscle, Tissue), Muscle = 'Muscles', Tissue = 'tissues'.").
barrons.rule367:: isa(A7S143-tissue, "tissues") -> example(A1S143-muscle, A7S143-tissue), isa(A1S143-muscle, "Muscles").
english(barrons.rule368, "Muscles and skin are examples of tissues").
pretty(barrons.rule368, "EXAMPLE(Skin, Tissue), Skin = 'skin', Tissue = 'tissues'.").
barrons.rule368:: isa(A3S143-skin, "skin") -> example(A3S143-skin, A7S143-tissue), isa(A7S143-tissue, "tissues").
english(barrons.rule369, "Muscles and skin are examples of tissues").
pretty(barrons.rule369, "EXAMPLE(Skin, Tissue), Skin = 'skin', Tissue = 'tissues'.").
barrons.rule369:: isa(A7S143-tissue, "tissues") -> example(A3S143-skin, A7S143-tissue), isa(A3S143-skin, "skin").
english(barrons.rule370, "Groups of tissues working together are called organs").
pretty(barrons.rule370, "EXAMPLE(Group, Organ), Group = 'Groups of tissues working together', Organ = 'organs'.").
barrons.rule370:: of(A1S144-group, A3S144-tissue), isa(A3S144-tissue, "tissues"), isa(A1S144-group, "Groups") -> example(A1S144-group, A8S144-organ), isa(A8S144-organ, "organs").
english(barrons.rule371, "Groups of tissues working together are called organs").
pretty(barrons.rule371, "EXAMPLE(Group, Organ), Group = 'Groups of tissues working together', Organ = 'organs'.").
barrons.rule371:: isa(A8S144-organ, "organs") -> example(A1S144-group, A8S144-organ), of(A1S144-group, A3S144-tissue), isa(A3S144-tissue, "tissues"), isa(A1S144-group, "Groups").
english(barrons.rule372, "The lungs are an organ in the body").
pretty(barrons.rule372, "EXAMPLE(Lung, Organ), Lung = 'The lungs', Organ = 'an organ in the body'.").
barrons.rule372:: isa(A2S145-lung, "The lungs") -> example(A2S145-lung, A5S145-organ), in(A5S145-organ, A8S145-body), isa(A8S145-body, "the body"), isa(A5S145-organ, "an organ").
english(barrons.rule373, "The lungs are an organ in the body").
pretty(barrons.rule373, "EXAMPLE(Lung, Organ), Lung = 'The lungs', Organ = 'an organ in the body'.").
barrons.rule373:: in(A5S145-organ, A8S145-body), isa(A8S145-body, "the body"), isa(A5S145-organ, "an organ") -> example(A2S145-lung, A5S145-organ), isa(A2S145-lung, "The lungs").
english(barrons.rule374, "Different organs working together are called organ systems").
pretty(barrons.rule374, "EXAMPLE(Organ, System), Organ = 'Different organs', System = 'organ systems'.").
barrons.rule374:: isa(A2S146-organ, "Different organs") -> example(A2S146-organ, A8S146-system), isa(A8S146-system, "organ systems").
english(barrons.rule375, "Different organs working together are called organ systems").
pretty(barrons.rule375, "EXAMPLE(Organ, System), Organ = 'Different organs', System = 'organ systems'.").
barrons.rule375:: isa(A8S146-system, "organ systems") -> example(A2S146-organ, A8S146-system), isa(A2S146-organ, "Different organs").
english(barrons.rule376, "These organ systems work together to make up the organism").
pretty(barrons.rule376, "EFFECT(work(System, Together), make up(System, Organism)), System = 'These organ systems', Together = 'together', Organism = 'the organism'.").
barrons.rule376:: isa(E4S147-work, "work"), agent(E4S147-work, A3S147-system), isa(A3S147-system, "These organ systems"), arg(E4S147-work, A5S147-together), isa(A5S147-together, "together") -> effect(E4S147-work, E7S147-make), isa(E7S147-make, "make up"), agent(E7S147-make, A3S147-system), object(E7S147-make, A10S147-organism), isa(A10S147-organism, "the organism").
english(barrons.rule377, "These organ systems work together to make up the organism").
pretty(barrons.rule377, "EFFECT(work(System, Together), make up(System, Organism)), System = 'These organ systems', Together = 'together', Organism = 'the organism'.").
barrons.rule377:: isa(E7S147-make, "make up"), agent(E7S147-make, A3S147-system), isa(A3S147-system, "These organ systems"), object(E7S147-make, A10S147-organism), isa(A10S147-organism, "the organism") -> effect(E4S147-work, E7S147-make), isa(E4S147-work, "work"), agent(E4S147-work, A3S147-system), arg(E4S147-work, A5S147-together), isa(A5S147-together, "together").
english(barrons.rule378, "Each organ system has a specific function that helps the organism to survive").
pretty(barrons.rule378, "EFFECT(have(System, Function), survive(Organism)), System = 'Each organ system', Function = 'a specific function', Organism = 'the organism'.").
barrons.rule378:: isa(E4S148-have, "have"), agent(E4S148-have, A3S148-system), isa(A3S148-system, "Each organ system"), object(E4S148-have, A7S148-function), isa(A7S148-function, "a specific function") -> effect(E4S148-have, E13S148-survive), isa(E13S148-survive, "survive"), agent(E13S148-survive, A11S148-organism), isa(A11S148-organism, "the organism").
english(barrons.rule379, "Each organ system has a specific function that helps the organism to survive").
pretty(barrons.rule379, "EFFECT(have(System, Function), survive(Organism)), System = 'Each organ system', Function = 'a specific function', Organism = 'the organism'.").
barrons.rule379:: isa(E13S148-survive, "survive"), agent(E13S148-survive, A11S148-organism), isa(A11S148-organism, "the organism") -> effect(E4S148-have, E13S148-survive), isa(E4S148-have, "have"), agent(E4S148-have, A3S148-system), isa(A3S148-system, "Each organ system"), object(E4S148-have, A7S148-function), isa(A7S148-function, "a specific function").
english(barrons.rule380, "Each organ system has a specific function that helps the organism to survive").
pretty(barrons.rule380, "PURPOSE(Function, survive(Organism)), Function = 'a specific function', Organism = 'the organism'.").
barrons.rule380:: isa(A7S148-function, "a specific function") -> purpose(A7S148-function, E13S148-survive), isa(E13S148-survive, "survive"), agent(E13S148-survive, A11S148-organism), isa(A11S148-organism, "the organism").
english(barrons.rule381, "Each organ system has a specific function that helps the organism to survive").
pretty(barrons.rule381, "PURPOSE(Function, survive(Organism)), Function = 'a specific function', Organism = 'the organism'.").
barrons.rule381:: isa(E13S148-survive, "survive"), agent(E13S148-survive, A11S148-organism), isa(A11S148-organism, "the organism") -> purpose(A7S148-function, E13S148-survive), isa(A7S148-function, "a specific function").
english(barrons.rule382, "The body systems work like a machine and each system works to help the animal grow create energy and survive").
pretty(barrons.rule382, "EFFECT(work(System, Help), grow(Animal)), System = 'each system', Help = 'help the animal grow create energy and survive', Animal = 'the animal'.").
barrons.rule382:: isa(E11S149-work, "work"), agent(E11S149-work, A10S149-system), isa(A10S149-system, "each system"), arg(E11S149-work, A13S149-help), isa(A13S149-help, "to help the animal grow create energy and survive") -> effect(E11S149-work, E16S149-grow), isa(E16S149-grow, "grow"), agent(E16S149-grow, A15S149-animal), isa(A15S149-animal, "the animal").
english(barrons.rule383, "The body systems work like a machine and each system works to help the animal grow create energy and survive").
pretty(barrons.rule383, "EFFECT(work(System, Help), grow(Animal)), System = 'each system', Help = 'help the animal grow create energy and survive', Animal = 'the animal'.").
barrons.rule383:: isa(E16S149-grow, "grow"), agent(E16S149-grow, A15S149-animal), isa(A15S149-animal, "the animal") -> effect(E11S149-work, E16S149-grow), isa(E11S149-work, "work"), agent(E11S149-work, A10S149-system), isa(A10S149-system, "each system"), arg(E11S149-work, A13S149-help), isa(A13S149-help, "to help the animal grow create energy and survive").
english(barrons.rule384, "The body systems work like a machine and each system works to help the animal grow create energy and survive").
pretty(barrons.rule384, "EFFECT(work(System, Help), create(Animal, Energy)), System = 'each system', Help = 'help the animal grow create energy and survive', Animal = 'the animal', Energy = 'energy'.").
barrons.rule384:: isa(E11S149-work, "work"), agent(E11S149-work, A10S149-system), isa(A10S149-system, "each system"), arg(E11S149-work, A13S149-help), isa(A13S149-help, "to help the animal grow create energy and survive") -> effect(E11S149-work, E18S149-create), isa(E18S149-create, "create"), agent(E18S149-create, A15S149-animal), isa(A15S149-animal, "the animal"), object(E18S149-create, A19S149-energy), isa(A19S149-energy, "energy").
english(barrons.rule385, "The body systems work like a machine and each system works to help the animal grow create energy and survive").
pretty(barrons.rule385, "EFFECT(work(System, Help), create(Animal, Energy)), System = 'each system', Help = 'help the animal grow create energy and survive', Animal = 'the animal', Energy = 'energy'.").
barrons.rule385:: isa(E18S149-create, "create"), agent(E18S149-create, A15S149-animal), isa(A15S149-animal, "the animal"), object(E18S149-create, A19S149-energy), isa(A19S149-energy, "energy") -> effect(E11S149-work, E18S149-create), isa(E11S149-work, "work"), agent(E11S149-work, A10S149-system), isa(A10S149-system, "each system"), arg(E11S149-work, A13S149-help), isa(A13S149-help, "to help the animal grow create energy and survive").
english(barrons.rule386, "The body systems work like a machine and each system works to help the animal grow create energy and survive").
pretty(barrons.rule386, "EFFECT(work(System, Help), survive(Animal)), System = 'each system', Help = 'help the animal grow create energy and survive', Animal = 'the animal'.").
barrons.rule386:: isa(E11S149-work, "work"), agent(E11S149-work, A10S149-system), isa(A10S149-system, "each system"), arg(E11S149-work, A13S149-help), isa(A13S149-help, "to help the animal grow create energy and survive") -> effect(E11S149-work, E22S149-survive), isa(E22S149-survive, "survive"), agent(E22S149-survive, A15S149-animal), isa(A15S149-animal, "the animal").
english(barrons.rule387, "The body systems work like a machine and each system works to help the animal grow create energy and survive").
pretty(barrons.rule387, "EFFECT(work(System, Help), survive(Animal)), System = 'each system', Help = 'help the animal grow create energy and survive', Animal = 'the animal'.").
barrons.rule387:: isa(E22S149-survive, "survive"), agent(E22S149-survive, A15S149-animal), isa(A15S149-animal, "the animal") -> effect(E11S149-work, E22S149-survive), isa(E11S149-work, "work"), agent(E11S149-work, A10S149-system), isa(A10S149-system, "each system"), arg(E11S149-work, A13S149-help), isa(A13S149-help, "to help the animal grow create energy and survive").
english(barrons.rule388, "All animals need to take in food water and nutrients vitamins and minerals to survive").
pretty(barrons.rule388, "EFFECT(take in(Animal, Food), survive(Animal)), Animal = 'All animals', Food = 'food'.").
barrons.rule388:: isa(E5S150-take, "take in"), agent(E5S150-take, A2S150-animal), isa(A2S150-animal, "All animals"), object(E5S150-take, A7S150-food), isa(A7S150-food, "food") -> effect(E5S150-take, E19S150-survive), isa(E19S150-survive, "survive"), agent(E19S150-survive, A2S150-animal).
english(barrons.rule389, "All animals need to take in food water and nutrients vitamins and minerals to survive").
pretty(barrons.rule389, "EFFECT(take in(Animal, Food), survive(Animal)), Animal = 'All animals', Food = 'food'.").
barrons.rule389:: isa(E19S150-survive, "survive"), agent(E19S150-survive, A2S150-animal), isa(A2S150-animal, "All animals") -> effect(E5S150-take, E19S150-survive), isa(E5S150-take, "take in"), agent(E5S150-take, A2S150-animal), object(E5S150-take, A7S150-food), isa(A7S150-food, "food").
english(barrons.rule390, "All animals need to take in food water and nutrients vitamins and minerals to survive").
pretty(barrons.rule390, "EFFECT(take in(Animal, Water), survive(Animal)), Animal = 'All animals', Water = 'water'.").
barrons.rule390:: isa(E5S150-take, "take in"), agent(E5S150-take, A2S150-animal), isa(A2S150-animal, "All animals"), object(E5S150-take, A9S150-water), isa(A9S150-water, "water") -> effect(E5S150-take, E19S150-survive), isa(E19S150-survive, "survive"), agent(E19S150-survive, A2S150-animal).
english(barrons.rule391, "All animals need to take in food water and nutrients vitamins and minerals to survive").
pretty(barrons.rule391, "EFFECT(take in(Animal, Water), survive(Animal)), Animal = 'All animals', Water = 'water'.").
barrons.rule391:: isa(E19S150-survive, "survive"), agent(E19S150-survive, A2S150-animal), isa(A2S150-animal, "All animals") -> effect(E5S150-take, E19S150-survive), isa(E5S150-take, "take in"), agent(E5S150-take, A2S150-animal), object(E5S150-take, A9S150-water), isa(A9S150-water, "water").
english(barrons.rule392, "All animals need to take in food water and nutrients vitamins and minerals to survive").
pretty(barrons.rule392, "EFFECT(take in(Animal, Nutrient), survive(Animal)), Animal = 'All animals', Nutrient = 'nutrients'.").
barrons.rule392:: isa(E5S150-take, "take in"), agent(E5S150-take, A2S150-animal), isa(A2S150-animal, "All animals"), object(E5S150-take, A12S150-nutrient), isa(A12S150-nutrient, "nutrients") -> effect(E5S150-take, E19S150-survive), isa(E19S150-survive, "survive"), agent(E19S150-survive, A2S150-animal).
english(barrons.rule393, "All animals need to take in food water and nutrients vitamins and minerals to survive").
pretty(barrons.rule393, "EFFECT(take in(Animal, Nutrient), survive(Animal)), Animal = 'All animals', Nutrient = 'nutrients'.").
barrons.rule393:: isa(E19S150-survive, "survive"), agent(E19S150-survive, A2S150-animal), isa(A2S150-animal, "All animals") -> effect(E5S150-take, E19S150-survive), isa(E5S150-take, "take in"), agent(E5S150-take, A2S150-animal), object(E5S150-take, A12S150-nutrient), isa(A12S150-nutrient, "nutrients").
english(barrons.rule394, "They[nutrients vitamins and minerals] take food into their[nutrients vitamins and minerals] mouth where the teeth and tongue break up the food into smaller pieces so t hat it[t hat] can be swallowed").
pretty(barrons.rule394, "isa(take, 'take') -> take_into(Nutrient, Food, Swallow, Mouth).").
barrons.rule394:: isa(E2S151-take, "take") -> agent(E2S151-take, A12S150-nutrient), isa(A12S150-nutrient, "nutrients"), object(E2S151-take, A3S151-food), isa(A3S151-food, "food"), into(E2S151-take, A6S151-mouth), isa(A6S151-mouth, "their[nutrients vitamins and minerals] mouth"), arg(E2S151-take, A26S151-swallow), isa(A26S151-swallow, "t hat it[t hat] can be swallowed").
english(barrons.rule395, "They[nutrients vitamins and minerals] take food into their[nutrients vitamins and minerals] mouth where the teeth and tongue break up the food into smaller pieces so t hat it[t hat] can be swallowed").
pretty(barrons.rule395, "isa(Nutrient, 'nutrients vitamins and minerals') -> take_into(Nutrient, Food, Swallow, Mouth).").
barrons.rule395:: isa(A12S150-nutrient, "nutrients") -> isa(E2S151-take, "take"), agent(E2S151-take, A12S150-nutrient), object(E2S151-take, A3S151-food), isa(A3S151-food, "food"), into(E2S151-take, A6S151-mouth), isa(A6S151-mouth, "their[nutrients vitamins and minerals] mouth"), arg(E2S151-take, A26S151-swallow), isa(A26S151-swallow, "t hat it[t hat] can be swallowed").
english(barrons.rule396, "They[nutrients vitamins and minerals] take food into their[nutrients vitamins and minerals] mouth where the teeth and tongue break up the food into smaller pieces so t hat it[t hat] can be swallowed").
pretty(barrons.rule396, "isa(Food, 'food') -> take_into(Nutrient, Food, Swallow, Mouth).").
barrons.rule396:: isa(A3S151-food, "food") -> isa(E2S151-take, "take"), agent(E2S151-take, A12S150-nutrient), isa(A12S150-nutrient, "nutrients"), object(E2S151-take, A3S151-food), into(E2S151-take, A6S151-mouth), isa(A6S151-mouth, "their[nutrients vitamins and minerals] mouth"), arg(E2S151-take, A26S151-swallow), isa(A26S151-swallow, "t hat it[t hat] can be swallowed").
english(barrons.rule397, "They[nutrients vitamins and minerals] take food into their[nutrients vitamins and minerals] mouth where the teeth and tongue break up the food into smaller pieces so t hat it[t hat] can be swallowed").
pretty(barrons.rule397, "isa(Mouth, 'their[nutrients vitamins and minerals] mouth') -> take_into(Nutrient, Food, Swallow, Mouth).").
barrons.rule397:: isa(A6S151-mouth, "their[nutrients vitamins and minerals] mouth") -> isa(E2S151-take, "take"), agent(E2S151-take, A12S150-nutrient), isa(A12S150-nutrient, "nutrients"), object(E2S151-take, A3S151-food), isa(A3S151-food, "food"), into(E2S151-take, A6S151-mouth), arg(E2S151-take, A26S151-swallow), isa(A26S151-swallow, "t hat it[t hat] can be swallowed").
english(barrons.rule398, "They[nutrients vitamins and minerals] take food into their[nutrients vitamins and minerals] mouth where the teeth and tongue break up the food into smaller pieces so t hat it[t hat] can be swallowed").
pretty(barrons.rule398, "isa(Swallow, 't hat it[t hat] be swallowed') -> take_into(Nutrient, Food, Swallow, Mouth).").
barrons.rule398:: isa(A26S151-swallow, "t hat it[t hat] can be swallowed") -> isa(E2S151-take, "take"), agent(E2S151-take, A12S150-nutrient), isa(A12S150-nutrient, "nutrients"), object(E2S151-take, A3S151-food), isa(A3S151-food, "food"), into(E2S151-take, A6S151-mouth), isa(A6S151-mouth, "their[nutrients vitamins and minerals] mouth"), arg(E2S151-take, A26S151-swallow).
english(barrons.rule399, "During egestion undigested food leaves the body").
pretty(barrons.rule399, "isa(leave, 'leaves') -> leave_during(Food, Body, Egestion).").
barrons.rule399:: isa(E5S157-leave, "leave") -> agent(E5S157-leave, A4S157-food), isa(A4S157-food, "food"), object(E5S157-leave, A7S157-body), isa(A7S157-body, "the body"), during(E5S157-leave, A2S157-egestion), isa(A2S157-egestion, "egestion undigested").
english(barrons.rule400, "During egestion undigested food leaves the body").
pretty(barrons.rule400, "isa(Food, 'food') -> leave_during(Food, Body, Egestion).").
barrons.rule400:: isa(A4S157-food, "food") -> isa(E5S157-leave, "leave"), agent(E5S157-leave, A4S157-food), object(E5S157-leave, A7S157-body), isa(A7S157-body, "the body"), during(E5S157-leave, A2S157-egestion), isa(A2S157-egestion, "egestion undigested").
english(barrons.rule401, "During egestion undigested food leaves the body").
pretty(barrons.rule401, "isa(Body, 'the body') -> leave_during(Food, Body, Egestion).").
barrons.rule401:: isa(A7S157-body, "the body") -> isa(E5S157-leave, "leave"), agent(E5S157-leave, A4S157-food), isa(A4S157-food, "food"), object(E5S157-leave, A7S157-body), during(E5S157-leave, A2S157-egestion), isa(A2S157-egestion, "egestion undigested").
english(barrons.rule402, "During egestion undigested food leaves the body").
pretty(barrons.rule402, "isa(Egestion, 'egestion undigested') -> leave_during(Food, Body, Egestion).").
barrons.rule402:: isa(A2S157-egestion, "egestion undigested") -> isa(E5S157-leave, "leave"), agent(E5S157-leave, A4S157-food), isa(A4S157-food, "food"), object(E5S157-leave, A7S157-body), isa(A7S157-body, "the body"), during(E5S157-leave, A2S157-egestion).
english(barrons.rule403, "All animals need to take in oxygen in order to survive").
pretty(barrons.rule403, "EFFECT(take in(Animal, Oxygen), survive(Animal)), Animal = 'All animals', Oxygen = 'oxygen'.").
barrons.rule403:: isa(E5S158-take, "take in"), agent(E5S158-take, A2S158-animal), isa(A2S158-animal, "All animals"), object(E5S158-take, A7S158-oxygen), isa(A7S158-oxygen, "oxygen") -> effect(E5S158-take, E11S158-survive), isa(E11S158-survive, "survive"), agent(E11S158-survive, A2S158-animal).
english(barrons.rule404, "All animals need to take in oxygen in order to survive").
pretty(barrons.rule404, "EFFECT(take in(Animal, Oxygen), survive(Animal)), Animal = 'All animals', Oxygen = 'oxygen'.").
barrons.rule404:: isa(E11S158-survive, "survive"), agent(E11S158-survive, A2S158-animal), isa(A2S158-animal, "All animals") -> effect(E5S158-take, E11S158-survive), isa(E5S158-take, "take in"), agent(E5S158-take, A2S158-animal), object(E5S158-take, A7S158-oxygen), isa(A7S158-oxygen, "oxygen").
english(barrons.rule405, "We do this by breathing").
pretty(barrons.rule405, "isa(do, 'do') -> do_by(We, This, Breathing).").
barrons.rule405:: isa(E2S159-do, "do") -> agent(E2S159-do, A1S159-we), isa(A1S159-we, "We"), object(E2S159-do, A3S159-this), isa(A3S159-this, "this"), by(E2S159-do, A5S159-breathing), isa(A5S159-breathing, "breathing").
english(barrons.rule406, "We do this by breathing").
pretty(barrons.rule406, "isa(We, 'We') -> do_by(We, This, Breathing).").
barrons.rule406:: isa(A1S159-we, "We") -> isa(E2S159-do, "do"), agent(E2S159-do, A1S159-we), object(E2S159-do, A3S159-this), isa(A3S159-this, "this"), by(E2S159-do, A5S159-breathing), isa(A5S159-breathing, "breathing").
english(barrons.rule407, "We do this by breathing").
pretty(barrons.rule407, "isa(This, 'this') -> do_by(We, This, Breathing).").
barrons.rule407:: isa(A3S159-this, "this") -> isa(E2S159-do, "do"), agent(E2S159-do, A1S159-we), isa(A1S159-we, "We"), object(E2S159-do, A3S159-this), by(E2S159-do, A5S159-breathing), isa(A5S159-breathing, "breathing").
english(barrons.rule408, "We do this by breathing").
pretty(barrons.rule408, "isa(Breathing, 'breathing') -> do_by(We, This, Breathing).").
barrons.rule408:: isa(A5S159-breathing, "breathing") -> isa(E2S159-do, "do"), agent(E2S159-do, A1S159-we), isa(A1S159-we, "We"), object(E2S159-do, A3S159-this), isa(A3S159-this, "this"), by(E2S159-do, A5S159-breathing).
english(barrons.rule409, "Animals take in air which contains oxygen through the nose").
pretty(barrons.rule409, "isa(Nose, 'the nose') -> take in(Animal, Air).").
barrons.rule409:: isa(A12S160-nose, "the nose") -> through(A4S160-air, A12S160-nose), isa(E2S160-take, "take in"), agent(E2S160-take, A1S160-animal), isa(A1S160-animal, "Animals"), object(E2S160-take, A4S160-air), isa(A4S160-air, "air").
english(barrons.rule410, "Animals take in air which contains oxygen through the nose").
pretty(barrons.rule410, "isa(take in, 'take in') -> take in(Animal, Air).").
barrons.rule410:: isa(E2S160-take, "take in") -> through(A4S160-air, A12S160-nose), isa(A12S160-nose, "the nose"), agent(E2S160-take, A1S160-animal), isa(A1S160-animal, "Animals"), object(E2S160-take, A4S160-air), isa(A4S160-air, "air").
english(barrons.rule411, "Animals take in air which contains oxygen through the nose").
pretty(barrons.rule411, "isa(Animal, 'Animals') -> take in(Animal, Air).").
barrons.rule411:: isa(A1S160-animal, "Animals") -> through(A4S160-air, A12S160-nose), isa(A12S160-nose, "the nose"), isa(E2S160-take, "take in"), agent(E2S160-take, A1S160-animal), object(E2S160-take, A4S160-air), isa(A4S160-air, "air").
english(barrons.rule412, "Animals take in air which contains oxygen through the nose").
pretty(barrons.rule412, "isa(Air, 'air through the nose') -> take in(Animal, Air).").
barrons.rule412:: isa(A4S160-air, "air") -> through(A4S160-air, A12S160-nose), isa(A12S160-nose, "the nose"), isa(E2S160-take, "take in"), agent(E2S160-take, A1S160-animal), isa(A1S160-animal, "Animals"), object(E2S160-take, A4S160-air).
english(barrons.rule413, "In the lungs the oxygen enters the blood so that the oxygen is carried throughout the body").
pretty(barrons.rule413, "EFFECT(enter_in(Oxygen, Blood, Lung), carry_throughout(Oxygen, Body)), Oxygen = 'the oxygen', Blood = 'the blood', Lung = 'the lungs', Oxygen = 'the oxygen', Body = 'the body'.").
barrons.rule413:: isa(E7S162-enter, "enter"), agent(E7S162-enter, A6S162-oxygen), isa(A6S162-oxygen, "the oxygen"), object(E7S162-enter, A9S162-blood), isa(A9S162-blood, "the blood"), in(E7S162-enter, A3S162-lung), isa(A3S162-lung, "the lungs") -> effect(E7S162-enter, E15S162-carry), isa(E15S162-carry, "carry"), object(E15S162-carry, A13S162-oxygen), isa(A13S162-oxygen, "the oxygen"), throughout(E15S162-carry, A18S162-body), isa(A18S162-body, "the body").
english(barrons.rule414, "In the lungs the oxygen enters the blood so that the oxygen is carried throughout the body").
pretty(barrons.rule414, "EFFECT(enter_in(Oxygen, Blood, Lung), carry_throughout(Oxygen, Body)), Oxygen = 'the oxygen', Blood = 'the blood', Lung = 'the lungs', Oxygen = 'the oxygen', Body = 'the body'.").
barrons.rule414:: isa(E15S162-carry, "carry"), object(E15S162-carry, A13S162-oxygen), isa(A13S162-oxygen, "the oxygen"), throughout(E15S162-carry, A18S162-body), isa(A18S162-body, "the body") -> effect(E7S162-enter, E15S162-carry), isa(E7S162-enter, "enter"), agent(E7S162-enter, A6S162-oxygen), isa(A6S162-oxygen, "the oxygen"), object(E7S162-enter, A9S162-blood), isa(A9S162-blood, "the blood"), in(E7S162-enter, A3S162-lung), isa(A3S162-lung, "the lungs").
english(barrons.rule415, "All cells need oxygen to survive").
pretty(barrons.rule415, "EFFECT(need(Cell, Oxygen), survive(Cell)), Cell = 'All cells', Oxygen = 'oxygen'.").
barrons.rule415:: isa(E3S163-need, "need"), agent(E3S163-need, A2S163-cell), isa(A2S163-cell, "All cells"), object(E3S163-need, A4S163-oxygen), isa(A4S163-oxygen, "oxygen") -> effect(E3S163-need, E6S163-survive), isa(E6S163-survive, "survive"), agent(E6S163-survive, A2S163-cell).
english(barrons.rule416, "All cells need oxygen to survive").
pretty(barrons.rule416, "EFFECT(need(Cell, Oxygen), survive(Cell)), Cell = 'All cells', Oxygen = 'oxygen'.").
barrons.rule416:: isa(E6S163-survive, "survive"), agent(E6S163-survive, A2S163-cell), isa(A2S163-cell, "All cells") -> effect(E3S163-need, E6S163-survive), isa(E3S163-need, "need"), agent(E3S163-need, A2S163-cell), object(E3S163-need, A4S163-oxygen), isa(A4S163-oxygen, "oxygen").
english(barrons.rule417, "After the cells use the oxygen the blood carries the waste carbon dioxide back to the lungs").
pretty(barrons.rule417, "isa(carry, 'carries') -> carry(Blood, Dioxide, Use).").
barrons.rule417:: isa(E9S164-carry, "carry") -> agent(E9S164-carry, A8S164-blood), isa(A8S164-blood, "the blood"), object(E9S164-carry, A14S164-dioxide), isa(A14S164-dioxide, "the waste dioxide"), arg(E9S164-carry, A4S164-use), isa(A4S164-use, "After the cells use the oxygen").
english(barrons.rule418, "After the cells use the oxygen the blood carries the waste carbon dioxide back to the lungs").
pretty(barrons.rule418, "isa(Blood, 'the blood') -> carry(Blood, Dioxide, Use).").
barrons.rule418:: isa(A8S164-blood, "the blood") -> isa(E9S164-carry, "carry"), agent(E9S164-carry, A8S164-blood), object(E9S164-carry, A14S164-dioxide), isa(A14S164-dioxide, "the waste dioxide"), arg(E9S164-carry, A4S164-use), isa(A4S164-use, "After the cells use the oxygen").
english(barrons.rule419, "After the cells use the oxygen the blood carries the waste carbon dioxide back to the lungs").
pretty(barrons.rule419, "isa(Dioxide, 'the waste carbon dioxide') -> carry(Blood, Dioxide, Use).").
barrons.rule419:: isa(A14S164-dioxide, "the waste dioxide") -> isa(E9S164-carry, "carry"), agent(E9S164-carry, A8S164-blood), isa(A8S164-blood, "the blood"), object(E9S164-carry, A14S164-dioxide), arg(E9S164-carry, A4S164-use), isa(A4S164-use, "After the cells use the oxygen").
english(barrons.rule420, "After the cells use the oxygen the blood carries the waste carbon dioxide back to the lungs").
pretty(barrons.rule420, "isa(Use, 'After use the oxygen') -> carry(Blood, Dioxide, Use).").
barrons.rule420:: isa(A4S164-use, "After the cells use the oxygen") -> isa(E9S164-carry, "carry"), agent(E9S164-carry, A8S164-blood), isa(A8S164-blood, "the blood"), object(E9S164-carry, A14S164-dioxide), isa(A14S164-dioxide, "the waste dioxide"), arg(E9S164-carry, A4S164-use).
english(barrons.rule421, "The lungs send the carbon dioxide out of the body when we exhale").
pretty(barrons.rule421, "WHEN(send_out(Lung, Dioxide, Of), exhale(We)), Lung = 'The lungs', Dioxide = 'the carbon dioxide', Of = 'of the body', We = 'we'.").
barrons.rule421:: isa(E3S165-send, "send"), agent(E3S165-send, A2S165-lung), isa(A2S165-lung, "The lungs"), object(E3S165-send, A6S165-dioxide), isa(A6S165-dioxide, "the carbon dioxide"), out(E3S165-send, A8S165-of), isa(A8S165-of, "of the body") -> when(E3S165-send, E13S165-exhale), isa(E13S165-exhale, "exhale"), agent(E13S165-exhale, A12S165-we), isa(A12S165-we, "we").
english(barrons.rule422, "The lungs send the carbon dioxide out of the body when we exhale").
pretty(barrons.rule422, "WHEN(send_out(Lung, Dioxide, Of), exhale(We)), Lung = 'The lungs', Dioxide = 'the carbon dioxide', Of = 'of the body', We = 'we'.").
barrons.rule422:: isa(E13S165-exhale, "exhale"), agent(E13S165-exhale, A12S165-we), isa(A12S165-we, "we") -> when(E3S165-send, E13S165-exhale), isa(E3S165-send, "send"), agent(E3S165-send, A2S165-lung), isa(A2S165-lung, "The lungs"), object(E3S165-send, A6S165-dioxide), isa(A6S165-dioxide, "the carbon dioxide"), out(E3S165-send, A8S165-of), isa(A8S165-of, "of the body").
english(barrons.rule423, "The diaphragm is a muscle that moves up and down as we[we] inhale and exhale and helps the lungs take in and let out air").
pretty(barrons.rule423, "EXAMPLE(Diaphragm, move up and down(Muscle, Inhale, Exhale, Take, Let)), Diaphragm = 'The diaphragm', Muscle = 'a muscle', Inhale = 'as inhale', Exhale = 'exhale', Take = 'helps the lungs take in', Let = 'let out air'.").
barrons.rule423:: isa(A2S166-diaphragm, "The diaphragm") -> example(A2S166-diaphragm, A5S166-muscle), isa(E7S166-move, "move up and down"), agent(E7S166-move, A5S166-muscle), isa(A5S166-muscle, "a muscle"), arg(E7S166-move, A13S166-inhale), isa(A13S166-inhale, "as we[we] inhale"), arg(E7S166-move, A15S166-exhale), isa(A15S166-exhale, "exhale"), arg(E7S166-move, A20S166-take), isa(A20S166-take, "helps the lungs take in"), arg(E7S166-move, A23S166-let), isa(A23S166-let, "let out air"), isa(A2S166-diaphragm, A5S166-muscle).
english(barrons.rule424, "The diaphragm is a muscle that moves up and down as we[we] inhale and exhale and helps the lungs take in and let out air").
pretty(barrons.rule424, "EXAMPLE(Diaphragm, move up and down(Muscle, Inhale, Exhale, Take, Let)), Diaphragm = 'The diaphragm', Muscle = 'a muscle', Inhale = 'as inhale', Exhale = 'exhale', Take = 'helps the lungs take in', Let = 'let out air'.").
barrons.rule424:: isa(E7S166-move, "move up and down"), agent(E7S166-move, A5S166-muscle), isa(A5S166-muscle, "a muscle"), arg(E7S166-move, A13S166-inhale), isa(A13S166-inhale, "as we[we] inhale"), arg(E7S166-move, A15S166-exhale), isa(A15S166-exhale, "exhale"), arg(E7S166-move, A20S166-take), isa(A20S166-take, "helps the lungs take in"), arg(E7S166-move, A23S166-let), isa(A23S166-let, "let out air") -> example(A2S166-diaphragm, A5S166-muscle), isa(A2S166-diaphragm, "The diaphragm"), isa(A2S166-diaphragm, A5S166-muscle).
english(barrons.rule425, "The diaphragm is a muscle that moves up and down as we[we] inhale and exhale and helps the lungs take in and let out air").
pretty(barrons.rule425, "EXAMPLE(Diaphragm, Muscle), Diaphragm = 'The diaphragm', Muscle = 'a muscle'.").
barrons.rule425:: isa(A2S166-diaphragm, "The diaphragm") -> example(A2S166-diaphragm, A5S166-muscle), isa(A5S166-muscle, "a muscle").
english(barrons.rule426, "The diaphragm is a muscle that moves up and down as we[we] inhale and exhale and helps the lungs take in and let out air").
pretty(barrons.rule426, "EXAMPLE(Diaphragm, Muscle), Diaphragm = 'The diaphragm', Muscle = 'a muscle'.").
barrons.rule426:: isa(A5S166-muscle, "a muscle") -> example(A2S166-diaphragm, A5S166-muscle), isa(A2S166-diaphragm, "The diaphragm").
english(barrons.rule427, "The diaphragm is a muscle that moves up and down as we[we] inhale and exhale and helps the lungs take in and let out air").
pretty(barrons.rule427, "EFFECT(inhale(We), take in(We)), We = 'we'.").
barrons.rule427:: isa(E13S166-inhale, "inhale"), agent(E13S166-inhale, A12S165-we), isa(A12S165-we, "we") -> effect(E13S166-inhale, E20S166-take), isa(E20S166-take, "take in"), agent(E20S166-take, A12S165-we).
english(barrons.rule428, "The diaphragm is a muscle that moves up and down as we[we] inhale and exhale and helps the lungs take in and let out air").
pretty(barrons.rule428, "EFFECT(inhale(We), take in(We)), We = 'we'.").
barrons.rule428:: isa(E20S166-take, "take in"), agent(E20S166-take, A12S165-we), isa(A12S165-we, "we") -> effect(E13S166-inhale, E20S166-take), isa(E13S166-inhale, "inhale"), agent(E13S166-inhale, A12S165-we).
english(barrons.rule429, "The diaphragm is a muscle that moves up and down as we[we] inhale and exhale and helps the lungs take in and let out air").
pretty(barrons.rule429, "EFFECT(inhale(We), let out(We, Air)), We = 'we', Air = 'air'.").
barrons.rule429:: isa(E13S166-inhale, "inhale"), agent(E13S166-inhale, A12S165-we), isa(A12S165-we, "we") -> effect(E13S166-inhale, E23S166-let), isa(E23S166-let, "let out"), agent(E23S166-let, A12S165-we), object(E23S166-let, A25S166-air), isa(A25S166-air, "air").
english(barrons.rule430, "The diaphragm is a muscle that moves up and down as we[we] inhale and exhale and helps the lungs take in and let out air").
pretty(barrons.rule430, "EFFECT(inhale(We), let out(We, Air)), We = 'we', Air = 'air'.").
barrons.rule430:: isa(E23S166-let, "let out"), agent(E23S166-let, A12S165-we), isa(A12S165-we, "we"), object(E23S166-let, A25S166-air), isa(A25S166-air, "air") -> effect(E13S166-inhale, E23S166-let), isa(E13S166-inhale, "inhale"), agent(E13S166-inhale, A12S165-we).
english(barrons.rule431, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule431, "isa(get, 'get') -> get_to(Body, Nutrient, All).").
barrons.rule431:: isa(E4S167-get, "get") -> agent(E4S167-get, A2S167-body), isa(A2S167-body, "The body"), object(E4S167-get, A5S167-nutrient), isa(A5S167-nutrient, "nutrients"), to(E4S167-get, A9S167-all), isa(A9S167-all, "all of its cells").
english(barrons.rule432, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule432, "isa(Body, 'The body') -> get_to(Body, Nutrient, All).").
barrons.rule432:: isa(A2S167-body, "The body") -> isa(E4S167-get, "get"), agent(E4S167-get, A2S167-body), object(E4S167-get, A5S167-nutrient), isa(A5S167-nutrient, "nutrients"), to(E4S167-get, A9S167-all), isa(A9S167-all, "all of its cells").
english(barrons.rule433, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule433, "isa(Nutrient, 'nutrients') -> get_to(Body, Nutrient, All).").
barrons.rule433:: isa(A5S167-nutrient, "nutrients") -> isa(E4S167-get, "get"), agent(E4S167-get, A2S167-body), isa(A2S167-body, "The body"), object(E4S167-get, A5S167-nutrient), to(E4S167-get, A9S167-all), isa(A9S167-all, "all of its cells").
english(barrons.rule434, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule434, "isa(All, 'all of its cells') -> get_to(Body, Nutrient, All).").
barrons.rule434:: isa(A9S167-all, "all of its cells") -> isa(E4S167-get, "get"), agent(E4S167-get, A2S167-body), isa(A2S167-body, "The body"), object(E4S167-get, A5S167-nutrient), isa(A5S167-nutrient, "nutrients"), to(E4S167-get, A9S167-all).
english(barrons.rule435, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule435, "isa(get, 'get') -> get_to(Body, Oxygen, All).").
barrons.rule435:: isa(E4S167-get, "get") -> agent(E4S167-get, A2S167-body), isa(A2S167-body, "The body"), object(E4S167-get, A7S167-oxygen), isa(A7S167-oxygen, "oxygen"), to(E4S167-get, A9S167-all), isa(A9S167-all, "all of its cells").
english(barrons.rule436, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule436, "isa(Body, 'The body') -> get_to(Body, Oxygen, All).").
barrons.rule436:: isa(A2S167-body, "The body") -> isa(E4S167-get, "get"), agent(E4S167-get, A2S167-body), object(E4S167-get, A7S167-oxygen), isa(A7S167-oxygen, "oxygen"), to(E4S167-get, A9S167-all), isa(A9S167-all, "all of its cells").
english(barrons.rule437, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule437, "isa(Oxygen, 'oxygen') -> get_to(Body, Oxygen, All).").
barrons.rule437:: isa(A7S167-oxygen, "oxygen") -> isa(E4S167-get, "get"), agent(E4S167-get, A2S167-body), isa(A2S167-body, "The body"), object(E4S167-get, A7S167-oxygen), to(E4S167-get, A9S167-all), isa(A9S167-all, "all of its cells").
english(barrons.rule438, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule438, "isa(All, 'all of its cells') -> get_to(Body, Oxygen, All).").
barrons.rule438:: isa(A9S167-all, "all of its cells") -> isa(E4S167-get, "get"), agent(E4S167-get, A2S167-body), isa(A2S167-body, "The body"), object(E4S167-get, A7S167-oxygen), isa(A7S167-oxygen, "oxygen"), to(E4S167-get, A9S167-all).
english(barrons.rule439, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule439, "isa(get, 'get') -> get_to(Body, Tissue, All).").
barrons.rule439:: isa(E4S167-get, "get") -> agent(E4S167-get, A2S167-body), isa(A2S167-body, "The body"), object(E4S167-get, A14S167-tissue), isa(A14S167-tissue, "tissues"), to(E4S167-get, A9S167-all), isa(A9S167-all, "all of its cells").
english(barrons.rule440, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule440, "isa(Body, 'The body') -> get_to(Body, Tissue, All).").
barrons.rule440:: isa(A2S167-body, "The body") -> isa(E4S167-get, "get"), agent(E4S167-get, A2S167-body), object(E4S167-get, A14S167-tissue), isa(A14S167-tissue, "tissues"), to(E4S167-get, A9S167-all), isa(A9S167-all, "all of its cells").
english(barrons.rule441, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule441, "isa(Tissue, 'tissues') -> get_to(Body, Tissue, All).").
barrons.rule441:: isa(A14S167-tissue, "tissues") -> isa(E4S167-get, "get"), agent(E4S167-get, A2S167-body), isa(A2S167-body, "The body"), object(E4S167-get, A14S167-tissue), to(E4S167-get, A9S167-all), isa(A9S167-all, "all of its cells").
english(barrons.rule442, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule442, "isa(All, 'all of its cells') -> get_to(Body, Tissue, All).").
barrons.rule442:: isa(A9S167-all, "all of its cells") -> isa(E4S167-get, "get"), agent(E4S167-get, A2S167-body), isa(A2S167-body, "The body"), object(E4S167-get, A14S167-tissue), isa(A14S167-tissue, "tissues"), to(E4S167-get, A9S167-all).
english(barrons.rule443, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule443, "isa(get, 'get') -> get_to(Body, Organ, All).").
barrons.rule443:: isa(E4S167-get, "get") -> agent(E4S167-get, A2S167-body), isa(A2S167-body, "The body"), object(E4S167-get, A17S167-organ), isa(A17S167-organ, "organs"), to(E4S167-get, A9S167-all), isa(A9S167-all, "all of its cells").
english(barrons.rule444, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule444, "isa(Body, 'The body') -> get_to(Body, Organ, All).").
barrons.rule444:: isa(A2S167-body, "The body") -> isa(E4S167-get, "get"), agent(E4S167-get, A2S167-body), object(E4S167-get, A17S167-organ), isa(A17S167-organ, "organs"), to(E4S167-get, A9S167-all), isa(A9S167-all, "all of its cells").
english(barrons.rule445, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule445, "isa(Organ, 'organs') -> get_to(Body, Organ, All).").
barrons.rule445:: isa(A17S167-organ, "organs") -> isa(E4S167-get, "get"), agent(E4S167-get, A2S167-body), isa(A2S167-body, "The body"), object(E4S167-get, A17S167-organ), to(E4S167-get, A9S167-all), isa(A9S167-all, "all of its cells").
english(barrons.rule446, "The body must get nutrients and oxygen to all of its cells tissues and organs").
pretty(barrons.rule446, "isa(All, 'all of its cells') -> get_to(Body, Organ, All).").
barrons.rule446:: isa(A9S167-all, "all of its cells") -> isa(E4S167-get, "get"), agent(E4S167-get, A2S167-body), isa(A2S167-body, "The body"), object(E4S167-get, A17S167-organ), isa(A17S167-organ, "organs"), to(E4S167-get, A9S167-all).
english(barrons.rule447, "It[the body] does this by circulating blood throughout the body").
pretty(barrons.rule447, "isa(do, 'does') -> do(Body, This).").
barrons.rule447:: isa(E2S168-do, "do") -> agent(E2S168-do, A12S12-body), isa(A12S12-body, "the body"), object(E2S168-do, A3S168-this), isa(A3S168-this, "this").
english(barrons.rule448, "It[the body] does this by circulating blood throughout the body").
pretty(barrons.rule448, "isa(Body, 'the body') -> do(Body, This).").
barrons.rule448:: isa(A12S12-body, "the body") -> isa(E2S168-do, "do"), agent(E2S168-do, A12S12-body), object(E2S168-do, A3S168-this), isa(A3S168-this, "this").
english(barrons.rule449, "It[the body] does this by circulating blood throughout the body").
pretty(barrons.rule449, "isa(This, 'this') -> do(Body, This).").
barrons.rule449:: isa(A3S168-this, "this") -> isa(E2S168-do, "do"), agent(E2S168-do, A12S12-body), isa(A12S12-body, "the body"), object(E2S168-do, A3S168-this).
english(barrons.rule450, "It[the body] does this by circulating blood throughout the body").
pretty(barrons.rule450, "ENABLE(circulate_throughout(Body, Blood, Body), do(Body, This)), Body = 'the body', Blood = 'blood', Body = 'the body', This = 'this'.").
barrons.rule450:: isa(E5S168-circulate, "circulate"), agent(E5S168-circulate, A12S12-body), isa(A12S12-body, "the body"), object(E5S168-circulate, A6S168-blood), isa(A6S168-blood, "blood"), throughout(E5S168-circulate, A9S168-body), isa(A9S168-body, "the body") -> enable(E5S168-circulate, E2S168-do), isa(E2S168-do, "do"), agent(E2S168-do, A12S12-body), object(E2S168-do, A3S168-this), isa(A3S168-this, "this").
english(barrons.rule451, "It[the body] does this by circulating blood throughout the body").
pretty(barrons.rule451, "ENABLE(circulate_throughout(Body, Blood, Body), do(Body, This)), Body = 'the body', Blood = 'blood', Body = 'the body', This = 'this'.").
barrons.rule451:: isa(E2S168-do, "do"), agent(E2S168-do, A12S12-body), isa(A12S12-body, "the body"), object(E2S168-do, A3S168-this), isa(A3S168-this, "this") -> enable(E5S168-circulate, E2S168-do), isa(E5S168-circulate, "circulate"), agent(E5S168-circulate, A12S12-body), object(E5S168-circulate, A6S168-blood), isa(A6S168-blood, "blood"), throughout(E5S168-circulate, A9S168-body), isa(A9S168-body, "the body").
english(barrons.rule452, "The blood carries the nutrients through tubes called vessels").
pretty(barrons.rule452, "isa(carry, 'carries') -> carry_through(Blood, Nutrient, Tube).").
barrons.rule452:: isa(E3S169-carry, "carry") -> agent(E3S169-carry, A2S169-blood), isa(A2S169-blood, "The blood"), object(E3S169-carry, A5S169-nutrient), isa(A5S169-nutrient, "the nutrients"), through(E3S169-carry, A7S169-tube), isa(A7S169-tube, "tubes called vessels").
english(barrons.rule453, "The blood carries the nutrients through tubes called vessels").
pretty(barrons.rule453, "isa(Blood, 'The blood') -> carry_through(Blood, Nutrient, Tube).").
barrons.rule453:: isa(A2S169-blood, "The blood") -> isa(E3S169-carry, "carry"), agent(E3S169-carry, A2S169-blood), object(E3S169-carry, A5S169-nutrient), isa(A5S169-nutrient, "the nutrients"), through(E3S169-carry, A7S169-tube), isa(A7S169-tube, "tubes called vessels").
english(barrons.rule454, "The blood carries the nutrients through tubes called vessels").
pretty(barrons.rule454, "isa(Nutrient, 'the nutrients') -> carry_through(Blood, Nutrient, Tube).").
barrons.rule454:: isa(A5S169-nutrient, "the nutrients") -> isa(E3S169-carry, "carry"), agent(E3S169-carry, A2S169-blood), isa(A2S169-blood, "The blood"), object(E3S169-carry, A5S169-nutrient), through(E3S169-carry, A7S169-tube), isa(A7S169-tube, "tubes called vessels").
english(barrons.rule455, "The blood carries the nutrients through tubes called vessels").
pretty(barrons.rule455, "isa(Tube, 'tubes') -> carry_through(Blood, Nutrient, Tube).").
barrons.rule455:: isa(A7S169-tube, "tubes called vessels") -> isa(E3S169-carry, "carry"), agent(E3S169-carry, A2S169-blood), isa(A2S169-blood, "The blood"), object(E3S169-carry, A5S169-nutrient), isa(A5S169-nutrient, "the nutrients"), through(E3S169-carry, A7S169-tube).
english(barrons.rule456, "The blood is circulated carried all over the body because of a strong muscle that continuously pumps the blood called the heart").
pretty(barrons.rule456, "CAUSE(Muscle, circulate_over(Blood, Body, of(Muscle))), Muscle = 'a strong muscle', Blood = 'The blood', Body = 'the body', Muscle = 'a strong muscle'.").
barrons.rule456:: isa(A16S170-muscle, "a strong muscle") -> cause(A16S170-muscle, E4S170-circulate), isa(E4S170-circulate, "circulate"), object(E4S170-circulate, A2S170-blood), isa(A2S170-blood, "The blood"), over(E4S170-circulate, A11S170-body), isa(A11S170-body, "the body"), of(E4S170-circulate, A16S170-muscle).
english(barrons.rule457, "The blood is circulated carried all over the body because of a strong muscle that continuously pumps the blood called the heart").
pretty(barrons.rule457, "CAUSE(Muscle, circulate_over(Blood, Body, of(Muscle))), Muscle = 'a strong muscle', Blood = 'The blood', Body = 'the body', Muscle = 'a strong muscle'.").
barrons.rule457:: isa(E4S170-circulate, "circulate"), object(E4S170-circulate, A2S170-blood), isa(A2S170-blood, "The blood"), over(E4S170-circulate, A11S170-body), isa(A11S170-body, "the body"), of(E4S170-circulate, A16S170-muscle), isa(A16S170-muscle, "a strong muscle") -> cause(A16S170-muscle, E4S170-circulate).
english(barrons.rule458, "When you put your fingertips against the inside of your wrist you can feel the blood pulsing through your vessels").
pretty(barrons.rule458, "WHEN(feel(You, Blood), put_against(You, Fingertip, Inside)), You = 'you', Blood = 'the blood', You = 'you', Fingertip = 'your fingertips', Inside = 'the inside of your wrist'.").
barrons.rule458:: isa(E14S171-feel, "feel"), agent(E14S171-feel, A12S171-you), isa(A12S171-you, "you"), object(E14S171-feel, A16S171-blood), isa(A16S171-blood, "the blood") -> when(E14S171-feel, E3S171-put), isa(E3S171-put, "put"), agent(E3S171-put, A2S171-you), isa(A2S171-you, "you"), object(E3S171-put, A5S171-fingertip), isa(A5S171-fingertip, "your fingertips"), against(E3S171-put, A8S171-inside), isa(A8S171-inside, "the inside of your wrist").
english(barrons.rule459, "When you put your fingertips against the inside of your wrist you can feel the blood pulsing through your vessels").
pretty(barrons.rule459, "WHEN(feel(You, Blood), put_against(You, Fingertip, Inside)), You = 'you', Blood = 'the blood', You = 'you', Fingertip = 'your fingertips', Inside = 'the inside of your wrist'.").
barrons.rule459:: isa(E3S171-put, "put"), agent(E3S171-put, A2S171-you), isa(A2S171-you, "you"), object(E3S171-put, A5S171-fingertip), isa(A5S171-fingertip, "your fingertips"), against(E3S171-put, A8S171-inside), isa(A8S171-inside, "the inside of your wrist") -> when(E14S171-feel, E3S171-put), isa(E14S171-feel, "feel"), agent(E14S171-feel, A12S171-you), isa(A12S171-you, "you"), object(E14S171-feel, A16S171-blood), isa(A16S171-blood, "the blood").
english(barrons.rule460, "The blood takes the chemical waste and excess water to the kidneys where it[the blood] is collected and sent to the bladder until the body excretes it[the body] as urine").
pretty(barrons.rule460, "isa(take, 'takes') -> take_to(Blood, Waste, Kidney).").
barrons.rule460:: isa(E3S173-take, "take") -> agent(E3S173-take, A2S173-blood), isa(A2S173-blood, "The blood"), object(E3S173-take, A6S173-waste), isa(A6S173-waste, "the chemical waste"), to(E3S173-take, A12S173-kidney), isa(A12S173-kidney, "the kidneys").
english(barrons.rule461, "The blood takes the chemical waste and excess water to the kidneys where it[the blood] is collected and sent to the bladder until the body excretes it[the body] as urine").
pretty(barrons.rule461, "isa(Blood, 'The blood') -> take_to(Blood, Waste, Kidney).").
barrons.rule461:: isa(A2S173-blood, "The blood") -> isa(E3S173-take, "take"), agent(E3S173-take, A2S173-blood), object(E3S173-take, A6S173-waste), isa(A6S173-waste, "the chemical waste"), to(E3S173-take, A12S173-kidney), isa(A12S173-kidney, "the kidneys").
english(barrons.rule462, "The blood takes the chemical waste and excess water to the kidneys where it[the blood] is collected and sent to the bladder until the body excretes it[the body] as urine").
pretty(barrons.rule462, "isa(Waste, 'the chemical waste') -> take_to(Blood, Waste, Kidney).").
barrons.rule462:: isa(A6S173-waste, "the chemical waste") -> isa(E3S173-take, "take"), agent(E3S173-take, A2S173-blood), isa(A2S173-blood, "The blood"), object(E3S173-take, A6S173-waste), to(E3S173-take, A12S173-kidney), isa(A12S173-kidney, "the kidneys").
english(barrons.rule463, "The blood takes the chemical waste and excess water to the kidneys where it[the blood] is collected and sent to the bladder until the body excretes it[the body] as urine").
pretty(barrons.rule463, "isa(Kidney, 'the kidneys') -> take_to(Blood, Waste, Kidney).").
barrons.rule463:: isa(A12S173-kidney, "the kidneys") -> isa(E3S173-take, "take"), agent(E3S173-take, A2S173-blood), isa(A2S173-blood, "The blood"), object(E3S173-take, A6S173-waste), isa(A6S173-waste, "the chemical waste"), to(E3S173-take, A12S173-kidney).
english(barrons.rule464, "The blood takes the chemical waste and excess water to the kidneys where it[the blood] is collected and sent to the bladder until the body excretes it[the body] as urine").
pretty(barrons.rule464, "isa(take, 'takes') -> take_to(Blood, Water, Kidney).").
barrons.rule464:: isa(E3S173-take, "take") -> agent(E3S173-take, A2S173-blood), isa(A2S173-blood, "The blood"), object(E3S173-take, A9S173-water), isa(A9S173-water, "excess water"), to(E3S173-take, A12S173-kidney), isa(A12S173-kidney, "the kidneys").
english(barrons.rule465, "The blood takes the chemical waste and excess water to the kidneys where it[the blood] is collected and sent to the bladder until the body excretes it[the body] as urine").
pretty(barrons.rule465, "isa(Blood, 'The blood') -> take_to(Blood, Water, Kidney).").
barrons.rule465:: isa(A2S173-blood, "The blood") -> isa(E3S173-take, "take"), agent(E3S173-take, A2S173-blood), object(E3S173-take, A9S173-water), isa(A9S173-water, "excess water"), to(E3S173-take, A12S173-kidney), isa(A12S173-kidney, "the kidneys").
english(barrons.rule466, "The blood takes the chemical waste and excess water to the kidneys where it[the blood] is collected and sent to the bladder until the body excretes it[the body] as urine").
pretty(barrons.rule466, "isa(Water, 'excess water') -> take_to(Blood, Water, Kidney).").
barrons.rule466:: isa(A9S173-water, "excess water") -> isa(E3S173-take, "take"), agent(E3S173-take, A2S173-blood), isa(A2S173-blood, "The blood"), object(E3S173-take, A9S173-water), to(E3S173-take, A12S173-kidney), isa(A12S173-kidney, "the kidneys").
english(barrons.rule467, "The blood takes the chemical waste and excess water to the kidneys where it[the blood] is collected and sent to the bladder until the body excretes it[the body] as urine").
pretty(barrons.rule467, "isa(Kidney, 'the kidneys') -> take_to(Blood, Water, Kidney).").
barrons.rule467:: isa(A12S173-kidney, "the kidneys") -> isa(E3S173-take, "take"), agent(E3S173-take, A2S173-blood), isa(A2S173-blood, "The blood"), object(E3S173-take, A9S173-water), isa(A9S173-water, "excess water"), to(E3S173-take, A12S173-kidney).
english(barrons.rule468, "Animals need to move around to find shelter and food").
pretty(barrons.rule468, "EFFECT(move(Animal, Around), find(Animal, Shelter)), Animal = 'Animals', Around = 'around', Shelter = 'shelter'.").
barrons.rule468:: isa(E4S174-move, "move"), agent(E4S174-move, A1S174-animal), isa(A1S174-animal, "Animals"), arg(E4S174-move, A5S174-around), isa(A5S174-around, "around") -> effect(E4S174-move, E7S174-find), isa(E7S174-find, "find"), agent(E7S174-find, A1S174-animal), object(E7S174-find, A8S174-shelter), isa(A8S174-shelter, "shelter").
english(barrons.rule469, "Animals need to move around to find shelter and food").
pretty(barrons.rule469, "EFFECT(move(Animal, Around), find(Animal, Shelter)), Animal = 'Animals', Around = 'around', Shelter = 'shelter'.").
barrons.rule469:: isa(E7S174-find, "find"), agent(E7S174-find, A1S174-animal), isa(A1S174-animal, "Animals"), object(E7S174-find, A8S174-shelter), isa(A8S174-shelter, "shelter") -> effect(E4S174-move, E7S174-find), isa(E4S174-move, "move"), agent(E4S174-move, A1S174-animal), arg(E4S174-move, A5S174-around), isa(A5S174-around, "around").
english(barrons.rule470, "Animals need to move around to find shelter and food").
pretty(barrons.rule470, "EFFECT(move(Animal, Around), find(Animal, Food)), Animal = 'Animals', Around = 'around', Food = 'food'.").
barrons.rule470:: isa(E4S174-move, "move"), agent(E4S174-move, A1S174-animal), isa(A1S174-animal, "Animals"), arg(E4S174-move, A5S174-around), isa(A5S174-around, "around") -> effect(E4S174-move, E7S174-find), isa(E7S174-find, "find"), agent(E7S174-find, A1S174-animal), object(E7S174-find, A10S174-food), isa(A10S174-food, "food").
english(barrons.rule471, "Animals need to move around to find shelter and food").
pretty(barrons.rule471, "EFFECT(move(Animal, Around), find(Animal, Food)), Animal = 'Animals', Around = 'around', Food = 'food'.").
barrons.rule471:: isa(E7S174-find, "find"), agent(E7S174-find, A1S174-animal), isa(A1S174-animal, "Animals"), object(E7S174-find, A10S174-food), isa(A10S174-food, "food") -> effect(E4S174-move, E7S174-find), isa(E4S174-move, "move"), agent(E4S174-move, A1S174-animal), arg(E4S174-move, A5S174-around), isa(A5S174-around, "around").
english(barrons.rule472, "They[Animals] do this by moving muscles and bones").
pretty(barrons.rule472, "isa(do, 'do') -> do(Animal, This).").
barrons.rule472:: isa(E2S175-do, "do") -> agent(E2S175-do, A1S7-animal), isa(A1S7-animal, "Animals"), object(E2S175-do, A3S175-this), isa(A3S175-this, "this").
english(barrons.rule473, "They[Animals] do this by moving muscles and bones").
pretty(barrons.rule473, "isa(Animal, 'Animals') -> do(Animal, This).").
barrons.rule473:: isa(A1S7-animal, "Animals") -> isa(E2S175-do, "do"), agent(E2S175-do, A1S7-animal), object(E2S175-do, A3S175-this), isa(A3S175-this, "this").
english(barrons.rule474, "They[Animals] do this by moving muscles and bones").
pretty(barrons.rule474, "isa(This, 'this') -> do(Animal, This).").
barrons.rule474:: isa(A3S175-this, "this") -> isa(E2S175-do, "do"), agent(E2S175-do, A1S7-animal), isa(A1S7-animal, "Animals"), object(E2S175-do, A3S175-this).
english(barrons.rule475, "They[Animals] do this by moving muscles and bones").
pretty(barrons.rule475, "ENABLE(move(Animal, Muscle), do(Animal, This)), Animal = 'Animals', Muscle = 'muscles', This = 'this'.").
barrons.rule475:: isa(E5S175-move, "move"), agent(E5S175-move, A1S7-animal), isa(A1S7-animal, "Animals"), object(E5S175-move, A6S175-muscle), isa(A6S175-muscle, "muscles") -> enable(E5S175-move, E2S175-do), isa(E2S175-do, "do"), agent(E2S175-do, A1S7-animal), object(E2S175-do, A3S175-this), isa(A3S175-this, "this").
english(barrons.rule476, "They[Animals] do this by moving muscles and bones").
pretty(barrons.rule476, "ENABLE(move(Animal, Muscle), do(Animal, This)), Animal = 'Animals', Muscle = 'muscles', This = 'this'.").
barrons.rule476:: isa(E2S175-do, "do"), agent(E2S175-do, A1S7-animal), isa(A1S7-animal, "Animals"), object(E2S175-do, A3S175-this), isa(A3S175-this, "this") -> enable(E5S175-move, E2S175-do), isa(E5S175-move, "move"), agent(E5S175-move, A1S7-animal), object(E5S175-move, A6S175-muscle), isa(A6S175-muscle, "muscles").
english(barrons.rule477, "They[Animals] do this by moving muscles and bones").
pretty(barrons.rule477, "ENABLE(move(Animal, Bone), do(Animal, This)), Animal = 'Animals', Bone = 'bones', This = 'this'.").
barrons.rule477:: isa(E5S175-move, "move"), agent(E5S175-move, A1S7-animal), isa(A1S7-animal, "Animals"), object(E5S175-move, A8S175-bone), isa(A8S175-bone, "bones") -> enable(E5S175-move, E2S175-do), isa(E2S175-do, "do"), agent(E2S175-do, A1S7-animal), object(E2S175-do, A3S175-this), isa(A3S175-this, "this").
english(barrons.rule478, "They[Animals] do this by moving muscles and bones").
pretty(barrons.rule478, "ENABLE(move(Animal, Bone), do(Animal, This)), Animal = 'Animals', Bone = 'bones', This = 'this'.").
barrons.rule478:: isa(E2S175-do, "do"), agent(E2S175-do, A1S7-animal), isa(A1S7-animal, "Animals"), object(E2S175-do, A3S175-this), isa(A3S175-this, "this") -> enable(E5S175-move, E2S175-do), isa(E5S175-move, "move"), agent(E5S175-move, A1S7-animal), object(E5S175-move, A8S175-bone), isa(A8S175-bone, "bones").
english(barrons.rule479, "The skeleton provides support and protects the body 's organs").
pretty(barrons.rule479, "isa(provide, 'provides') -> provide(Skeleton, Support).").
barrons.rule479:: isa(E3S176-provide, "provide") -> agent(E3S176-provide, A2S176-skeleton), isa(A2S176-skeleton, "The skeleton"), object(E3S176-provide, A4S176-support), isa(A4S176-support, "support").
english(barrons.rule480, "The skeleton provides support and protects the body 's organs").
pretty(barrons.rule480, "isa(Skeleton, 'The skeleton') -> provide(Skeleton, Support).").
barrons.rule480:: isa(A2S176-skeleton, "The skeleton") -> isa(E3S176-provide, "provide"), agent(E3S176-provide, A2S176-skeleton), object(E3S176-provide, A4S176-support), isa(A4S176-support, "support").
english(barrons.rule481, "The skeleton provides support and protects the body 's organs").
pretty(barrons.rule481, "isa(Support, 'support') -> provide(Skeleton, Support).").
barrons.rule481:: isa(A4S176-support, "support") -> isa(E3S176-provide, "provide"), agent(E3S176-provide, A2S176-skeleton), isa(A2S176-skeleton, "The skeleton"), object(E3S176-provide, A4S176-support).
english(barrons.rule482, "They[the seed surroundings] do all of this with their[the seed surroundings] brain and nerves").
pretty(barrons.rule482, "isa(This, 'this') -> do_with(Surroundings, All, Brain, with(Nerve)).").
barrons.rule482:: isa(A5S178-this, "this") -> of(A3S178-all, A5S178-this), isa(E2S178-do, "do"), agent(E2S178-do, A4S117-surroundings), isa(A4S117-surroundings, "the seed surroundings"), object(E2S178-do, A3S178-all), isa(A3S178-all, "all"), with(E2S178-do, A8S178-brain), isa(A8S178-brain, "their[the seed surroundings] brain"), with(E2S178-do, A10S178-nerve), isa(A10S178-nerve, "nerves").
english(barrons.rule483, "They[the seed surroundings] do all of this with their[the seed surroundings] brain and nerves").
pretty(barrons.rule483, "isa(do, 'do') -> do_with(Surroundings, All, Brain, with(Nerve)).").
barrons.rule483:: isa(E2S178-do, "do") -> of(A3S178-all, A5S178-this), isa(A5S178-this, "this"), agent(E2S178-do, A4S117-surroundings), isa(A4S117-surroundings, "the seed surroundings"), object(E2S178-do, A3S178-all), isa(A3S178-all, "all"), with(E2S178-do, A8S178-brain), isa(A8S178-brain, "their[the seed surroundings] brain"), with(E2S178-do, A10S178-nerve), isa(A10S178-nerve, "nerves").
english(barrons.rule484, "They[the seed surroundings] do all of this with their[the seed surroundings] brain and nerves").
pretty(barrons.rule484, "isa(Surroundings, 'the seed surroundings') -> do_with(Surroundings, All, Brain, with(Nerve)).").
barrons.rule484:: isa(A4S117-surroundings, "the seed surroundings") -> of(A3S178-all, A5S178-this), isa(A5S178-this, "this"), isa(E2S178-do, "do"), agent(E2S178-do, A4S117-surroundings), object(E2S178-do, A3S178-all), isa(A3S178-all, "all"), with(E2S178-do, A8S178-brain), isa(A8S178-brain, "their[the seed surroundings] brain"), with(E2S178-do, A10S178-nerve), isa(A10S178-nerve, "nerves").
english(barrons.rule485, "They[the seed surroundings] do all of this with their[the seed surroundings] brain and nerves").
pretty(barrons.rule485, "isa(All, 'all of this') -> do_with(Surroundings, All, Brain, with(Nerve)).").
barrons.rule485:: isa(A3S178-all, "all") -> of(A3S178-all, A5S178-this), isa(A5S178-this, "this"), isa(E2S178-do, "do"), agent(E2S178-do, A4S117-surroundings), isa(A4S117-surroundings, "the seed surroundings"), object(E2S178-do, A3S178-all), with(E2S178-do, A8S178-brain), isa(A8S178-brain, "their[the seed surroundings] brain"), with(E2S178-do, A10S178-nerve), isa(A10S178-nerve, "nerves").
english(barrons.rule486, "They[the seed surroundings] do all of this with their[the seed surroundings] brain and nerves").
pretty(barrons.rule486, "isa(Brain, 'their[the seed surroundings] brain') -> do_with(Surroundings, All, Brain, with(Nerve)).").
barrons.rule486:: isa(A8S178-brain, "their[the seed surroundings] brain") -> of(A3S178-all, A5S178-this), isa(A5S178-this, "this"), isa(E2S178-do, "do"), agent(E2S178-do, A4S117-surroundings), isa(A4S117-surroundings, "the seed surroundings"), object(E2S178-do, A3S178-all), isa(A3S178-all, "all"), with(E2S178-do, A8S178-brain), with(E2S178-do, A10S178-nerve), isa(A10S178-nerve, "nerves").
english(barrons.rule487, "They[the seed surroundings] do all of this with their[the seed surroundings] brain and nerves").
pretty(barrons.rule487, "isa(Nerve, 'nerves') -> do_with(Surroundings, All, Brain, with(Nerve)).").
barrons.rule487:: isa(A10S178-nerve, "nerves") -> of(A3S178-all, A5S178-this), isa(A5S178-this, "this"), isa(E2S178-do, "do"), agent(E2S178-do, A4S117-surroundings), isa(A4S117-surroundings, "the seed surroundings"), object(E2S178-do, A3S178-all), isa(A3S178-all, "all"), with(E2S178-do, A8S178-brain), isa(A8S178-brain, "their[the seed surroundings] brain"), with(E2S178-do, A10S178-nerve).
english(barrons.rule488, "Humans have five senses taste touch smell sight and hearing").
pretty(barrons.rule488, "isa(have, 'have') -> have(Human, Sens).").
barrons.rule488:: isa(E2S179-have, "have") -> agent(E2S179-have, A1S179-human), isa(A1S179-human, "Humans"), object(E2S179-have, A4S179-sens), isa(A4S179-sens, "five senses").
english(barrons.rule489, "Humans have five senses taste touch smell sight and hearing").
pretty(barrons.rule489, "isa(Human, 'Humans') -> have(Human, Sens).").
barrons.rule489:: isa(A1S179-human, "Humans") -> isa(E2S179-have, "have"), agent(E2S179-have, A1S179-human), object(E2S179-have, A4S179-sens), isa(A4S179-sens, "five senses").
english(barrons.rule490, "Humans have five senses taste touch smell sight and hearing").
pretty(barrons.rule490, "isa(Sens, 'five senses taste touch smell sight and hearing') -> have(Human, Sens).").
barrons.rule490:: isa(A4S179-sens, "five senses") -> isa(E2S179-have, "have"), agent(E2S179-have, A1S179-human), isa(A1S179-human, "Humans"), object(E2S179-have, A4S179-sens).
english(barrons.rule491, "The senses tell the organism all that is happening around them[five senses taste touch smell sight and hearing]").
pretty(barrons.rule491, "isa(tell, 'tell') -> tell(Sens, Organism, All).").
barrons.rule491:: isa(E3S180-tell, "tell") -> agent(E3S180-tell, A2S180-sens), isa(A2S180-sens, "The senses"), object(E3S180-tell, A5S180-organism), isa(A5S180-organism, "the organism"), arg(E3S180-tell, A6S180-all), isa(A6S180-all, "all").
english(barrons.rule492, "The senses tell the organism all that is happening around them[five senses taste touch smell sight and hearing]").
pretty(barrons.rule492, "isa(Sens, 'The senses') -> tell(Sens, Organism, All).").
barrons.rule492:: isa(A2S180-sens, "The senses") -> isa(E3S180-tell, "tell"), agent(E3S180-tell, A2S180-sens), object(E3S180-tell, A5S180-organism), isa(A5S180-organism, "the organism"), arg(E3S180-tell, A6S180-all), isa(A6S180-all, "all").
english(barrons.rule493, "The senses tell the organism all that is happening around them[five senses taste touch smell sight and hearing]").
pretty(barrons.rule493, "isa(Organism, 'the organism') -> tell(Sens, Organism, All).").
barrons.rule493:: isa(A5S180-organism, "the organism") -> isa(E3S180-tell, "tell"), agent(E3S180-tell, A2S180-sens), isa(A2S180-sens, "The senses"), object(E3S180-tell, A5S180-organism), arg(E3S180-tell, A6S180-all), isa(A6S180-all, "all").
english(barrons.rule494, "The senses tell the organism all that is happening around them[five senses taste touch smell sight and hearing]").
pretty(barrons.rule494, "isa(All, 'all') -> tell(Sens, Organism, All).").
barrons.rule494:: isa(A6S180-all, "all") -> isa(E3S180-tell, "tell"), agent(E3S180-tell, A2S180-sens), isa(A2S180-sens, "The senses"), object(E3S180-tell, A5S180-organism), isa(A5S180-organism, "the organism"), arg(E3S180-tell, A6S180-all).
english(barrons.rule495, "The vibrations from sound move tiny bones in our[We] ears which send a message through the auditory nerve to the brain so that we[We] understand what is being heard").
pretty(barrons.rule495, "EFFECT(send_through(Bone, Message, Nerve, to(Brain)), understand(We, Hear)), Bone = 'sound move tiny bones in our[We] ears', Message = 'a message', Nerve = 'the auditory nerve', Brain = 'the brain', We = 'We', Hear = 'what being heard'.").
barrons.rule495:: in(A7S182-bone, A10S182-ear), isa(A10S182-ear, "our[We] ears"), isa(E12S182-send, "send"), agent(E12S182-send, A7S182-bone), isa(A7S182-bone, "sound move tiny bones"), object(E12S182-send, A14S182-message), isa(A14S182-message, "a message"), through(E12S182-send, A18S182-nerve), isa(A18S182-nerve, "the auditory nerve"), to(E12S182-send, A21S182-brain), isa(A21S182-brain, "the brain") -> effect(E12S182-send, E25S182-understand), isa(E25S182-understand, "understand"), agent(E25S182-understand, A1S181-we), isa(A1S181-we, "We"), arg(E25S182-understand, A29S182-hear), isa(A29S182-hear, "what is being heard").
english(barrons.rule496, "The vibrations from sound move tiny bones in our[We] ears which send a message through the auditory nerve to the brain so that we[We] understand what is being heard").
pretty(barrons.rule496, "EFFECT(send_through(Bone, Message, Nerve, to(Brain)), understand(We, Hear)), Bone = 'sound move tiny bones in our[We] ears', Message = 'a message', Nerve = 'the auditory nerve', Brain = 'the brain', We = 'We', Hear = 'what being heard'.").
barrons.rule496:: isa(E25S182-understand, "understand"), agent(E25S182-understand, A1S181-we), isa(A1S181-we, "We"), arg(E25S182-understand, A29S182-hear), isa(A29S182-hear, "what is being heard") -> effect(E12S182-send, E25S182-understand), in(A7S182-bone, A10S182-ear), isa(A10S182-ear, "our[We] ears"), isa(E12S182-send, "send"), agent(E12S182-send, A7S182-bone), isa(A7S182-bone, "sound move tiny bones"), object(E12S182-send, A14S182-message), isa(A14S182-message, "a message"), through(E12S182-send, A18S182-nerve), isa(A18S182-nerve, "the auditory nerve"), to(E12S182-send, A21S182-brain), isa(A21S182-brain, "the brain").
english(barrons.rule497, "The taste buds send information to the brain so that we[We] can decide if we[We] like or dislike the taste").
pretty(barrons.rule497, "EFFECT(send_to(Bud, Information, Brain), decide(We, Like, Dislike)), Bud = 'The taste buds', Information = 'information', Brain = 'the brain', We = 'We', Like = 'if like the taste', Dislike = 'dislike'.").
barrons.rule497:: isa(E4S185-send, "send"), agent(E4S185-send, A3S185-bud), isa(A3S185-bud, "The taste buds"), object(E4S185-send, A5S185-information), isa(A5S185-information, "information"), to(E4S185-send, A8S185-brain), isa(A8S185-brain, "the brain") -> effect(E4S185-send, E13S185-decide), isa(E13S185-decide, "decide"), agent(E13S185-decide, A1S181-we), isa(A1S181-we, "We"), arg(E13S185-decide, A16S185-like), isa(A16S185-like, "if we[We] like the taste"), arg(E13S185-decide, A18S185-dislike), isa(A18S185-dislike, "dislike").
english(barrons.rule498, "The taste buds send information to the brain so that we[We] can decide if we[We] like or dislike the taste").
pretty(barrons.rule498, "EFFECT(send_to(Bud, Information, Brain), decide(We, Like, Dislike)), Bud = 'The taste buds', Information = 'information', Brain = 'the brain', We = 'We', Like = 'if like the taste', Dislike = 'dislike'.").
barrons.rule498:: isa(E13S185-decide, "decide"), agent(E13S185-decide, A1S181-we), isa(A1S181-we, "We"), arg(E13S185-decide, A16S185-like), isa(A16S185-like, "if we[We] like the taste"), arg(E13S185-decide, A18S185-dislike), isa(A18S185-dislike, "dislike") -> effect(E4S185-send, E13S185-decide), isa(E4S185-send, "send"), agent(E4S185-send, A3S185-bud), isa(A3S185-bud, "The taste buds"), object(E4S185-send, A5S185-information), isa(A5S185-information, "information"), to(E4S185-send, A8S185-brain), isa(A8S185-brain, "the brain").
english(barrons.rule499, "The eyes take in light through the lenses and transmit the shapes and images through the optic nerve to the brain").
pretty(barrons.rule499, "isa(Lens, 'the lenses') -> take in(Eye, Light).").
barrons.rule499:: isa(A8S187-lens, "the lenses") -> through(A5S187-light, A8S187-lens), isa(E3S187-take, "take in"), agent(E3S187-take, A2S187-eye), isa(A2S187-eye, "The eyes"), object(E3S187-take, A5S187-light), isa(A5S187-light, "light").
english(barrons.rule500, "The eyes take in light through the lenses and transmit the shapes and images through the optic nerve to the brain").
pretty(barrons.rule500, "isa(take in, 'take in') -> take in(Eye, Light).").
barrons.rule500:: isa(E3S187-take, "take in") -> through(A5S187-light, A8S187-lens), isa(A8S187-lens, "the lenses"), agent(E3S187-take, A2S187-eye), isa(A2S187-eye, "The eyes"), object(E3S187-take, A5S187-light), isa(A5S187-light, "light").
english(barrons.rule501, "The eyes take in light through the lenses and transmit the shapes and images through the optic nerve to the brain").
pretty(barrons.rule501, "isa(Eye, 'The eyes') -> take in(Eye, Light).").
barrons.rule501:: isa(A2S187-eye, "The eyes") -> through(A5S187-light, A8S187-lens), isa(A8S187-lens, "the lenses"), isa(E3S187-take, "take in"), agent(E3S187-take, A2S187-eye), object(E3S187-take, A5S187-light), isa(A5S187-light, "light").
english(barrons.rule502, "The eyes take in light through the lenses and transmit the shapes and images through the optic nerve to the brain").
pretty(barrons.rule502, "isa(Light, 'light through the lenses') -> take in(Eye, Light).").
barrons.rule502:: isa(A5S187-light, "light") -> through(A5S187-light, A8S187-lens), isa(A8S187-lens, "the lenses"), isa(E3S187-take, "take in"), agent(E3S187-take, A2S187-eye), isa(A2S187-eye, "The eyes"), object(E3S187-take, A5S187-light).
english(barrons.rule503, "Tiny hairs and nerves in our[We] nose sense different smells and send them[Tiny hairs and nerves in our nose sense different] to the brain so that we[We] can decide if it[our nose sense] is a familiar scent or a new one").
pretty(barrons.rule503, "EFFECT(send_to(Hair, Brain), decide(We, Scent, One)), Hair = 'Tiny hairs in our[We] nose sense different', Brain = 'the brain', We = 'We', Scent = 'if a familiar scent', One = 'a new one'.").
barrons.rule503:: in(A2S191-hair, A8S191-sense), isa(A8S191-sense, "our[We] nose sense"), isa(E12S191-send, "send"), agent(E12S191-send, A2S191-hair), isa(A2S191-hair, "Tiny hairs different"), object(E12S191-send, A2S191-hair), to(E12S191-send, A16S191-brain), isa(A16S191-brain, "the brain") -> effect(E12S191-send, E21S191-decide), isa(E21S191-decide, "decide"), agent(E21S191-decide, A1S181-we), isa(A1S181-we, "We"), arg(E21S191-decide, A27S191-scent), isa(A27S191-scent, "if it[our nose sense] is a familiar scent"), arg(E21S191-decide, A31S191-one), isa(A31S191-one, "a new one").
english(barrons.rule504, "Tiny hairs and nerves in our[We] nose sense different smells and send them[Tiny hairs and nerves in our nose sense different] to the brain so that we[We] can decide if it[our nose sense] is a familiar scent or a new one").
pretty(barrons.rule504, "EFFECT(send_to(Hair, Brain), decide(We, Scent, One)), Hair = 'Tiny hairs in our[We] nose sense different', Brain = 'the brain', We = 'We', Scent = 'if a familiar scent', One = 'a new one'.").
barrons.rule504:: isa(E21S191-decide, "decide"), agent(E21S191-decide, A1S181-we), isa(A1S181-we, "We"), arg(E21S191-decide, A27S191-scent), isa(A27S191-scent, "if it[our nose sense] is a familiar scent"), arg(E21S191-decide, A31S191-one), isa(A31S191-one, "a new one") -> effect(E12S191-send, E21S191-decide), in(A2S191-hair, A8S191-sense), isa(A8S191-sense, "our[We] nose sense"), isa(E12S191-send, "send"), agent(E12S191-send, A2S191-hair), isa(A2S191-hair, "Tiny hairs different"), object(E12S191-send, A2S191-hair), to(E12S191-send, A16S191-brain), isa(A16S191-brain, "the brain").
english(barrons.rule505, "Tiny hairs and nerves in our[We] nose sense different smells and send them[Tiny hairs and nerves in our nose sense different] to the brain so that we[We] can decide if it[our nose sense] is a familiar scent or a new one").
pretty(barrons.rule505, "EFFECT(send_to(Nerve, Hair, Brain), decide(We, Scent, One)), Nerve = 'nerves', Hair = 'Tiny hairs in our[We] nose sense different', Brain = 'the brain', We = 'We', Scent = 'if a familiar scent', One = 'a new one'.").
barrons.rule505:: in(A2S191-hair, A8S191-sense), isa(A8S191-sense, "our[We] nose sense"), isa(E12S191-send, "send"), agent(E12S191-send, A4S191-nerve), isa(A4S191-nerve, "nerves"), object(E12S191-send, A2S191-hair), isa(A2S191-hair, "Tiny hairs different"), to(E12S191-send, A16S191-brain), isa(A16S191-brain, "the brain") -> effect(E12S191-send, E21S191-decide), isa(E21S191-decide, "decide"), agent(E21S191-decide, A1S181-we), isa(A1S181-we, "We"), arg(E21S191-decide, A27S191-scent), isa(A27S191-scent, "if it[our nose sense] is a familiar scent"), arg(E21S191-decide, A31S191-one), isa(A31S191-one, "a new one").
english(barrons.rule506, "Tiny hairs and nerves in our[We] nose sense different smells and send them[Tiny hairs and nerves in our nose sense different] to the brain so that we[We] can decide if it[our nose sense] is a familiar scent or a new one").
pretty(barrons.rule506, "EFFECT(send_to(Nerve, Hair, Brain), decide(We, Scent, One)), Nerve = 'nerves', Hair = 'Tiny hairs in our[We] nose sense different', Brain = 'the brain', We = 'We', Scent = 'if a familiar scent', One = 'a new one'.").
barrons.rule506:: isa(E21S191-decide, "decide"), agent(E21S191-decide, A1S181-we), isa(A1S181-we, "We"), arg(E21S191-decide, A27S191-scent), isa(A27S191-scent, "if it[our nose sense] is a familiar scent"), arg(E21S191-decide, A31S191-one), isa(A31S191-one, "a new one") -> effect(E12S191-send, E21S191-decide), in(A2S191-hair, A8S191-sense), isa(A8S191-sense, "our[We] nose sense"), isa(E12S191-send, "send"), agent(E12S191-send, A4S191-nerve), isa(A4S191-nerve, "nerves"), object(E12S191-send, A2S191-hair), isa(A2S191-hair, "Tiny hairs different"), to(E12S191-send, A16S191-brain), isa(A16S191-brain, "the brain").
english(barrons.rule507, "Tiny hairs and nerves in our[We] nose sense different smells and send them[Tiny hairs and nerves in our nose sense different] to the brain so that we[We] can decide if it[our nose sense] is a familiar scent or a new one").
pretty(barrons.rule507, "EFFECT(send_to(Hair, Nerve, Brain), decide(We, Scent, One)), Hair = 'Tiny hairs in our[We] nose sense different', Nerve = 'nerves', Brain = 'the brain', We = 'We', Scent = 'if a familiar scent', One = 'a new one'.").
barrons.rule507:: in(A2S191-hair, A8S191-sense), isa(A8S191-sense, "our[We] nose sense"), isa(E12S191-send, "send"), agent(E12S191-send, A2S191-hair), isa(A2S191-hair, "Tiny hairs different"), object(E12S191-send, A4S191-nerve), isa(A4S191-nerve, "nerves"), to(E12S191-send, A16S191-brain), isa(A16S191-brain, "the brain") -> effect(E12S191-send, E21S191-decide), isa(E21S191-decide, "decide"), agent(E21S191-decide, A1S181-we), isa(A1S181-we, "We"), arg(E21S191-decide, A27S191-scent), isa(A27S191-scent, "if it[our nose sense] is a familiar scent"), arg(E21S191-decide, A31S191-one), isa(A31S191-one, "a new one").
english(barrons.rule508, "Tiny hairs and nerves in our[We] nose sense different smells and send them[Tiny hairs and nerves in our nose sense different] to the brain so that we[We] can decide if it[our nose sense] is a familiar scent or a new one").
pretty(barrons.rule508, "EFFECT(send_to(Hair, Nerve, Brain), decide(We, Scent, One)), Hair = 'Tiny hairs in our[We] nose sense different', Nerve = 'nerves', Brain = 'the brain', We = 'We', Scent = 'if a familiar scent', One = 'a new one'.").
barrons.rule508:: isa(E21S191-decide, "decide"), agent(E21S191-decide, A1S181-we), isa(A1S181-we, "We"), arg(E21S191-decide, A27S191-scent), isa(A27S191-scent, "if it[our nose sense] is a familiar scent"), arg(E21S191-decide, A31S191-one), isa(A31S191-one, "a new one") -> effect(E12S191-send, E21S191-decide), in(A2S191-hair, A8S191-sense), isa(A8S191-sense, "our[We] nose sense"), isa(E12S191-send, "send"), agent(E12S191-send, A2S191-hair), isa(A2S191-hair, "Tiny hairs different"), object(E12S191-send, A4S191-nerve), isa(A4S191-nerve, "nerves"), to(E12S191-send, A16S191-brain), isa(A16S191-brain, "the brain").
english(barrons.rule509, "Tiny hairs and nerves in our[We] nose sense different smells and send them[Tiny hairs and nerves in our nose sense different] to the brain so that we[We] can decide if it[our nose sense] is a familiar scent or a new one").
pretty(barrons.rule509, "EFFECT(send_to(Nerve, Brain), decide(We, Scent, One)), Nerve = 'nerves', Brain = 'the brain', We = 'We', Scent = 'if a familiar scent', One = 'a new one'.").
barrons.rule509:: isa(E12S191-send, "send"), agent(E12S191-send, A4S191-nerve), isa(A4S191-nerve, "nerves"), object(E12S191-send, A4S191-nerve), to(E12S191-send, A16S191-brain), isa(A16S191-brain, "the brain") -> effect(E12S191-send, E21S191-decide), isa(E21S191-decide, "decide"), agent(E21S191-decide, A1S181-we), isa(A1S181-we, "We"), arg(E21S191-decide, A27S191-scent), isa(A27S191-scent, "if it[our nose sense] is a familiar scent"), arg(E21S191-decide, A31S191-one), isa(A31S191-one, "a new one").
english(barrons.rule510, "Tiny hairs and nerves in our[We] nose sense different smells and send them[Tiny hairs and nerves in our nose sense different] to the brain so that we[We] can decide if it[our nose sense] is a familiar scent or a new one").
pretty(barrons.rule510, "EFFECT(send_to(Nerve, Brain), decide(We, Scent, One)), Nerve = 'nerves', Brain = 'the brain', We = 'We', Scent = 'if a familiar scent', One = 'a new one'.").
barrons.rule510:: isa(E21S191-decide, "decide"), agent(E21S191-decide, A1S181-we), isa(A1S181-we, "We"), arg(E21S191-decide, A27S191-scent), isa(A27S191-scent, "if it[our nose sense] is a familiar scent"), arg(E21S191-decide, A31S191-one), isa(A31S191-one, "a new one") -> effect(E12S191-send, E21S191-decide), isa(E12S191-send, "send"), agent(E12S191-send, A4S191-nerve), isa(A4S191-nerve, "nerves"), object(E12S191-send, A4S191-nerve), to(E12S191-send, A16S191-brain), isa(A16S191-brain, "the brain").
english(barrons.rule511, "Tiny hairs and nerves in our[We] nose sense different smells and send them[Tiny hairs and nerves in our nose sense different] to the brain so that we[We] can decide if it[our nose sense] is a familiar scent or a new one").
pretty(barrons.rule511, "EXAMPLE(It, Scent), It = 'it[our nose sense]', Scent = 'if a familiar scent'.").
barrons.rule511:: isa(A23S191-it, "it[our nose sense]") -> example(A23S191-it, A27S191-scent), isa(A27S191-scent, "if a familiar scent").
english(barrons.rule512, "Tiny hairs and nerves in our[We] nose sense different smells and send them[Tiny hairs and nerves in our nose sense different] to the brain so that we[We] can decide if it[our nose sense] is a familiar scent or a new one").
pretty(barrons.rule512, "EXAMPLE(It, Scent), It = 'it[our nose sense]', Scent = 'if a familiar scent'.").
barrons.rule512:: isa(A27S191-scent, "if a familiar scent") -> example(A23S191-it, A27S191-scent), isa(A23S191-it, "it[our nose sense]").
english(barrons.rule513, "All animals have different structures that have different jobs or functions to help with growth survival and reproduction").
pretty(barrons.rule513, "isa(have, 'have') -> have(Animal, Structure).").
barrons.rule513:: isa(E3S192-have, "have") -> agent(E3S192-have, A2S192-animal), isa(A2S192-animal, "All animals"), object(E3S192-have, A5S192-structure), isa(A5S192-structure, "different structures").
english(barrons.rule514, "All animals have different structures that have different jobs or functions to help with growth survival and reproduction").
pretty(barrons.rule514, "isa(Animal, 'All animals') -> have(Animal, Structure).").
barrons.rule514:: isa(A2S192-animal, "All animals") -> isa(E3S192-have, "have"), agent(E3S192-have, A2S192-animal), object(E3S192-have, A5S192-structure), isa(A5S192-structure, "different structures").
english(barrons.rule515, "All animals have different structures that have different jobs or functions to help with growth survival and reproduction").
pretty(barrons.rule515, "isa(Structure, 'different structures') -> have(Animal, Structure).").
barrons.rule515:: isa(A5S192-structure, "different structures") -> isa(E3S192-have, "have"), agent(E3S192-have, A2S192-animal), isa(A2S192-animal, "All animals"), object(E3S192-have, A5S192-structure).
english(barrons.rule516, "Animals have different ways of movement").
pretty(barrons.rule516, "isa(Movement, 'movement') -> have(Animal, Way).").
barrons.rule516:: isa(A6S193-movement, "movement") -> of(A4S193-way, A6S193-movement), isa(E2S193-have, "have"), agent(E2S193-have, A1S193-animal), isa(A1S193-animal, "Animals"), object(E2S193-have, A4S193-way), isa(A4S193-way, "different ways").
english(barrons.rule517, "Animals have different ways of movement").
pretty(barrons.rule517, "isa(have, 'have') -> have(Animal, Way).").
barrons.rule517:: isa(E2S193-have, "have") -> of(A4S193-way, A6S193-movement), isa(A6S193-movement, "movement"), agent(E2S193-have, A1S193-animal), isa(A1S193-animal, "Animals"), object(E2S193-have, A4S193-way), isa(A4S193-way, "different ways").
english(barrons.rule518, "Animals have different ways of movement").
pretty(barrons.rule518, "isa(Animal, 'Animals') -> have(Animal, Way).").
barrons.rule518:: isa(A1S193-animal, "Animals") -> of(A4S193-way, A6S193-movement), isa(A6S193-movement, "movement"), isa(E2S193-have, "have"), agent(E2S193-have, A1S193-animal), object(E2S193-have, A4S193-way), isa(A4S193-way, "different ways").
english(barrons.rule519, "Animals have different ways of movement").
pretty(barrons.rule519, "isa(Way, 'different ways of movement') -> have(Animal, Way).").
barrons.rule519:: isa(A4S193-way, "different ways") -> of(A4S193-way, A6S193-movement), isa(A6S193-movement, "movement"), isa(E2S193-have, "have"), agent(E2S193-have, A1S193-animal), isa(A1S193-animal, "Animals"), object(E2S193-have, A4S193-way).
english(barrons.rule520, "Birds use their[birds] wings fish use their[birds] fins and others use their[others] legs").
pretty(barrons.rule520, "isa(use, 'use') -> use(Bird, Wing, Use).").
barrons.rule520:: isa(E2S194-use, "use") -> agent(E2S194-use, A1S194-bird), isa(A1S194-bird, "Birds"), object(E2S194-use, A4S194-wing), isa(A4S194-wing, "their[birds] wings"), arg(E2S194-use, A7S194-use), isa(A7S194-use, "fish use their[birds] fins").
english(barrons.rule521, "Birds use their[birds] wings fish use their[birds] fins and others use their[others] legs").
pretty(barrons.rule521, "isa(Bird, 'Birds') -> use(Bird, Wing, Use).").
barrons.rule521:: isa(A1S194-bird, "Birds") -> isa(E2S194-use, "use"), agent(E2S194-use, A1S194-bird), object(E2S194-use, A4S194-wing), isa(A4S194-wing, "their[birds] wings"), arg(E2S194-use, A7S194-use), isa(A7S194-use, "fish use their[birds] fins").
english(barrons.rule522, "Birds use their[birds] wings fish use their[birds] fins and others use their[others] legs").
pretty(barrons.rule522, "isa(Wing, 'their[birds] wings') -> use(Bird, Wing, Use).").
barrons.rule522:: isa(A4S194-wing, "their[birds] wings") -> isa(E2S194-use, "use"), agent(E2S194-use, A1S194-bird), isa(A1S194-bird, "Birds"), object(E2S194-use, A4S194-wing), arg(E2S194-use, A7S194-use), isa(A7S194-use, "fish use their[birds] fins").
english(barrons.rule523, "Birds use their[birds] wings fish use their[birds] fins and others use their[others] legs").
pretty(barrons.rule523, "isa(Use, 'use their[birds] fins') -> use(Bird, Wing, Use).").
barrons.rule523:: isa(A7S194-use, "fish use their[birds] fins") -> isa(E2S194-use, "use"), agent(E2S194-use, A1S194-bird), isa(A1S194-bird, "Birds"), object(E2S194-use, A4S194-wing), isa(A4S194-wing, "their[birds] wings"), arg(E2S194-use, A7S194-use).
english(barrons.rule524, "Animals need to move so that they[Animals] can find a safe place for shelter find food and escape predators enemies").
pretty(barrons.rule524, "EFFECT(move(Animal), find(Animal, Place)), Animal = 'Animals', Animal = 'Animals', Place = 'a safe place for shelter'.").
barrons.rule524:: isa(E4S195-move, "move"), agent(E4S195-move, A1S195-animal), isa(A1S195-animal, "Animals") -> effect(E4S195-move, E9S195-find), for(A12S195-place, A14S195-shelter), isa(A14S195-shelter, "shelter"), isa(E9S195-find, "find"), agent(E9S195-find, A1S7-animal), isa(A1S7-animal, "Animals"), object(E9S195-find, A12S195-place), isa(A12S195-place, "a safe place").
english(barrons.rule525, "Animals need to move so that they[Animals] can find a safe place for shelter find food and escape predators enemies").
pretty(barrons.rule525, "EFFECT(move(Animal), find(Animal, Place)), Animal = 'Animals', Animal = 'Animals', Place = 'a safe place for shelter'.").
barrons.rule525:: for(A12S195-place, A14S195-shelter), isa(A14S195-shelter, "shelter"), isa(E9S195-find, "find"), agent(E9S195-find, A1S7-animal), isa(A1S7-animal, "Animals"), object(E9S195-find, A12S195-place), isa(A12S195-place, "a safe place") -> effect(E4S195-move, E9S195-find), isa(E4S195-move, "move"), agent(E4S195-move, A1S195-animal), isa(A1S195-animal, "Animals").
english(barrons.rule526, "Animals need to move so that they[Animals] can find a safe place for shelter find food and escape predators enemies").
pretty(barrons.rule526, "PURPOSE(find(Animal, Place), Shelter), Animal = 'Animals', Place = 'a safe place for shelter', Shelter = 'shelter'.").
barrons.rule526:: for(A12S195-place, A14S195-shelter), isa(A14S195-shelter, "shelter"), isa(E9S195-find, "find"), agent(E9S195-find, A1S7-animal), isa(A1S7-animal, "Animals"), object(E9S195-find, A12S195-place), isa(A12S195-place, "a safe place") -> purpose(E9S195-find, A14S195-shelter).
english(barrons.rule527, "Animals need to move so that they[Animals] can find a safe place for shelter find food and escape predators enemies").
pretty(barrons.rule527, "PURPOSE(find(Animal, Place), Shelter), Animal = 'Animals', Place = 'a safe place for shelter', Shelter = 'shelter'.").
barrons.rule527:: isa(A14S195-shelter, "shelter") -> purpose(E9S195-find, A14S195-shelter), for(A12S195-place, A14S195-shelter), isa(E9S195-find, "find"), agent(E9S195-find, A1S7-animal), isa(A1S7-animal, "Animals"), object(E9S195-find, A12S195-place), isa(A12S195-place, "a safe place").
english(barrons.rule528, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule528, "isa(protect, 'protect') -> protect_with(Lobster, Predator, Have, Have, Use, Claw).").
barrons.rule528:: isa(E4S196-protect, "protect") -> agent(E4S196-protect, A1S196-lobster), isa(A1S196-lobster, "Lobsters"), object(E4S196-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), with(E4S196-protect, A8S196-claw), isa(A8S196-claw, "their[Lobsters and crabs] claws"), arg(E4S196-protect, A11S196-have), isa(A11S196-have, "turtles have shells"), arg(E4S196-protect, A15S196-have), isa(A15S196-have, "porcupines have spines"), arg(E4S196-protect, A19S196-use), isa(A19S196-use, "birds use their[birds] feathers").
english(barrons.rule529, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule529, "isa(Lobster, 'Lobsters') -> protect_with(Lobster, Predator, Have, Have, Use, Claw).").
barrons.rule529:: isa(A1S196-lobster, "Lobsters") -> isa(E4S196-protect, "protect"), agent(E4S196-protect, A1S196-lobster), object(E4S196-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), with(E4S196-protect, A8S196-claw), isa(A8S196-claw, "their[Lobsters and crabs] claws"), arg(E4S196-protect, A11S196-have), isa(A11S196-have, "turtles have shells"), arg(E4S196-protect, A15S196-have), isa(A15S196-have, "porcupines have spines"), arg(E4S196-protect, A19S196-use), isa(A19S196-use, "birds use their[birds] feathers").
english(barrons.rule530, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule530, "isa(Predator, 'escape predators') -> protect_with(Lobster, Predator, Have, Have, Use, Claw).").
barrons.rule530:: isa(A21S195-predator, "escape predators") -> isa(E4S196-protect, "protect"), agent(E4S196-protect, A1S196-lobster), isa(A1S196-lobster, "Lobsters"), object(E4S196-protect, A21S195-predator), with(E4S196-protect, A8S196-claw), isa(A8S196-claw, "their[Lobsters and crabs] claws"), arg(E4S196-protect, A11S196-have), isa(A11S196-have, "turtles have shells"), arg(E4S196-protect, A15S196-have), isa(A15S196-have, "porcupines have spines"), arg(E4S196-protect, A19S196-use), isa(A19S196-use, "birds use their[birds] feathers").
english(barrons.rule531, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule531, "isa(Claw, 'their[Lobsters and crabs] claws') -> protect_with(Lobster, Predator, Have, Have, Use, Claw).").
barrons.rule531:: isa(A8S196-claw, "their[Lobsters and crabs] claws") -> isa(E4S196-protect, "protect"), agent(E4S196-protect, A1S196-lobster), isa(A1S196-lobster, "Lobsters"), object(E4S196-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), with(E4S196-protect, A8S196-claw), arg(E4S196-protect, A11S196-have), isa(A11S196-have, "turtles have shells"), arg(E4S196-protect, A15S196-have), isa(A15S196-have, "porcupines have spines"), arg(E4S196-protect, A19S196-use), isa(A19S196-use, "birds use their[birds] feathers").
english(barrons.rule532, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule532, "isa(Have, 'have shells') -> protect_with(Lobster, Predator, Have, Have, Use, Claw).").
barrons.rule532:: isa(A11S196-have, "turtles have shells") -> isa(E4S196-protect, "protect"), agent(E4S196-protect, A1S196-lobster), isa(A1S196-lobster, "Lobsters"), object(E4S196-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), with(E4S196-protect, A8S196-claw), isa(A8S196-claw, "their[Lobsters and crabs] claws"), arg(E4S196-protect, A11S196-have), arg(E4S196-protect, A15S196-have), isa(A15S196-have, "porcupines have spines"), arg(E4S196-protect, A19S196-use), isa(A19S196-use, "birds use their[birds] feathers").
english(barrons.rule533, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule533, "isa(Have, 'have spines') -> protect_with(Lobster, Predator, Have, Have, Use, Claw).").
barrons.rule533:: isa(A15S196-have, "porcupines have spines") -> isa(E4S196-protect, "protect"), agent(E4S196-protect, A1S196-lobster), isa(A1S196-lobster, "Lobsters"), object(E4S196-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), with(E4S196-protect, A8S196-claw), isa(A8S196-claw, "their[Lobsters and crabs] claws"), arg(E4S196-protect, A11S196-have), isa(A11S196-have, "turtles have shells"), arg(E4S196-protect, A15S196-have), arg(E4S196-protect, A19S196-use), isa(A19S196-use, "birds use their[birds] feathers").
english(barrons.rule534, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule534, "isa(Use, 'use their[birds] feathers') -> protect_with(Lobster, Predator, Have, Have, Use, Claw).").
barrons.rule534:: isa(A19S196-use, "birds use their[birds] feathers") -> isa(E4S196-protect, "protect"), agent(E4S196-protect, A1S196-lobster), isa(A1S196-lobster, "Lobsters"), object(E4S196-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), with(E4S196-protect, A8S196-claw), isa(A8S196-claw, "their[Lobsters and crabs] claws"), arg(E4S196-protect, A11S196-have), isa(A11S196-have, "turtles have shells"), arg(E4S196-protect, A15S196-have), isa(A15S196-have, "porcupines have spines"), arg(E4S196-protect, A19S196-use).
english(barrons.rule535, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule535, "isa(protect, 'protect') -> protect_with(Crab, Predator, Have, Have, Use, Claw).").
barrons.rule535:: isa(E4S196-protect, "protect") -> agent(E4S196-protect, A3S196-crab), isa(A3S196-crab, "crabs"), object(E4S196-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), with(E4S196-protect, A8S196-claw), isa(A8S196-claw, "their[Lobsters and crabs] claws"), arg(E4S196-protect, A11S196-have), isa(A11S196-have, "turtles have shells"), arg(E4S196-protect, A15S196-have), isa(A15S196-have, "porcupines have spines"), arg(E4S196-protect, A19S196-use), isa(A19S196-use, "birds use their[birds] feathers").
english(barrons.rule536, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule536, "isa(Crab, 'crabs') -> protect_with(Crab, Predator, Have, Have, Use, Claw).").
barrons.rule536:: isa(A3S196-crab, "crabs") -> isa(E4S196-protect, "protect"), agent(E4S196-protect, A3S196-crab), object(E4S196-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), with(E4S196-protect, A8S196-claw), isa(A8S196-claw, "their[Lobsters and crabs] claws"), arg(E4S196-protect, A11S196-have), isa(A11S196-have, "turtles have shells"), arg(E4S196-protect, A15S196-have), isa(A15S196-have, "porcupines have spines"), arg(E4S196-protect, A19S196-use), isa(A19S196-use, "birds use their[birds] feathers").
english(barrons.rule537, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule537, "isa(Predator, 'escape predators') -> protect_with(Crab, Predator, Have, Have, Use, Claw).").
barrons.rule537:: isa(A21S195-predator, "escape predators") -> isa(E4S196-protect, "protect"), agent(E4S196-protect, A3S196-crab), isa(A3S196-crab, "crabs"), object(E4S196-protect, A21S195-predator), with(E4S196-protect, A8S196-claw), isa(A8S196-claw, "their[Lobsters and crabs] claws"), arg(E4S196-protect, A11S196-have), isa(A11S196-have, "turtles have shells"), arg(E4S196-protect, A15S196-have), isa(A15S196-have, "porcupines have spines"), arg(E4S196-protect, A19S196-use), isa(A19S196-use, "birds use their[birds] feathers").
english(barrons.rule538, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule538, "isa(Claw, 'their[Lobsters and crabs] claws') -> protect_with(Crab, Predator, Have, Have, Use, Claw).").
barrons.rule538:: isa(A8S196-claw, "their[Lobsters and crabs] claws") -> isa(E4S196-protect, "protect"), agent(E4S196-protect, A3S196-crab), isa(A3S196-crab, "crabs"), object(E4S196-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), with(E4S196-protect, A8S196-claw), arg(E4S196-protect, A11S196-have), isa(A11S196-have, "turtles have shells"), arg(E4S196-protect, A15S196-have), isa(A15S196-have, "porcupines have spines"), arg(E4S196-protect, A19S196-use), isa(A19S196-use, "birds use their[birds] feathers").
english(barrons.rule539, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule539, "isa(Have, 'have shells') -> protect_with(Crab, Predator, Have, Have, Use, Claw).").
barrons.rule539:: isa(A11S196-have, "turtles have shells") -> isa(E4S196-protect, "protect"), agent(E4S196-protect, A3S196-crab), isa(A3S196-crab, "crabs"), object(E4S196-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), with(E4S196-protect, A8S196-claw), isa(A8S196-claw, "their[Lobsters and crabs] claws"), arg(E4S196-protect, A11S196-have), arg(E4S196-protect, A15S196-have), isa(A15S196-have, "porcupines have spines"), arg(E4S196-protect, A19S196-use), isa(A19S196-use, "birds use their[birds] feathers").
english(barrons.rule540, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule540, "isa(Have, 'have spines') -> protect_with(Crab, Predator, Have, Have, Use, Claw).").
barrons.rule540:: isa(A15S196-have, "porcupines have spines") -> isa(E4S196-protect, "protect"), agent(E4S196-protect, A3S196-crab), isa(A3S196-crab, "crabs"), object(E4S196-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), with(E4S196-protect, A8S196-claw), isa(A8S196-claw, "their[Lobsters and crabs] claws"), arg(E4S196-protect, A11S196-have), isa(A11S196-have, "turtles have shells"), arg(E4S196-protect, A15S196-have), arg(E4S196-protect, A19S196-use), isa(A19S196-use, "birds use their[birds] feathers").
english(barrons.rule541, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule541, "isa(Use, 'use their[birds] feathers') -> protect_with(Crab, Predator, Have, Have, Use, Claw).").
barrons.rule541:: isa(A19S196-use, "birds use their[birds] feathers") -> isa(E4S196-protect, "protect"), agent(E4S196-protect, A3S196-crab), isa(A3S196-crab, "crabs"), object(E4S196-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), with(E4S196-protect, A8S196-claw), isa(A8S196-claw, "their[Lobsters and crabs] claws"), arg(E4S196-protect, A11S196-have), isa(A11S196-have, "turtles have shells"), arg(E4S196-protect, A15S196-have), isa(A15S196-have, "porcupines have spines"), arg(E4S196-protect, A19S196-use).
english(barrons.rule542, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule542, "EFFECT(have(Other, Fur, Help), protect_from(Other, Predator)), Other = 'others', Fur = 'fur', Help = 'help protect them[others] from predators', Predator = 'predators'.").
barrons.rule542:: isa(E25S196-have, "have"), agent(E25S196-have, A24S196-other), isa(A24S196-other, "others"), object(E25S196-have, A26S196-fur), isa(A26S196-fur, "fur"), arg(E25S196-have, A30S196-help), isa(A30S196-help, "to help protect them[others] from predators") -> effect(E25S196-have, E31S196-protect), isa(E31S196-protect, "protect"), agent(E31S196-protect, A24S196-other), object(E31S196-protect, A24S196-other), from(E31S196-protect, A34S196-predator), isa(A34S196-predator, "predators").
english(barrons.rule543, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule543, "EFFECT(have(Other, Fur, Help), protect_from(Other, Predator)), Other = 'others', Fur = 'fur', Help = 'help protect them[others] from predators', Predator = 'predators'.").
barrons.rule543:: isa(E31S196-protect, "protect"), agent(E31S196-protect, A24S196-other), isa(A24S196-other, "others"), object(E31S196-protect, A24S196-other), from(E31S196-protect, A34S196-predator), isa(A34S196-predator, "predators") -> effect(E25S196-have, E31S196-protect), isa(E25S196-have, "have"), agent(E25S196-have, A24S196-other), object(E25S196-have, A26S196-fur), isa(A26S196-fur, "fur"), arg(E25S196-have, A30S196-help), isa(A30S196-help, "to help protect them[others] from predators").
english(barrons.rule544, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule544, "EFFECT(have(Other, Scale, Help), protect_from(Other, Predator)), Other = 'others', Scale = 'scales', Help = 'help protect them[others] from predators', Predator = 'predators'.").
barrons.rule544:: isa(E25S196-have, "have"), agent(E25S196-have, A24S196-other), isa(A24S196-other, "others"), object(E25S196-have, A28S196-scale), isa(A28S196-scale, "scales"), arg(E25S196-have, A30S196-help), isa(A30S196-help, "to help protect them[others] from predators") -> effect(E25S196-have, E31S196-protect), isa(E31S196-protect, "protect"), agent(E31S196-protect, A24S196-other), object(E31S196-protect, A24S196-other), from(E31S196-protect, A34S196-predator), isa(A34S196-predator, "predators").
english(barrons.rule545, "Lobsters and crabs protect themselves[escape predators enemies] with their[Lobsters and crabs] claws turtles have shells porcupines have spines birds use their[birds] feathers and others have fur or scales to help protect them[others] from predators").
pretty(barrons.rule545, "EFFECT(have(Other, Scale, Help), protect_from(Other, Predator)), Other = 'others', Scale = 'scales', Help = 'help protect them[others] from predators', Predator = 'predators'.").
barrons.rule545:: isa(E31S196-protect, "protect"), agent(E31S196-protect, A24S196-other), isa(A24S196-other, "others"), object(E31S196-protect, A24S196-other), from(E31S196-protect, A34S196-predator), isa(A34S196-predator, "predators") -> effect(E25S196-have, E31S196-protect), isa(E25S196-have, "have"), agent(E25S196-have, A24S196-other), object(E25S196-have, A28S196-scale), isa(A28S196-scale, "scales"), arg(E25S196-have, A30S196-help), isa(A30S196-help, "to help protect them[others] from predators").
english(barrons.rule546, "We call this camouflage which helps protect the animal from enemies").
pretty(barrons.rule546, "PURPOSE(Camouflage, protect_from(Camouflage, Animal, Enemy)), Camouflage = 'this camouflage', Animal = 'the animal', Enemy = 'enemies'.").
barrons.rule546:: isa(A4S198-camouflage, "this camouflage") -> purpose(A4S198-camouflage, E8S198-protect), isa(E8S198-protect, "protect"), agent(E8S198-protect, A4S198-camouflage), object(E8S198-protect, A10S198-animal), isa(A10S198-animal, "the animal"), from(E8S198-protect, A12S198-enemy), isa(A12S198-enemy, "enemies").
english(barrons.rule547, "We call this camouflage which helps protect the animal from enemies").
pretty(barrons.rule547, "PURPOSE(Camouflage, protect_from(Camouflage, Animal, Enemy)), Camouflage = 'this camouflage', Animal = 'the animal', Enemy = 'enemies'.").
barrons.rule547:: isa(E8S198-protect, "protect"), agent(E8S198-protect, A4S198-camouflage), isa(A4S198-camouflage, "this camouflage"), object(E8S198-protect, A10S198-animal), isa(A10S198-animal, "the animal"), from(E8S198-protect, A12S198-enemy), isa(A12S198-enemy, "enemies") -> purpose(A4S198-camouflage, E8S198-protect).
english(barrons.rule548, "Think of a lion 's golden fur which helps it[a lion 's golden fur which helps it blend into the desert landscape] blend into the desert landscape").
pretty(barrons.rule548, "EFFECT(think_of(Fur, Fur), blend_into(Fur, Landscape)), Fur = 'a lion ’s golden fur', Fur = 'a lion ’s golden fur', Landscape = 'the desert landscape'.").
barrons.rule548:: isa(E1S199-think, "think"), agent(E1S199-think, A7S199-fur), isa(A7S199-fur, "a lion 's golden fur"), of(E1S199-think, A7S199-fur) -> effect(E1S199-think, E12S199-blend), isa(E12S199-blend, "blend"), agent(E12S199-blend, A7S199-fur), into(E12S199-blend, A16S199-landscape), isa(A16S199-landscape, "the desert landscape").
english(barrons.rule549, "Think of a lion 's golden fur which helps it[a lion 's golden fur which helps it blend into the desert landscape] blend into the desert landscape").
pretty(barrons.rule549, "EFFECT(think_of(Fur, Fur), blend_into(Fur, Landscape)), Fur = 'a lion ’s golden fur', Fur = 'a lion ’s golden fur', Landscape = 'the desert landscape'.").
barrons.rule549:: isa(E12S199-blend, "blend"), agent(E12S199-blend, A7S199-fur), isa(A7S199-fur, "a lion 's golden fur"), into(E12S199-blend, A16S199-landscape), isa(A16S199-landscape, "the desert landscape") -> effect(E1S199-think, E12S199-blend), isa(E1S199-think, "think"), agent(E1S199-think, A7S199-fur), of(E1S199-think, A7S199-fur).
english(barrons.rule550, "Think of a lion 's golden fur which helps it[a lion 's golden fur which helps it blend into the desert landscape] blend into the desert landscape").
pretty(barrons.rule550, "PURPOSE(Fur, blend_into(Fur, Landscape)), Fur = 'a lion ’s golden fur', Landscape = 'the desert landscape'.").
barrons.rule550:: isa(A7S199-fur, "a lion 's golden fur") -> purpose(A7S199-fur, E12S199-blend), isa(E12S199-blend, "blend"), agent(E12S199-blend, A7S199-fur), into(E12S199-blend, A16S199-landscape), isa(A16S199-landscape, "the desert landscape").
english(barrons.rule551, "Think of a lion 's golden fur which helps it[a lion 's golden fur which helps it blend into the desert landscape] blend into the desert landscape").
pretty(barrons.rule551, "PURPOSE(Fur, blend_into(Fur, Landscape)), Fur = 'a lion ’s golden fur', Landscape = 'the desert landscape'.").
barrons.rule551:: isa(E12S199-blend, "blend"), agent(E12S199-blend, A7S199-fur), isa(A7S199-fur, "a lion 's golden fur"), into(E12S199-blend, A16S199-landscape), isa(A16S199-landscape, "the desert landscape") -> purpose(A7S199-fur, E12S199-blend).
english(barrons.rule552, "Chameleons are lizards that can change colors based on the color of their[Chameleons are lizards that can change colors based on the color of their surroundings] surroundings").
pretty(barrons.rule552, "EXAMPLE(Chameleon, change(Lizard, Color)), Chameleon = 'Chameleons', Lizard = 'lizards', Color = 'colors'.").
barrons.rule552:: isa(A1S200-chameleon, "Chameleons") -> example(A1S200-chameleon, A3S200-lizard), isa(E6S200-change, "change"), agent(E6S200-change, A3S200-lizard), isa(A3S200-lizard, "lizards"), object(E6S200-change, A7S200-color), isa(A7S200-color, "colors"), isa(A1S200-chameleon, A3S200-lizard).
english(barrons.rule553, "Chameleons are lizards that can change colors based on the color of their[Chameleons are lizards that can change colors based on the color of their surroundings] surroundings").
pretty(barrons.rule553, "EXAMPLE(Chameleon, change(Lizard, Color)), Chameleon = 'Chameleons', Lizard = 'lizards', Color = 'colors'.").
barrons.rule553:: isa(E6S200-change, "change"), agent(E6S200-change, A3S200-lizard), isa(A3S200-lizard, "lizards"), object(E6S200-change, A7S200-color), isa(A7S200-color, "colors") -> example(A1S200-chameleon, A3S200-lizard), isa(A1S200-chameleon, "Chameleons"), isa(A1S200-chameleon, A3S200-lizard).
english(barrons.rule554, "Chameleons are lizards that can change colors based on the color of their[Chameleons are lizards that can change colors based on the color of their surroundings] surroundings").
pretty(barrons.rule554, "EXAMPLE(Chameleon, Lizard), Chameleon = 'Chameleons', Lizard = 'lizards'.").
barrons.rule554:: isa(A1S200-chameleon, "Chameleons") -> example(A1S200-chameleon, A3S200-lizard), isa(A3S200-lizard, "lizards").
english(barrons.rule555, "Chameleons are lizards that can change colors based on the color of their[Chameleons are lizards that can change colors based on the color of their surroundings] surroundings").
pretty(barrons.rule555, "EXAMPLE(Chameleon, Lizard), Chameleon = 'Chameleons', Lizard = 'lizards'.").
barrons.rule555:: isa(A3S200-lizard, "lizards") -> example(A1S200-chameleon, A3S200-lizard), isa(A1S200-chameleon, "Chameleons").
english(barrons.rule556, "On the sand it[the sand] will turn a tan color and on grass it[the sand] will turn green to allow it[the sand] to hide from predators").
pretty(barrons.rule556, "isa(turn, 'turn') -> turn_on(Sand, Color, Sand).").
barrons.rule556:: isa(E6S201-turn, "turn") -> agent(E6S201-turn, A3S201-sand), isa(A3S201-sand, "the sand"), object(E6S201-turn, A9S201-color), isa(A9S201-color, "a tan color"), on(E6S201-turn, A3S201-sand).
english(barrons.rule557, "On the sand it[the sand] will turn a tan color and on grass it[the sand] will turn green to allow it[the sand] to hide from predators").
pretty(barrons.rule557, "isa(Sand, 'the sand') -> turn_on(Sand, Color, Sand).").
barrons.rule557:: isa(A3S201-sand, "the sand") -> isa(E6S201-turn, "turn"), agent(E6S201-turn, A3S201-sand), object(E6S201-turn, A9S201-color), isa(A9S201-color, "a tan color"), on(E6S201-turn, A3S201-sand).
english(barrons.rule558, "On the sand it[the sand] will turn a tan color and on grass it[the sand] will turn green to allow it[the sand] to hide from predators").
pretty(barrons.rule558, "isa(Color, 'a tan color') -> turn_on(Sand, Color, Sand).").
barrons.rule558:: isa(A9S201-color, "a tan color") -> isa(E6S201-turn, "turn"), agent(E6S201-turn, A3S201-sand), isa(A3S201-sand, "the sand"), object(E6S201-turn, A9S201-color), on(E6S201-turn, A3S201-sand).
english(barrons.rule559, "On the sand it[the sand] will turn a tan color and on grass it[the sand] will turn green to allow it[the sand] to hide from predators").
pretty(barrons.rule559, "EFFECT(turn_on(Sand, Allow, Green, Grass), hide_from(Sand, Predator)), Sand = 'the sand', Allow = 'allow', Green = 'green', Grass = 'grass', Predator = 'predators'.").
barrons.rule559:: isa(E15S201-turn, "turn"), agent(E15S201-turn, A3S201-sand), isa(A3S201-sand, "the sand"), on(E15S201-turn, A12S201-grass), isa(A12S201-grass, "grass"), arg(E15S201-turn, A18S201-allow), isa(A18S201-allow, "to allow"), arg(E15S201-turn, A16S201-green), isa(A16S201-green, "green") -> effect(E15S201-turn, E21S201-hide), isa(E21S201-hide, "hide"), agent(E21S201-hide, A3S201-sand), from(E21S201-hide, A23S201-predator), isa(A23S201-predator, "predators").
english(barrons.rule560, "On the sand it[the sand] will turn a tan color and on grass it[the sand] will turn green to allow it[the sand] to hide from predators").
pretty(barrons.rule560, "EFFECT(turn_on(Sand, Allow, Green, Grass), hide_from(Sand, Predator)), Sand = 'the sand', Allow = 'allow', Green = 'green', Grass = 'grass', Predator = 'predators'.").
barrons.rule560:: isa(E21S201-hide, "hide"), agent(E21S201-hide, A3S201-sand), isa(A3S201-sand, "the sand"), from(E21S201-hide, A23S201-predator), isa(A23S201-predator, "predators") -> effect(E15S201-turn, E21S201-hide), isa(E15S201-turn, "turn"), agent(E15S201-turn, A3S201-sand), on(E15S201-turn, A12S201-grass), isa(A12S201-grass, "grass"), arg(E15S201-turn, A18S201-allow), isa(A18S201-allow, "to allow"), arg(E15S201-turn, A16S201-green), isa(A16S201-green, "green").
english(barrons.rule561, "Some animals protect themselves[escape predators enemies] by sending o ut special sounds or smells which is another type of defense mechanism").
pretty(barrons.rule561, "isa(protect, 'protect') -> protect(Animal, Predator, Type).").
barrons.rule561:: isa(E3S202-protect, "protect") -> agent(E3S202-protect, A2S202-animal), isa(A2S202-animal, "Some animals"), object(E3S202-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), arg(E3S202-protect, A17S202-type), isa(A17S202-type, "which is another type of defense mechanism").
english(barrons.rule562, "Some animals protect themselves[escape predators enemies] by sending o ut special sounds or smells which is another type of defense mechanism").
pretty(barrons.rule562, "isa(Animal, 'Some animals') -> protect(Animal, Predator, Type).").
barrons.rule562:: isa(A2S202-animal, "Some animals") -> isa(E3S202-protect, "protect"), agent(E3S202-protect, A2S202-animal), object(E3S202-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), arg(E3S202-protect, A17S202-type), isa(A17S202-type, "which is another type of defense mechanism").
english(barrons.rule563, "Some animals protect themselves[escape predators enemies] by sending o ut special sounds or smells which is another type of defense mechanism").
pretty(barrons.rule563, "isa(Predator, 'escape predators') -> protect(Animal, Predator, Type).").
barrons.rule563:: isa(A21S195-predator, "escape predators") -> isa(E3S202-protect, "protect"), agent(E3S202-protect, A2S202-animal), isa(A2S202-animal, "Some animals"), object(E3S202-protect, A21S195-predator), arg(E3S202-protect, A17S202-type), isa(A17S202-type, "which is another type of defense mechanism").
english(barrons.rule564, "Some animals protect themselves[escape predators enemies] by sending o ut special sounds or smells which is another type of defense mechanism").
pretty(barrons.rule564, "isa(Type, 'another type of defense mechanism') -> protect(Animal, Predator, Type).").
barrons.rule564:: isa(A17S202-type, "which is another type of defense mechanism") -> isa(E3S202-protect, "protect"), agent(E3S202-protect, A2S202-animal), isa(A2S202-animal, "Some animals"), object(E3S202-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), arg(E3S202-protect, A17S202-type).
english(barrons.rule565, "Some animals protect themselves[escape predators enemies] by sending o ut special sounds or smells which is another type of defense mechanism").
pretty(barrons.rule565, "ENABLE(send(Animal, Ut), protect(Animal, Predator, Type)), Animal = 'Some animals', Ut = 'o ut', Predator = 'escape predators', Type = 'another type of defense mechanism'.").
barrons.rule565:: isa(E6S202-send, "send"), agent(E6S202-send, A2S202-animal), isa(A2S202-animal, "Some animals"), object(E6S202-send, A8S202-ut), isa(A8S202-ut, "o ut") -> enable(E6S202-send, E3S202-protect), isa(E3S202-protect, "protect"), agent(E3S202-protect, A2S202-animal), object(E3S202-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), arg(E3S202-protect, A17S202-type), isa(A17S202-type, "which is another type of defense mechanism").
english(barrons.rule566, "Some animals protect themselves[escape predators enemies] by sending o ut special sounds or smells which is another type of defense mechanism").
pretty(barrons.rule566, "ENABLE(send(Animal, Ut), protect(Animal, Predator, Type)), Animal = 'Some animals', Ut = 'o ut', Predator = 'escape predators', Type = 'another type of defense mechanism'.").
barrons.rule566:: isa(E3S202-protect, "protect"), agent(E3S202-protect, A2S202-animal), isa(A2S202-animal, "Some animals"), object(E3S202-protect, A21S195-predator), isa(A21S195-predator, "escape predators"), arg(E3S202-protect, A17S202-type), isa(A17S202-type, "which is another type of defense mechanism") -> enable(E6S202-send, E3S202-protect), isa(E6S202-send, "send"), agent(E6S202-send, A2S202-animal), object(E6S202-send, A8S202-ut), isa(A8S202-ut, "o ut").
english(barrons.rule567, "Some animals protect themselves[escape predators enemies] by sending o ut special sounds or smells which is another type of defense mechanism").
pretty(barrons.rule567, "EXAMPLE(Which, Type), Which = 'which', Type = 'another type of defense mechanism'.").
barrons.rule567:: isa(A14S202-which, "which") -> example(A14S202-which, A17S202-type), of(A17S202-type, A20S202-mechanism), isa(A20S202-mechanism, "defense mechanism"), isa(A17S202-type, "another type").
english(barrons.rule568, "Some animals protect themselves[escape predators enemies] by sending o ut special sounds or smells which is another type of defense mechanism").
pretty(barrons.rule568, "EXAMPLE(Which, Type), Which = 'which', Type = 'another type of defense mechanism'.").
barrons.rule568:: of(A17S202-type, A20S202-mechanism), isa(A20S202-mechanism, "defense mechanism"), isa(A17S202-type, "another type") -> example(A14S202-which, A17S202-type), isa(A14S202-which, "which").
english(barrons.rule569, "These smells and sounds can attract other animals so that they[other animals] can mate or they[other animals] can help them[other animals] fight an enemy").
pretty(barrons.rule569, "EFFECT(attract(These, Animal), mate(Animal)), These = 'These', Animal = 'other animals'.").
barrons.rule569:: isa(E6S203-attract, "attract"), agent(E6S203-attract, A1S203-these), isa(A1S203-these, "These"), object(E6S203-attract, A8S203-animal), isa(A8S203-animal, "other animals") -> effect(E6S203-attract, E13S203-mate), isa(E13S203-mate, "mate"), agent(E13S203-mate, A8S203-animal).
english(barrons.rule570, "These smells and sounds can attract other animals so that they[other animals] can mate or they[other animals] can help them[other animals] fight an enemy").
pretty(barrons.rule570, "EFFECT(attract(These, Animal), mate(Animal)), These = 'These', Animal = 'other animals'.").
barrons.rule570:: isa(E13S203-mate, "mate"), agent(E13S203-mate, A8S203-animal), isa(A8S203-animal, "other animals") -> effect(E6S203-attract, E13S203-mate), isa(E6S203-attract, "attract"), agent(E6S203-attract, A1S203-these), isa(A1S203-these, "These"), object(E6S203-attract, A8S203-animal).
english(barrons.rule571, "These smells and sounds can attract other animals so that they[other animals] can mate or they[other animals] can help them[other animals] fight an enemy").
pretty(barrons.rule571, "EFFECT(attract(These, Animal), help(Animal, Fight)), These = 'These', Animal = 'other animals', Fight = 'fight an enemy'.").
barrons.rule571:: isa(E6S203-attract, "attract"), agent(E6S203-attract, A1S203-these), isa(A1S203-these, "These"), object(E6S203-attract, A8S203-animal), isa(A8S203-animal, "other animals") -> effect(E6S203-attract, E17S203-help), isa(E17S203-help, "help"), agent(E17S203-help, A8S203-animal), arg(E17S203-help, A19S203-fight), isa(A19S203-fight, "them[other animals] fight an enemy").
english(barrons.rule572, "These smells and sounds can attract other animals so that they[other animals] can mate or they[other animals] can help them[other animals] fight an enemy").
pretty(barrons.rule572, "EFFECT(attract(These, Animal), help(Animal, Fight)), These = 'These', Animal = 'other animals', Fight = 'fight an enemy'.").
barrons.rule572:: isa(E17S203-help, "help"), agent(E17S203-help, A8S203-animal), isa(A8S203-animal, "other animals"), arg(E17S203-help, A19S203-fight), isa(A19S203-fight, "them[other animals] fight an enemy") -> effect(E6S203-attract, E17S203-help), isa(E6S203-attract, "attract"), agent(E6S203-attract, A1S203-these), isa(A1S203-these, "These"), object(E6S203-attract, A8S203-animal).
english(barrons.rule573, "These smells and sounds can attract other animals so that they[other animals] can mate or they[other animals] can help them[other animals] fight an enemy").
pretty(barrons.rule573, "PURPOSE(They, fight(Animal, Enemy)), They = 'they[other animals]', Animal = 'other animals', Enemy = 'an enemy'.").
barrons.rule573:: isa(A15S203-they, "they[other animals]") -> purpose(A15S203-they, E19S203-fight), isa(E19S203-fight, "fight"), agent(E19S203-fight, A8S203-animal), isa(A8S203-animal, "other animals"), object(E19S203-fight, A21S203-enemy), isa(A21S203-enemy, "an enemy").
english(barrons.rule574, "These smells and sounds can attract other animals so that they[other animals] can mate or they[other animals] can help them[other animals] fight an enemy").
pretty(barrons.rule574, "PURPOSE(They, fight(Animal, Enemy)), They = 'they[other animals]', Animal = 'other animals', Enemy = 'an enemy'.").
barrons.rule574:: isa(E19S203-fight, "fight"), agent(E19S203-fight, A8S203-animal), isa(A8S203-animal, "other animals"), object(E19S203-fight, A21S203-enemy), isa(A21S203-enemy, "an enemy") -> purpose(A15S203-they, E19S203-fight), isa(A15S203-they, "they[other animals]").
english(barrons.rule575, "Behavior is the way that organisms respond to changes in their[living things organisms] environment or to a stimulus").
pretty(barrons.rule575, "EXAMPLE(Behavior, respond_to(Organism, Behavior, Change)), Behavior = 'Behavior', Organism = 'organisms', Change = 'changes in their[living things organisms] environment or to a stimulus'.").
barrons.rule575:: isa(A1S206-behavior, "Behavior") -> example(A1S206-behavior, E7S206-respond), isa(E7S206-respond, "respond"), agent(E7S206-respond, A6S206-organism), isa(A6S206-organism, "organisms"), object(E7S206-respond, A1S206-behavior), to(E7S206-respond, A9S206-change), isa(A9S206-change, "changes in their[living things organisms] environment or to a stimulus").
english(barrons.rule576, "Behavior is the way that organisms respond to changes in their[living things organisms] environment or to a stimulus").
pretty(barrons.rule576, "EXAMPLE(Behavior, respond_to(Organism, Behavior, Change)), Behavior = 'Behavior', Organism = 'organisms', Change = 'changes in their[living things organisms] environment or to a stimulus'.").
barrons.rule576:: isa(E7S206-respond, "respond"), agent(E7S206-respond, A6S206-organism), isa(A6S206-organism, "organisms"), object(E7S206-respond, A1S206-behavior), isa(A1S206-behavior, "Behavior"), to(E7S206-respond, A9S206-change), isa(A9S206-change, "changes in their[living things organisms] environment or to a stimulus") -> example(A1S206-behavior, E7S206-respond).
english(barrons.rule577, "Behavior is the way that organisms respond to changes in their[living things organisms] environment or to a stimulus").
pretty(barrons.rule577, "EXAMPLE(Behavior, respond_to(Organism, Way, Change)), Behavior = 'Behavior', Organism = 'organisms', Way = 'the way', Change = 'changes in their[living things organisms] environment or to a stimulus'.").
barrons.rule577:: isa(A1S206-behavior, "Behavior") -> example(A1S206-behavior, E7S206-respond), isa(E7S206-respond, "respond"), agent(E7S206-respond, A6S206-organism), isa(A6S206-organism, "organisms"), object(E7S206-respond, A4S206-way), isa(A4S206-way, "the way"), to(E7S206-respond, A9S206-change), isa(A9S206-change, "changes in their[living things organisms] environment or to a stimulus").
english(barrons.rule578, "Behavior is the way that organisms respond to changes in their[living things organisms] environment or to a stimulus").
pretty(barrons.rule578, "EXAMPLE(Behavior, respond_to(Organism, Way, Change)), Behavior = 'Behavior', Organism = 'organisms', Way = 'the way', Change = 'changes in their[living things organisms] environment or to a stimulus'.").
barrons.rule578:: isa(E7S206-respond, "respond"), agent(E7S206-respond, A6S206-organism), isa(A6S206-organism, "organisms"), object(E7S206-respond, A4S206-way), isa(A4S206-way, "the way"), to(E7S206-respond, A9S206-change), isa(A9S206-change, "changes in their[living things organisms] environment or to a stimulus") -> example(A1S206-behavior, E7S206-respond), isa(A1S206-behavior, "Behavior").
english(barrons.rule579, "Humans shiver when it[Behavior is the way that organisms respond to changes in their environment or to a stimulus] is cold and by doing so we create more heat in an attempt to warm our[we] bodies").
pretty(barrons.rule579, "WHEN(shiver(Human), be(Way, Cold)), Human = 'Humans', Way = 'the way', Cold = 'cold'.").
barrons.rule579:: isa(E2S207-shiver, "shiver"), agent(E2S207-shiver, A1S207-human), isa(A1S207-human, "Humans") -> when(E2S207-shiver, E5S207-be), isa(E5S207-be, "be"), agent(E5S207-be, A4S206-way), isa(A4S206-way, "the way"), object(E5S207-be, A6S207-cold), isa(A6S207-cold, "cold").
english(barrons.rule580, "Humans shiver when it[Behavior is the way that organisms respond to changes in their environment or to a stimulus] is cold and by doing so we create more heat in an attempt to warm our[we] bodies").
pretty(barrons.rule580, "WHEN(shiver(Human), be(Way, Cold)), Human = 'Humans', Way = 'the way', Cold = 'cold'.").
barrons.rule580:: isa(E5S207-be, "be"), agent(E5S207-be, A4S206-way), isa(A4S206-way, "the way"), object(E5S207-be, A6S207-cold), isa(A6S207-cold, "cold") -> when(E2S207-shiver, E5S207-be), isa(E2S207-shiver, "shiver"), agent(E2S207-shiver, A1S207-human), isa(A1S207-human, "Humans").
english(barrons.rule581, "Humans shiver when it[Behavior is the way that organisms respond to changes in their environment or to a stimulus] is cold and by doing so we create more heat in an attempt to warm our[we] bodies").
pretty(barrons.rule581, "EFFECT(shiver(Human), create_in(We, Heat, Attempt)), Human = 'Humans', We = 'we', Heat = 'heat', Attempt = 'an attempt'.").
barrons.rule581:: isa(E2S207-shiver, "shiver"), agent(E2S207-shiver, A1S207-human), isa(A1S207-human, "Humans") -> effect(E2S207-shiver, E12S207-create), isa(E12S207-create, "create"), agent(E12S207-create, A11S207-we), isa(A11S207-we, "we"), object(E12S207-create, A14S207-heat), isa(A14S207-heat, "heat"), in(E12S207-create, A17S207-attempt), isa(A17S207-attempt, "an attempt").
english(barrons.rule582, "Humans shiver when it[Behavior is the way that organisms respond to changes in their environment or to a stimulus] is cold and by doing so we create more heat in an attempt to warm our[we] bodies").
pretty(barrons.rule582, "EFFECT(shiver(Human), create_in(We, Heat, Attempt)), Human = 'Humans', We = 'we', Heat = 'heat', Attempt = 'an attempt'.").
barrons.rule582:: isa(E12S207-create, "create"), agent(E12S207-create, A11S207-we), isa(A11S207-we, "we"), object(E12S207-create, A14S207-heat), isa(A14S207-heat, "heat"), in(E12S207-create, A17S207-attempt), isa(A17S207-attempt, "an attempt") -> effect(E2S207-shiver, E12S207-create), isa(E2S207-shiver, "shiver"), agent(E2S207-shiver, A1S207-human), isa(A1S207-human, "Humans").
english(barrons.rule583, "Humans shiver when it[Behavior is the way that organisms respond to changes in their environment or to a stimulus] is cold and by doing so we create more heat in an attempt to warm our[we] bodies").
pretty(barrons.rule583, "EFFECT(create_in(We, Heat, Attempt), warm(We, Body)), We = 'we', Heat = 'heat', Attempt = 'an attempt', Body = 'our[we] bodies'.").
barrons.rule583:: isa(E12S207-create, "create"), agent(E12S207-create, A11S207-we), isa(A11S207-we, "we"), object(E12S207-create, A14S207-heat), isa(A14S207-heat, "heat"), in(E12S207-create, A17S207-attempt), isa(A17S207-attempt, "an attempt") -> effect(E12S207-create, E19S207-warm), isa(E19S207-warm, "warm"), agent(E19S207-warm, A11S207-we), object(E19S207-warm, A21S207-body), isa(A21S207-body, "our[we] bodies").
english(barrons.rule584, "Humans shiver when it[Behavior is the way that organisms respond to changes in their environment or to a stimulus] is cold and by doing so we create more heat in an attempt to warm our[we] bodies").
pretty(barrons.rule584, "EFFECT(create_in(We, Heat, Attempt), warm(We, Body)), We = 'we', Heat = 'heat', Attempt = 'an attempt', Body = 'our[we] bodies'.").
barrons.rule584:: isa(E19S207-warm, "warm"), agent(E19S207-warm, A11S207-we), isa(A11S207-we, "we"), object(E19S207-warm, A21S207-body), isa(A21S207-body, "our[we] bodies") -> effect(E12S207-create, E19S207-warm), isa(E12S207-create, "create"), agent(E12S207-create, A11S207-we), object(E12S207-create, A14S207-heat), isa(A14S207-heat, "heat"), in(E12S207-create, A17S207-attempt), isa(A17S207-attempt, "an attempt").
english(barrons.rule585, "In the hot weather our[we] bodies sweat perspiration bringing water to our[we] skin").
pretty(barrons.rule585, "EFFECT(sweat_in(Body, Perspiration, Weather), bring_to(Body, Water, Skin)), Body = 'our[we] bodies', Perspiration = 'perspiration', Weather = 'the hot weather', Water = 'water', Skin = 'our[we] skin'.").
barrons.rule585:: isa(E7S208-sweat, "sweat"), agent(E7S208-sweat, A6S208-body), isa(A6S208-body, "our[we] bodies"), object(E7S208-sweat, A9S208-perspiration), isa(A9S208-perspiration, "perspiration"), in(E7S208-sweat, A4S208-weather), isa(A4S208-weather, "the hot weather") -> effect(E7S208-sweat, E12S208-bring), isa(E12S208-bring, "bring"), agent(E12S208-bring, A6S208-body), object(E12S208-bring, A13S208-water), isa(A13S208-water, "water"), to(E12S208-bring, A16S208-skin), isa(A16S208-skin, "our[we] skin").
english(barrons.rule586, "In the hot weather our[we] bodies sweat perspiration bringing water to our[we] skin").
pretty(barrons.rule586, "EFFECT(sweat_in(Body, Perspiration, Weather), bring_to(Body, Water, Skin)), Body = 'our[we] bodies', Perspiration = 'perspiration', Weather = 'the hot weather', Water = 'water', Skin = 'our[we] skin'.").
barrons.rule586:: isa(E12S208-bring, "bring"), agent(E12S208-bring, A6S208-body), isa(A6S208-body, "our[we] bodies"), object(E12S208-bring, A13S208-water), isa(A13S208-water, "water"), to(E12S208-bring, A16S208-skin), isa(A16S208-skin, "our[we] skin") -> effect(E7S208-sweat, E12S208-bring), isa(E7S208-sweat, "sweat"), agent(E7S208-sweat, A6S208-body), object(E7S208-sweat, A9S208-perspiration), isa(A9S208-perspiration, "perspiration"), in(E7S208-sweat, A4S208-weather), isa(A4S208-weather, "the hot weather").
english(barrons.rule587, "When air brushes across our[we] wet skin it[our wet skin] cools down our[we] body").
pretty(barrons.rule587, "WHEN(cool(Skin, Body, Down), air brush(Skin)), Skin = 'our[we] wet skin', Body = 'our[we] body', Down = 'down'.").
barrons.rule587:: isa(E10S209-cool, "cool"), agent(E10S209-cool, A7S209-skin), isa(A7S209-skin, "our[we] wet skin"), object(E10S209-cool, A13S209-body), isa(A13S209-body, "our[we] body"), arg(E10S209-cool, A11S209-down), isa(A11S209-down, "down") -> when(E10S209-cool, E3S209-brush), isa(E3S209-brush, "air brush"), agent(E3S209-brush, A7S209-skin).
english(barrons.rule588, "When air brushes across our[we] wet skin it[our wet skin] cools down our[we] body").
pretty(barrons.rule588, "WHEN(cool(Skin, Body, Down), air brush(Skin)), Skin = 'our[we] wet skin', Body = 'our[we] body', Down = 'down'.").
barrons.rule588:: isa(E3S209-brush, "air brush"), agent(E3S209-brush, A7S209-skin), isa(A7S209-skin, "our[we] wet skin") -> when(E10S209-cool, E3S209-brush), isa(E10S209-cool, "cool"), agent(E10S209-cool, A7S209-skin), object(E10S209-cool, A13S209-body), isa(A13S209-body, "our[we] body"), arg(E10S209-cool, A11S209-down), isa(A11S209-down, "down").
english(barrons.rule589, "When we[we] get nervous scared or upset our[we] body responds by increasing our[we] heart rate").
pretty(barrons.rule589, "WHEN(respond(Body), nervous(We)), Body = 'scared or upset our[we] body', We = 'we'.").
barrons.rule589:: isa(E12S210-respond, "respond"), agent(E12S210-respond, A11S210-body), isa(A11S210-body, "scared or upset our[we] body") -> when(E12S210-respond, E4S210-nervous), isa(E4S210-nervous, "nervous"), agent(E4S210-nervous, A11S207-we), isa(A11S207-we, "we").
english(barrons.rule590, "When we[we] get nervous scared or upset our[we] body responds by increasing our[we] heart rate").
pretty(barrons.rule590, "WHEN(respond(Body), nervous(We)), Body = 'scared or upset our[we] body', We = 'we'.").
barrons.rule590:: isa(E4S210-nervous, "nervous"), agent(E4S210-nervous, A11S207-we), isa(A11S207-we, "we") -> when(E12S210-respond, E4S210-nervous), isa(E12S210-respond, "respond"), agent(E12S210-respond, A11S210-body), isa(A11S210-body, "scared or upset our[we] body").
english(barrons.rule591, "When we[we] get nervous scared or upset our[we] body responds by increasing our[we] heart rate").
pretty(barrons.rule591, "ENABLE(increase(Body, Rate), respond(Body)), Body = 'scared or upset our[we] body', Rate = 'our[we] heart rate'.").
barrons.rule591:: isa(E14S210-increase, "increase"), agent(E14S210-increase, A11S210-body), isa(A11S210-body, "scared or upset our[we] body"), object(E14S210-increase, A17S210-rate), isa(A17S210-rate, "our[we] heart rate") -> enable(E14S210-increase, E12S210-respond), isa(E12S210-respond, "respond"), agent(E12S210-respond, A11S210-body).
english(barrons.rule592, "When we[we] get nervous scared or upset our[we] body responds by increasing our[we] heart rate").
pretty(barrons.rule592, "ENABLE(increase(Body, Rate), respond(Body)), Body = 'scared or upset our[we] body', Rate = 'our[we] heart rate'.").
barrons.rule592:: isa(E12S210-respond, "respond"), agent(E12S210-respond, A11S210-body), isa(A11S210-body, "scared or upset our[we] body") -> enable(E14S210-increase, E12S210-respond), isa(E14S210-increase, "increase"), agent(E14S210-increase, A11S210-body), object(E14S210-increase, A17S210-rate), isa(A17S210-rate, "our[we] heart rate").
english(barrons.rule593, "We[we] breathe faster and begin to sweat").
pretty(barrons.rule593, "isa(breathe, 'breathe') -> breathe(We, Faster).").
barrons.rule593:: isa(E2S211-breathe, "breathe") -> agent(E2S211-breathe, A11S207-we), isa(A11S207-we, "we"), object(E2S211-breathe, A3S211-faster), isa(A3S211-faster, "faster").
english(barrons.rule594, "We[we] breathe faster and begin to sweat").
pretty(barrons.rule594, "isa(We, 'we') -> breathe(We, Faster).").
barrons.rule594:: isa(A11S207-we, "we") -> isa(E2S211-breathe, "breathe"), agent(E2S211-breathe, A11S207-we), object(E2S211-breathe, A3S211-faster), isa(A3S211-faster, "faster").
english(barrons.rule595, "We[we] breathe faster and begin to sweat").
pretty(barrons.rule595, "isa(Faster, 'faster') -> breathe(We, Faster).").
barrons.rule595:: isa(A3S211-faster, "faster") -> isa(E2S211-breathe, "breathe"), agent(E2S211-breathe, A11S207-we), isa(A11S207-we, "we"), object(E2S211-breathe, A3S211-faster).
english(barrons.rule596, "These behaviors may include nest building hibernating hunting migrating and communicating").
pretty(barrons.rule596, "isa(include, 'include') -> include(Behavior, Building).").
barrons.rule596:: isa(E4S214-include, "include") -> agent(E4S214-include, A2S214-behavior), isa(A2S214-behavior, "These behaviors"), object(E4S214-include, A7S214-building), isa(A7S214-building, "nest building").
english(barrons.rule597, "These behaviors may include nest building hibernating hunting migrating and communicating").
pretty(barrons.rule597, "isa(Behavior, 'These behaviors') -> include(Behavior, Building).").
barrons.rule597:: isa(A2S214-behavior, "These behaviors") -> isa(E4S214-include, "include"), agent(E4S214-include, A2S214-behavior), object(E4S214-include, A7S214-building), isa(A7S214-building, "nest building").
english(barrons.rule598, "These behaviors may include nest building hibernating hunting migrating and communicating").
pretty(barrons.rule598, "isa(Building, 'nest building') -> include(Behavior, Building).").
barrons.rule598:: isa(A7S214-building, "nest building") -> isa(E4S214-include, "include"), agent(E4S214-include, A2S214-behavior), isa(A2S214-behavior, "These behaviors"), object(E4S214-include, A7S214-building).
english(barrons.rule599, "These behaviors may include nest building hibernating hunting migrating and communicating").
pretty(barrons.rule599, "isa(include, 'include') -> include(Behavior, Hibernate).").
barrons.rule599:: isa(E4S214-include, "include") -> agent(E4S214-include, A2S214-behavior), isa(A2S214-behavior, "These behaviors"), object(E4S214-include, A9S214-hibernate), isa(A9S214-hibernate, "hibernating").
english(barrons.rule600, "These behaviors may include nest building hibernating hunting migrating and communicating").
pretty(barrons.rule600, "isa(Behavior, 'These behaviors') -> include(Behavior, Hibernate).").
barrons.rule600:: isa(A2S214-behavior, "These behaviors") -> isa(E4S214-include, "include"), agent(E4S214-include, A2S214-behavior), object(E4S214-include, A9S214-hibernate), isa(A9S214-hibernate, "hibernating").
english(barrons.rule601, "These behaviors may include nest building hibernating hunting migrating and communicating").
pretty(barrons.rule601, "isa(Hibernate, 'hibernating') -> include(Behavior, Hibernate).").
barrons.rule601:: isa(A9S214-hibernate, "hibernating") -> isa(E4S214-include, "include"), agent(E4S214-include, A2S214-behavior), isa(A2S214-behavior, "These behaviors"), object(E4S214-include, A9S214-hibernate).
english(barrons.rule602, "These behaviors may include nest building hibernating hunting migrating and communicating").
pretty(barrons.rule602, "isa(include, 'include') -> include(Behavior, Hunting).").
barrons.rule602:: isa(E4S214-include, "include") -> agent(E4S214-include, A2S214-behavior), isa(A2S214-behavior, "These behaviors"), object(E4S214-include, A11S214-hunting), isa(A11S214-hunting, "hunting").
english(barrons.rule603, "These behaviors may include nest building hibernating hunting migrating and communicating").
pretty(barrons.rule603, "isa(Behavior, 'These behaviors') -> include(Behavior, Hunting).").
barrons.rule603:: isa(A2S214-behavior, "These behaviors") -> isa(E4S214-include, "include"), agent(E4S214-include, A2S214-behavior), object(E4S214-include, A11S214-hunting), isa(A11S214-hunting, "hunting").
english(barrons.rule604, "These behaviors may include nest building hibernating hunting migrating and communicating").
pretty(barrons.rule604, "isa(Hunting, 'hunting') -> include(Behavior, Hunting).").
barrons.rule604:: isa(A11S214-hunting, "hunting") -> isa(E4S214-include, "include"), agent(E4S214-include, A2S214-behavior), isa(A2S214-behavior, "These behaviors"), object(E4S214-include, A11S214-hunting).
english(barrons.rule605, "These behaviors may include nest building hibernating hunting migrating and communicating").
pretty(barrons.rule605, "isa(include, 'include') -> include(Behavior, Migrate).").
barrons.rule605:: isa(E4S214-include, "include") -> agent(E4S214-include, A2S214-behavior), isa(A2S214-behavior, "These behaviors"), object(E4S214-include, A13S214-migrate), isa(A13S214-migrate, "migrating").
english(barrons.rule606, "These behaviors may include nest building hibernating hunting migrating and communicating").
pretty(barrons.rule606, "isa(Behavior, 'These behaviors') -> include(Behavior, Migrate).").
barrons.rule606:: isa(A2S214-behavior, "These behaviors") -> isa(E4S214-include, "include"), agent(E4S214-include, A2S214-behavior), object(E4S214-include, A13S214-migrate), isa(A13S214-migrate, "migrating").
english(barrons.rule607, "These behaviors may include nest building hibernating hunting migrating and communicating").
pretty(barrons.rule607, "isa(Migrate, 'migrating') -> include(Behavior, Migrate).").
barrons.rule607:: isa(A13S214-migrate, "migrating") -> isa(E4S214-include, "include"), agent(E4S214-include, A2S214-behavior), isa(A2S214-behavior, "These behaviors"), object(E4S214-include, A13S214-migrate).
english(barrons.rule608, "These behaviors may include nest building hibernating hunting migrating and communicating").
pretty(barrons.rule608, "isa(include, 'include') -> include(Behavior, Communicate).").
barrons.rule608:: isa(E4S214-include, "include") -> agent(E4S214-include, A2S214-behavior), isa(A2S214-behavior, "These behaviors"), object(E4S214-include, A16S214-communicate), isa(A16S214-communicate, "communicating").
english(barrons.rule609, "These behaviors may include nest building hibernating hunting migrating and communicating").
pretty(barrons.rule609, "isa(Behavior, 'These behaviors') -> include(Behavior, Communicate).").
barrons.rule609:: isa(A2S214-behavior, "These behaviors") -> isa(E4S214-include, "include"), agent(E4S214-include, A2S214-behavior), object(E4S214-include, A16S214-communicate), isa(A16S214-communicate, "communicating").
english(barrons.rule610, "These behaviors may include nest building hibernating hunting migrating and communicating").
pretty(barrons.rule610, "isa(Communicate, 'communicating') -> include(Behavior, Communicate).").
barrons.rule610:: isa(A16S214-communicate, "communicating") -> isa(E4S214-include, "include"), agent(E4S214-include, A2S214-behavior), isa(A2S214-behavior, "These behaviors"), object(E4S214-include, A16S214-communicate).
english(barrons.rule611, "We wear winter coats gloves and hats when the weather is cold").
pretty(barrons.rule611, "isa(wear, 'wear') -> wear(We, Coat).").
barrons.rule611:: isa(E2S216-wear, "wear") -> agent(E2S216-wear, A1S216-we), isa(A1S216-we, "We"), object(E2S216-wear, A4S216-coat), isa(A4S216-coat, "winter coats").
english(barrons.rule612, "We wear winter coats gloves and hats when the weather is cold").
pretty(barrons.rule612, "isa(We, 'We') -> wear(We, Coat).").
barrons.rule612:: isa(A1S216-we, "We") -> isa(E2S216-wear, "wear"), agent(E2S216-wear, A1S216-we), object(E2S216-wear, A4S216-coat), isa(A4S216-coat, "winter coats").
english(barrons.rule613, "We wear winter coats gloves and hats when the weather is cold").
pretty(barrons.rule613, "isa(Coat, 'winter coats') -> wear(We, Coat).").
barrons.rule613:: isa(A4S216-coat, "winter coats") -> isa(E2S216-wear, "wear"), agent(E2S216-wear, A1S216-we), isa(A1S216-we, "We"), object(E2S216-wear, A4S216-coat).
english(barrons.rule614, "We wear winter coats gloves and hats when the weather is cold").
pretty(barrons.rule614, "isa(wear, 'wear') -> wear(We, Glove).").
barrons.rule614:: isa(E2S216-wear, "wear") -> agent(E2S216-wear, A1S216-we), isa(A1S216-we, "We"), object(E2S216-wear, A6S216-glove), isa(A6S216-glove, "gloves").
english(barrons.rule615, "We wear winter coats gloves and hats when the weather is cold").
pretty(barrons.rule615, "isa(We, 'We') -> wear(We, Glove).").
barrons.rule615:: isa(A1S216-we, "We") -> isa(E2S216-wear, "wear"), agent(E2S216-wear, A1S216-we), object(E2S216-wear, A6S216-glove), isa(A6S216-glove, "gloves").
english(barrons.rule616, "We wear winter coats gloves and hats when the weather is cold").
pretty(barrons.rule616, "isa(Glove, 'gloves') -> wear(We, Glove).").
barrons.rule616:: isa(A6S216-glove, "gloves") -> isa(E2S216-wear, "wear"), agent(E2S216-wear, A1S216-we), isa(A1S216-we, "We"), object(E2S216-wear, A6S216-glove).
english(barrons.rule617, "We wear winter coats gloves and hats when the weather is cold").
pretty(barrons.rule617, "isa(wear, 'wear') -> wear(We, Hat).").
barrons.rule617:: isa(E2S216-wear, "wear") -> agent(E2S216-wear, A1S216-we), isa(A1S216-we, "We"), object(E2S216-wear, A9S216-hat), isa(A9S216-hat, "hats").
english(barrons.rule618, "We wear winter coats gloves and hats when the weather is cold").
pretty(barrons.rule618, "isa(We, 'We') -> wear(We, Hat).").
barrons.rule618:: isa(A1S216-we, "We") -> isa(E2S216-wear, "wear"), agent(E2S216-wear, A1S216-we), object(E2S216-wear, A9S216-hat), isa(A9S216-hat, "hats").
english(barrons.rule619, "We wear winter coats gloves and hats when the weather is cold").
pretty(barrons.rule619, "isa(Hat, 'hats') -> wear(We, Hat).").
barrons.rule619:: isa(A9S216-hat, "hats") -> isa(E2S216-wear, "wear"), agent(E2S216-wear, A1S216-we), isa(A1S216-we, "We"), object(E2S216-wear, A9S216-hat).
english(barrons.rule620, "Some animals grow thicker fur in the winter and shed it[thicker fur] in the warmer months").
pretty(barrons.rule620, "isa(grow, 'grow') -> grow_in(Animal, Fur, Winter).").
barrons.rule620:: isa(E3S217-grow, "grow") -> agent(E3S217-grow, A2S217-animal), isa(A2S217-animal, "Some animals"), object(E3S217-grow, A5S217-fur), isa(A5S217-fur, "thicker fur"), in(E3S217-grow, A8S217-winter), isa(A8S217-winter, "the winter").
english(barrons.rule621, "Some animals grow thicker fur in the winter and shed it[thicker fur] in the warmer months").
pretty(barrons.rule621, "isa(Animal, 'Some animals') -> grow_in(Animal, Fur, Winter).").
barrons.rule621:: isa(A2S217-animal, "Some animals") -> isa(E3S217-grow, "grow"), agent(E3S217-grow, A2S217-animal), object(E3S217-grow, A5S217-fur), isa(A5S217-fur, "thicker fur"), in(E3S217-grow, A8S217-winter), isa(A8S217-winter, "the winter").
english(barrons.rule622, "Some animals grow thicker fur in the winter and shed it[thicker fur] in the warmer months").
pretty(barrons.rule622, "isa(Fur, 'thicker fur') -> grow_in(Animal, Fur, Winter).").
barrons.rule622:: isa(A5S217-fur, "thicker fur") -> isa(E3S217-grow, "grow"), agent(E3S217-grow, A2S217-animal), isa(A2S217-animal, "Some animals"), object(E3S217-grow, A5S217-fur), in(E3S217-grow, A8S217-winter), isa(A8S217-winter, "the winter").
english(barrons.rule623, "Some animals grow thicker fur in the winter and shed it[thicker fur] in the warmer months").
pretty(barrons.rule623, "isa(Winter, 'the winter') -> grow_in(Animal, Fur, Winter).").
barrons.rule623:: isa(A8S217-winter, "the winter") -> isa(E3S217-grow, "grow"), agent(E3S217-grow, A2S217-animal), isa(A2S217-animal, "Some animals"), object(E3S217-grow, A5S217-fur), isa(A5S217-fur, "thicker fur"), in(E3S217-grow, A8S217-winter).
english(barrons.rule624, "This helps to regulate their[Some animals] body heat").
pretty(barrons.rule624, "PURPOSE(This, regulate(This, Heat)), This = 'This', Heat = 'their[Some animals] body heat'.").
barrons.rule624:: isa(A1S218-this, "This") -> purpose(A1S218-this, E4S218-regulate), isa(E4S218-regulate, "regulate"), agent(E4S218-regulate, A1S218-this), object(E4S218-regulate, A7S218-heat), isa(A7S218-heat, "their[Some animals] body heat").
english(barrons.rule625, "This helps to regulate their[Some animals] body heat").
pretty(barrons.rule625, "PURPOSE(This, regulate(This, Heat)), This = 'This', Heat = 'their[Some animals] body heat'.").
barrons.rule625:: isa(E4S218-regulate, "regulate"), agent(E4S218-regulate, A1S218-this), isa(A1S218-this, "This"), object(E4S218-regulate, A7S218-heat), isa(A7S218-heat, "their[Some animals] body heat") -> purpose(A1S218-this, E4S218-regulate).
english(barrons.rule626, "Other animals change their[Other animals] amount of body fat with the seasons").
pretty(barrons.rule626, "isa(Fat, 'body fat') -> change_with(Animal, Amount, Season).").
barrons.rule626:: isa(A8S219-fat, "body fat") -> of(A5S219-amount, A8S219-fat), isa(E3S219-change, "change"), agent(E3S219-change, A2S219-animal), isa(A2S219-animal, "Other animals"), object(E3S219-change, A5S219-amount), isa(A5S219-amount, "their[Other animals] amount"), with(E3S219-change, A11S219-season), isa(A11S219-season, "the seasons").
english(barrons.rule627, "Other animals change their[Other animals] amount of body fat with the seasons").
pretty(barrons.rule627, "isa(change, 'change') -> change_with(Animal, Amount, Season).").
barrons.rule627:: isa(E3S219-change, "change") -> of(A5S219-amount, A8S219-fat), isa(A8S219-fat, "body fat"), agent(E3S219-change, A2S219-animal), isa(A2S219-animal, "Other animals"), object(E3S219-change, A5S219-amount), isa(A5S219-amount, "their[Other animals] amount"), with(E3S219-change, A11S219-season), isa(A11S219-season, "the seasons").
english(barrons.rule628, "Other animals change their[Other animals] amount of body fat with the seasons").
pretty(barrons.rule628, "isa(Animal, 'Other animals') -> change_with(Animal, Amount, Season).").
barrons.rule628:: isa(A2S219-animal, "Other animals") -> of(A5S219-amount, A8S219-fat), isa(A8S219-fat, "body fat"), isa(E3S219-change, "change"), agent(E3S219-change, A2S219-animal), object(E3S219-change, A5S219-amount), isa(A5S219-amount, "their[Other animals] amount"), with(E3S219-change, A11S219-season), isa(A11S219-season, "the seasons").
english(barrons.rule629, "Other animals change their[Other animals] amount of body fat with the seasons").
pretty(barrons.rule629, "isa(Amount, 'their[Other animals] amount of body fat') -> change_with(Animal, Amount, Season).").
barrons.rule629:: isa(A5S219-amount, "their[Other animals] amount") -> of(A5S219-amount, A8S219-fat), isa(A8S219-fat, "body fat"), isa(E3S219-change, "change"), agent(E3S219-change, A2S219-animal), isa(A2S219-animal, "Other animals"), object(E3S219-change, A5S219-amount), with(E3S219-change, A11S219-season), isa(A11S219-season, "the seasons").
english(barrons.rule630, "Other animals change their[Other animals] amount of body fat with the seasons").
pretty(barrons.rule630, "isa(Season, 'the seasons') -> change_with(Animal, Amount, Season).").
barrons.rule630:: isa(A11S219-season, "the seasons") -> of(A5S219-amount, A8S219-fat), isa(A8S219-fat, "body fat"), isa(E3S219-change, "change"), agent(E3S219-change, A2S219-animal), isa(A2S219-animal, "Other animals"), object(E3S219-change, A5S219-amount), isa(A5S219-amount, "their[Other animals] amount"), with(E3S219-change, A11S219-season).
english(barrons.rule631, "Body fat is a form of stored energy and helps animals get through long periods of time with little food").
pretty(barrons.rule631, "EFFECT(be_of(Fat, Form, Energy), get(Animal, Period, Through)), Fat = 'Body fat', Form = 'a form of stored energy', Energy = 'stored energy', Animal = 'animals', Period = 'long periods of time with little food', Through = 'through'.").
barrons.rule631:: isa(E3S220-be, "be"), agent(E3S220-be, A2S220-fat), isa(A2S220-fat, "Body fat"), object(E3S220-be, A5S220-form), isa(A5S220-form, "a form"), of(E3S220-be, A8S220-energy), isa(A8S220-energy, "stored energy") -> effect(E3S220-be, E12S220-get), with(A17S220-time, A20S220-food), isa(A20S220-food, "little food"), of(A15S220-period, A17S220-time), isa(A17S220-time, "time"), isa(E12S220-get, "get"), agent(E12S220-get, A11S220-animal), isa(A11S220-animal, "animals"), object(E12S220-get, A15S220-period), isa(A15S220-period, "long periods"), arg(E12S220-get, A13S220-through), isa(A13S220-through, "through").
english(barrons.rule632, "Body fat is a form of stored energy and helps animals get through long periods of time with little food").
pretty(barrons.rule632, "EFFECT(be_of(Fat, Form, Energy), get(Animal, Period, Through)), Fat = 'Body fat', Form = 'a form of stored energy', Energy = 'stored energy', Animal = 'animals', Period = 'long periods of time with little food', Through = 'through'.").
barrons.rule632:: with(A17S220-time, A20S220-food), isa(A20S220-food, "little food"), of(A15S220-period, A17S220-time), isa(A17S220-time, "time"), isa(E12S220-get, "get"), agent(E12S220-get, A11S220-animal), isa(A11S220-animal, "animals"), object(E12S220-get, A15S220-period), isa(A15S220-period, "long periods"), arg(E12S220-get, A13S220-through), isa(A13S220-through, "through") -> effect(E3S220-be, E12S220-get), isa(E3S220-be, "be"), agent(E3S220-be, A2S220-fat), isa(A2S220-fat, "Body fat"), object(E3S220-be, A5S220-form), isa(A5S220-form, "a form"), of(E3S220-be, A8S220-energy), isa(A8S220-energy, "stored energy").
english(barrons.rule633, "Body fat is a form of stored energy and helps animals get through long periods of time with little food").
pretty(barrons.rule633, "PURPOSE(Fat, get(Animal, Period, Through)), Fat = 'Body fat', Animal = 'animals', Period = 'long periods of time with little food', Through = 'through'.").
barrons.rule633:: isa(A2S220-fat, "Body fat") -> purpose(A2S220-fat, E12S220-get), with(A17S220-time, A20S220-food), isa(A20S220-food, "little food"), of(A15S220-period, A17S220-time), isa(A17S220-time, "time"), isa(E12S220-get, "get"), agent(E12S220-get, A11S220-animal), isa(A11S220-animal, "animals"), object(E12S220-get, A15S220-period), isa(A15S220-period, "long periods"), arg(E12S220-get, A13S220-through), isa(A13S220-through, "through").
english(barrons.rule634, "Body fat is a form of stored energy and helps animals get through long periods of time with little food").
pretty(barrons.rule634, "PURPOSE(Fat, get(Animal, Period, Through)), Fat = 'Body fat', Animal = 'animals', Period = 'long periods of time with little food', Through = 'through'.").
barrons.rule634:: with(A17S220-time, A20S220-food), isa(A20S220-food, "little food"), of(A15S220-period, A17S220-time), isa(A17S220-time, "time"), isa(E12S220-get, "get"), agent(E12S220-get, A11S220-animal), isa(A11S220-animal, "animals"), object(E12S220-get, A15S220-period), isa(A15S220-period, "long periods"), arg(E12S220-get, A13S220-through), isa(A13S220-through, "through") -> purpose(A2S220-fat, E12S220-get), isa(A2S220-fat, "Body fat").
english(barrons.rule635, "Body fat is a form of stored energy and helps animals get through long periods of time with little food").
pretty(barrons.rule635, "EXAMPLE(Fat, Form), Fat = 'Body fat', Form = 'a form of stored energy'.").
barrons.rule635:: isa(A2S220-fat, "Body fat") -> example(A2S220-fat, A5S220-form), of(A5S220-form, A8S220-energy), isa(A8S220-energy, "stored energy"), isa(A5S220-form, "a form").
english(barrons.rule636, "Body fat is a form of stored energy and helps animals get through long periods of time with little food").
pretty(barrons.rule636, "EXAMPLE(Fat, Form), Fat = 'Body fat', Form = 'a form of stored energy'.").
barrons.rule636:: of(A5S220-form, A8S220-energy), isa(A8S220-energy, "stored energy"), isa(A5S220-form, "a form") -> example(A2S220-fat, A5S220-form), isa(A2S220-fat, "Body fat").
english(barrons.rule637, "Some animals gather food in preparation for the long winter").
pretty(barrons.rule637, "EFFECT(gather(Animal, Food), prepare_for(Animal, Winter)), Animal = 'Some animals', Food = 'food', Winter = 'the long winter'.").
barrons.rule637:: isa(E3S221-gather, "gather"), agent(E3S221-gather, A2S221-animal), isa(A2S221-animal, "Some animals"), object(E3S221-gather, A4S221-food), isa(A4S221-food, "food") -> effect(E3S221-gather, E6S221-preparation), isa(E6S221-preparation, "prepare"), agent(E6S221-preparation, A2S221-animal), for(E6S221-preparation, A10S221-winter), isa(A10S221-winter, "the long winter").
english(barrons.rule638, "Some animals gather food in preparation for the long winter").
pretty(barrons.rule638, "EFFECT(gather(Animal, Food), prepare_for(Animal, Winter)), Animal = 'Some animals', Food = 'food', Winter = 'the long winter'.").
barrons.rule638:: isa(E6S221-preparation, "prepare"), agent(E6S221-preparation, A2S221-animal), isa(A2S221-animal, "Some animals"), for(E6S221-preparation, A10S221-winter), isa(A10S221-winter, "the long winter") -> effect(E3S221-gather, E6S221-preparation), isa(E3S221-gather, "gather"), agent(E3S221-gather, A2S221-animal), object(E3S221-gather, A4S221-food), isa(A4S221-food, "food").
english(barrons.rule639, "Squirrels collect acorns").
pretty(barrons.rule639, "isa(collect, 'collect') -> collect(Squirrel, Acorn).").
barrons.rule639:: isa(E2S222-collect, "collect") -> agent(E2S222-collect, A1S222-squirrel), isa(A1S222-squirrel, "Squirrels"), object(E2S222-collect, A3S222-acorn), isa(A3S222-acorn, "acorns").
english(barrons.rule640, "Squirrels collect acorns").
pretty(barrons.rule640, "isa(Squirrel, 'Squirrels') -> collect(Squirrel, Acorn).").
barrons.rule640:: isa(A1S222-squirrel, "Squirrels") -> isa(E2S222-collect, "collect"), agent(E2S222-collect, A1S222-squirrel), object(E2S222-collect, A3S222-acorn), isa(A3S222-acorn, "acorns").
english(barrons.rule641, "Squirrels collect acorns").
pretty(barrons.rule641, "isa(Acorn, 'acorns') -> collect(Squirrel, Acorn).").
barrons.rule641:: isa(A3S222-acorn, "acorns") -> isa(E2S222-collect, "collect"), agent(E2S222-collect, A1S222-squirrel), isa(A1S222-squirrel, "Squirrels"), object(E2S222-collect, A3S222-acorn).
english(barrons.rule642, "Some animals live a very different life in the warm weather than in the cold weather").
pretty(barrons.rule642, "isa(live, 'live') -> live_in(Animal, Life, Weather).").
barrons.rule642:: isa(E3S223-live, "live") -> agent(E3S223-live, A2S223-animal), isa(A2S223-animal, "Some animals"), object(E3S223-live, A7S223-life), isa(A7S223-life, "a very different life"), in(E3S223-live, A11S223-weather), isa(A11S223-weather, "the warm weather than in the cold weather").
english(barrons.rule643, "Some animals live a very different life in the warm weather than in the cold weather").
pretty(barrons.rule643, "isa(Animal, 'Some animals') -> live_in(Animal, Life, Weather).").
barrons.rule643:: isa(A2S223-animal, "Some animals") -> isa(E3S223-live, "live"), agent(E3S223-live, A2S223-animal), object(E3S223-live, A7S223-life), isa(A7S223-life, "a very different life"), in(E3S223-live, A11S223-weather), isa(A11S223-weather, "the warm weather than in the cold weather").
english(barrons.rule644, "Some animals live a very different life in the warm weather than in the cold weather").
pretty(barrons.rule644, "isa(Life, 'a very different life') -> live_in(Animal, Life, Weather).").
barrons.rule644:: isa(A7S223-life, "a very different life") -> isa(E3S223-live, "live"), agent(E3S223-live, A2S223-animal), isa(A2S223-animal, "Some animals"), object(E3S223-live, A7S223-life), in(E3S223-live, A11S223-weather), isa(A11S223-weather, "the warm weather than in the cold weather").
english(barrons.rule645, "Some animals live a very different life in the warm weather than in the cold weather").
pretty(barrons.rule645, "isa(Weather, 'the warm weather than in the cold weather') -> live_in(Animal, Life, Weather).").
barrons.rule645:: isa(A11S223-weather, "the warm weather than in the cold weather") -> isa(E3S223-live, "live"), agent(E3S223-live, A2S223-animal), isa(A2S223-animal, "Some animals"), object(E3S223-live, A7S223-life), isa(A7S223-life, "a very different life"), in(E3S223-live, A11S223-weather).
english(barrons.rule646, "Bears hibernate but before doing so they[Bears] eat a great deal of food to increase their[Bears] body fat").
pretty(barrons.rule646, "EFFECT(eat_before(Bear, Deal, Do), increase(Bear, Fat)), Bear = 'Bears', Deal = 'a great deal of food', Do = 'doing', Fat = 'their[Bears] body fat'.").
barrons.rule646:: of(A11S226-deal, A13S226-food), isa(A13S226-food, "food"), isa(E8S226-eat, "eat"), agent(E8S226-eat, A1S226-bear), isa(A1S226-bear, "Bears"), object(E8S226-eat, A11S226-deal), isa(A11S226-deal, "a great deal"), before(E8S226-eat, A5S226-do), isa(A5S226-do, "doing so") -> effect(E8S226-eat, E15S226-increase), isa(E15S226-increase, "increase"), agent(E15S226-increase, A1S226-bear), object(E15S226-increase, A18S226-fat), isa(A18S226-fat, "their[Bears] body fat").
english(barrons.rule647, "Bears hibernate but before doing so they[Bears] eat a great deal of food to increase their[Bears] body fat").
pretty(barrons.rule647, "EFFECT(eat_before(Bear, Deal, Do), increase(Bear, Fat)), Bear = 'Bears', Deal = 'a great deal of food', Do = 'doing', Fat = 'their[Bears] body fat'.").
barrons.rule647:: isa(E15S226-increase, "increase"), agent(E15S226-increase, A1S226-bear), isa(A1S226-bear, "Bears"), object(E15S226-increase, A18S226-fat), isa(A18S226-fat, "their[Bears] body fat") -> effect(E8S226-eat, E15S226-increase), of(A11S226-deal, A13S226-food), isa(A13S226-food, "food"), isa(E8S226-eat, "eat"), agent(E8S226-eat, A1S226-bear), object(E8S226-eat, A11S226-deal), isa(A11S226-deal, "a great deal"), before(E8S226-eat, A5S226-do), isa(A5S226-do, "doing so").
english(barrons.rule648, "Moving to a warmer climate in the cold months is another way some animals deal with changes in the weather").
pretty(barrons.rule648, "EFFECT(move_to(Animal, Climate), deal_with(Animal, Change)), Animal = 'some animals', Climate = 'a warmer climate in the cold months', Change = 'changes in the weather'.").
barrons.rule648:: isa(E1S228-move, "move"), agent(E1S228-move, A14S228-animal), isa(A14S228-animal, "some animals"), to(E1S228-move, A5S228-climate), isa(A5S228-climate, "a warmer climate in the cold months") -> effect(E1S228-move, E15S228-deal), isa(E15S228-deal, "deal"), agent(E15S228-deal, A14S228-animal), with(E15S228-deal, A17S228-change), isa(A17S228-change, "changes in the weather").
english(barrons.rule649, "Moving to a warmer climate in the cold months is another way some animals deal with changes in the weather").
pretty(barrons.rule649, "EFFECT(move_to(Animal, Climate), deal_with(Animal, Change)), Animal = 'some animals', Climate = 'a warmer climate in the cold months', Change = 'changes in the weather'.").
barrons.rule649:: isa(E15S228-deal, "deal"), agent(E15S228-deal, A14S228-animal), isa(A14S228-animal, "some animals"), with(E15S228-deal, A17S228-change), isa(A17S228-change, "changes in the weather") -> effect(E1S228-move, E15S228-deal), isa(E1S228-move, "move"), agent(E1S228-move, A14S228-animal), to(E1S228-move, A5S228-climate), isa(A5S228-climate, "a warmer climate in the cold months").
english(barrons.rule650, "This is called migration").
pretty(barrons.rule650, "EXAMPLE(This, Migration), This = 'This', Migration = 'migration'.").
barrons.rule650:: isa(A1S229-this, "This") -> example(A1S229-this, A4S229-migration), isa(A4S229-migration, "migration").
english(barrons.rule651, "This is called migration").
pretty(barrons.rule651, "EXAMPLE(This, Migration), This = 'This', Migration = 'migration'.").
barrons.rule651:: isa(A4S229-migration, "migration") -> example(A1S229-this, A4S229-migration), isa(A1S229-this, "This").
english(barrons.rule652, "Birds are known for fly ing south in the winter to avoid the cold months").
pretty(barrons.rule652, "EFFECT(know(Ing, Bird), avoid(Ing, Month)), Ing = 'fly ing', Bird = 'Birds', Month = 'the cold months'.").
barrons.rule652:: isa(E3S230-know, "know"), agent(E3S230-know, A6S230-ing), isa(A6S230-ing, "fly ing"), object(E3S230-know, A1S230-bird), isa(A1S230-bird, "Birds") -> effect(E3S230-know, E12S230-avoid), isa(E12S230-avoid, "avoid"), agent(E12S230-avoid, A6S230-ing), arg(E12S230-avoid, A15S230-month), isa(A15S230-month, "the cold months").
english(barrons.rule653, "Birds are known for fly ing south in the winter to avoid the cold months").
pretty(barrons.rule653, "EFFECT(know(Ing, Bird), avoid(Ing, Month)), Ing = 'fly ing', Bird = 'Birds', Month = 'the cold months'.").
barrons.rule653:: isa(E12S230-avoid, "avoid"), agent(E12S230-avoid, A6S230-ing), isa(A6S230-ing, "fly ing"), arg(E12S230-avoid, A15S230-month), isa(A15S230-month, "the cold months") -> effect(E3S230-know, E12S230-avoid), isa(E3S230-know, "know"), agent(E3S230-know, A6S230-ing), object(E3S230-know, A1S230-bird), isa(A1S230-bird, "Birds").
english(barrons.rule654, "Adaptations are passed from one generation to the next so that the species can survive and thrive").
pretty(barrons.rule654, "EFFECT(pass_from(Species, Adaptation, Generation, to(Next)), survive(Species)), Species = 'the species', Adaptation = 'Adaptations', Generation = 'one generation', Next = 'the next'.").
barrons.rule654:: isa(E3S233-pass, "pass"), agent(E3S233-pass, A13S233-species), isa(A13S233-species, "the species"), object(E3S233-pass, A1S233-adaptation), isa(A1S233-adaptation, "Adaptations"), from(E3S233-pass, A6S233-generation), isa(A6S233-generation, "one generation"), to(E3S233-pass, A9S233-next), isa(A9S233-next, "the next") -> effect(E3S233-pass, E15S233-survive), isa(E15S233-survive, "survive"), agent(E15S233-survive, A13S233-species).
english(barrons.rule655, "Adaptations are passed from one generation to the next so that the species can survive and thrive").
pretty(barrons.rule655, "EFFECT(pass_from(Species, Adaptation, Generation, to(Next)), survive(Species)), Species = 'the species', Adaptation = 'Adaptations', Generation = 'one generation', Next = 'the next'.").
barrons.rule655:: isa(E15S233-survive, "survive"), agent(E15S233-survive, A13S233-species), isa(A13S233-species, "the species") -> effect(E3S233-pass, E15S233-survive), isa(E3S233-pass, "pass"), agent(E3S233-pass, A13S233-species), object(E3S233-pass, A1S233-adaptation), isa(A1S233-adaptation, "Adaptations"), from(E3S233-pass, A6S233-generation), isa(A6S233-generation, "one generation"), to(E3S233-pass, A9S233-next), isa(A9S233-next, "the next").
english(barrons.rule656, "Adaptations are passed from one generation to the next so that the species can survive and thrive").
pretty(barrons.rule656, "EFFECT(pass_from(Species, Adaptation, Generation, to(Next)), thrive(Species)), Species = 'the species', Adaptation = 'Adaptations', Generation = 'one generation', Next = 'the next'.").
barrons.rule656:: isa(E3S233-pass, "pass"), agent(E3S233-pass, A13S233-species), isa(A13S233-species, "the species"), object(E3S233-pass, A1S233-adaptation), isa(A1S233-adaptation, "Adaptations"), from(E3S233-pass, A6S233-generation), isa(A6S233-generation, "one generation"), to(E3S233-pass, A9S233-next), isa(A9S233-next, "the next") -> effect(E3S233-pass, E17S233-thrive), isa(E17S233-thrive, "thrive"), agent(E17S233-thrive, A13S233-species).
english(barrons.rule657, "Adaptations are passed from one generation to the next so that the species can survive and thrive").
pretty(barrons.rule657, "EFFECT(pass_from(Species, Adaptation, Generation, to(Next)), thrive(Species)), Species = 'the species', Adaptation = 'Adaptations', Generation = 'one generation', Next = 'the next'.").
barrons.rule657:: isa(E17S233-thrive, "thrive"), agent(E17S233-thrive, A13S233-species), isa(A13S233-species, "the species") -> effect(E3S233-pass, E17S233-thrive), isa(E3S233-pass, "pass"), agent(E3S233-pass, A13S233-species), object(E3S233-pass, A1S233-adaptation), isa(A1S233-adaptation, "Adaptations"), from(E3S233-pass, A6S233-generation), isa(A6S233-generation, "one generation"), to(E3S233-pass, A9S233-next), isa(A9S233-next, "the next").
english(barrons.rule658, "One example of how organisms have adapted to their[living things organisms] environment is the fish").
pretty(barrons.rule658, "EXAMPLE(Fish, adapt_to(Organism, How, Environment)), Fish = 'the fish', Organism = 'organisms', How = 'how', Environment = 'their[living things organisms] environment'.").
barrons.rule658:: isa(A13S235-fish, "the fish") -> example(A13S235-fish, E7S235-adapt), isa(E7S235-adapt, "adapt"), agent(E7S235-adapt, A5S235-organism), isa(A5S235-organism, "organisms"), to(E7S235-adapt, A10S235-environment), isa(A10S235-environment, "their[living things organisms] environment"), arg(E7S235-adapt, A4S235-how), isa(A4S235-how, "of how").
english(barrons.rule659, "One example of how organisms have adapted to their[living things organisms] environment is the fish").
pretty(barrons.rule659, "EXAMPLE(Fish, adapt_to(Organism, How, Environment)), Fish = 'the fish', Organism = 'organisms', How = 'how', Environment = 'their[living things organisms] environment'.").
barrons.rule659:: isa(E7S235-adapt, "adapt"), agent(E7S235-adapt, A5S235-organism), isa(A5S235-organism, "organisms"), to(E7S235-adapt, A10S235-environment), isa(A10S235-environment, "their[living things organisms] environment"), arg(E7S235-adapt, A4S235-how), isa(A4S235-how, "of how") -> example(A13S235-fish, E7S235-adapt), isa(A13S235-fish, "the fish").
english(barrons.rule660, "One example of how organisms have adapted to their[living things organisms] environment is the fish").
pretty(barrons.rule660, "EXAMPLE(Example, Fish), Example = 'One example of how organisms have adapted to their[living things organisms] environment', Fish = 'the fish'.").
barrons.rule660:: isa(A2S235-example, "One example of how organisms have adapted to their[living things organisms] environment") -> example(A2S235-example, A13S235-fish), isa(A13S235-fish, "the fish").
english(barrons.rule661, "One example of how organisms have adapted to their[living things organisms] environment is the fish").
pretty(barrons.rule661, "EXAMPLE(Example, Fish), Example = 'One example of how organisms have adapted to their[living things organisms] environment', Fish = 'the fish'.").
barrons.rule661:: isa(A13S235-fish, "the fish") -> example(A2S235-example, A13S235-fish), isa(A2S235-example, "One example of how organisms have adapted to their[living things organisms] environment").
english(barrons.rule662, "Because fish live in the water and need to breathe they[living things organisms] developed gills").
pretty(barrons.rule662, "isa(develop, 'developed') -> develop(Thing, Gill).").
barrons.rule662:: isa(E13S236-develop, "develop") -> agent(E13S236-develop, A6S6-thing), isa(A6S6-thing, "living things"), object(E13S236-develop, A14S236-gill), isa(A14S236-gill, "gills").
english(barrons.rule663, "Because fish live in the water and need to breathe they[living things organisms] developed gills").
pretty(barrons.rule663, "isa(Thing, 'living things') -> develop(Thing, Gill).").
barrons.rule663:: isa(A6S6-thing, "living things") -> isa(E13S236-develop, "develop"), agent(E13S236-develop, A6S6-thing), object(E13S236-develop, A14S236-gill), isa(A14S236-gill, "gills").
english(barrons.rule664, "Because fish live in the water and need to breathe they[living things organisms] developed gills").
pretty(barrons.rule664, "isa(Gill, 'gills') -> develop(Thing, Gill).").
barrons.rule664:: isa(A14S236-gill, "gills") -> isa(E13S236-develop, "develop"), agent(E13S236-develop, A6S6-thing), isa(A6S6-thing, "living things"), object(E13S236-develop, A14S236-gill).
english(barrons.rule665, "Because fish live in the water and need to breathe they[living things organisms] developed gills").
pretty(barrons.rule665, "EFFECT(live_in(Fish, Water), develop(Thing, Gill)), Fish = 'fish', Water = 'the water', Thing = 'living things', Gill = 'gills'.").
barrons.rule665:: isa(E3S236-live, "live"), agent(E3S236-live, A2S236-fish), isa(A2S236-fish, "fish"), in(E3S236-live, A6S236-water), isa(A6S236-water, "the water") -> effect(E3S236-live, E13S236-develop), isa(E13S236-develop, "develop"), agent(E13S236-develop, A6S6-thing), isa(A6S6-thing, "living things"), object(E13S236-develop, A14S236-gill), isa(A14S236-gill, "gills").
english(barrons.rule666, "Because fish live in the water and need to breathe they[living things organisms] developed gills").
pretty(barrons.rule666, "EFFECT(live_in(Fish, Water), develop(Thing, Gill)), Fish = 'fish', Water = 'the water', Thing = 'living things', Gill = 'gills'.").
barrons.rule666:: isa(E13S236-develop, "develop"), agent(E13S236-develop, A6S6-thing), isa(A6S6-thing, "living things"), object(E13S236-develop, A14S236-gill), isa(A14S236-gill, "gills") -> effect(E3S236-live, E13S236-develop), isa(E3S236-live, "live"), agent(E3S236-live, A2S236-fish), isa(A2S236-fish, "fish"), in(E3S236-live, A6S236-water), isa(A6S236-water, "the water").
english(barrons.rule667, "Gills are slits in the sides of their[Gills are slits in the sides of their body that allow the fish to get oxygen from the water while swimming] body that allow the fish to get oxygen from the water while swimming").
pretty(barrons.rule667, "EXAMPLE(Gill, Slit), Gill = 'Gills', Slit = 'slits in the sides of their[Gills are slits in the sides of their body that allow the fish to get oxygen from the water while swimming] body that allow the fish to get oxygen from the water while swimming'.").
barrons.rule667:: isa(A1S237-gill, "Gills") -> example(A1S237-gill, A3S237-slit), of(A6S237-side, A9S237-body), isa(A9S237-body, "their[Gills are slits in the sides of their body that allow the fish to get oxygen from the water while swimming] body"), in(A3S237-slit, A6S237-side), isa(A6S237-side, "the sides"), isa(A3S237-slit, "slits").
english(barrons.rule668, "Gills are slits in the sides of their[Gills are slits in the sides of their body that allow the fish to get oxygen from the water while swimming] body that allow the fish to get oxygen from the water while swimming").
pretty(barrons.rule668, "EXAMPLE(Gill, Slit), Gill = 'Gills', Slit = 'slits in the sides of their[Gills are slits in the sides of their body that allow the fish to get oxygen from the water while swimming] body that allow the fish to get oxygen from the water while swimming'.").
barrons.rule668:: of(A6S237-side, A9S237-body), isa(A9S237-body, "their[Gills are slits in the sides of their body that allow the fish to get oxygen from the water while swimming] body"), in(A3S237-slit, A6S237-side), isa(A6S237-side, "the sides"), isa(A3S237-slit, "slits") -> example(A1S237-gill, A3S237-slit), isa(A1S237-gill, "Gills").
english(barrons.rule669, "Gills are slits in the sides of their[Gills are slits in the sides of their body that allow the fish to get oxygen from the water while swimming] body that allow the fish to get oxygen from the water while swimming").
pretty(barrons.rule669, "PURPOSE(Side, get_from(Fish, Oxygen, Water)), Side = 'the sides of their[Gills are slits in the sides of their body that allow the fish to get oxygen from the water while swimming] body', Fish = 'the fish', Oxygen = 'oxygen', Water = 'the water while swimming'.").
barrons.rule669:: of(A6S237-side, A9S237-body), isa(A9S237-body, "their[Gills are slits in the sides of their body that allow the fish to get oxygen from the water while swimming] body"), isa(A6S237-side, "the sides") -> purpose(A6S237-side, E15S237-get), isa(E15S237-get, "get"), agent(E15S237-get, A13S237-fish), isa(A13S237-fish, "the fish"), object(E15S237-get, A16S237-oxygen), isa(A16S237-oxygen, "oxygen"), from(E15S237-get, A19S237-water), isa(A19S237-water, "the water while swimming").
english(barrons.rule670, "Gills are slits in the sides of their[Gills are slits in the sides of their body that allow the fish to get oxygen from the water while swimming] body that allow the fish to get oxygen from the water while swimming").
pretty(barrons.rule670, "PURPOSE(Side, get_from(Fish, Oxygen, Water)), Side = 'the sides of their[Gills are slits in the sides of their body that allow the fish to get oxygen from the water while swimming] body', Fish = 'the fish', Oxygen = 'oxygen', Water = 'the water while swimming'.").
barrons.rule670:: isa(E15S237-get, "get"), agent(E15S237-get, A13S237-fish), isa(A13S237-fish, "the fish"), object(E15S237-get, A16S237-oxygen), isa(A16S237-oxygen, "oxygen"), from(E15S237-get, A19S237-water), isa(A19S237-water, "the water while swimming") -> purpose(A6S237-side, E15S237-get), of(A6S237-side, A9S237-body), isa(A9S237-body, "their[Gills are slits in the sides of their body that allow the fish to get oxygen from the water while swimming] body"), isa(A6S237-side, "the sides").
english(barrons.rule671, "Depending on how the organism lives their[the similarities and differences between animals arms and/or wings] arm and/or wing adapted to help it[an organism 's] survive").
pretty(barrons.rule671, "EFFECT(adapt_depend(Arm, Help, On), survive(Organism)), Arm = 'their[the similarities and differences between animals arms and/or wings] arm', Help = 'help it[an organism ’s] survive', On = 'on how the organism lives', Organism = 'an organism ’s'.").
barrons.rule671:: isa(E12S242-adapt, "adapt"), agent(E12S242-adapt, A9S242-arm), isa(A9S242-arm, "their[the similarities and differences between animals arms and/or wings] arm"), depend(E12S242-adapt, A2S242-on), isa(A2S242-on, "on how the organism lives"), arg(E12S242-adapt, A14S242-help), isa(A14S242-help, "to help it[an organism 's] survive") -> effect(E12S242-adapt, E16S242-survive), isa(E16S242-survive, "survive"), agent(E16S242-survive, A4S125-organism), isa(A4S125-organism, "an organism 's").
english(barrons.rule672, "Depending on how the organism lives their[the similarities and differences between animals arms and/or wings] arm and/or wing adapted to help it[an organism 's] survive").
pretty(barrons.rule672, "EFFECT(adapt_depend(Arm, Help, On), survive(Organism)), Arm = 'their[the similarities and differences between animals arms and/or wings] arm', Help = 'help it[an organism ’s] survive', On = 'on how the organism lives', Organism = 'an organism ’s'.").
barrons.rule672:: isa(E16S242-survive, "survive"), agent(E16S242-survive, A4S125-organism), isa(A4S125-organism, "an organism 's") -> effect(E12S242-adapt, E16S242-survive), isa(E12S242-adapt, "adapt"), agent(E12S242-adapt, A9S242-arm), isa(A9S242-arm, "their[the similarities and differences between animals arms and/or wings] arm"), depend(E12S242-adapt, A2S242-on), isa(A2S242-on, "on how the organism lives"), arg(E12S242-adapt, A14S242-help), isa(A14S242-help, "to help it[an organism 's] survive").
english(barrons.rule673, "Depending on how the organism lives their[the similarities and differences between animals arms and/or wings] arm and/or wing adapted to help it[an organism 's] survive").
pretty(barrons.rule673, "EFFECT(adapt_depend(Wing, Help, On), survive(Organism)), Wing = 'wing', Help = 'help it[an organism ’s] survive', On = 'on how the organism lives', Organism = 'an organism ’s'.").
barrons.rule673:: isa(E12S242-adapt, "adapt"), agent(E12S242-adapt, A11S242-wing), isa(A11S242-wing, "wing"), depend(E12S242-adapt, A2S242-on), isa(A2S242-on, "on how the organism lives"), arg(E12S242-adapt, A14S242-help), isa(A14S242-help, "to help it[an organism 's] survive") -> effect(E12S242-adapt, E16S242-survive), isa(E16S242-survive, "survive"), agent(E16S242-survive, A4S125-organism), isa(A4S125-organism, "an organism 's").
english(barrons.rule674, "Depending on how the organism lives their[the similarities and differences between animals arms and/or wings] arm and/or wing adapted to help it[an organism 's] survive").
pretty(barrons.rule674, "EFFECT(adapt_depend(Wing, Help, On), survive(Organism)), Wing = 'wing', Help = 'help it[an organism ’s] survive', On = 'on how the organism lives', Organism = 'an organism ’s'.").
barrons.rule674:: isa(E16S242-survive, "survive"), agent(E16S242-survive, A4S125-organism), isa(A4S125-organism, "an organism 's") -> effect(E12S242-adapt, E16S242-survive), isa(E12S242-adapt, "adapt"), agent(E12S242-adapt, A11S242-wing), isa(A11S242-wing, "wing"), depend(E12S242-adapt, A2S242-on), isa(A2S242-on, "on how the organism lives"), arg(E12S242-adapt, A14S242-help), isa(A14S242-help, "to help it[an organism 's] survive").
english(barrons.rule675, "A beak helps the bird capture and take in food").
pretty(barrons.rule675, "PURPOSE(Beak, capture(Bird)), Beak = 'A beak', Bird = 'the bird'.").
barrons.rule675:: isa(A2S244-beak, "A beak") -> purpose(A2S244-beak, E6S244-capture), isa(E6S244-capture, "capture"), agent(E6S244-capture, A5S244-bird), isa(A5S244-bird, "the bird").
english(barrons.rule676, "A beak helps the bird capture and take in food").
pretty(barrons.rule676, "PURPOSE(Beak, capture(Bird)), Beak = 'A beak', Bird = 'the bird'.").
barrons.rule676:: isa(E6S244-capture, "capture"), agent(E6S244-capture, A5S244-bird), isa(A5S244-bird, "the bird") -> purpose(A2S244-beak, E6S244-capture), isa(A2S244-beak, "A beak").
english(barrons.rule677, "The shape strength and design of the beak varies depending on whether it[The shape strength and design of the beak] is a bird of prey a seed-eater or a fish-eater").
pretty(barrons.rule677, "EXAMPLE(It, Bird), It = 'it[The shape strength and design of the beak]', Bird = 'whether a bird of prey'.").
barrons.rule677:: isa(A15S246-it, "it[The shape strength and design of the beak]") -> example(A15S246-it, A18S246-bird), of(A18S246-bird, A20S246-prey), isa(A20S246-prey, "prey"), isa(A18S246-bird, "whether a bird").
english(barrons.rule678, "The shape strength and design of the beak varies depending on whether it[The shape strength and design of the beak] is a bird of prey a seed-eater or a fish-eater").
pretty(barrons.rule678, "EXAMPLE(It, Bird), It = 'it[The shape strength and design of the beak]', Bird = 'whether a bird of prey'.").
barrons.rule678:: of(A18S246-bird, A20S246-prey), isa(A20S246-prey, "prey"), isa(A18S246-bird, "whether a bird") -> example(A15S246-it, A18S246-bird), isa(A15S246-it, "it[The shape strength and design of the beak]").
english(barrons.rule679, "Elephants have long trunks that enable them[Elephants] to grab food and drink water").
pretty(barrons.rule679, "PURPOSE(Trunk, grab(Elephant, Water)), Trunk = 'long trunks', Elephant = 'Elephants', Water = 'food and drink water'.").
barrons.rule679:: isa(A4S247-trunk, "long trunks") -> purpose(A4S247-trunk, E9S247-grab), isa(E9S247-grab, "grab"), agent(E9S247-grab, A1S247-elephant), isa(A1S247-elephant, "Elephants"), object(E9S247-grab, A13S247-water), isa(A13S247-water, "food and drink water").
english(barrons.rule680, "Elephants have long trunks that enable them[Elephants] to grab food and drink water").
pretty(barrons.rule680, "PURPOSE(Trunk, grab(Elephant, Water)), Trunk = 'long trunks', Elephant = 'Elephants', Water = 'food and drink water'.").
barrons.rule680:: isa(E9S247-grab, "grab"), agent(E9S247-grab, A1S247-elephant), isa(A1S247-elephant, "Elephants"), object(E9S247-grab, A13S247-water), isa(A13S247-water, "food and drink water") -> purpose(A4S247-trunk, E9S247-grab), isa(A4S247-trunk, "long trunks").
english(barrons.rule681, "They[Elephants] also have very large ear flaps that help them[Elephants] hear").
pretty(barrons.rule681, "EFFECT(have(Elephant, Flap), hear(Elephant)), Elephant = 'Elephants', Flap = 'very large ear flaps'.").
barrons.rule681:: isa(E3S248-have, "have"), agent(E3S248-have, A1S247-elephant), isa(A1S247-elephant, "Elephants"), object(E3S248-have, A7S248-flap), isa(A7S248-flap, "very large ear flaps") -> effect(E3S248-have, E11S248-hear), isa(E11S248-hear, "hear"), agent(E11S248-hear, A1S247-elephant).
english(barrons.rule682, "They[Elephants] also have very large ear flaps that help them[Elephants] hear").
pretty(barrons.rule682, "EFFECT(have(Elephant, Flap), hear(Elephant)), Elephant = 'Elephants', Flap = 'very large ear flaps'.").
barrons.rule682:: isa(E11S248-hear, "hear"), agent(E11S248-hear, A1S247-elephant), isa(A1S247-elephant, "Elephants") -> effect(E3S248-have, E11S248-hear), isa(E3S248-have, "have"), agent(E3S248-have, A1S247-elephant), object(E3S248-have, A7S248-flap), isa(A7S248-flap, "very large ear flaps").
english(barrons.rule683, "They[Elephants] also have very large ear flaps that help them[Elephants] hear").
pretty(barrons.rule683, "PURPOSE(Flap, hear(Elephant)), Flap = 'very large ear flaps', Elephant = 'Elephants'.").
barrons.rule683:: isa(A7S248-flap, "very large ear flaps") -> purpose(A7S248-flap, E11S248-hear), isa(E11S248-hear, "hear"), agent(E11S248-hear, A1S247-elephant), isa(A1S247-elephant, "Elephants").
english(barrons.rule684, "They[Elephants] also have very large ear flaps that help them[Elephants] hear").
pretty(barrons.rule684, "PURPOSE(Flap, hear(Elephant)), Flap = 'very large ear flaps', Elephant = 'Elephants'.").
barrons.rule684:: isa(E11S248-hear, "hear"), agent(E11S248-hear, A1S247-elephant), isa(A1S247-elephant, "Elephants") -> purpose(A7S248-flap, E11S248-hear), isa(A7S248-flap, "very large ear flaps").
english(barrons.rule685, "Because of their[Elephants] size elephants move very slowly so having good hearing helps protect them[Elephants] from predators").
pretty(barrons.rule685, "CAUSE(Size, move_of(Elephant, Have, Slowly, Size)), Size = 'their[Elephants] size', Elephant = 'elephants', Have = 'having good hearing helps protect them[Elephants] from predators', Slowly = 'slowly', Size = 'their[Elephants] size'.").
barrons.rule685:: isa(A4S249-size, "their[Elephants] size") -> cause(A4S249-size, E7S249-move), isa(E7S249-move, "move"), agent(E7S249-move, A6S249-elephant), isa(A6S249-elephant, "elephants"), of(E7S249-move, A4S249-size), arg(E7S249-move, A12S249-have), isa(A12S249-have, "so having good hearing helps protect them[Elephants] from predators"), arg(E7S249-move, A9S249-slowly), isa(A9S249-slowly, "very slowly").
english(barrons.rule686, "Because of their[Elephants] size elephants move very slowly so having good hearing helps protect them[Elephants] from predators").
pretty(barrons.rule686, "CAUSE(Size, move_of(Elephant, Have, Slowly, Size)), Size = 'their[Elephants] size', Elephant = 'elephants', Have = 'having good hearing helps protect them[Elephants] from predators', Slowly = 'slowly', Size = 'their[Elephants] size'.").
barrons.rule686:: isa(E7S249-move, "move"), agent(E7S249-move, A6S249-elephant), isa(A6S249-elephant, "elephants"), of(E7S249-move, A4S249-size), isa(A4S249-size, "their[Elephants] size"), arg(E7S249-move, A12S249-have), isa(A12S249-have, "so having good hearing helps protect them[Elephants] from predators"), arg(E7S249-move, A9S249-slowly), isa(A9S249-slowly, "very slowly") -> cause(A4S249-size, E7S249-move).
english(barrons.rule687, "Because of their[Elephants] size elephants move very slowly so having good hearing helps protect them[Elephants] from predators").
pretty(barrons.rule687, "PURPOSE(hear(hear), protect_from(hear, Elephant, Predator)), hear = hear, Elephant = 'Elephants', Predator = 'predators'.").
barrons.rule687:: isa(E14S249-hearing, "hear"), agent(E14S249-hearing, E14S249-hearing), isa(E14S249-hearing, "good hearing") -> purpose(E14S249-hearing, E16S249-protect), isa(E16S249-protect, "protect"), agent(E16S249-protect, E14S249-hearing), object(E16S249-protect, A1S247-elephant), isa(A1S247-elephant, "Elephants"), from(E16S249-protect, A19S249-predator), isa(A19S249-predator, "predators").
english(barrons.rule688, "Because of their[Elephants] size elephants move very slowly so having good hearing helps protect them[Elephants] from predators").
pretty(barrons.rule688, "PURPOSE(hear(hear), protect_from(hear, Elephant, Predator)), hear = hear, Elephant = 'Elephants', Predator = 'predators'.").
barrons.rule688:: isa(E16S249-protect, "protect"), agent(E16S249-protect, E14S249-hearing), isa(E14S249-hearing, "good hearing"), object(E16S249-protect, A1S247-elephant), isa(A1S247-elephant, "Elephants"), from(E16S249-protect, A19S249-predator), isa(A19S249-predator, "predators") -> purpose(E14S249-hearing, E16S249-protect), isa(E14S249-hearing, "hear"), agent(E14S249-hearing, E14S249-hearing).
english(barrons.rule689, "All organisms have variations and because of these variations individuals of a species may have an advantage in surviving and reproducing").
pretty(barrons.rule689, "isa(have, 'have') -> have(Organism, Variation).").
barrons.rule689:: isa(E3S250-have, "have") -> agent(E3S250-have, A2S250-organism), isa(A2S250-organism, "All organisms"), object(E3S250-have, A4S250-variation), isa(A4S250-variation, "variations").
english(barrons.rule690, "All organisms have variations and because of these variations individuals of a species may have an advantage in surviving and reproducing").
pretty(barrons.rule690, "isa(Organism, 'All organisms') -> have(Organism, Variation).").
barrons.rule690:: isa(A2S250-organism, "All organisms") -> isa(E3S250-have, "have"), agent(E3S250-have, A2S250-organism), object(E3S250-have, A4S250-variation), isa(A4S250-variation, "variations").
english(barrons.rule691, "All organisms have variations and because of these variations individuals of a species may have an advantage in surviving and reproducing").
pretty(barrons.rule691, "isa(Variation, 'variations') -> have(Organism, Variation).").
barrons.rule691:: isa(A4S250-variation, "variations") -> isa(E3S250-have, "have"), agent(E3S250-have, A2S250-organism), isa(A2S250-organism, "All organisms"), object(E3S250-have, A4S250-variation).
english(barrons.rule692, "All organisms have variations and because of these variations individuals of a species may have an advantage in surviving and reproducing").
pretty(barrons.rule692, "CAUSE(Variation, have_of(Individual, Advantage, Variation, in(Survive), in(Reproduce))), Variation = 'these variations', Individual = 'individuals of a species', Advantage = 'an advantage', Variation = 'these variations', Survive = 'surviving', Reproduce = 'reproducing'.").
barrons.rule692:: isa(A10S250-variation, "these variations") -> cause(A10S250-variation, E17S250-have), of(A12S250-individual, A15S250-species), isa(A15S250-species, "a species"), isa(E17S250-have, "have"), agent(E17S250-have, A12S250-individual), isa(A12S250-individual, "individuals"), object(E17S250-have, A19S250-advantage), isa(A19S250-advantage, "an advantage"), of(E17S250-have, A10S250-variation), in(E17S250-have, A21S250-survive), isa(A21S250-survive, "surviving"), in(E17S250-have, A23S250-reproduce), isa(A23S250-reproduce, "reproducing").
english(barrons.rule693, "All organisms have variations and because of these variations individuals of a species may have an advantage in surviving and reproducing").
pretty(barrons.rule693, "CAUSE(Variation, have_of(Individual, Advantage, Variation, in(Survive), in(Reproduce))), Variation = 'these variations', Individual = 'individuals of a species', Advantage = 'an advantage', Variation = 'these variations', Survive = 'surviving', Reproduce = 'reproducing'.").
barrons.rule693:: of(A12S250-individual, A15S250-species), isa(A15S250-species, "a species"), isa(E17S250-have, "have"), agent(E17S250-have, A12S250-individual), isa(A12S250-individual, "individuals"), object(E17S250-have, A19S250-advantage), isa(A19S250-advantage, "an advantage"), of(E17S250-have, A10S250-variation), isa(A10S250-variation, "these variations"), in(E17S250-have, A21S250-survive), isa(A21S250-survive, "surviving"), in(E17S250-have, A23S250-reproduce), isa(A23S250-reproduce, "reproducing") -> cause(A10S250-variation, E17S250-have).
english(barrons.rule694, "Diversity is the many different types of animals within the same species").
pretty(barrons.rule694, "EXAMPLE(Diversity, Type), Diversity = 'Diversity', Type = 'the many different types of animals within the same species'.").
barrons.rule694:: isa(A1S251-diversity, "Diversity") -> example(A1S251-diversity, A6S251-type), of(A6S251-type, A8S251-animal), isa(A8S251-animal, "animals"), within(A6S251-type, A12S251-species), isa(A12S251-species, "the same species"), isa(A6S251-type, "the many different types").
english(barrons.rule695, "Diversity is the many different types of animals within the same species").
pretty(barrons.rule695, "EXAMPLE(Diversity, Type), Diversity = 'Diversity', Type = 'the many different types of animals within the same species'.").
barrons.rule695:: of(A6S251-type, A8S251-animal), isa(A8S251-animal, "animals"), within(A6S251-type, A12S251-species), isa(A12S251-species, "the same species"), isa(A6S251-type, "the many different types") -> example(A1S251-diversity, A6S251-type), isa(A1S251-diversity, "Diversity").
english(barrons.rule696, "Diversity is the many different types of animals within the same species").
pretty(barrons.rule696, "EXAMPLE(Diversity, Type), Diversity = 'Diversity', Type = 'the many different types of animals within the same species'.").
barrons.rule696:: isa(A1S251-diversity, "Diversity") -> example(A1S251-diversity, A6S251-type), of(A6S251-type, A8S251-animal), isa(A8S251-animal, "animals"), within(A6S251-type, A12S251-species), isa(A12S251-species, "the same species"), isa(A6S251-type, "the many different types").
english(barrons.rule697, "Diversity is the many different types of animals within the same species").
pretty(barrons.rule697, "EXAMPLE(Diversity, Type), Diversity = 'Diversity', Type = 'the many different types of animals within the same species'.").
barrons.rule697:: of(A6S251-type, A8S251-animal), isa(A8S251-animal, "animals"), within(A6S251-type, A12S251-species), isa(A12S251-species, "the same species"), isa(A6S251-type, "the many different types") -> example(A1S251-diversity, A6S251-type), isa(A1S251-diversity, "Diversity").
english(barrons.rule698, "You could have three beagles that look similar but their[three beagles that look similar] markings are different").
pretty(barrons.rule698, "isa(have, 'have') -> have(You, Beagle).").
barrons.rule698:: isa(E3S253-have, "have") -> agent(E3S253-have, A1S253-you), isa(A1S253-you, "You"), object(E3S253-have, A5S253-beagle), isa(A5S253-beagle, "three beagles").
english(barrons.rule699, "You could have three beagles that look similar but their[three beagles that look similar] markings are different").
pretty(barrons.rule699, "isa(You, 'You') -> have(You, Beagle).").
barrons.rule699:: isa(A1S253-you, "You") -> isa(E3S253-have, "have"), agent(E3S253-have, A1S253-you), object(E3S253-have, A5S253-beagle), isa(A5S253-beagle, "three beagles").
english(barrons.rule700, "You could have three beagles that look similar but their[three beagles that look similar] markings are different").
pretty(barrons.rule700, "isa(Beagle, 'three beagles') -> have(You, Beagle).").
barrons.rule700:: isa(A5S253-beagle, "three beagles") -> isa(E3S253-have, "have"), agent(E3S253-have, A1S253-you), isa(A1S253-you, "You"), object(E3S253-have, A5S253-beagle).
english(barrons.rule701, "This is called the continuity of life or life cycle").
pretty(barrons.rule701, "EXAMPLE(This, Continuity), This = 'This', Continuity = 'the continuity of life or life cycle'.").
barrons.rule701:: isa(A1S256-this, "This") -> example(A1S256-this, A5S256-continuity), of(A5S256-continuity, A7S256-life), isa(A7S256-life, "life"), of(A5S256-continuity, A10S256-cycle), isa(A10S256-cycle, "life cycle"), isa(A5S256-continuity, "the continuity").
english(barrons.rule702, "This is called the continuity of life or life cycle").
pretty(barrons.rule702, "EXAMPLE(This, Continuity), This = 'This', Continuity = 'the continuity of life or life cycle'.").
barrons.rule702:: of(A5S256-continuity, A7S256-life), isa(A7S256-life, "life"), of(A5S256-continuity, A10S256-cycle), isa(A10S256-cycle, "life cycle"), isa(A5S256-continuity, "the continuity") -> example(A1S256-this, A5S256-continuity), isa(A1S256-this, "This").
english(barrons.rule703, "All living things have specific patterns of reproduction growth and development that are called stages in its[Extinction is when the species no longer exists such as the dinosaurs] life cycle").
pretty(barrons.rule703, "isa(Reproduction, 'reproduction') -> have(Thing, Pattern).").
barrons.rule703:: isa(A8S262-reproduction, "reproduction") -> of(A6S262-pattern, A8S262-reproduction), of(A6S262-pattern, A10S262-growth), isa(A10S262-growth, "growth"), of(A6S262-pattern, A13S262-development), isa(A13S262-development, "development"), isa(E4S262-have, "have"), agent(E4S262-have, A3S262-thing), isa(A3S262-thing, "All living things"), object(E4S262-have, A6S262-pattern), isa(A6S262-pattern, "specific patterns").
english(barrons.rule704, "All living things have specific patterns of reproduction growth and development that are called stages in its[Extinction is when the species no longer exists such as the dinosaurs] life cycle").
pretty(barrons.rule704, "isa(Growth, 'growth') -> have(Thing, Pattern).").
barrons.rule704:: isa(A10S262-growth, "growth") -> of(A6S262-pattern, A8S262-reproduction), isa(A8S262-reproduction, "reproduction"), of(A6S262-pattern, A10S262-growth), of(A6S262-pattern, A13S262-development), isa(A13S262-development, "development"), isa(E4S262-have, "have"), agent(E4S262-have, A3S262-thing), isa(A3S262-thing, "All living things"), object(E4S262-have, A6S262-pattern), isa(A6S262-pattern, "specific patterns").
english(barrons.rule705, "All living things have specific patterns of reproduction growth and development that are called stages in its[Extinction is when the species no longer exists such as the dinosaurs] life cycle").
pretty(barrons.rule705, "isa(Development, 'development') -> have(Thing, Pattern).").
barrons.rule705:: isa(A13S262-development, "development") -> of(A6S262-pattern, A8S262-reproduction), isa(A8S262-reproduction, "reproduction"), of(A6S262-pattern, A10S262-growth), isa(A10S262-growth, "growth"), of(A6S262-pattern, A13S262-development), isa(E4S262-have, "have"), agent(E4S262-have, A3S262-thing), isa(A3S262-thing, "All living things"), object(E4S262-have, A6S262-pattern), isa(A6S262-pattern, "specific patterns").
english(barrons.rule706, "All living things have specific patterns of reproduction growth and development that are called stages in its[Extinction is when the species no longer exists such as the dinosaurs] life cycle").
pretty(barrons.rule706, "isa(have, 'have') -> have(Thing, Pattern).").
barrons.rule706:: isa(E4S262-have, "have") -> of(A6S262-pattern, A8S262-reproduction), isa(A8S262-reproduction, "reproduction"), of(A6S262-pattern, A10S262-growth), isa(A10S262-growth, "growth"), of(A6S262-pattern, A13S262-development), isa(A13S262-development, "development"), agent(E4S262-have, A3S262-thing), isa(A3S262-thing, "All living things"), object(E4S262-have, A6S262-pattern), isa(A6S262-pattern, "specific patterns").
english(barrons.rule707, "All living things have specific patterns of reproduction growth and development that are called stages in its[Extinction is when the species no longer exists such as the dinosaurs] life cycle").
pretty(barrons.rule707, "isa(Thing, 'All living things') -> have(Thing, Pattern).").
barrons.rule707:: isa(A3S262-thing, "All living things") -> of(A6S262-pattern, A8S262-reproduction), isa(A8S262-reproduction, "reproduction"), of(A6S262-pattern, A10S262-growth), isa(A10S262-growth, "growth"), of(A6S262-pattern, A13S262-development), isa(A13S262-development, "development"), isa(E4S262-have, "have"), agent(E4S262-have, A3S262-thing), object(E4S262-have, A6S262-pattern), isa(A6S262-pattern, "specific patterns").
english(barrons.rule708, "All living things have specific patterns of reproduction growth and development that are called stages in its[Extinction is when the species no longer exists such as the dinosaurs] life cycle").
pretty(barrons.rule708, "isa(Pattern, 'specific patterns of reproduction growth and development that are called stages in its[Extinction is when the species no longer exists such as the dinosaurs] life cycle') -> have(Thing, Pattern).").
barrons.rule708:: isa(A6S262-pattern, "specific patterns") -> of(A6S262-pattern, A8S262-reproduction), isa(A8S262-reproduction, "reproduction"), of(A6S262-pattern, A10S262-growth), isa(A10S262-growth, "growth"), of(A6S262-pattern, A13S262-development), isa(A13S262-development, "development"), isa(E4S262-have, "have"), agent(E4S262-have, A3S262-thing), isa(A3S262-thing, "All living things"), object(E4S262-have, A6S262-pattern).
english(barrons.rule709, "You may have had a pet or witnessed some of the following organisms life cycles").
pretty(barrons.rule709, "isa(have, 'had') -> have(You, Pet).").
barrons.rule709:: isa(E4S265-have, "have") -> agent(E4S265-have, A1S265-you), isa(A1S265-you, "You"), object(E4S265-have, A6S265-pet), isa(A6S265-pet, "a pet").
english(barrons.rule710, "You may have had a pet or witnessed some of the following organisms life cycles").
pretty(barrons.rule710, "isa(You, 'You') -> have(You, Pet).").
barrons.rule710:: isa(A1S265-you, "You") -> isa(E4S265-have, "have"), agent(E4S265-have, A1S265-you), object(E4S265-have, A6S265-pet), isa(A6S265-pet, "a pet").
english(barrons.rule711, "You may have had a pet or witnessed some of the following organisms life cycles").
pretty(barrons.rule711, "isa(Pet, 'a pet') -> have(You, Pet).").
barrons.rule711:: isa(A6S265-pet, "a pet") -> isa(E4S265-have, "have"), agent(E4S265-have, A1S265-you), isa(A1S265-you, "You"), object(E4S265-have, A6S265-pet).
english(barrons.rule712, "Some examples are the frog beetle and ladybug").
pretty(barrons.rule712, "EXAMPLE(Example, Frog), Example = 'Some examples', Frog = 'the frog'.").
barrons.rule712:: isa(A2S267-example, "Some examples") -> example(A2S267-example, A5S267-frog), isa(A5S267-frog, "the frog").
english(barrons.rule713, "Some examples are the frog beetle and ladybug").
pretty(barrons.rule713, "EXAMPLE(Example, Frog), Example = 'Some examples', Frog = 'the frog'.").
barrons.rule713:: isa(A5S267-frog, "the frog") -> example(A2S267-example, A5S267-frog), isa(A2S267-example, "Some examples").
english(barrons.rule714, "The length of time from an animal 's birth to its[an animal 's birth] death is called its[The length of time from an animal 's birth to its death] life span").
pretty(barrons.rule714, "EXAMPLE(Length, Span), Length = 'The length of time from an animal ’s birth to its[an animal 's birth] death', Span = 'its[The length of time from an animal ’s birth to its death] life span'.").
barrons.rule714:: from(A4S268-time, A9S268-birth), isa(A9S268-birth, "an animal 's birth"), to(A4S268-time, A12S268-death), isa(A12S268-death, "its[an animal 's birth] death"), of(A2S268-length, A4S268-time), isa(A4S268-time, "time"), isa(A2S268-length, "The length") -> example(A2S268-length, A17S268-span), isa(A17S268-span, "its[The length of time from an animal 's birth to its death] life span").
english(barrons.rule715, "The length of time from an animal 's birth to its[an animal 's birth] death is called its[The length of time from an animal 's birth to its death] life span").
pretty(barrons.rule715, "EXAMPLE(Length, Span), Length = 'The length of time from an animal ’s birth to its[an animal 's birth] death', Span = 'its[The length of time from an animal ’s birth to its death] life span'.").
barrons.rule715:: isa(A17S268-span, "its[The length of time from an animal 's birth to its death] life span") -> example(A2S268-length, A17S268-span), from(A4S268-time, A9S268-birth), isa(A9S268-birth, "an animal 's birth"), to(A4S268-time, A12S268-death), isa(A12S268-death, "its[an animal 's birth] death"), of(A2S268-length, A4S268-time), isa(A4S268-time, "time"), isa(A2S268-length, "The length").
english(barrons.rule716, "The type of environment they[Some examples] live in and various environment al factors can have a direct effect on organisms").
pretty(barrons.rule716, "isa(Environment, 'environment') -> have(Type, Effect).").
barrons.rule716:: isa(A4S269-environment, "environment") -> of(A2S269-type, A4S269-environment), on(A17S269-effect, A19S269-organism), isa(A19S269-organism, "organisms"), isa(E14S269-have, "have"), agent(E14S269-have, A2S269-type), isa(A2S269-type, "The type"), object(E14S269-have, A17S269-effect), isa(A17S269-effect, "a direct effect").
english(barrons.rule717, "The type of environment they[Some examples] live in and various environment al factors can have a direct effect on organisms").
pretty(barrons.rule717, "isa(Organism, 'organisms') -> have(Type, Effect).").
barrons.rule717:: isa(A19S269-organism, "organisms") -> of(A2S269-type, A4S269-environment), isa(A4S269-environment, "environment"), on(A17S269-effect, A19S269-organism), isa(E14S269-have, "have"), agent(E14S269-have, A2S269-type), isa(A2S269-type, "The type"), object(E14S269-have, A17S269-effect), isa(A17S269-effect, "a direct effect").
english(barrons.rule718, "The type of environment they[Some examples] live in and various environment al factors can have a direct effect on organisms").
pretty(barrons.rule718, "isa(have, 'have') -> have(Type, Effect).").
barrons.rule718:: isa(E14S269-have, "have") -> of(A2S269-type, A4S269-environment), isa(A4S269-environment, "environment"), on(A17S269-effect, A19S269-organism), isa(A19S269-organism, "organisms"), agent(E14S269-have, A2S269-type), isa(A2S269-type, "The type"), object(E14S269-have, A17S269-effect), isa(A17S269-effect, "a direct effect").
english(barrons.rule719, "The type of environment they[Some examples] live in and various environment al factors can have a direct effect on organisms").
pretty(barrons.rule719, "isa(Type, 'The type of environment') -> have(Type, Effect).").
barrons.rule719:: isa(A2S269-type, "The type") -> of(A2S269-type, A4S269-environment), isa(A4S269-environment, "environment"), on(A17S269-effect, A19S269-organism), isa(A19S269-organism, "organisms"), isa(E14S269-have, "have"), agent(E14S269-have, A2S269-type), object(E14S269-have, A17S269-effect), isa(A17S269-effect, "a direct effect").
english(barrons.rule720, "The type of environment they[Some examples] live in and various environment al factors can have a direct effect on organisms").
pretty(barrons.rule720, "isa(Effect, 'a direct effect on organisms') -> have(Type, Effect).").
barrons.rule720:: isa(A17S269-effect, "a direct effect") -> of(A2S269-type, A4S269-environment), isa(A4S269-environment, "environment"), on(A17S269-effect, A19S269-organism), isa(A19S269-organism, "organisms"), isa(E14S269-have, "have"), agent(E14S269-have, A2S269-type), isa(A2S269-type, "The type"), object(E14S269-have, A17S269-effect).
english(barrons.rule721, "The type of environment they[Some examples] live in and various environment al factors can have a direct effect on organisms").
pretty(barrons.rule721, "isa(Organism, 'organisms') -> have(Factor, Effect).").
barrons.rule721:: isa(A19S269-organism, "organisms") -> on(A17S269-effect, A19S269-organism), isa(E14S269-have, "have"), agent(E14S269-have, A12S269-factor), isa(A12S269-factor, "various environment al factors"), object(E14S269-have, A17S269-effect), isa(A17S269-effect, "a direct effect").
english(barrons.rule722, "The type of environment they[Some examples] live in and various environment al factors can have a direct effect on organisms").
pretty(barrons.rule722, "isa(have, 'have') -> have(Factor, Effect).").
barrons.rule722:: isa(E14S269-have, "have") -> on(A17S269-effect, A19S269-organism), isa(A19S269-organism, "organisms"), agent(E14S269-have, A12S269-factor), isa(A12S269-factor, "various environment al factors"), object(E14S269-have, A17S269-effect), isa(A17S269-effect, "a direct effect").
english(barrons.rule723, "The type of environment they[Some examples] live in and various environment al factors can have a direct effect on organisms").
pretty(barrons.rule723, "isa(Factor, 'various environment al factors') -> have(Factor, Effect).").
barrons.rule723:: isa(A12S269-factor, "various environment al factors") -> on(A17S269-effect, A19S269-organism), isa(A19S269-organism, "organisms"), isa(E14S269-have, "have"), agent(E14S269-have, A12S269-factor), object(E14S269-have, A17S269-effect), isa(A17S269-effect, "a direct effect").
english(barrons.rule724, "The type of environment they[Some examples] live in and various environment al factors can have a direct effect on organisms").
pretty(barrons.rule724, "isa(Effect, 'a direct effect on organisms') -> have(Factor, Effect).").
barrons.rule724:: isa(A17S269-effect, "a direct effect") -> on(A17S269-effect, A19S269-organism), isa(A19S269-organism, "organisms"), isa(E14S269-have, "have"), agent(E14S269-have, A12S269-factor), isa(A12S269-factor, "various environment al factors"), object(E14S269-have, A17S269-effect).
english(barrons.rule725, "The type of environment they[Some examples] live in and various environment al factors can have a direct effect on organisms").
pretty(barrons.rule725, "EFFECT(Type, direct effect_on(Type, Organism)), Type = 'The type of environment', Organism = 'organisms'.").
barrons.rule725:: of(A2S269-type, A4S269-environment), isa(A4S269-environment, "environment"), isa(A2S269-type, "The type") -> effect(A2S269-type, E17S269-effect), isa(E17S269-effect, "a direct effect"), agent(E17S269-effect, A2S269-type), on(E17S269-effect, A19S269-organism), isa(A19S269-organism, "organisms").
english(barrons.rule726, "The type of environment they[Some examples] live in and various environment al factors can have a direct effect on organisms").
pretty(barrons.rule726, "EFFECT(Type, direct effect_on(Type, Organism)), Type = 'The type of environment', Organism = 'organisms'.").
barrons.rule726:: of(A2S269-type, A4S269-environment), isa(A4S269-environment, "environment"), isa(E17S269-effect, "a direct effect"), agent(E17S269-effect, A2S269-type), isa(A2S269-type, "The type"), on(E17S269-effect, A19S269-organism), isa(A19S269-organism, "organisms") -> effect(A2S269-type, E17S269-effect).
english(barrons.rule727, "The type of environment they[Some examples] live in and various environment al factors can have a direct effect on organisms").
pretty(barrons.rule727, "EFFECT(Factor, direct effect_on(Factor, Organism)), Factor = 'various environment al factors', Organism = 'organisms'.").
barrons.rule727:: isa(A12S269-factor, "various environment al factors") -> effect(A12S269-factor, E17S269-effect), isa(E17S269-effect, "a direct effect"), agent(E17S269-effect, A12S269-factor), on(E17S269-effect, A19S269-organism), isa(A19S269-organism, "organisms").
english(barrons.rule728, "The type of environment they[Some examples] live in and various environment al factors can have a direct effect on organisms").
pretty(barrons.rule728, "EFFECT(Factor, direct effect_on(Factor, Organism)), Factor = 'various environment al factors', Organism = 'organisms'.").
barrons.rule728:: isa(E17S269-effect, "a direct effect"), agent(E17S269-effect, A12S269-factor), isa(A12S269-factor, "various environment al factors"), on(E17S269-effect, A19S269-organism), isa(A19S269-organism, "organisms") -> effect(A12S269-factor, E17S269-effect).
english(barrons.rule729, "The average life span of a fruit fly is 72 hours").
pretty(barrons.rule729, "EXAMPLE(Span, Hour), Span = 'The average life span of a fruit fly', Hour = '72 hours'.").
barrons.rule729:: of(A4S271-span, A8S271-fly), isa(A8S271-fly, "a fruit fly"), isa(A4S271-span, "The average life span") -> example(A4S271-span, A11S271-hour), isa(A11S271-hour, "72 hours").
english(barrons.rule730, "The average life span of a fruit fly is 72 hours").
pretty(barrons.rule730, "EXAMPLE(Span, Hour), Span = 'The average life span of a fruit fly', Hour = '72 hours'.").
barrons.rule730:: isa(A11S271-hour, "72 hours") -> example(A4S271-span, A11S271-hour), of(A4S271-span, A8S271-fly), isa(A8S271-fly, "a fruit fly"), isa(A4S271-span, "The average life span").
english(barrons.rule731, "The average life span of a worker ant is 6 months").
pretty(barrons.rule731, "EXAMPLE(Span, Month), Span = 'The average life span of a worker ant', Month = '6 months'.").
barrons.rule731:: of(A4S272-span, A8S272-ant), isa(A8S272-ant, "a worker ant"), isa(A4S272-span, "The average life span") -> example(A4S272-span, A11S272-month), isa(A11S272-month, "6 months").
english(barrons.rule732, "The average life span of a worker ant is 6 months").
pretty(barrons.rule732, "EXAMPLE(Span, Month), Span = 'The average life span of a worker ant', Month = '6 months'.").
barrons.rule732:: isa(A11S272-month, "6 months") -> example(A4S272-span, A11S272-month), of(A4S272-span, A8S272-ant), isa(A8S272-ant, "a worker ant"), isa(A4S272-span, "The average life span").
english(barrons.rule733, "The average life span of a frog is 10 years").
pretty(barrons.rule733, "EXAMPLE(Span, Year), Span = 'The average life span of a frog', Year = '10 years'.").
barrons.rule733:: of(A4S275-span, A7S275-frog), isa(A7S275-frog, "a frog"), isa(A4S275-span, "The average life span") -> example(A4S275-span, A10S275-year), isa(A10S275-year, "10 years").
english(barrons.rule734, "The average life span of a frog is 10 years").
pretty(barrons.rule734, "EXAMPLE(Span, Year), Span = 'The average life span of a frog', Year = '10 years'.").
barrons.rule734:: isa(A10S275-year, "10 years") -> example(A4S275-span, A10S275-year), of(A4S275-span, A7S275-frog), isa(A7S275-frog, "a frog"), isa(A4S275-span, "The average life span").
english(barrons.rule735, "The average life span of an elephant is 70 years").
pretty(barrons.rule735, "EXAMPLE(Span, Year), Span = 'The average life span of an elephant', Year = '70 years'.").
barrons.rule735:: of(A4S276-span, A7S276-elephant), isa(A7S276-elephant, "an elephant"), isa(A4S276-span, "The average life span") -> example(A4S276-span, A10S276-year), isa(A10S276-year, "70 years").
english(barrons.rule736, "The average life span of an elephant is 70 years").
pretty(barrons.rule736, "EXAMPLE(Span, Year), Span = 'The average life span of an elephant', Year = '70 years'.").
barrons.rule736:: isa(A10S276-year, "70 years") -> example(A4S276-span, A10S276-year), of(A4S276-span, A7S276-elephant), isa(A7S276-elephant, "an elephant"), isa(A4S276-span, "The average life span").
english(barrons.rule737, "The average life span of a human is 79 years").
pretty(barrons.rule737, "EXAMPLE(Span, Year), Span = 'The average life span of a human', Year = '79 years'.").
barrons.rule737:: of(A4S277-span, A7S277-human), isa(A7S277-human, "a human"), isa(A4S277-span, "The average life span") -> example(A4S277-span, A10S277-year), isa(A10S277-year, "79 years").
english(barrons.rule738, "The average life span of a human is 79 years").
pretty(barrons.rule738, "EXAMPLE(Span, Year), Span = 'The average life span of a human', Year = '79 years'.").
barrons.rule738:: isa(A10S277-year, "79 years") -> example(A4S277-span, A10S277-year), of(A4S277-span, A7S277-human), isa(A7S277-human, "a human"), isa(A4S277-span, "The average life span").
english(barrons.rule739, "The average life span of a turtle is 100 years").
pretty(barrons.rule739, "EXAMPLE(Span, Year), Span = 'The average life span of a turtle', Year = '100 years'.").
barrons.rule739:: of(A4S279-span, A7S279-turtle), isa(A7S279-turtle, "a turtle"), isa(A4S279-span, "The average life span") -> example(A4S279-span, A10S279-year), isa(A10S279-year, "100 years").
english(barrons.rule740, "The average life span of a turtle is 100 years").
pretty(barrons.rule740, "EXAMPLE(Span, Year), Span = 'The average life span of a turtle', Year = '100 years'.").
barrons.rule740:: isa(A10S279-year, "100 years") -> example(A4S279-span, A10S279-year), of(A4S279-span, A7S279-turtle), isa(A7S279-turtle, "a turtle"), isa(A4S279-span, "The average life span").
english(barrons.rule741, "The health growth and development of organisms are affected by environmental conditions such as the availability of food air water space shelter heat and sunlight").
pretty(barrons.rule741, "EXAMPLE(Availability, Condition), Availability = 'the availability of food air water space shelter heat and sunlight', Condition = 'environmental conditions such as the availability of food air water space shelter heat and sunlight'.").
barrons.rule741:: of(A18S280-availability, A20S280-food), isa(A20S280-food, "food"), of(A18S280-availability, A22S280-air), isa(A22S280-air, "air"), of(A18S280-availability, A24S280-water), isa(A24S280-water, "water"), of(A18S280-availability, A26S280-space), isa(A26S280-space, "space"), of(A18S280-availability, A28S280-shelter), isa(A28S280-shelter, "shelter"), of(A18S280-availability, A30S280-heat), isa(A30S280-heat, "heat"), of(A18S280-availability, A33S280-sunlight), isa(A33S280-sunlight, "sunlight"), isa(A18S280-availability, "the availability") -> example(A18S280-availability, A14S280-condition), such_as(A14S280-condition, A18S280-availability), isa(A14S280-condition, "environmental conditions").
english(barrons.rule742, "The health growth and development of organisms are affected by environmental conditions such as the availability of food air water space shelter heat and sunlight").
pretty(barrons.rule742, "EXAMPLE(Availability, Condition), Availability = 'the availability of food air water space shelter heat and sunlight', Condition = 'environmental conditions such as the availability of food air water space shelter heat and sunlight'.").
barrons.rule742:: of(A18S280-availability, A20S280-food), isa(A20S280-food, "food"), of(A18S280-availability, A22S280-air), isa(A22S280-air, "air"), of(A18S280-availability, A24S280-water), isa(A24S280-water, "water"), of(A18S280-availability, A26S280-space), isa(A26S280-space, "space"), of(A18S280-availability, A28S280-shelter), isa(A28S280-shelter, "shelter"), of(A18S280-availability, A30S280-heat), isa(A30S280-heat, "heat"), of(A18S280-availability, A33S280-sunlight), isa(A33S280-sunlight, "sunlight"), such_as(A14S280-condition, A18S280-availability), isa(A18S280-availability, "the availability"), isa(A14S280-condition, "environmental conditions") -> example(A18S280-availability, A14S280-condition).
english(barrons.rule743, "Growth is the process by which plants and animals increase in size").
pretty(barrons.rule743, "PURPOSE(grow(Plant), increase(Plant, In)), Plant = 'plants', In = 'in size'.").
barrons.rule743:: isa(E1S281-growth, "grow"), agent(E1S281-growth, A7S281-plant), isa(A7S281-plant, "plants") -> purpose(E1S281-growth, E10S281-increase), isa(E10S281-increase, "increase"), agent(E10S281-increase, A7S281-plant), object(E10S281-increase, A11S281-in), isa(A11S281-in, "in size").
english(barrons.rule744, "Growth is the process by which plants and animals increase in size").
pretty(barrons.rule744, "PURPOSE(grow(Plant), increase(Plant, In)), Plant = 'plants', In = 'in size'.").
barrons.rule744:: isa(E10S281-increase, "increase"), agent(E10S281-increase, A7S281-plant), isa(A7S281-plant, "plants"), object(E10S281-increase, A11S281-in), isa(A11S281-in, "in size") -> purpose(E1S281-growth, E10S281-increase), isa(E1S281-growth, "grow"), agent(E1S281-growth, A7S281-plant).
english(barrons.rule745, "Growth is the process by which plants and animals increase in size").
pretty(barrons.rule745, "PURPOSE(grow(Animal), increase(Animal, In)), Animal = 'animals', In = 'in size'.").
barrons.rule745:: isa(E1S281-growth, "grow"), agent(E1S281-growth, A9S281-animal), isa(A9S281-animal, "animals") -> purpose(E1S281-growth, E10S281-increase), isa(E10S281-increase, "increase"), agent(E10S281-increase, A9S281-animal), object(E10S281-increase, A11S281-in), isa(A11S281-in, "in size").
english(barrons.rule746, "Growth is the process by which plants and animals increase in size").
pretty(barrons.rule746, "PURPOSE(grow(Animal), increase(Animal, In)), Animal = 'animals', In = 'in size'.").
barrons.rule746:: isa(E10S281-increase, "increase"), agent(E10S281-increase, A9S281-animal), isa(A9S281-animal, "animals"), object(E10S281-increase, A11S281-in), isa(A11S281-in, "in size") -> purpose(E1S281-growth, E10S281-increase), isa(E1S281-growth, "grow"), agent(E1S281-growth, A9S281-animal).
english(barrons.rule747, "Growth is the process by which plants and animals increase in size").
pretty(barrons.rule747, "EXAMPLE(Growth, increase(Plant, In)), Growth = 'Growth', Plant = 'plants', In = 'in size'.").
barrons.rule747:: isa(A1S281-growth, "Growth") -> example(A1S281-growth, E10S281-increase), isa(E10S281-increase, "increase"), agent(E10S281-increase, A7S281-plant), isa(A7S281-plant, "plants"), object(E10S281-increase, A11S281-in), isa(A11S281-in, "in size").
english(barrons.rule748, "Growth is the process by which plants and animals increase in size").
pretty(barrons.rule748, "EXAMPLE(Growth, increase(Plant, In)), Growth = 'Growth', Plant = 'plants', In = 'in size'.").
barrons.rule748:: isa(E10S281-increase, "increase"), agent(E10S281-increase, A7S281-plant), isa(A7S281-plant, "plants"), object(E10S281-increase, A11S281-in), isa(A11S281-in, "in size") -> example(A1S281-growth, E10S281-increase), isa(A1S281-growth, "Growth").
english(barrons.rule749, "Growth is the process by which plants and animals increase in size").
pretty(barrons.rule749, "EXAMPLE(Growth, increase(Animal, In)), Growth = 'Growth', Animal = 'animals', In = 'in size'.").
barrons.rule749:: isa(A1S281-growth, "Growth") -> example(A1S281-growth, E10S281-increase), isa(E10S281-increase, "increase"), agent(E10S281-increase, A9S281-animal), isa(A9S281-animal, "animals"), object(E10S281-increase, A11S281-in), isa(A11S281-in, "in size").
english(barrons.rule750, "Growth is the process by which plants and animals increase in size").
pretty(barrons.rule750, "EXAMPLE(Growth, increase(Animal, In)), Growth = 'Growth', Animal = 'animals', In = 'in size'.").
barrons.rule750:: isa(E10S281-increase, "increase"), agent(E10S281-increase, A9S281-animal), isa(A9S281-animal, "animals"), object(E10S281-increase, A11S281-in), isa(A11S281-in, "in size") -> example(A1S281-growth, E10S281-increase), isa(A1S281-growth, "Growth").
english(barrons.rule751, "Growth is the process by which plants and animals increase in size").
pretty(barrons.rule751, "EXAMPLE(Growth, Process), Growth = 'Growth', Process = 'the process'.").
barrons.rule751:: isa(A1S281-growth, "Growth") -> example(A1S281-growth, A4S281-process), isa(A4S281-process, "the process").
english(barrons.rule752, "Growth is the process by which plants and animals increase in size").
pretty(barrons.rule752, "EXAMPLE(Growth, Process), Growth = 'Growth', Process = 'the process'.").
barrons.rule752:: isa(A4S281-process, "the process") -> example(A1S281-growth, A4S281-process), isa(A1S281-growth, "Growth").
english(barrons.rule753, "As an organism moves into an adult stage of life they continue to grow").
pretty(barrons.rule753, "EFFECT(move_into(Organism, Stage), continue(They)), Organism = 'an organism', Stage = 'an adult stage of life', They = 'they'.").
barrons.rule753:: isa(E4S285-move, "move"), agent(E4S285-move, A3S285-organism), isa(A3S285-organism, "an organism"), into(E4S285-move, A8S285-stage), isa(A8S285-stage, "an adult stage of life") -> effect(E4S285-move, E12S285-continue), isa(E12S285-continue, "continue"), agent(E12S285-continue, A11S285-they), isa(A11S285-they, "they").
english(barrons.rule754, "As an organism moves into an adult stage of life they continue to grow").
pretty(barrons.rule754, "EFFECT(move_into(Organism, Stage), continue(They)), Organism = 'an organism', Stage = 'an adult stage of life', They = 'they'.").
barrons.rule754:: isa(E12S285-continue, "continue"), agent(E12S285-continue, A11S285-they), isa(A11S285-they, "they") -> effect(E4S285-move, E12S285-continue), isa(E4S285-move, "move"), agent(E4S285-move, A3S285-organism), isa(A3S285-organism, "an organism"), into(E4S285-move, A8S285-stage), isa(A8S285-stage, "an adult stage of life").
english(barrons.rule755, "When an animal breaks a bone it is able to heal over time").
pretty(barrons.rule755, "EFFECT(break(Animal, Bone), heal_over(Animal, Time)), Animal = 'an animal', Bone = 'a bone', Time = 'time'.").
barrons.rule755:: isa(E4S287-break, "break"), agent(E4S287-break, A3S287-animal), isa(A3S287-animal, "an animal"), object(E4S287-break, A6S287-bone), isa(A6S287-bone, "a bone") -> effect(E4S287-break, E11S287-heal), isa(E11S287-heal, "heal"), agent(E11S287-heal, A3S287-animal), over(E11S287-heal, A13S287-time), isa(A13S287-time, "time").
english(barrons.rule756, "When an animal breaks a bone it is able to heal over time").
pretty(barrons.rule756, "EFFECT(break(Animal, Bone), heal_over(Animal, Time)), Animal = 'an animal', Bone = 'a bone', Time = 'time'.").
barrons.rule756:: isa(E11S287-heal, "heal"), agent(E11S287-heal, A3S287-animal), isa(A3S287-animal, "an animal"), over(E11S287-heal, A13S287-time), isa(A13S287-time, "time") -> effect(E4S287-break, E11S287-heal), isa(E4S287-break, "break"), agent(E4S287-break, A3S287-animal), object(E4S287-break, A6S287-bone), isa(A6S287-bone, "a bone").
english(barrons.rule757, "This healing is done by the body growing new bone cells to repair the break").
pretty(barrons.rule757, "EFFECT(do(Body, Healing), grow(Body)), Body = 'the body', Healing = 'This healing'.").
barrons.rule757:: isa(E4S288-do, "do"), agent(E4S288-do, A7S288-body), isa(A7S288-body, "the body"), object(E4S288-do, A2S288-healing), isa(A2S288-healing, "This healing") -> effect(E4S288-do, E8S288-grow), isa(E8S288-grow, "grow"), agent(E8S288-grow, A7S288-body).
english(barrons.rule758, "This healing is done by the body growing new bone cells to repair the break").
pretty(barrons.rule758, "EFFECT(do(Body, Healing), grow(Body)), Body = 'the body', Healing = 'This healing'.").
barrons.rule758:: isa(E8S288-grow, "grow"), agent(E8S288-grow, A7S288-body), isa(A7S288-body, "the body") -> effect(E4S288-do, E8S288-grow), isa(E4S288-do, "do"), agent(E4S288-do, A7S288-body), object(E4S288-do, A2S288-healing), isa(A2S288-healing, "This healing").
english(barrons.rule759, "This healing is done by the body growing new bone cells to repair the break").
pretty(barrons.rule759, "EFFECT(grow(Body), repair(Cell, Break)), Body = 'the body', Cell = 'new bone cells', Break = 'the break'.").
barrons.rule759:: isa(E8S288-grow, "grow"), agent(E8S288-grow, A7S288-body), isa(A7S288-body, "the body") -> effect(E8S288-grow, E13S288-repair), isa(E13S288-repair, "repair"), agent(E13S288-repair, A11S288-cell), isa(A11S288-cell, "new bone cells"), object(E13S288-repair, A15S288-break), isa(A15S288-break, "the break").
english(barrons.rule760, "This healing is done by the body growing new bone cells to repair the break").
pretty(barrons.rule760, "EFFECT(grow(Body), repair(Cell, Break)), Body = 'the body', Cell = 'new bone cells', Break = 'the break'.").
barrons.rule760:: isa(E13S288-repair, "repair"), agent(E13S288-repair, A11S288-cell), isa(A11S288-cell, "new bone cells"), object(E13S288-repair, A15S288-break), isa(A15S288-break, "the break") -> effect(E8S288-grow, E13S288-repair), isa(E8S288-grow, "grow"), agent(E8S288-grow, A7S288-body), isa(A7S288-body, "the body").
english(barrons.rule761, "Think about when you may have cut yourself and after a short period of time the cut healed").
pretty(barrons.rule761, "WHEN(think(You, Heal, About), cut(You, Yourself)), You = 'you', Heal = 'after a short period of time healed', About = 'about', Yourself = 'yourself'.").
barrons.rule761:: isa(E1S289-think, "think"), agent(E1S289-think, A4S289-you), isa(A4S289-you, "you"), arg(E1S289-think, A18S289-heal), isa(A18S289-heal, "after a short period of time the cut healed"), arg(E1S289-think, A2S289-about), isa(A2S289-about, "about") -> when(E1S289-think, E7S289-cut), isa(E7S289-cut, "cut"), agent(E7S289-cut, A4S289-you), object(E7S289-cut, A8S289-yourself), isa(A8S289-yourself, "yourself").
english(barrons.rule762, "Think about when you may have cut yourself and after a short period of time the cut healed").
pretty(barrons.rule762, "WHEN(think(You, Heal, About), cut(You, Yourself)), You = 'you', Heal = 'after a short period of time healed', About = 'about', Yourself = 'yourself'.").
barrons.rule762:: isa(E7S289-cut, "cut"), agent(E7S289-cut, A4S289-you), isa(A4S289-you, "you"), object(E7S289-cut, A8S289-yourself), isa(A8S289-yourself, "yourself") -> when(E1S289-think, E7S289-cut), isa(E1S289-think, "think"), agent(E1S289-think, A4S289-you), arg(E1S289-think, A18S289-heal), isa(A18S289-heal, "after a short period of time the cut healed"), arg(E1S289-think, A2S289-about), isa(A2S289-about, "about").
english(barrons.rule763, "This happens because your body is always growing and making new skin cells").
pretty(barrons.rule763, "EFFECT(grow(Body, Always), happen(This)), Body = 'your body', Always = 'always', This = 'This'.").
barrons.rule763:: isa(E8S291-grow, "grow"), agent(E8S291-grow, A5S291-body), isa(A5S291-body, "your body"), arg(E8S291-grow, A7S291-always), isa(A7S291-always, "always") -> effect(E8S291-grow, E2S291-happen), isa(E2S291-happen, "happen"), agent(E2S291-happen, A1S291-this), isa(A1S291-this, "This").
english(barrons.rule764, "This happens because your body is always growing and making new skin cells").
pretty(barrons.rule764, "EFFECT(grow(Body, Always), happen(This)), Body = 'your body', Always = 'always', This = 'This'.").
barrons.rule764:: isa(E2S291-happen, "happen"), agent(E2S291-happen, A1S291-this), isa(A1S291-this, "This") -> effect(E8S291-grow, E2S291-happen), isa(E8S291-grow, "grow"), agent(E8S291-grow, A5S291-body), isa(A5S291-body, "your body"), arg(E8S291-grow, A7S291-always), isa(A7S291-always, "always").
english(barrons.rule765, "This happens because your body is always growing and making new skin cells").
pretty(barrons.rule765, "EFFECT(make(Body, Cell), happen(This)), Body = 'your body', Cell = 'new skin cells', This = 'This'.").
barrons.rule765:: isa(E10S291-make, "make"), agent(E10S291-make, A5S291-body), isa(A5S291-body, "your body"), object(E10S291-make, A13S291-cell), isa(A13S291-cell, "new skin cells") -> effect(E10S291-make, E2S291-happen), isa(E2S291-happen, "happen"), agent(E2S291-happen, A1S291-this), isa(A1S291-this, "This").
english(barrons.rule766, "This happens because your body is always growing and making new skin cells").
pretty(barrons.rule766, "EFFECT(make(Body, Cell), happen(This)), Body = 'your body', Cell = 'new skin cells', This = 'This'.").
barrons.rule766:: isa(E2S291-happen, "happen"), agent(E2S291-happen, A1S291-this), isa(A1S291-this, "This") -> effect(E10S291-make, E2S291-happen), isa(E10S291-make, "make"), agent(E10S291-make, A5S291-body), isa(A5S291-body, "your body"), object(E10S291-make, A13S291-cell), isa(A13S291-cell, "new skin cells").
english(barrons.rule767, "This information is called traits").
pretty(barrons.rule767, "EXAMPLE(Information, Trait), Information = 'This information', Trait = 'traits'.").
barrons.rule767:: isa(A2S295-information, "This information") -> example(A2S295-information, A5S295-trait), isa(A5S295-trait, "traits").
english(barrons.rule768, "This information is called traits").
pretty(barrons.rule768, "EXAMPLE(Information, Trait), Information = 'This information', Trait = 'traits'.").
barrons.rule768:: isa(A5S295-trait, "traits") -> example(A2S295-information, A5S295-trait), isa(A2S295-information, "This information").
english(barrons.rule769, "A trait could be the color of your hair skin and eyes your height and the shape of your face ears and nose").
pretty(barrons.rule769, "EXAMPLE(Trait, Color), Trait = 'A trait', Color = 'the color of your hair'.").
barrons.rule769:: isa(A2S296-trait, "A trait") -> example(A2S296-trait, A6S296-color), of(A6S296-color, A9S296-hair), isa(A9S296-hair, "your hair"), isa(A6S296-color, "the color").
english(barrons.rule770, "A trait could be the color of your hair skin and eyes your height and the shape of your face ears and nose").
pretty(barrons.rule770, "EXAMPLE(Trait, Color), Trait = 'A trait', Color = 'the color of your hair'.").
barrons.rule770:: of(A6S296-color, A9S296-hair), isa(A9S296-hair, "your hair"), isa(A6S296-color, "the color") -> example(A2S296-trait, A6S296-color), isa(A2S296-trait, "A trait").
english(barrons.rule771, "These are all characteristics traits that you are born with").
pretty(barrons.rule771, "EXAMPLE(These, Characteristic), These = 'These', Characteristic = 'all characteristics that you are born with'.").
barrons.rule771:: isa(A1S297-these, "These") -> example(A1S297-these, A4S297-characteristic), isa(A4S297-characteristic, "all characteristics that you are born with").
english(barrons.rule772, "These are all characteristics traits that you are born with").
pretty(barrons.rule772, "EXAMPLE(These, Characteristic), These = 'These', Characteristic = 'all characteristics that you are born with'.").
barrons.rule772:: isa(A4S297-characteristic, "all characteristics that you are born with") -> example(A1S297-these, A4S297-characteristic), isa(A1S297-these, "These").
english(barrons.rule773, "These are all characteristics traits that you are born with").
pretty(barrons.rule773, "EXAMPLE(These, Characteristic), These = 'These', Characteristic = 'all characteristics that you are born with'.").
barrons.rule773:: isa(A1S297-these, "These") -> example(A1S297-these, A4S297-characteristic), isa(A4S297-characteristic, "all characteristics that you are born with").
english(barrons.rule774, "These are all characteristics traits that you are born with").
pretty(barrons.rule774, "EXAMPLE(These, Characteristic), These = 'These', Characteristic = 'all characteristics that you are born with'.").
barrons.rule774:: isa(A4S297-characteristic, "all characteristics that you are born with") -> example(A1S297-these, A4S297-characteristic), isa(A1S297-these, "These").
english(barrons.rule775, "When a trait is passed from parent to child we say that it[A trait could be the color of your hair skin and eyes your height and the shape of your face ears and nose] is inherited").
pretty(barrons.rule775, "WHEN(say(We, Inherit), pass_from(Trait, Parent, to(Child))), We = 'we', Inherit = 'that it[A trait could be the color of your hair skin and eyes your height and the shape of your face ears and nose] is inherited', Trait = 'a trait', Parent = 'parent', Child = 'child'.").
barrons.rule775:: isa(E11S298-say, "say"), agent(E11S298-say, A10S298-we), isa(A10S298-we, "we"), arg(E11S298-say, A15S298-inherit), isa(A15S298-inherit, "that it[A trait could be the color of your hair skin and eyes your height and the shape of your face ears and nose] is inherited") -> when(E11S298-say, E5S298-pass), isa(E5S298-pass, "pass"), object(E5S298-pass, A3S298-trait), isa(A3S298-trait, "a trait"), from(E5S298-pass, A7S298-parent), isa(A7S298-parent, "parent"), to(E5S298-pass, A9S298-child), isa(A9S298-child, "child").
english(barrons.rule776, "When a trait is passed from parent to child we say that it[A trait could be the color of your hair skin and eyes your height and the shape of your face ears and nose] is inherited").
pretty(barrons.rule776, "WHEN(say(We, Inherit), pass_from(Trait, Parent, to(Child))), We = 'we', Inherit = 'that it[A trait could be the color of your hair skin and eyes your height and the shape of your face ears and nose] is inherited', Trait = 'a trait', Parent = 'parent', Child = 'child'.").
barrons.rule776:: isa(E5S298-pass, "pass"), object(E5S298-pass, A3S298-trait), isa(A3S298-trait, "a trait"), from(E5S298-pass, A7S298-parent), isa(A7S298-parent, "parent"), to(E5S298-pass, A9S298-child), isa(A9S298-child, "child") -> when(E11S298-say, E5S298-pass), isa(E11S298-say, "say"), agent(E11S298-say, A10S298-we), isa(A10S298-we, "we"), arg(E11S298-say, A15S298-inherit), isa(A15S298-inherit, "that it[A trait could be the color of your hair skin and eyes your height and the shape of your face ears and nose] is inherited").
english(barrons.rule777, "Inheritance is passing characteristics from parent to child").
pretty(barrons.rule777, "isa(pass, 'passing') -> pass_from(Inheritance, Characteristic, Parent, to(Child)).").
barrons.rule777:: isa(E3S299-pass, "pass") -> agent(E3S299-pass, A1S299-inheritance), isa(A1S299-inheritance, "Inheritance"), object(E3S299-pass, A4S299-characteristic), isa(A4S299-characteristic, "characteristics"), from(E3S299-pass, A6S299-parent), isa(A6S299-parent, "parent"), to(E3S299-pass, A8S299-child), isa(A8S299-child, "child").
english(barrons.rule778, "Inheritance is passing characteristics from parent to child").
pretty(barrons.rule778, "isa(Inheritance, 'Inheritance') -> pass_from(Inheritance, Characteristic, Parent, to(Child)).").
barrons.rule778:: isa(A1S299-inheritance, "Inheritance") -> isa(E3S299-pass, "pass"), agent(E3S299-pass, A1S299-inheritance), object(E3S299-pass, A4S299-characteristic), isa(A4S299-characteristic, "characteristics"), from(E3S299-pass, A6S299-parent), isa(A6S299-parent, "parent"), to(E3S299-pass, A8S299-child), isa(A8S299-child, "child").
english(barrons.rule779, "Inheritance is passing characteristics from parent to child").
pretty(barrons.rule779, "isa(Characteristic, 'characteristics') -> pass_from(Inheritance, Characteristic, Parent, to(Child)).").
barrons.rule779:: isa(A4S299-characteristic, "characteristics") -> isa(E3S299-pass, "pass"), agent(E3S299-pass, A1S299-inheritance), isa(A1S299-inheritance, "Inheritance"), object(E3S299-pass, A4S299-characteristic), from(E3S299-pass, A6S299-parent), isa(A6S299-parent, "parent"), to(E3S299-pass, A8S299-child), isa(A8S299-child, "child").
english(barrons.rule780, "Inheritance is passing characteristics from parent to child").
pretty(barrons.rule780, "isa(Parent, 'parent') -> pass_from(Inheritance, Characteristic, Parent, to(Child)).").
barrons.rule780:: isa(A6S299-parent, "parent") -> isa(E3S299-pass, "pass"), agent(E3S299-pass, A1S299-inheritance), isa(A1S299-inheritance, "Inheritance"), object(E3S299-pass, A4S299-characteristic), isa(A4S299-characteristic, "characteristics"), from(E3S299-pass, A6S299-parent), to(E3S299-pass, A8S299-child), isa(A8S299-child, "child").
english(barrons.rule781, "Inheritance is passing characteristics from parent to child").
pretty(barrons.rule781, "isa(Child, 'child') -> pass_from(Inheritance, Characteristic, Parent, to(Child)).").
barrons.rule781:: isa(A8S299-child, "child") -> isa(E3S299-pass, "pass"), agent(E3S299-pass, A1S299-inheritance), isa(A1S299-inheritance, "Inheritance"), object(E3S299-pass, A4S299-characteristic), isa(A4S299-characteristic, "characteristics"), from(E3S299-pass, A6S299-parent), isa(A6S299-parent, "parent"), to(E3S299-pass, A8S299-child).
english(barrons.rule782, "Genetics is the branch of science that studies how hereditary information is passed from one generation to the next generation in a family").
pretty(barrons.rule782, "EXAMPLE(Genetics, Branch), Genetics = 'Genetics', Branch = 'the branch of science that studies how hereditary information is passed from one generation to the next generation in a family'.").
barrons.rule782:: isa(A1S300-Genetics, "Genetics") -> example(A1S300-Genetics, A4S300-branch), of(A4S300-branch, A6S300-science), isa(A6S300-science, "science"), isa(A4S300-branch, "the branch").
english(barrons.rule783, "Genetics is the branch of science that studies how hereditary information is passed from one generation to the next generation in a family").
pretty(barrons.rule783, "EXAMPLE(Genetics, Branch), Genetics = 'Genetics', Branch = 'the branch of science that studies how hereditary information is passed from one generation to the next generation in a family'.").
barrons.rule783:: of(A4S300-branch, A6S300-science), isa(A6S300-science, "science"), isa(A4S300-branch, "the branch") -> example(A1S300-Genetics, A4S300-branch), isa(A1S300-Genetics, "Genetics").
english(barrons.rule784, "A family tree is a chart that shows a family 's relatives over time").
pretty(barrons.rule784, "EXAMPLE(Tree, show_over(Chart, Relative, Time)), Tree = 'A family tree', Chart = 'a chart', Relative = 'a family ’s relatives', Time = 'time'.").
barrons.rule784:: isa(A3S301-tree, "A family tree") -> example(A3S301-tree, A6S301-chart), isa(E8S301-show, "show"), agent(E8S301-show, A6S301-chart), isa(A6S301-chart, "a chart"), object(E8S301-show, A12S301-relative), isa(A12S301-relative, "a family 's relatives"), over(E8S301-show, A14S301-time), isa(A14S301-time, "time"), isa(A3S301-tree, A6S301-chart).
english(barrons.rule785, "A family tree is a chart that shows a family 's relatives over time").
pretty(barrons.rule785, "EXAMPLE(Tree, show_over(Chart, Relative, Time)), Tree = 'A family tree', Chart = 'a chart', Relative = 'a family ’s relatives', Time = 'time'.").
barrons.rule785:: isa(E8S301-show, "show"), agent(E8S301-show, A6S301-chart), isa(A6S301-chart, "a chart"), object(E8S301-show, A12S301-relative), isa(A12S301-relative, "a family 's relatives"), over(E8S301-show, A14S301-time), isa(A14S301-time, "time") -> example(A3S301-tree, A6S301-chart), isa(A3S301-tree, "A family tree"), isa(A3S301-tree, A6S301-chart).
english(barrons.rule786, "A family tree is a chart that shows a family 's relatives over time").
pretty(barrons.rule786, "EXAMPLE(Tree, Chart), Tree = 'A family tree', Chart = 'a chart'.").
barrons.rule786:: isa(A3S301-tree, "A family tree") -> example(A3S301-tree, A6S301-chart), isa(A6S301-chart, "a chart").
english(barrons.rule787, "A family tree is a chart that shows a family 's relatives over time").
pretty(barrons.rule787, "EXAMPLE(Tree, Chart), Tree = 'A family tree', Chart = 'a chart'.").
barrons.rule787:: isa(A6S301-chart, "a chart") -> example(A3S301-tree, A6S301-chart), isa(A3S301-tree, "A family tree").
english(barrons.rule788, "In the family tree chart shown below the grandparents are the first generation the parents are the second generation and the children are the third generation").
pretty(barrons.rule788, "EXAMPLE(Grandparent, Generation), Grandparent = 'the grandparents', Generation = 'the first generation'.").
barrons.rule788:: isa(A10S302-grandparent, "the grandparents") -> example(A10S302-grandparent, A14S302-generation), isa(A14S302-generation, "the first generation").
english(barrons.rule789, "In the family tree chart shown below the grandparents are the first generation the parents are the second generation and the children are the third generation").
pretty(barrons.rule789, "EXAMPLE(Grandparent, Generation), Grandparent = 'the grandparents', Generation = 'the first generation'.").
barrons.rule789:: isa(A14S302-generation, "the first generation") -> example(A10S302-grandparent, A14S302-generation), isa(A10S302-grandparent, "the grandparents").
english(barrons.rule790, "In the family tree chart shown below the grandparents are the first generation the parents are the second generation and the children are the third generation").
pretty(barrons.rule790, "EXAMPLE(Parent, Generation), Parent = 'the parents', Generation = 'the second generation'.").
barrons.rule790:: isa(A17S302-parent, "the parents") -> example(A17S302-parent, A21S302-generation), isa(A21S302-generation, "the second generation").
english(barrons.rule791, "In the family tree chart shown below the grandparents are the first generation the parents are the second generation and the children are the third generation").
pretty(barrons.rule791, "EXAMPLE(Parent, Generation), Parent = 'the parents', Generation = 'the second generation'.").
barrons.rule791:: isa(A21S302-generation, "the second generation") -> example(A17S302-parent, A21S302-generation), isa(A17S302-parent, "the parents").
english(barrons.rule792, "In the family tree chart shown below the grandparents are the first generation the parents are the second generation and the children are the third generation").
pretty(barrons.rule792, "EXAMPLE(Child, Generation), Child = 'the children', Generation = 'the third generation'.").
barrons.rule792:: isa(A25S302-child, "the children") -> example(A25S302-child, A29S302-generation), isa(A29S302-generation, "the third generation").
english(barrons.rule793, "In the family tree chart shown below the grandparents are the first generation the parents are the second generation and the children are the third generation").
pretty(barrons.rule793, "EXAMPLE(Child, Generation), Child = 'the children', Generation = 'the third generation'.").
barrons.rule793:: isa(A29S302-generation, "the third generation") -> example(A25S302-child, A29S302-generation), isa(A25S302-child, "the children").
english(barrons.rule794, "A pedigree chart shows each level of a family tree in a chart format").
pretty(barrons.rule794, "isa(Tree, 'a family tree') -> show_in(Chart, Level, Format).").
barrons.rule794:: isa(A10S303-tree, "a family tree") -> of(A6S303-level, A10S303-tree), isa(E4S303-show, "show"), agent(E4S303-show, A3S303-chart), isa(A3S303-chart, "A pedigree chart"), object(E4S303-show, A6S303-level), isa(A6S303-level, "each level"), in(E4S303-show, A14S303-format), isa(A14S303-format, "a chart format").
english(barrons.rule795, "A pedigree chart shows each level of a family tree in a chart format").
pretty(barrons.rule795, "isa(show, 'shows') -> show_in(Chart, Level, Format).").
barrons.rule795:: isa(E4S303-show, "show") -> of(A6S303-level, A10S303-tree), isa(A10S303-tree, "a family tree"), agent(E4S303-show, A3S303-chart), isa(A3S303-chart, "A pedigree chart"), object(E4S303-show, A6S303-level), isa(A6S303-level, "each level"), in(E4S303-show, A14S303-format), isa(A14S303-format, "a chart format").
english(barrons.rule796, "A pedigree chart shows each level of a family tree in a chart format").
pretty(barrons.rule796, "isa(Chart, 'A pedigree chart') -> show_in(Chart, Level, Format).").
barrons.rule796:: isa(A3S303-chart, "A pedigree chart") -> of(A6S303-level, A10S303-tree), isa(A10S303-tree, "a family tree"), isa(E4S303-show, "show"), agent(E4S303-show, A3S303-chart), object(E4S303-show, A6S303-level), isa(A6S303-level, "each level"), in(E4S303-show, A14S303-format), isa(A14S303-format, "a chart format").
english(barrons.rule797, "A pedigree chart shows each level of a family tree in a chart format").
pretty(barrons.rule797, "isa(Level, 'each level of a family tree') -> show_in(Chart, Level, Format).").
barrons.rule797:: isa(A6S303-level, "each level") -> of(A6S303-level, A10S303-tree), isa(A10S303-tree, "a family tree"), isa(E4S303-show, "show"), agent(E4S303-show, A3S303-chart), isa(A3S303-chart, "A pedigree chart"), object(E4S303-show, A6S303-level), in(E4S303-show, A14S303-format), isa(A14S303-format, "a chart format").
english(barrons.rule798, "A pedigree chart shows each level of a family tree in a chart format").
pretty(barrons.rule798, "isa(Format, 'a chart format') -> show_in(Chart, Level, Format).").
barrons.rule798:: isa(A14S303-format, "a chart format") -> of(A6S303-level, A10S303-tree), isa(A10S303-tree, "a family tree"), isa(E4S303-show, "show"), agent(E4S303-show, A3S303-chart), isa(A3S303-chart, "A pedigree chart"), object(E4S303-show, A6S303-level), isa(A6S303-level, "each level"), in(E4S303-show, A14S303-format).
english(barrons.rule799, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule799, "isa(connect, 'connect') -> connect_from(Line, Parent, Show, Level, to(Next)).").
barrons.rule799:: isa(E4S304-connect, "connect") -> agent(E4S304-connect, A1S304-line), isa(A1S304-line, "Lines"), object(E4S304-connect, A5S304-parent), isa(A5S304-parent, "parents"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule800, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule800, "isa(Line, 'Lines') -> connect_from(Line, Parent, Show, Level, to(Next)).").
barrons.rule800:: isa(A1S304-line, "Lines") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A1S304-line), object(E4S304-connect, A5S304-parent), isa(A5S304-parent, "parents"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule801, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule801, "isa(Parent, 'parents') -> connect_from(Line, Parent, Show, Level, to(Next)).").
barrons.rule801:: isa(A5S304-parent, "parents") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A1S304-line), isa(A1S304-line, "Lines"), object(E4S304-connect, A5S304-parent), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule802, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule802, "isa(Level, 'one level') -> connect_from(Line, Parent, Show, Level, to(Next)).").
barrons.rule802:: isa(A10S304-level, "one level") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A1S304-line), isa(A1S304-line, "Lines"), object(E4S304-connect, A5S304-parent), isa(A5S304-parent, "parents"), from(E4S304-connect, A10S304-level), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule803, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule803, "isa(Next, 'the next') -> connect_from(Line, Parent, Show, Level, to(Next)).").
barrons.rule803:: isa(A13S304-next, "the next") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A1S304-line), isa(A1S304-line, "Lines"), object(E4S304-connect, A5S304-parent), isa(A5S304-parent, "parents"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule804, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule804, "isa(Show, 'as shown') -> connect_from(Line, Parent, Show, Level, to(Next)).").
barrons.rule804:: isa(A16S304-show, "as shown below") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A1S304-line), isa(A1S304-line, "Lines"), object(E4S304-connect, A5S304-parent), isa(A5S304-parent, "parents"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show).
english(barrons.rule805, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule805, "isa(connect, 'connect') -> connect_from(Box, Parent, Show, Level, to(Next)).").
barrons.rule805:: isa(E4S304-connect, "connect") -> agent(E4S304-connect, A3S304-box), isa(A3S304-box, "boxes"), object(E4S304-connect, A5S304-parent), isa(A5S304-parent, "parents"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule806, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule806, "isa(Box, 'boxes') -> connect_from(Box, Parent, Show, Level, to(Next)).").
barrons.rule806:: isa(A3S304-box, "boxes") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A3S304-box), object(E4S304-connect, A5S304-parent), isa(A5S304-parent, "parents"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule807, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule807, "isa(Parent, 'parents') -> connect_from(Box, Parent, Show, Level, to(Next)).").
barrons.rule807:: isa(A5S304-parent, "parents") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A3S304-box), isa(A3S304-box, "boxes"), object(E4S304-connect, A5S304-parent), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule808, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule808, "isa(Level, 'one level') -> connect_from(Box, Parent, Show, Level, to(Next)).").
barrons.rule808:: isa(A10S304-level, "one level") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A3S304-box), isa(A3S304-box, "boxes"), object(E4S304-connect, A5S304-parent), isa(A5S304-parent, "parents"), from(E4S304-connect, A10S304-level), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule809, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule809, "isa(Next, 'the next') -> connect_from(Box, Parent, Show, Level, to(Next)).").
barrons.rule809:: isa(A13S304-next, "the next") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A3S304-box), isa(A3S304-box, "boxes"), object(E4S304-connect, A5S304-parent), isa(A5S304-parent, "parents"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule810, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule810, "isa(Show, 'as shown') -> connect_from(Box, Parent, Show, Level, to(Next)).").
barrons.rule810:: isa(A16S304-show, "as shown below") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A3S304-box), isa(A3S304-box, "boxes"), object(E4S304-connect, A5S304-parent), isa(A5S304-parent, "parents"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show).
english(barrons.rule811, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule811, "isa(connect, 'connect') -> connect_from(Line, Child, Show, Level, to(Next)).").
barrons.rule811:: isa(E4S304-connect, "connect") -> agent(E4S304-connect, A1S304-line), isa(A1S304-line, "Lines"), object(E4S304-connect, A7S304-child), isa(A7S304-child, "children"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule812, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule812, "isa(Line, 'Lines') -> connect_from(Line, Child, Show, Level, to(Next)).").
barrons.rule812:: isa(A1S304-line, "Lines") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A1S304-line), object(E4S304-connect, A7S304-child), isa(A7S304-child, "children"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule813, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule813, "isa(Child, 'children') -> connect_from(Line, Child, Show, Level, to(Next)).").
barrons.rule813:: isa(A7S304-child, "children") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A1S304-line), isa(A1S304-line, "Lines"), object(E4S304-connect, A7S304-child), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule814, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule814, "isa(Level, 'one level') -> connect_from(Line, Child, Show, Level, to(Next)).").
barrons.rule814:: isa(A10S304-level, "one level") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A1S304-line), isa(A1S304-line, "Lines"), object(E4S304-connect, A7S304-child), isa(A7S304-child, "children"), from(E4S304-connect, A10S304-level), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule815, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule815, "isa(Next, 'the next') -> connect_from(Line, Child, Show, Level, to(Next)).").
barrons.rule815:: isa(A13S304-next, "the next") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A1S304-line), isa(A1S304-line, "Lines"), object(E4S304-connect, A7S304-child), isa(A7S304-child, "children"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule816, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule816, "isa(Show, 'as shown') -> connect_from(Line, Child, Show, Level, to(Next)).").
barrons.rule816:: isa(A16S304-show, "as shown below") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A1S304-line), isa(A1S304-line, "Lines"), object(E4S304-connect, A7S304-child), isa(A7S304-child, "children"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show).
english(barrons.rule817, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule817, "isa(connect, 'connect') -> connect_from(Box, Child, Show, Level, to(Next)).").
barrons.rule817:: isa(E4S304-connect, "connect") -> agent(E4S304-connect, A3S304-box), isa(A3S304-box, "boxes"), object(E4S304-connect, A7S304-child), isa(A7S304-child, "children"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule818, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule818, "isa(Box, 'boxes') -> connect_from(Box, Child, Show, Level, to(Next)).").
barrons.rule818:: isa(A3S304-box, "boxes") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A3S304-box), object(E4S304-connect, A7S304-child), isa(A7S304-child, "children"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule819, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule819, "isa(Child, 'children') -> connect_from(Box, Child, Show, Level, to(Next)).").
barrons.rule819:: isa(A7S304-child, "children") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A3S304-box), isa(A3S304-box, "boxes"), object(E4S304-connect, A7S304-child), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule820, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule820, "isa(Level, 'one level') -> connect_from(Box, Child, Show, Level, to(Next)).").
barrons.rule820:: isa(A10S304-level, "one level") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A3S304-box), isa(A3S304-box, "boxes"), object(E4S304-connect, A7S304-child), isa(A7S304-child, "children"), from(E4S304-connect, A10S304-level), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule821, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule821, "isa(Next, 'the next') -> connect_from(Box, Child, Show, Level, to(Next)).").
barrons.rule821:: isa(A13S304-next, "the next") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A3S304-box), isa(A3S304-box, "boxes"), object(E4S304-connect, A7S304-child), isa(A7S304-child, "children"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), arg(E4S304-connect, A16S304-show), isa(A16S304-show, "as shown below").
english(barrons.rule822, "Lines and boxes connect parents and children from one level to the next as shown below").
pretty(barrons.rule822, "isa(Show, 'as shown') -> connect_from(Box, Child, Show, Level, to(Next)).").
barrons.rule822:: isa(A16S304-show, "as shown below") -> isa(E4S304-connect, "connect"), agent(E4S304-connect, A3S304-box), isa(A3S304-box, "boxes"), object(E4S304-connect, A7S304-child), isa(A7S304-child, "children"), from(E4S304-connect, A10S304-level), isa(A10S304-level, "one level"), to(E4S304-connect, A13S304-next), isa(A13S304-next, "the next"), arg(E4S304-connect, A16S304-show).
english(barrons.rule823, "Organisms reproduce an equal amount of genetic information DNA from the mother and father").
pretty(barrons.rule823, "isa(Information, 'genetic information') -> reproduce_from(Organism, Amount, Mother, from(Father)).").
barrons.rule823:: isa(A8S309-information, "genetic information") -> of(A5S309-amount, A8S309-information), isa(E2S309-reproduce, "reproduce"), agent(E2S309-reproduce, A1S309-organism), isa(A1S309-organism, "Organisms"), object(E2S309-reproduce, A5S309-amount), isa(A5S309-amount, "an equal amount"), from(E2S309-reproduce, A14S309-mother), isa(A14S309-mother, "the mother"), from(E2S309-reproduce, A16S309-father), isa(A16S309-father, "father").
english(barrons.rule824, "Organisms reproduce an equal amount of genetic information DNA from the mother and father").
pretty(barrons.rule824, "isa(reproduce, 'reproduce') -> reproduce_from(Organism, Amount, Mother, from(Father)).").
barrons.rule824:: isa(E2S309-reproduce, "reproduce") -> of(A5S309-amount, A8S309-information), isa(A8S309-information, "genetic information"), agent(E2S309-reproduce, A1S309-organism), isa(A1S309-organism, "Organisms"), object(E2S309-reproduce, A5S309-amount), isa(A5S309-amount, "an equal amount"), from(E2S309-reproduce, A14S309-mother), isa(A14S309-mother, "the mother"), from(E2S309-reproduce, A16S309-father), isa(A16S309-father, "father").
english(barrons.rule825, "Organisms reproduce an equal amount of genetic information DNA from the mother and father").
pretty(barrons.rule825, "isa(Organism, 'Organisms') -> reproduce_from(Organism, Amount, Mother, from(Father)).").
barrons.rule825:: isa(A1S309-organism, "Organisms") -> of(A5S309-amount, A8S309-information), isa(A8S309-information, "genetic information"), isa(E2S309-reproduce, "reproduce"), agent(E2S309-reproduce, A1S309-organism), object(E2S309-reproduce, A5S309-amount), isa(A5S309-amount, "an equal amount"), from(E2S309-reproduce, A14S309-mother), isa(A14S309-mother, "the mother"), from(E2S309-reproduce, A16S309-father), isa(A16S309-father, "father").
english(barrons.rule826, "Organisms reproduce an equal amount of genetic information DNA from the mother and father").
pretty(barrons.rule826, "isa(Amount, 'an equal amount of genetic information') -> reproduce_from(Organism, Amount, Mother, from(Father)).").
barrons.rule826:: isa(A5S309-amount, "an equal amount") -> of(A5S309-amount, A8S309-information), isa(A8S309-information, "genetic information"), isa(E2S309-reproduce, "reproduce"), agent(E2S309-reproduce, A1S309-organism), isa(A1S309-organism, "Organisms"), object(E2S309-reproduce, A5S309-amount), from(E2S309-reproduce, A14S309-mother), isa(A14S309-mother, "the mother"), from(E2S309-reproduce, A16S309-father), isa(A16S309-father, "father").
english(barrons.rule827, "Organisms reproduce an equal amount of genetic information DNA from the mother and father").
pretty(barrons.rule827, "isa(Mother, 'the mother') -> reproduce_from(Organism, Amount, Mother, from(Father)).").
barrons.rule827:: isa(A14S309-mother, "the mother") -> of(A5S309-amount, A8S309-information), isa(A8S309-information, "genetic information"), isa(E2S309-reproduce, "reproduce"), agent(E2S309-reproduce, A1S309-organism), isa(A1S309-organism, "Organisms"), object(E2S309-reproduce, A5S309-amount), isa(A5S309-amount, "an equal amount"), from(E2S309-reproduce, A14S309-mother), from(E2S309-reproduce, A16S309-father), isa(A16S309-father, "father").
english(barrons.rule828, "Organisms reproduce an equal amount of genetic information DNA from the mother and father").
pretty(barrons.rule828, "isa(Father, 'father') -> reproduce_from(Organism, Amount, Mother, from(Father)).").
barrons.rule828:: isa(A16S309-father, "father") -> of(A5S309-amount, A8S309-information), isa(A8S309-information, "genetic information"), isa(E2S309-reproduce, "reproduce"), agent(E2S309-reproduce, A1S309-organism), isa(A1S309-organism, "Organisms"), object(E2S309-reproduce, A5S309-amount), isa(A5S309-amount, "an equal amount"), from(E2S309-reproduce, A14S309-mother), isa(A14S309-mother, "the mother"), from(E2S309-reproduce, A16S309-father).
english(barrons.rule829, "Organisms reproduce an equal amount of genetic information DNA from the mother and father").
pretty(barrons.rule829, "isa(reproduce, 'reproduce') -> reproduce_from(Organism, Dna, Mother, from(Father)).").
barrons.rule829:: isa(E2S309-reproduce, "reproduce") -> agent(E2S309-reproduce, A1S309-organism), isa(A1S309-organism, "Organisms"), object(E2S309-reproduce, A10S309-dna), isa(A10S309-dna, "DNA"), from(E2S309-reproduce, A14S309-mother), isa(A14S309-mother, "the mother"), from(E2S309-reproduce, A16S309-father), isa(A16S309-father, "father").
english(barrons.rule830, "Organisms reproduce an equal amount of genetic information DNA from the mother and father").
pretty(barrons.rule830, "isa(Organism, 'Organisms') -> reproduce_from(Organism, Dna, Mother, from(Father)).").
barrons.rule830:: isa(A1S309-organism, "Organisms") -> isa(E2S309-reproduce, "reproduce"), agent(E2S309-reproduce, A1S309-organism), object(E2S309-reproduce, A10S309-dna), isa(A10S309-dna, "DNA"), from(E2S309-reproduce, A14S309-mother), isa(A14S309-mother, "the mother"), from(E2S309-reproduce, A16S309-father), isa(A16S309-father, "father").
english(barrons.rule831, "Organisms reproduce an equal amount of genetic information DNA from the mother and father").
pretty(barrons.rule831, "isa(Dna, 'DNA') -> reproduce_from(Organism, Dna, Mother, from(Father)).").
barrons.rule831:: isa(A10S309-dna, "DNA") -> isa(E2S309-reproduce, "reproduce"), agent(E2S309-reproduce, A1S309-organism), isa(A1S309-organism, "Organisms"), object(E2S309-reproduce, A10S309-dna), from(E2S309-reproduce, A14S309-mother), isa(A14S309-mother, "the mother"), from(E2S309-reproduce, A16S309-father), isa(A16S309-father, "father").
english(barrons.rule832, "Organisms reproduce an equal amount of genetic information DNA from the mother and father").
pretty(barrons.rule832, "isa(Mother, 'the mother') -> reproduce_from(Organism, Dna, Mother, from(Father)).").
barrons.rule832:: isa(A14S309-mother, "the mother") -> isa(E2S309-reproduce, "reproduce"), agent(E2S309-reproduce, A1S309-organism), isa(A1S309-organism, "Organisms"), object(E2S309-reproduce, A10S309-dna), isa(A10S309-dna, "DNA"), from(E2S309-reproduce, A14S309-mother), from(E2S309-reproduce, A16S309-father), isa(A16S309-father, "father").
english(barrons.rule833, "Organisms reproduce an equal amount of genetic information DNA from the mother and father").
pretty(barrons.rule833, "isa(Father, 'father') -> reproduce_from(Organism, Dna, Mother, from(Father)).").
barrons.rule833:: isa(A16S309-father, "father") -> isa(E2S309-reproduce, "reproduce"), agent(E2S309-reproduce, A1S309-organism), isa(A1S309-organism, "Organisms"), object(E2S309-reproduce, A10S309-dna), isa(A10S309-dna, "DNA"), from(E2S309-reproduce, A14S309-mother), isa(A14S309-mother, "the mother"), from(E2S309-reproduce, A16S309-father).
english(barrons.rule834, "This information is combined to form the new offspring").
pretty(barrons.rule834, "EFFECT(combine(Information), form(Offspring)), Information = 'This information', Offspring = 'the new offspring'.").
barrons.rule834:: isa(E4S310-combine, "combine"), object(E4S310-combine, A2S310-information), isa(A2S310-information, "This information") -> effect(E4S310-combine, E6S310-form), isa(E6S310-form, "form"), object(E6S310-form, A9S310-offspring), isa(A9S310-offspring, "the new offspring").
english(barrons.rule835, "This information is combined to form the new offspring").
pretty(barrons.rule835, "EFFECT(combine(Information), form(Offspring)), Information = 'This information', Offspring = 'the new offspring'.").
barrons.rule835:: isa(E6S310-form, "form"), object(E6S310-form, A9S310-offspring), isa(A9S310-offspring, "the new offspring") -> effect(E4S310-combine, E6S310-form), isa(E4S310-combine, "combine"), object(E4S310-combine, A2S310-information), isa(A2S310-information, "This information").
english(barrons.rule836, "DNA is a bundle of chemicals that are considered the map for all living things").
pretty(barrons.rule836, "EXAMPLE(Dna, Bundle), Dna = 'DNA', Bundle = 'a bundle of chemicals that are considered the map for all living things'.").
barrons.rule836:: isa(A1S314-dna, "DNA") -> example(A1S314-dna, A4S314-bundle), of(A4S314-bundle, A6S314-chemical), isa(A6S314-chemical, "chemicals"), isa(A4S314-bundle, "a bundle").
english(barrons.rule837, "DNA is a bundle of chemicals that are considered the map for all living things").
pretty(barrons.rule837, "EXAMPLE(Dna, Bundle), Dna = 'DNA', Bundle = 'a bundle of chemicals that are considered the map for all living things'.").
barrons.rule837:: of(A4S314-bundle, A6S314-chemical), isa(A6S314-chemical, "chemicals"), isa(A4S314-bundle, "a bundle") -> example(A1S314-dna, A4S314-bundle), isa(A1S314-dna, "DNA").
english(barrons.rule838, "Just as you have your own fingerprint you also have your own DNA").
pretty(barrons.rule838, "isa(have, 'have') -> have(You, Dna, Just).").
barrons.rule838:: isa(E11S316-have, "have") -> agent(E11S316-have, A9S316-you), isa(A9S316-you, "you"), object(E11S316-have, A14S316-dna), isa(A14S316-dna, "your own DNA"), arg(E11S316-have, A1S316-just), isa(A1S316-just, "Just as you have your own fingerprint").
english(barrons.rule839, "Just as you have your own fingerprint you also have your own DNA").
pretty(barrons.rule839, "isa(You, 'you') -> have(You, Dna, Just).").
barrons.rule839:: isa(A9S316-you, "you") -> isa(E11S316-have, "have"), agent(E11S316-have, A9S316-you), object(E11S316-have, A14S316-dna), isa(A14S316-dna, "your own DNA"), arg(E11S316-have, A1S316-just), isa(A1S316-just, "Just as you have your own fingerprint").
english(barrons.rule840, "Just as you have your own fingerprint you also have your own DNA").
pretty(barrons.rule840, "isa(Dna, 'your own DNA') -> have(You, Dna, Just).").
barrons.rule840:: isa(A14S316-dna, "your own DNA") -> isa(E11S316-have, "have"), agent(E11S316-have, A9S316-you), isa(A9S316-you, "you"), object(E11S316-have, A14S316-dna), arg(E11S316-have, A1S316-just), isa(A1S316-just, "Just as you have your own fingerprint").
english(barrons.rule841, "Just as you have your own fingerprint you also have your own DNA").
pretty(barrons.rule841, "isa(Just, 'Just as you have your own fingerprint') -> have(You, Dna, Just).").
barrons.rule841:: isa(A1S316-just, "Just as you have your own fingerprint") -> isa(E11S316-have, "have"), agent(E11S316-have, A9S316-you), isa(A9S316-you, "you"), object(E11S316-have, A14S316-dna), isa(A14S316-dna, "your own DNA"), arg(E11S316-have, A1S316-just).
english(barrons.rule842, "DNA tells all living things what it[your own fingerprint] should look like").
pretty(barrons.rule842, "isa(tell, 'tells') -> tell(Dna, Thing).").
barrons.rule842:: isa(E2S317-tell, "tell") -> agent(E2S317-tell, A1S317-dna), isa(A1S317-dna, "DNA"), object(E2S317-tell, A5S317-thing), isa(A5S317-thing, "all living things").
english(barrons.rule843, "DNA tells all living things what it[your own fingerprint] should look like").
pretty(barrons.rule843, "isa(Dna, 'DNA') -> tell(Dna, Thing).").
barrons.rule843:: isa(A1S317-dna, "DNA") -> isa(E2S317-tell, "tell"), agent(E2S317-tell, A1S317-dna), object(E2S317-tell, A5S317-thing), isa(A5S317-thing, "all living things").
english(barrons.rule844, "DNA tells all living things what it[your own fingerprint] should look like").
pretty(barrons.rule844, "isa(Thing, 'all living things') -> tell(Dna, Thing).").
barrons.rule844:: isa(A5S317-thing, "all living things") -> isa(E2S317-tell, "tell"), agent(E2S317-tell, A1S317-dna), isa(A1S317-dna, "DNA"), object(E2S317-tell, A5S317-thing).
english(barrons.rule845, "Each step of the ladder controls different traits").
pretty(barrons.rule845, "isa(Ladder, 'the ladder') -> control(Step, Trait).").
barrons.rule845:: isa(A5S319-ladder, "the ladder") -> of(A2S319-step, A5S319-ladder), isa(E6S319-control, "control"), agent(E6S319-control, A2S319-step), isa(A2S319-step, "Each step"), object(E6S319-control, A8S319-trait), isa(A8S319-trait, "different traits").
english(barrons.rule846, "Each step of the ladder controls different traits").
pretty(barrons.rule846, "isa(control, 'controls') -> control(Step, Trait).").
barrons.rule846:: isa(E6S319-control, "control") -> of(A2S319-step, A5S319-ladder), isa(A5S319-ladder, "the ladder"), agent(E6S319-control, A2S319-step), isa(A2S319-step, "Each step"), object(E6S319-control, A8S319-trait), isa(A8S319-trait, "different traits").
english(barrons.rule847, "Each step of the ladder controls different traits").
pretty(barrons.rule847, "isa(Step, 'Each step of the ladder') -> control(Step, Trait).").
barrons.rule847:: isa(A2S319-step, "Each step") -> of(A2S319-step, A5S319-ladder), isa(A5S319-ladder, "the ladder"), isa(E6S319-control, "control"), agent(E6S319-control, A2S319-step), object(E6S319-control, A8S319-trait), isa(A8S319-trait, "different traits").
english(barrons.rule848, "Each step of the ladder controls different traits").
pretty(barrons.rule848, "isa(Trait, 'different traits') -> control(Step, Trait).").
barrons.rule848:: isa(A8S319-trait, "different traits") -> of(A2S319-step, A5S319-ladder), isa(A5S319-ladder, "the ladder"), isa(E6S319-control, "control"), agent(E6S319-control, A2S319-step), isa(A2S319-step, "Each step"), object(E6S319-control, A8S319-trait).
english(barrons.rule849, "Each strand of DNA contains hundreds of pieces of information").
pretty(barrons.rule849, "isa(Dna, 'DNA') -> contain(Strand, Hundred).").
barrons.rule849:: isa(A4S320-dna, "DNA") -> of(A2S320-strand, A4S320-dna), of(A8S320-piece, A10S320-information), isa(A10S320-information, "information"), of(A6S320-hundred, A8S320-piece), isa(A8S320-piece, "pieces"), isa(E5S320-contain, "contain"), agent(E5S320-contain, A2S320-strand), isa(A2S320-strand, "Each strand"), object(E5S320-contain, A6S320-hundred), isa(A6S320-hundred, "hundreds").
english(barrons.rule850, "Each strand of DNA contains hundreds of pieces of information").
pretty(barrons.rule850, "isa(Information, 'information') -> contain(Strand, Hundred).").
barrons.rule850:: isa(A10S320-information, "information") -> of(A2S320-strand, A4S320-dna), isa(A4S320-dna, "DNA"), of(A8S320-piece, A10S320-information), of(A6S320-hundred, A8S320-piece), isa(A8S320-piece, "pieces"), isa(E5S320-contain, "contain"), agent(E5S320-contain, A2S320-strand), isa(A2S320-strand, "Each strand"), object(E5S320-contain, A6S320-hundred), isa(A6S320-hundred, "hundreds").
english(barrons.rule851, "Each strand of DNA contains hundreds of pieces of information").
pretty(barrons.rule851, "isa(Piece, 'pieces of information') -> contain(Strand, Hundred).").
barrons.rule851:: isa(A8S320-piece, "pieces") -> of(A2S320-strand, A4S320-dna), isa(A4S320-dna, "DNA"), of(A8S320-piece, A10S320-information), isa(A10S320-information, "information"), of(A6S320-hundred, A8S320-piece), isa(E5S320-contain, "contain"), agent(E5S320-contain, A2S320-strand), isa(A2S320-strand, "Each strand"), object(E5S320-contain, A6S320-hundred), isa(A6S320-hundred, "hundreds").
english(barrons.rule852, "Each strand of DNA contains hundreds of pieces of information").
pretty(barrons.rule852, "isa(contain, 'contains') -> contain(Strand, Hundred).").
barrons.rule852:: isa(E5S320-contain, "contain") -> of(A2S320-strand, A4S320-dna), isa(A4S320-dna, "DNA"), of(A8S320-piece, A10S320-information), isa(A10S320-information, "information"), of(A6S320-hundred, A8S320-piece), isa(A8S320-piece, "pieces"), agent(E5S320-contain, A2S320-strand), isa(A2S320-strand, "Each strand"), object(E5S320-contain, A6S320-hundred), isa(A6S320-hundred, "hundreds").
english(barrons.rule853, "Each strand of DNA contains hundreds of pieces of information").
pretty(barrons.rule853, "isa(Strand, 'Each strand of DNA') -> contain(Strand, Hundred).").
barrons.rule853:: isa(A2S320-strand, "Each strand") -> of(A2S320-strand, A4S320-dna), isa(A4S320-dna, "DNA"), of(A8S320-piece, A10S320-information), isa(A10S320-information, "information"), of(A6S320-hundred, A8S320-piece), isa(A8S320-piece, "pieces"), isa(E5S320-contain, "contain"), agent(E5S320-contain, A2S320-strand), object(E5S320-contain, A6S320-hundred), isa(A6S320-hundred, "hundreds").
english(barrons.rule854, "Each strand of DNA contains hundreds of pieces of information").
pretty(barrons.rule854, "isa(Hundred, 'hundreds of pieces of information') -> contain(Strand, Hundred).").
barrons.rule854:: isa(A6S320-hundred, "hundreds") -> of(A2S320-strand, A4S320-dna), isa(A4S320-dna, "DNA"), of(A8S320-piece, A10S320-information), isa(A10S320-information, "information"), of(A6S320-hundred, A8S320-piece), isa(A8S320-piece, "pieces"), isa(E5S320-contain, "contain"), agent(E5S320-contain, A2S320-strand), isa(A2S320-strand, "Each strand"), object(E5S320-contain, A6S320-hundred).
english(barrons.rule855, "The number of DNA strands chromosomes an organism has is the same for all members of a species").
pretty(barrons.rule855, "EXAMPLE(Number, Same), Number = 'The number of DNA strands chromosomes an organism', Same = 'the same for all members of a species'.").
barrons.rule855:: of(A2S322-number, A5S322-strand), isa(A5S322-strand, "DNA strands"), isa(A2S322-number, "The number") -> example(A2S322-number, A14S322-same), of(A17S322-member, A20S322-species), isa(A20S322-species, "a species"), for(A14S322-same, A17S322-member), isa(A17S322-member, "all members"), isa(A14S322-same, "the same").
english(barrons.rule856, "The number of DNA strands chromosomes an organism has is the same for all members of a species").
pretty(barrons.rule856, "EXAMPLE(Number, Same), Number = 'The number of DNA strands chromosomes an organism', Same = 'the same for all members of a species'.").
barrons.rule856:: of(A17S322-member, A20S322-species), isa(A20S322-species, "a species"), for(A14S322-same, A17S322-member), isa(A17S322-member, "all members"), isa(A14S322-same, "the same") -> example(A2S322-number, A14S322-same), of(A2S322-number, A5S322-strand), isa(A5S322-strand, "DNA strands"), isa(A2S322-number, "The number").
english(barrons.rule857, "For example humans have 46 chromosomes and a fruit fly has only 8 chromosomes").
pretty(barrons.rule857, "isa(have, 'have') -> have_for(Human, Chromosome, Example).").
barrons.rule857:: isa(E5S323-have, "have") -> agent(E5S323-have, A4S323-human), isa(A4S323-human, "humans"), object(E5S323-have, A7S323-chromosome), isa(A7S323-chromosome, "46 chromosomes"), for(E5S323-have, A2S323-example), isa(A2S323-example, "example").
english(barrons.rule858, "For example humans have 46 chromosomes and a fruit fly has only 8 chromosomes").
pretty(barrons.rule858, "isa(Human, 'humans') -> have_for(Human, Chromosome, Example).").
barrons.rule858:: isa(A4S323-human, "humans") -> isa(E5S323-have, "have"), agent(E5S323-have, A4S323-human), object(E5S323-have, A7S323-chromosome), isa(A7S323-chromosome, "46 chromosomes"), for(E5S323-have, A2S323-example), isa(A2S323-example, "example").
english(barrons.rule859, "For example humans have 46 chromosomes and a fruit fly has only 8 chromosomes").
pretty(barrons.rule859, "isa(Chromosome, '46 chromosomes') -> have_for(Human, Chromosome, Example).").
barrons.rule859:: isa(A7S323-chromosome, "46 chromosomes") -> isa(E5S323-have, "have"), agent(E5S323-have, A4S323-human), isa(A4S323-human, "humans"), object(E5S323-have, A7S323-chromosome), for(E5S323-have, A2S323-example), isa(A2S323-example, "example").
english(barrons.rule860, "For example humans have 46 chromosomes and a fruit fly has only 8 chromosomes").
pretty(barrons.rule860, "isa(Example, 'example') -> have_for(Human, Chromosome, Example).").
barrons.rule860:: isa(A2S323-example, "example") -> isa(E5S323-have, "have"), agent(E5S323-have, A4S323-human), isa(A4S323-human, "humans"), object(E5S323-have, A7S323-chromosome), isa(A7S323-chromosome, "46 chromosomes"), for(E5S323-have, A2S323-example).
english(barrons.rule861, "Many organisms look very similar to other organisms because they[Many organisms] may be from the same species").
pretty(barrons.rule861, "isa(look, 'look') -> look_to(Organism, Similar, Organism).").
barrons.rule861:: isa(E3S324-look, "look") -> agent(E3S324-look, A2S324-organism), isa(A2S324-organism, "Many organisms"), object(E3S324-look, A5S324-similar), isa(A5S324-similar, "similar"), to(E3S324-look, A8S324-organism), isa(A8S324-organism, "other organisms").
english(barrons.rule862, "Many organisms look very similar to other organisms because they[Many organisms] may be from the same species").
pretty(barrons.rule862, "isa(Organism, 'Many organisms') -> look_to(Organism, Similar, Organism).").
barrons.rule862:: isa(A2S324-organism, "Many organisms") -> isa(E3S324-look, "look"), agent(E3S324-look, A2S324-organism), object(E3S324-look, A5S324-similar), isa(A5S324-similar, "similar"), to(E3S324-look, A8S324-organism), isa(A8S324-organism, "other organisms").
english(barrons.rule863, "Many organisms look very similar to other organisms because they[Many organisms] may be from the same species").
pretty(barrons.rule863, "isa(Similar, 'similar') -> look_to(Organism, Similar, Organism).").
barrons.rule863:: isa(A5S324-similar, "similar") -> isa(E3S324-look, "look"), agent(E3S324-look, A2S324-organism), isa(A2S324-organism, "Many organisms"), object(E3S324-look, A5S324-similar), to(E3S324-look, A8S324-organism), isa(A8S324-organism, "other organisms").
english(barrons.rule864, "Many organisms look very similar to other organisms because they[Many organisms] may be from the same species").
pretty(barrons.rule864, "isa(Organism, 'other organisms') -> look_to(Organism, Similar, Organism).").
barrons.rule864:: isa(A8S324-organism, "other organisms") -> isa(E3S324-look, "look"), agent(E3S324-look, A2S324-organism), isa(A2S324-organism, "Many organisms"), object(E3S324-look, A5S324-similar), isa(A5S324-similar, "similar"), to(E3S324-look, A8S324-organism).
english(barrons.rule865, "A child or baby is called an offspring").
pretty(barrons.rule865, "EXAMPLE(Child, Offspring), Child = 'A child', Offspring = 'an offspring'.").
barrons.rule865:: isa(A2S326-child, "A child") -> example(A2S326-child, A8S326-offspring), isa(A8S326-offspring, "an offspring").
english(barrons.rule866, "A child or baby is called an offspring").
pretty(barrons.rule866, "EXAMPLE(Child, Offspring), Child = 'A child', Offspring = 'an offspring'.").
barrons.rule866:: isa(A8S326-offspring, "an offspring") -> example(A2S326-child, A8S326-offspring), isa(A2S326-child, "A child").
english(barrons.rule867, "A child or baby is called an offspring").
pretty(barrons.rule867, "EXAMPLE(Baby, Offspring), Baby = 'baby', Offspring = 'an offspring'.").
barrons.rule867:: isa(A4S326-baby, "baby") -> example(A4S326-baby, A8S326-offspring), isa(A8S326-offspring, "an offspring").
english(barrons.rule868, "A child or baby is called an offspring").
pretty(barrons.rule868, "EXAMPLE(Baby, Offspring), Baby = 'baby', Offspring = 'an offspring'.").
barrons.rule868:: isa(A8S326-offspring, "an offspring") -> example(A4S326-baby, A8S326-offspring), isa(A4S326-baby, "baby").
english(barrons.rule869, "An offspring grows up to look like its[an offspring] parents").
pretty(barrons.rule869, "EFFECT(grow up(Offspring), look_like(Offspring, Parent)), Offspring = 'An offspring', Parent = 'its[an offspring] parents'.").
barrons.rule869:: isa(E3S327-grow, "grow up"), agent(E3S327-grow, A2S327-offspring), isa(A2S327-offspring, "An offspring") -> effect(E3S327-grow, E6S327-look), isa(E6S327-look, "look"), agent(E6S327-look, A2S327-offspring), like(E6S327-look, A9S327-parent), isa(A9S327-parent, "its[an offspring] parents").
english(barrons.rule870, "An offspring grows up to look like its[an offspring] parents").
pretty(barrons.rule870, "EFFECT(grow up(Offspring), look_like(Offspring, Parent)), Offspring = 'An offspring', Parent = 'its[an offspring] parents'.").
barrons.rule870:: isa(E6S327-look, "look"), agent(E6S327-look, A2S327-offspring), isa(A2S327-offspring, "An offspring"), like(E6S327-look, A9S327-parent), isa(A9S327-parent, "its[an offspring] parents") -> effect(E3S327-grow, E6S327-look), isa(E3S327-grow, "grow up"), agent(E3S327-grow, A2S327-offspring).
english(barrons.rule871, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule871, "CAUSE(Dna, resemble_of(Plant, Parent, Closely, Dna)), Dna = 'their[plants and animals] DNA', Plant = 'Plants', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA', Closely = 'closely', Dna = 'their[plants and animals] DNA'.").
barrons.rule871:: isa(A17S328-dna, "their[plants and animals] DNA") -> cause(A17S328-dna, E5S328-resemble), isa(E5S328-resemble, "resemble"), agent(E5S328-resemble, A1S328-plant), isa(A1S328-plant, "Plants"), object(E5S328-resemble, A7S328-parent), isa(A7S328-parent, "they parent"), of(E5S328-resemble, A17S328-dna), arg(E5S328-resemble, A4S328-closely), isa(A4S328-closely, "closely").
english(barrons.rule872, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule872, "CAUSE(Dna, resemble_of(Plant, Parent, Closely, Dna)), Dna = 'their[plants and animals] DNA', Plant = 'Plants', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA', Closely = 'closely', Dna = 'their[plants and animals] DNA'.").
barrons.rule872:: isa(E5S328-resemble, "resemble"), agent(E5S328-resemble, A1S328-plant), isa(A1S328-plant, "Plants"), object(E5S328-resemble, A7S328-parent), isa(A7S328-parent, "they parent"), of(E5S328-resemble, A17S328-dna), isa(A17S328-dna, "their[plants and animals] DNA"), arg(E5S328-resemble, A4S328-closely), isa(A4S328-closely, "closely") -> cause(A17S328-dna, E5S328-resemble).
english(barrons.rule873, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule873, "CAUSE(Dna, resemble_of(Animal, Parent, Closely, Dna)), Dna = 'their[plants and animals] DNA', Animal = 'animals', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA', Closely = 'closely', Dna = 'their[plants and animals] DNA'.").
barrons.rule873:: isa(A17S328-dna, "their[plants and animals] DNA") -> cause(A17S328-dna, E5S328-resemble), isa(E5S328-resemble, "resemble"), agent(E5S328-resemble, A3S328-animal), isa(A3S328-animal, "animals"), object(E5S328-resemble, A7S328-parent), isa(A7S328-parent, "they parent"), of(E5S328-resemble, A17S328-dna), arg(E5S328-resemble, A4S328-closely), isa(A4S328-closely, "closely").
english(barrons.rule874, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule874, "CAUSE(Dna, resemble_of(Animal, Parent, Closely, Dna)), Dna = 'their[plants and animals] DNA', Animal = 'animals', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA', Closely = 'closely', Dna = 'their[plants and animals] DNA'.").
barrons.rule874:: isa(E5S328-resemble, "resemble"), agent(E5S328-resemble, A3S328-animal), isa(A3S328-animal, "animals"), object(E5S328-resemble, A7S328-parent), isa(A7S328-parent, "they parent"), of(E5S328-resemble, A17S328-dna), isa(A17S328-dna, "their[plants and animals] DNA"), arg(E5S328-resemble, A4S328-closely), isa(A4S328-closely, "closely") -> cause(A17S328-dna, E5S328-resemble).
english(barrons.rule875, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule875, "EXAMPLE(Plant, Parent), Plant = 'Plants', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA'.").
barrons.rule875:: isa(A1S328-plant, "Plants") -> example(A1S328-plant, A7S328-parent), because_of(A7S328-parent, A17S328-dna), isa(A17S328-dna, "their[plants and animals] DNA"), isa(A7S328-parent, "their[plants and animals] parents").
english(barrons.rule876, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule876, "EXAMPLE(Plant, Parent), Plant = 'Plants', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA'.").
barrons.rule876:: because_of(A7S328-parent, A17S328-dna), isa(A17S328-dna, "their[plants and animals] DNA"), isa(A7S328-parent, "their[plants and animals] parents") -> example(A1S328-plant, A7S328-parent), isa(A1S328-plant, "Plants").
english(barrons.rule877, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule877, "EXAMPLE(Animal, Parent), Animal = 'animals', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA'.").
barrons.rule877:: isa(A3S328-animal, "animals") -> example(A3S328-animal, A7S328-parent), because_of(A7S328-parent, A17S328-dna), isa(A17S328-dna, "their[plants and animals] DNA"), isa(A7S328-parent, "their[plants and animals] parents").
english(barrons.rule878, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule878, "EXAMPLE(Animal, Parent), Animal = 'animals', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA'.").
barrons.rule878:: because_of(A7S328-parent, A17S328-dna), isa(A17S328-dna, "their[plants and animals] DNA"), isa(A7S328-parent, "their[plants and animals] parents") -> example(A3S328-animal, A7S328-parent), isa(A3S328-animal, "animals").
english(barrons.rule879, "Animals reproduce their[Animals] own kind").
pretty(barrons.rule879, "isa(reproduce, 'reproduce') -> reproduce(Animal, Kind).").
barrons.rule879:: isa(E2S329-reproduce, "reproduce") -> agent(E2S329-reproduce, A1S329-animal), isa(A1S329-animal, "Animals"), object(E2S329-reproduce, A5S329-kind), isa(A5S329-kind, "their[Animals] own kind").
english(barrons.rule880, "Animals reproduce their[Animals] own kind").
pretty(barrons.rule880, "isa(Animal, 'Animals') -> reproduce(Animal, Kind).").
barrons.rule880:: isa(A1S329-animal, "Animals") -> isa(E2S329-reproduce, "reproduce"), agent(E2S329-reproduce, A1S329-animal), object(E2S329-reproduce, A5S329-kind), isa(A5S329-kind, "their[Animals] own kind").
english(barrons.rule881, "Animals reproduce their[Animals] own kind").
pretty(barrons.rule881, "isa(Kind, 'their[Animals] own kind') -> reproduce(Animal, Kind).").
barrons.rule881:: isa(A5S329-kind, "their[Animals] own kind") -> isa(E2S329-reproduce, "reproduce"), agent(E2S329-reproduce, A1S329-animal), isa(A1S329-animal, "Animals"), object(E2S329-reproduce, A5S329-kind).
english(barrons.rule882, "They[Animals] may have different markings but you can tell that they[Animals] are related").
pretty(barrons.rule882, "isa(have, 'have') -> have(Animal, Marking).").
barrons.rule882:: isa(E3S330-have, "have") -> agent(E3S330-have, A1S7-animal), isa(A1S7-animal, "Animals"), object(E3S330-have, A5S330-marking), isa(A5S330-marking, "different markings").
english(barrons.rule883, "They[Animals] may have different markings but you can tell that they[Animals] are related").
pretty(barrons.rule883, "isa(Animal, 'Animals') -> have(Animal, Marking).").
barrons.rule883:: isa(A1S7-animal, "Animals") -> isa(E3S330-have, "have"), agent(E3S330-have, A1S7-animal), object(E3S330-have, A5S330-marking), isa(A5S330-marking, "different markings").
english(barrons.rule884, "They[Animals] may have different markings but you can tell that they[Animals] are related").
pretty(barrons.rule884, "isa(Marking, 'different markings') -> have(Animal, Marking).").
barrons.rule884:: isa(A5S330-marking, "different markings") -> isa(E3S330-have, "have"), agent(E3S330-have, A1S7-animal), isa(A1S7-animal, "Animals"), object(E3S330-have, A5S330-marking).
english(barrons.rule885, "rabbits have rabbits").
pretty(barrons.rule885, "isa(have, 'have') -> have(Rabbit, Rabbit).").
barrons.rule885:: isa(E2S331-have, "have") -> agent(E2S331-have, A1S331-rabbit), isa(A1S331-rabbit, "rabbits"), object(E2S331-have, A3S331-rabbit), isa(A3S331-rabbit, "rabbits").
english(barrons.rule886, "rabbits have rabbits").
pretty(barrons.rule886, "isa(Rabbit, 'rabbits') -> have(Rabbit, Rabbit).").
barrons.rule886:: isa(A1S331-rabbit, "rabbits") -> isa(E2S331-have, "have"), agent(E2S331-have, A1S331-rabbit), object(E2S331-have, A3S331-rabbit), isa(A3S331-rabbit, "rabbits").
english(barrons.rule887, "rabbits have rabbits").
pretty(barrons.rule887, "isa(Rabbit, 'rabbits') -> have(Rabbit, Rabbit).").
barrons.rule887:: isa(A3S331-rabbit, "rabbits") -> isa(E2S331-have, "have"), agent(E2S331-have, A1S331-rabbit), isa(A1S331-rabbit, "rabbits"), object(E2S331-have, A3S331-rabbit).
english(barrons.rule888, "cats have kittens").
pretty(barrons.rule888, "isa(have, 'have') -> have(Cat, Kitten).").
barrons.rule888:: isa(E2S332-have, "have") -> agent(E2S332-have, A1S332-cat), isa(A1S332-cat, "cats"), object(E2S332-have, A3S332-kitten), isa(A3S332-kitten, "kittens").
english(barrons.rule889, "cats have kittens").
pretty(barrons.rule889, "isa(Cat, 'cats') -> have(Cat, Kitten).").
barrons.rule889:: isa(A1S332-cat, "cats") -> isa(E2S332-have, "have"), agent(E2S332-have, A1S332-cat), object(E2S332-have, A3S332-kitten), isa(A3S332-kitten, "kittens").
english(barrons.rule890, "cats have kittens").
pretty(barrons.rule890, "isa(Kitten, 'kittens') -> have(Cat, Kitten).").
barrons.rule890:: isa(A3S332-kitten, "kittens") -> isa(E2S332-have, "have"), agent(E2S332-have, A1S332-cat), isa(A1S332-cat, "cats"), object(E2S332-have, A3S332-kitten).
english(barrons.rule891, "goldfish have guppies").
pretty(barrons.rule891, "isa(have, 'have') -> have(Goldfish, Guppy).").
barrons.rule891:: isa(E2S333-have, "have") -> agent(E2S333-have, A1S333-goldfish), isa(A1S333-goldfish, "goldfish"), object(E2S333-have, A3S333-guppy), isa(A3S333-guppy, "guppies").
english(barrons.rule892, "goldfish have guppies").
pretty(barrons.rule892, "isa(Goldfish, 'goldfish') -> have(Goldfish, Guppy).").
barrons.rule892:: isa(A1S333-goldfish, "goldfish") -> isa(E2S333-have, "have"), agent(E2S333-have, A1S333-goldfish), object(E2S333-have, A3S333-guppy), isa(A3S333-guppy, "guppies").
english(barrons.rule893, "goldfish have guppies").
pretty(barrons.rule893, "isa(Guppy, 'guppies') -> have(Goldfish, Guppy).").
barrons.rule893:: isa(A3S333-guppy, "guppies") -> isa(E2S333-have, "have"), agent(E2S333-have, A1S333-goldfish), isa(A1S333-goldfish, "goldfish"), object(E2S333-have, A3S333-guppy).
english(barrons.rule894, "frogs have tadpoles").
pretty(barrons.rule894, "isa(have, 'have') -> have(Frog, Tadpole).").
barrons.rule894:: isa(E2S334-have, "have") -> agent(E2S334-have, A1S334-frog), isa(A1S334-frog, "frogs"), object(E2S334-have, A3S334-tadpole), isa(A3S334-tadpole, "tadpoles").
english(barrons.rule895, "frogs have tadpoles").
pretty(barrons.rule895, "isa(Frog, 'frogs') -> have(Frog, Tadpole).").
barrons.rule895:: isa(A1S334-frog, "frogs") -> isa(E2S334-have, "have"), agent(E2S334-have, A1S334-frog), object(E2S334-have, A3S334-tadpole), isa(A3S334-tadpole, "tadpoles").
english(barrons.rule896, "frogs have tadpoles").
pretty(barrons.rule896, "isa(Tadpole, 'tadpoles') -> have(Frog, Tadpole).").
barrons.rule896:: isa(A3S334-tadpole, "tadpoles") -> isa(E2S334-have, "have"), agent(E2S334-have, A1S334-frog), isa(A1S334-frog, "frogs"), object(E2S334-have, A3S334-tadpole).
english(barrons.rule897, "dogs have puppies").
pretty(barrons.rule897, "isa(have, 'have') -> have(Dog, Puppy).").
barrons.rule897:: isa(E2S335-have, "have") -> agent(E2S335-have, A1S335-dog), isa(A1S335-dog, "dogs"), object(E2S335-have, A3S335-puppy), isa(A3S335-puppy, "puppies").
english(barrons.rule898, "dogs have puppies").
pretty(barrons.rule898, "isa(Dog, 'dogs') -> have(Dog, Puppy).").
barrons.rule898:: isa(A1S335-dog, "dogs") -> isa(E2S335-have, "have"), agent(E2S335-have, A1S335-dog), object(E2S335-have, A3S335-puppy), isa(A3S335-puppy, "puppies").
english(barrons.rule899, "dogs have puppies").
pretty(barrons.rule899, "isa(Puppy, 'puppies') -> have(Dog, Puppy).").
barrons.rule899:: isa(A3S335-puppy, "puppies") -> isa(E2S335-have, "have"), agent(E2S335-have, A1S335-dog), isa(A1S335-dog, "dogs"), object(E2S335-have, A3S335-puppy).
english(barrons.rule900, "An organism can only have an offspring from their[dogs] own species").
pretty(barrons.rule900, "isa(Species, 'their[dogs] own species') -> have(Organism, Offspring, Only).").
barrons.rule900:: isa(A11S336-species, "their[dogs] own species") -> from(A7S336-offspring, A11S336-species), isa(E5S336-have, "have"), agent(E5S336-have, A2S336-organism), isa(A2S336-organism, "An organism"), object(E5S336-have, A7S336-offspring), isa(A7S336-offspring, "an offspring"), arg(E5S336-have, A4S336-only), isa(A4S336-only, "only").
english(barrons.rule901, "An organism can only have an offspring from their[dogs] own species").
pretty(barrons.rule901, "isa(have, 'have') -> have(Organism, Offspring, Only).").
barrons.rule901:: isa(E5S336-have, "have") -> from(A7S336-offspring, A11S336-species), isa(A11S336-species, "their[dogs] own species"), agent(E5S336-have, A2S336-organism), isa(A2S336-organism, "An organism"), object(E5S336-have, A7S336-offspring), isa(A7S336-offspring, "an offspring"), arg(E5S336-have, A4S336-only), isa(A4S336-only, "only").
english(barrons.rule902, "An organism can only have an offspring from their[dogs] own species").
pretty(barrons.rule902, "isa(Organism, 'An organism') -> have(Organism, Offspring, Only).").
barrons.rule902:: isa(A2S336-organism, "An organism") -> from(A7S336-offspring, A11S336-species), isa(A11S336-species, "their[dogs] own species"), isa(E5S336-have, "have"), agent(E5S336-have, A2S336-organism), object(E5S336-have, A7S336-offspring), isa(A7S336-offspring, "an offspring"), arg(E5S336-have, A4S336-only), isa(A4S336-only, "only").
english(barrons.rule903, "An organism can only have an offspring from their[dogs] own species").
pretty(barrons.rule903, "isa(Offspring, 'an offspring from their[dogs] own species') -> have(Organism, Offspring, Only).").
barrons.rule903:: isa(A7S336-offspring, "an offspring") -> from(A7S336-offspring, A11S336-species), isa(A11S336-species, "their[dogs] own species"), isa(E5S336-have, "have"), agent(E5S336-have, A2S336-organism), isa(A2S336-organism, "An organism"), object(E5S336-have, A7S336-offspring), arg(E5S336-have, A4S336-only), isa(A4S336-only, "only").
english(barrons.rule904, "An organism can only have an offspring from their[dogs] own species").
pretty(barrons.rule904, "isa(Only, 'only') -> have(Organism, Offspring, Only).").
barrons.rule904:: isa(A4S336-only, "only") -> from(A7S336-offspring, A11S336-species), isa(A11S336-species, "their[dogs] own species"), isa(E5S336-have, "have"), agent(E5S336-have, A2S336-organism), isa(A2S336-organism, "An organism"), object(E5S336-have, A7S336-offspring), isa(A7S336-offspring, "an offspring"), arg(E5S336-have, A4S336-only).
english(barrons.rule905, "Dogs can not have kittens and rabbits can not have guppies").
pretty(barrons.rule905, "isa(not have, 'not have') -> not have(Dog, Kitten).").
barrons.rule905:: isa(E4S337-have, "not have") -> agent(E4S337-have, A1S337-dog), isa(A1S337-dog, "Dogs"), object(E4S337-have, A5S337-kitten), isa(A5S337-kitten, "kittens").
english(barrons.rule906, "Dogs can not have kittens and rabbits can not have guppies").
pretty(barrons.rule906, "isa(Dog, 'Dogs') -> not have(Dog, Kitten).").
barrons.rule906:: isa(A1S337-dog, "Dogs") -> isa(E4S337-have, "not have"), agent(E4S337-have, A1S337-dog), object(E4S337-have, A5S337-kitten), isa(A5S337-kitten, "kittens").
english(barrons.rule907, "Dogs can not have kittens and rabbits can not have guppies").
pretty(barrons.rule907, "isa(Kitten, 'kittens') -> not have(Dog, Kitten).").
barrons.rule907:: isa(A5S337-kitten, "kittens") -> isa(E4S337-have, "not have"), agent(E4S337-have, A1S337-dog), isa(A1S337-dog, "Dogs"), object(E4S337-have, A5S337-kitten).
english(barrons.rule908, "For example if you fall and get a deep cut that leaves a scar you would not pass the scar to your offspring").
pretty(barrons.rule908, "isa(not pass, 'not pass') -> not pass_for(You, Scar, Fall, Get, Example, to(Offspring)).").
barrons.rule908:: isa(E20S339-pass, "not pass") -> agent(E20S339-pass, A17S339-you), isa(A17S339-you, "you"), object(E20S339-pass, A22S339-scar), isa(A22S339-scar, "the scar"), for(E20S339-pass, A2S339-example), isa(A2S339-example, "example"), to(E20S339-pass, A25S339-offspring), isa(A25S339-offspring, "your offspring"), arg(E20S339-pass, A6S339-fall), isa(A6S339-fall, "if you fall a deep cut that leaves a scar"), arg(E20S339-pass, A8S339-get), isa(A8S339-get, "get").
english(barrons.rule909, "For example if you fall and get a deep cut that leaves a scar you would not pass the scar to your offspring").
pretty(barrons.rule909, "isa(You, 'you') -> not pass_for(You, Scar, Fall, Get, Example, to(Offspring)).").
barrons.rule909:: isa(A17S339-you, "you") -> isa(E20S339-pass, "not pass"), agent(E20S339-pass, A17S339-you), object(E20S339-pass, A22S339-scar), isa(A22S339-scar, "the scar"), for(E20S339-pass, A2S339-example), isa(A2S339-example, "example"), to(E20S339-pass, A25S339-offspring), isa(A25S339-offspring, "your offspring"), arg(E20S339-pass, A6S339-fall), isa(A6S339-fall, "if you fall a deep cut that leaves a scar"), arg(E20S339-pass, A8S339-get), isa(A8S339-get, "get").
english(barrons.rule910, "For example if you fall and get a deep cut that leaves a scar you would not pass the scar to your offspring").
pretty(barrons.rule910, "isa(Scar, 'the scar') -> not pass_for(You, Scar, Fall, Get, Example, to(Offspring)).").
barrons.rule910:: isa(A22S339-scar, "the scar") -> isa(E20S339-pass, "not pass"), agent(E20S339-pass, A17S339-you), isa(A17S339-you, "you"), object(E20S339-pass, A22S339-scar), for(E20S339-pass, A2S339-example), isa(A2S339-example, "example"), to(E20S339-pass, A25S339-offspring), isa(A25S339-offspring, "your offspring"), arg(E20S339-pass, A6S339-fall), isa(A6S339-fall, "if you fall a deep cut that leaves a scar"), arg(E20S339-pass, A8S339-get), isa(A8S339-get, "get").
english(barrons.rule911, "For example if you fall and get a deep cut that leaves a scar you would not pass the scar to your offspring").
pretty(barrons.rule911, "isa(Example, 'example') -> not pass_for(You, Scar, Fall, Get, Example, to(Offspring)).").
barrons.rule911:: isa(A2S339-example, "example") -> isa(E20S339-pass, "not pass"), agent(E20S339-pass, A17S339-you), isa(A17S339-you, "you"), object(E20S339-pass, A22S339-scar), isa(A22S339-scar, "the scar"), for(E20S339-pass, A2S339-example), to(E20S339-pass, A25S339-offspring), isa(A25S339-offspring, "your offspring"), arg(E20S339-pass, A6S339-fall), isa(A6S339-fall, "if you fall a deep cut that leaves a scar"), arg(E20S339-pass, A8S339-get), isa(A8S339-get, "get").
english(barrons.rule912, "For example if you fall and get a deep cut that leaves a scar you would not pass the scar to your offspring").
pretty(barrons.rule912, "isa(Offspring, 'your offspring') -> not pass_for(You, Scar, Fall, Get, Example, to(Offspring)).").
barrons.rule912:: isa(A25S339-offspring, "your offspring") -> isa(E20S339-pass, "not pass"), agent(E20S339-pass, A17S339-you), isa(A17S339-you, "you"), object(E20S339-pass, A22S339-scar), isa(A22S339-scar, "the scar"), for(E20S339-pass, A2S339-example), isa(A2S339-example, "example"), to(E20S339-pass, A25S339-offspring), arg(E20S339-pass, A6S339-fall), isa(A6S339-fall, "if you fall a deep cut that leaves a scar"), arg(E20S339-pass, A8S339-get), isa(A8S339-get, "get").
english(barrons.rule913, "For example if you fall and get a deep cut that leaves a scar you would not pass the scar to your offspring").
pretty(barrons.rule913, "isa(Fall, 'if fall a deep cut that leaves a scar') -> not pass_for(You, Scar, Fall, Get, Example, to(Offspring)).").
barrons.rule913:: isa(A6S339-fall, "if you fall a deep cut that leaves a scar") -> isa(E20S339-pass, "not pass"), agent(E20S339-pass, A17S339-you), isa(A17S339-you, "you"), object(E20S339-pass, A22S339-scar), isa(A22S339-scar, "the scar"), for(E20S339-pass, A2S339-example), isa(A2S339-example, "example"), to(E20S339-pass, A25S339-offspring), isa(A25S339-offspring, "your offspring"), arg(E20S339-pass, A6S339-fall), arg(E20S339-pass, A8S339-get), isa(A8S339-get, "get").
english(barrons.rule914, "For example if you fall and get a deep cut that leaves a scar you would not pass the scar to your offspring").
pretty(barrons.rule914, "isa(Get, 'get') -> not pass_for(You, Scar, Fall, Get, Example, to(Offspring)).").
barrons.rule914:: isa(A8S339-get, "get") -> isa(E20S339-pass, "not pass"), agent(E20S339-pass, A17S339-you), isa(A17S339-you, "you"), object(E20S339-pass, A22S339-scar), isa(A22S339-scar, "the scar"), for(E20S339-pass, A2S339-example), isa(A2S339-example, "example"), to(E20S339-pass, A25S339-offspring), isa(A25S339-offspring, "your offspring"), arg(E20S339-pass, A6S339-fall), isa(A6S339-fall, "if you fall a deep cut that leaves a scar"), arg(E20S339-pass, A8S339-get).
english(barrons.rule915, "These are not traits from your parents").
pretty(barrons.rule915, "EXAMPLE(These, Trait), These = 'These', Trait = 'not traits from your parents'.").
barrons.rule915:: isa(A1S341-these, "These") -> example(A1S341-these, A4S341-trait), from(A4S341-trait, A7S341-parent), isa(A7S341-parent, "your parents"), isa(A4S341-trait, "not traits").
english(barrons.rule916, "These are not traits from your parents").
pretty(barrons.rule916, "EXAMPLE(These, Trait), These = 'These', Trait = 'not traits from your parents'.").
barrons.rule916:: from(A4S341-trait, A7S341-parent), isa(A7S341-parent, "your parents"), isa(A4S341-trait, "not traits") -> example(A1S341-these, A4S341-trait), isa(A1S341-these, "These").
english(barrons.rule917, "You can not pass these traits to your offspring through your genes").
pretty(barrons.rule917, "isa(not pass, 'not pass') -> not pass_to(You, Trait, Offspring, through(Gene)).").
barrons.rule917:: isa(E4S343-pass, "not pass") -> agent(E4S343-pass, A1S343-you), isa(A1S343-you, "You"), object(E4S343-pass, A6S343-trait), isa(A6S343-trait, "these traits"), to(E4S343-pass, A9S343-offspring), isa(A9S343-offspring, "your offspring"), through(E4S343-pass, A12S343-gene), isa(A12S343-gene, "your genes").
english(barrons.rule918, "You can not pass these traits to your offspring through your genes").
pretty(barrons.rule918, "isa(You, 'You') -> not pass_to(You, Trait, Offspring, through(Gene)).").
barrons.rule918:: isa(A1S343-you, "You") -> isa(E4S343-pass, "not pass"), agent(E4S343-pass, A1S343-you), object(E4S343-pass, A6S343-trait), isa(A6S343-trait, "these traits"), to(E4S343-pass, A9S343-offspring), isa(A9S343-offspring, "your offspring"), through(E4S343-pass, A12S343-gene), isa(A12S343-gene, "your genes").
english(barrons.rule919, "You can not pass these traits to your offspring through your genes").
pretty(barrons.rule919, "isa(Trait, 'these traits') -> not pass_to(You, Trait, Offspring, through(Gene)).").
barrons.rule919:: isa(A6S343-trait, "these traits") -> isa(E4S343-pass, "not pass"), agent(E4S343-pass, A1S343-you), isa(A1S343-you, "You"), object(E4S343-pass, A6S343-trait), to(E4S343-pass, A9S343-offspring), isa(A9S343-offspring, "your offspring"), through(E4S343-pass, A12S343-gene), isa(A12S343-gene, "your genes").
english(barrons.rule920, "You can not pass these traits to your offspring through your genes").
pretty(barrons.rule920, "isa(Offspring, 'your offspring') -> not pass_to(You, Trait, Offspring, through(Gene)).").
barrons.rule920:: isa(A9S343-offspring, "your offspring") -> isa(E4S343-pass, "not pass"), agent(E4S343-pass, A1S343-you), isa(A1S343-you, "You"), object(E4S343-pass, A6S343-trait), isa(A6S343-trait, "these traits"), to(E4S343-pass, A9S343-offspring), through(E4S343-pass, A12S343-gene), isa(A12S343-gene, "your genes").
english(barrons.rule921, "You can not pass these traits to your offspring through your genes").
pretty(barrons.rule921, "isa(Gene, 'your genes') -> not pass_to(You, Trait, Offspring, through(Gene)).").
barrons.rule921:: isa(A12S343-gene, "your genes") -> isa(E4S343-pass, "not pass"), agent(E4S343-pass, A1S343-you), isa(A1S343-you, "You"), object(E4S343-pass, A6S343-trait), isa(A6S343-trait, "these traits"), to(E4S343-pass, A9S343-offspring), isa(A9S343-offspring, "your offspring"), through(E4S343-pass, A12S343-gene).
english(barrons.rule922, "You could teach them[their traits] how to do each behavior but they[their traits] are not born knowing how to do them[their traits]").
pretty(barrons.rule922, "isa(teach, 'teach') -> teach(You, Trait, Do).").
barrons.rule922:: isa(E3S344-teach, "teach") -> agent(E3S344-teach, A1S344-you), isa(A1S344-you, "You"), object(E3S344-teach, A9S307-trait), isa(A9S307-trait, "their[pea plants] traits"), arg(E3S344-teach, A7S344-do), isa(A7S344-do, "how to do each behavior").
english(barrons.rule923, "You could teach them[their traits] how to do each behavior but they[their traits] are not born knowing how to do them[their traits]").
pretty(barrons.rule923, "isa(You, 'You') -> teach(You, Trait, Do).").
barrons.rule923:: isa(A1S344-you, "You") -> isa(E3S344-teach, "teach"), agent(E3S344-teach, A1S344-you), object(E3S344-teach, A9S307-trait), isa(A9S307-trait, "their[pea plants] traits"), arg(E3S344-teach, A7S344-do), isa(A7S344-do, "how to do each behavior").
english(barrons.rule924, "You could teach them[their traits] how to do each behavior but they[their traits] are not born knowing how to do them[their traits]").
pretty(barrons.rule924, "isa(Trait, 'their[pea plants] traits') -> teach(You, Trait, Do).").
barrons.rule924:: isa(A9S307-trait, "their[pea plants] traits") -> isa(E3S344-teach, "teach"), agent(E3S344-teach, A1S344-you), isa(A1S344-you, "You"), object(E3S344-teach, A9S307-trait), arg(E3S344-teach, A7S344-do), isa(A7S344-do, "how to do each behavior").
english(barrons.rule925, "You could teach them[their traits] how to do each behavior but they[their traits] are not born knowing how to do them[their traits]").
pretty(barrons.rule925, "isa(Do, 'do each behavior') -> teach(You, Trait, Do).").
barrons.rule925:: isa(A7S344-do, "how to do each behavior") -> isa(E3S344-teach, "teach"), agent(E3S344-teach, A1S344-you), isa(A1S344-you, "You"), object(E3S344-teach, A9S307-trait), isa(A9S307-trait, "their[pea plants] traits"), arg(E3S344-teach, A7S344-do).
english(barrons.rule926, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule926, "EFFECT(eat(Human, Food), grow(Human)), Human = 'humans', Food = 'healthy foods', Human = 'humans'.").
barrons.rule926:: isa(E17S346-eat, "eat"), agent(E17S346-eat, A11S27-human), isa(A11S27-human, "humans"), object(E17S346-eat, A19S346-food), isa(A19S346-food, "healthy foods") -> effect(E17S346-eat, E6S346-grow), isa(E6S346-grow, "grow"), agent(E6S346-grow, A4S346-human), isa(A4S346-human, "humans").
english(barrons.rule927, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule927, "EFFECT(eat(Human, Food), grow(Human)), Human = 'humans', Food = 'healthy foods', Human = 'humans'.").
barrons.rule927:: isa(E6S346-grow, "grow"), agent(E6S346-grow, A4S346-human), isa(A4S346-human, "humans") -> effect(E17S346-eat, E6S346-grow), isa(E17S346-eat, "eat"), agent(E17S346-eat, A11S27-human), isa(A11S27-human, "humans"), object(E17S346-eat, A19S346-food), isa(A19S346-food, "healthy foods").
english(barrons.rule928, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule928, "EFFECT(eat(Human, Food), have(Human, Energy)), Human = 'humans', Food = 'healthy foods', Human = 'humans', Energy = 'energy'.").
barrons.rule928:: isa(E17S346-eat, "eat"), agent(E17S346-eat, A11S27-human), isa(A11S27-human, "humans"), object(E17S346-eat, A19S346-food), isa(A19S346-food, "healthy foods") -> effect(E17S346-eat, E8S346-have), isa(E8S346-have, "have"), agent(E8S346-have, A4S346-human), isa(A4S346-human, "humans"), object(E8S346-have, A9S346-energy), isa(A9S346-energy, "energy").
english(barrons.rule929, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule929, "EFFECT(eat(Human, Food), have(Human, Energy)), Human = 'humans', Food = 'healthy foods', Human = 'humans', Energy = 'energy'.").
barrons.rule929:: isa(E8S346-have, "have"), agent(E8S346-have, A4S346-human), isa(A4S346-human, "humans"), object(E8S346-have, A9S346-energy), isa(A9S346-energy, "energy") -> effect(E17S346-eat, E8S346-have), isa(E17S346-eat, "eat"), agent(E17S346-eat, A11S27-human), isa(A11S27-human, "humans"), object(E17S346-eat, A19S346-food), isa(A19S346-food, "healthy foods").
english(barrons.rule930, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule930, "EFFECT(eat(Human, Food), be(Human, Healthy)), Human = 'humans', Food = 'healthy foods', Human = 'humans', Healthy = 'healthy'.").
barrons.rule930:: isa(E17S346-eat, "eat"), agent(E17S346-eat, A11S27-human), isa(A11S27-human, "humans"), object(E17S346-eat, A19S346-food), isa(A19S346-food, "healthy foods") -> effect(E17S346-eat, E12S346-be), isa(E12S346-be, "be"), agent(E12S346-be, A4S346-human), isa(A4S346-human, "humans"), object(E12S346-be, A13S346-healthy), isa(A13S346-healthy, "healthy").
english(barrons.rule931, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule931, "EFFECT(eat(Human, Food), be(Human, Healthy)), Human = 'humans', Food = 'healthy foods', Human = 'humans', Healthy = 'healthy'.").
barrons.rule931:: isa(E12S346-be, "be"), agent(E12S346-be, A4S346-human), isa(A4S346-human, "humans"), object(E12S346-be, A13S346-healthy), isa(A13S346-healthy, "healthy") -> effect(E17S346-eat, E12S346-be), isa(E17S346-eat, "eat"), agent(E17S346-eat, A11S27-human), isa(A11S27-human, "humans"), object(E17S346-eat, A19S346-food), isa(A19S346-food, "healthy foods").
english(barrons.rule932, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule932, "EFFECT(exercise(Human), grow(Human)), Human = 'humans', Human = 'humans'.").
barrons.rule932:: isa(E21S346-exercise, "exercise"), agent(E21S346-exercise, A11S27-human), isa(A11S27-human, "humans") -> effect(E21S346-exercise, E6S346-grow), isa(E6S346-grow, "grow"), agent(E6S346-grow, A4S346-human), isa(A4S346-human, "humans").
english(barrons.rule933, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule933, "EFFECT(exercise(Human), grow(Human)), Human = 'humans', Human = 'humans'.").
barrons.rule933:: isa(E6S346-grow, "grow"), agent(E6S346-grow, A4S346-human), isa(A4S346-human, "humans") -> effect(E21S346-exercise, E6S346-grow), isa(E21S346-exercise, "exercise"), agent(E21S346-exercise, A11S27-human), isa(A11S27-human, "humans").
english(barrons.rule934, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule934, "EFFECT(exercise(Human), have(Human, Energy)), Human = 'humans', Human = 'humans', Energy = 'energy'.").
barrons.rule934:: isa(E21S346-exercise, "exercise"), agent(E21S346-exercise, A11S27-human), isa(A11S27-human, "humans") -> effect(E21S346-exercise, E8S346-have), isa(E8S346-have, "have"), agent(E8S346-have, A4S346-human), isa(A4S346-human, "humans"), object(E8S346-have, A9S346-energy), isa(A9S346-energy, "energy").
english(barrons.rule935, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule935, "EFFECT(exercise(Human), have(Human, Energy)), Human = 'humans', Human = 'humans', Energy = 'energy'.").
barrons.rule935:: isa(E8S346-have, "have"), agent(E8S346-have, A4S346-human), isa(A4S346-human, "humans"), object(E8S346-have, A9S346-energy), isa(A9S346-energy, "energy") -> effect(E21S346-exercise, E8S346-have), isa(E21S346-exercise, "exercise"), agent(E21S346-exercise, A11S27-human), isa(A11S27-human, "humans").
english(barrons.rule936, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule936, "EFFECT(exercise(Human), be(Human, Healthy)), Human = 'humans', Human = 'humans', Healthy = 'healthy'.").
barrons.rule936:: isa(E21S346-exercise, "exercise"), agent(E21S346-exercise, A11S27-human), isa(A11S27-human, "humans") -> effect(E21S346-exercise, E12S346-be), isa(E12S346-be, "be"), agent(E12S346-be, A4S346-human), isa(A4S346-human, "humans"), object(E12S346-be, A13S346-healthy), isa(A13S346-healthy, "healthy").
english(barrons.rule937, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule937, "EFFECT(exercise(Human), be(Human, Healthy)), Human = 'humans', Human = 'humans', Healthy = 'healthy'.").
barrons.rule937:: isa(E12S346-be, "be"), agent(E12S346-be, A4S346-human), isa(A4S346-human, "humans"), object(E12S346-be, A13S346-healthy), isa(A13S346-healthy, "healthy") -> effect(E21S346-exercise, E12S346-be), isa(E21S346-exercise, "exercise"), agent(E21S346-exercise, A11S27-human), isa(A11S27-human, "humans").
english(barrons.rule938, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule938, "EFFECT(get(Human, Rest), grow(Human)), Human = 'humans', Rest = 'regular rest', Human = 'humans'.").
barrons.rule938:: isa(E24S346-get, "get"), agent(E24S346-get, A11S27-human), isa(A11S27-human, "humans"), object(E24S346-get, A26S346-rest), isa(A26S346-rest, "regular rest") -> effect(E24S346-get, E6S346-grow), isa(E6S346-grow, "grow"), agent(E6S346-grow, A4S346-human), isa(A4S346-human, "humans").
english(barrons.rule939, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule939, "EFFECT(get(Human, Rest), grow(Human)), Human = 'humans', Rest = 'regular rest', Human = 'humans'.").
barrons.rule939:: isa(E6S346-grow, "grow"), agent(E6S346-grow, A4S346-human), isa(A4S346-human, "humans") -> effect(E24S346-get, E6S346-grow), isa(E24S346-get, "get"), agent(E24S346-get, A11S27-human), isa(A11S27-human, "humans"), object(E24S346-get, A26S346-rest), isa(A26S346-rest, "regular rest").
english(barrons.rule940, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule940, "EFFECT(get(Human, Rest), have(Human, Energy)), Human = 'humans', Rest = 'regular rest', Human = 'humans', Energy = 'energy'.").
barrons.rule940:: isa(E24S346-get, "get"), agent(E24S346-get, A11S27-human), isa(A11S27-human, "humans"), object(E24S346-get, A26S346-rest), isa(A26S346-rest, "regular rest") -> effect(E24S346-get, E8S346-have), isa(E8S346-have, "have"), agent(E8S346-have, A4S346-human), isa(A4S346-human, "humans"), object(E8S346-have, A9S346-energy), isa(A9S346-energy, "energy").
english(barrons.rule941, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule941, "EFFECT(get(Human, Rest), have(Human, Energy)), Human = 'humans', Rest = 'regular rest', Human = 'humans', Energy = 'energy'.").
barrons.rule941:: isa(E8S346-have, "have"), agent(E8S346-have, A4S346-human), isa(A4S346-human, "humans"), object(E8S346-have, A9S346-energy), isa(A9S346-energy, "energy") -> effect(E24S346-get, E8S346-have), isa(E24S346-get, "get"), agent(E24S346-get, A11S27-human), isa(A11S27-human, "humans"), object(E24S346-get, A26S346-rest), isa(A26S346-rest, "regular rest").
english(barrons.rule942, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule942, "EFFECT(get(Human, Rest), be(Human, Healthy)), Human = 'humans', Rest = 'regular rest', Human = 'humans', Healthy = 'healthy'.").
barrons.rule942:: isa(E24S346-get, "get"), agent(E24S346-get, A11S27-human), isa(A11S27-human, "humans"), object(E24S346-get, A26S346-rest), isa(A26S346-rest, "regular rest") -> effect(E24S346-get, E12S346-be), isa(E12S346-be, "be"), agent(E12S346-be, A4S346-human), isa(A4S346-human, "humans"), object(E12S346-be, A13S346-healthy), isa(A13S346-healthy, "healthy").
english(barrons.rule943, "In order for humans to grow have energy and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule943, "EFFECT(get(Human, Rest), be(Human, Healthy)), Human = 'humans', Rest = 'regular rest', Human = 'humans', Healthy = 'healthy'.").
barrons.rule943:: isa(E12S346-be, "be"), agent(E12S346-be, A4S346-human), isa(A4S346-human, "humans"), object(E12S346-be, A13S346-healthy), isa(A13S346-healthy, "healthy") -> effect(E24S346-get, E12S346-be), isa(E24S346-get, "get"), agent(E24S346-get, A11S27-human), isa(A11S27-human, "humans"), object(E24S346-get, A26S346-rest), isa(A26S346-rest, "regular rest").
english(barrons.rule944, "There are many germs that can be transmitted from touching things and then placing your hands by your face").
pretty(barrons.rule944, "ENABLE(Face, place(Face, Hand)), Face = 'your face', Hand = 'your hands'.").
barrons.rule944:: isa(A19S349-face, "your face") -> enable(A19S349-face, E14S349-place), isa(E14S349-place, "place"), agent(E14S349-place, A19S349-face), object(E14S349-place, A16S349-hand), isa(A16S349-hand, "your hands").
english(barrons.rule945, "There are many germs that can be transmitted from touching things and then placing your hands by your face").
pretty(barrons.rule945, "ENABLE(Face, place(Face, Hand)), Face = 'your face', Hand = 'your hands'.").
barrons.rule945:: isa(E14S349-place, "place"), agent(E14S349-place, A19S349-face), isa(A19S349-face, "your face"), object(E14S349-place, A16S349-hand), isa(A16S349-hand, "your hands") -> enable(A19S349-face, E14S349-place).
english(barrons.rule946, "This is why you need to wash your hands often to remove any harmful germs").
pretty(barrons.rule946, "EFFECT(wash(You, Hand), remove(You, Germ)), You = 'you', Hand = 'your hands', Germ = 'any harmful germs'.").
barrons.rule946:: isa(E7S350-wash, "wash"), agent(E7S350-wash, A4S350-you), isa(A4S350-you, "you"), object(E7S350-wash, A9S350-hand), isa(A9S350-hand, "your hands") -> effect(E7S350-wash, E12S350-remove), isa(E12S350-remove, "remove"), agent(E12S350-remove, A4S350-you), object(E12S350-remove, A15S350-germ), isa(A15S350-germ, "any harmful germs").
english(barrons.rule947, "This is why you need to wash your hands often to remove any harmful germs").
pretty(barrons.rule947, "EFFECT(wash(You, Hand), remove(You, Germ)), You = 'you', Hand = 'your hands', Germ = 'any harmful germs'.").
barrons.rule947:: isa(E12S350-remove, "remove"), agent(E12S350-remove, A4S350-you), isa(A4S350-you, "you"), object(E12S350-remove, A15S350-germ), isa(A15S350-germ, "any harmful germs") -> effect(E7S350-wash, E12S350-remove), isa(E7S350-wash, "wash"), agent(E7S350-wash, A4S350-you), object(E7S350-wash, A9S350-hand), isa(A9S350-hand, "your hands").
english(barrons.rule948, "The body needs to be cleaned regularly to prevent germs and bacteria from growing and making us sick").
pretty(barrons.rule948, "EFFECT(clean(Body, Regularly), prevent_from(Germ, Grow)), Body = 'The body', Regularly = 'regularly', Germ = 'germs', Grow = 'growing'.").
barrons.rule948:: isa(E6S351-clean, "clean"), object(E6S351-clean, A2S351-body), isa(A2S351-body, "The body"), arg(E6S351-clean, A7S351-regularly), isa(A7S351-regularly, "regularly") -> effect(E6S351-clean, E9S351-prevent), isa(E9S351-prevent, "prevent"), object(E9S351-prevent, A10S351-germ), isa(A10S351-germ, "germs"), from(E9S351-prevent, A14S351-grow), isa(A14S351-grow, "growing").
english(barrons.rule949, "The body needs to be cleaned regularly to prevent germs and bacteria from growing and making us sick").
pretty(barrons.rule949, "EFFECT(clean(Body, Regularly), prevent_from(Germ, Grow)), Body = 'The body', Regularly = 'regularly', Germ = 'germs', Grow = 'growing'.").
barrons.rule949:: isa(E9S351-prevent, "prevent"), object(E9S351-prevent, A10S351-germ), isa(A10S351-germ, "germs"), from(E9S351-prevent, A14S351-grow), isa(A14S351-grow, "growing") -> effect(E6S351-clean, E9S351-prevent), isa(E6S351-clean, "clean"), object(E6S351-clean, A2S351-body), isa(A2S351-body, "The body"), arg(E6S351-clean, A7S351-regularly), isa(A7S351-regularly, "regularly").
english(barrons.rule950, "The body needs to be cleaned regularly to prevent germs and bacteria from growing and making us sick").
pretty(barrons.rule950, "EFFECT(clean(Body, Regularly), prevent_from(Bacterium, Grow)), Body = 'The body', Regularly = 'regularly', Bacterium = 'bacteria', Grow = 'growing'.").
barrons.rule950:: isa(E6S351-clean, "clean"), object(E6S351-clean, A2S351-body), isa(A2S351-body, "The body"), arg(E6S351-clean, A7S351-regularly), isa(A7S351-regularly, "regularly") -> effect(E6S351-clean, E9S351-prevent), isa(E9S351-prevent, "prevent"), object(E9S351-prevent, A12S351-bacterium), isa(A12S351-bacterium, "bacteria"), from(E9S351-prevent, A14S351-grow), isa(A14S351-grow, "growing").
english(barrons.rule951, "The body needs to be cleaned regularly to prevent germs and bacteria from growing and making us sick").
pretty(barrons.rule951, "EFFECT(clean(Body, Regularly), prevent_from(Bacterium, Grow)), Body = 'The body', Regularly = 'regularly', Bacterium = 'bacteria', Grow = 'growing'.").
barrons.rule951:: isa(E9S351-prevent, "prevent"), object(E9S351-prevent, A12S351-bacterium), isa(A12S351-bacterium, "bacteria"), from(E9S351-prevent, A14S351-grow), isa(A14S351-grow, "growing") -> effect(E6S351-clean, E9S351-prevent), isa(E6S351-clean, "clean"), object(E6S351-clean, A2S351-body), isa(A2S351-body, "The body"), arg(E6S351-clean, A7S351-regularly), isa(A7S351-regularly, "regularly").
english(barrons.rule952, "Brushing your teeth in the morning and before going to bed is another important part of having good health").
pretty(barrons.rule952, "isa(Have, 'having good health') -> brush_in(Part, Tooth, Morning).").
barrons.rule952:: isa(A17S352-have, "having good health") -> of(A15S352-part, A17S352-have), isa(E1S352-brush, "brush"), agent(E1S352-brush, A15S352-part), isa(A15S352-part, "another important part"), object(E1S352-brush, A3S352-tooth), isa(A3S352-tooth, "your teeth"), in(E1S352-brush, A6S352-morning), isa(A6S352-morning, "the morning").
english(barrons.rule953, "Brushing your teeth in the morning and before going to bed is another important part of having good health").
pretty(barrons.rule953, "isa(brush, 'Brushing') -> brush_in(Part, Tooth, Morning).").
barrons.rule953:: isa(E1S352-brush, "brush") -> of(A15S352-part, A17S352-have), isa(A17S352-have, "having good health"), agent(E1S352-brush, A15S352-part), isa(A15S352-part, "another important part"), object(E1S352-brush, A3S352-tooth), isa(A3S352-tooth, "your teeth"), in(E1S352-brush, A6S352-morning), isa(A6S352-morning, "the morning").
english(barrons.rule954, "Brushing your teeth in the morning and before going to bed is another important part of having good health").
pretty(barrons.rule954, "isa(Part, 'another important part of having good health') -> brush_in(Part, Tooth, Morning).").
barrons.rule954:: isa(A15S352-part, "another important part") -> of(A15S352-part, A17S352-have), isa(A17S352-have, "having good health"), isa(E1S352-brush, "brush"), agent(E1S352-brush, A15S352-part), object(E1S352-brush, A3S352-tooth), isa(A3S352-tooth, "your teeth"), in(E1S352-brush, A6S352-morning), isa(A6S352-morning, "the morning").
english(barrons.rule955, "Brushing your teeth in the morning and before going to bed is another important part of having good health").
pretty(barrons.rule955, "isa(Tooth, 'your teeth') -> brush_in(Part, Tooth, Morning).").
barrons.rule955:: isa(A3S352-tooth, "your teeth") -> of(A15S352-part, A17S352-have), isa(A17S352-have, "having good health"), isa(E1S352-brush, "brush"), agent(E1S352-brush, A15S352-part), isa(A15S352-part, "another important part"), object(E1S352-brush, A3S352-tooth), in(E1S352-brush, A6S352-morning), isa(A6S352-morning, "the morning").
english(barrons.rule956, "Brushing your teeth in the morning and before going to bed is another important part of having good health").
pretty(barrons.rule956, "isa(Morning, 'the morning') -> brush_in(Part, Tooth, Morning).").
barrons.rule956:: isa(A6S352-morning, "the morning") -> of(A15S352-part, A17S352-have), isa(A17S352-have, "having good health"), isa(E1S352-brush, "brush"), agent(E1S352-brush, A15S352-part), isa(A15S352-part, "another important part"), object(E1S352-brush, A3S352-tooth), isa(A3S352-tooth, "your teeth"), in(E1S352-brush, A6S352-morning).
english(barrons.rule957, "Our[us] teeth build up food throughout the day and overnight while we[us] sleep").
pretty(barrons.rule957, "isa(build up, 'build up') -> build up_throughout(Tooth, Food, Sleep, Day, throughout(Overnight)).").
barrons.rule957:: isa(E3S353-build, "build up") -> agent(E3S353-build, A2S353-tooth), isa(A2S353-tooth, "Our[us] teeth"), object(E3S353-build, A5S353-food), isa(A5S353-food, "food"), throughout(E3S353-build, A8S353-day), isa(A8S353-day, "the day"), throughout(E3S353-build, A10S353-overnight), isa(A10S353-overnight, "overnight"), arg(E3S353-build, A13S353-sleep), isa(A13S353-sleep, "while we[us] sleep").
english(barrons.rule958, "Our[us] teeth build up food throughout the day and overnight while we[us] sleep").
pretty(barrons.rule958, "isa(Tooth, 'Our[us] teeth') -> build up_throughout(Tooth, Food, Sleep, Day, throughout(Overnight)).").
barrons.rule958:: isa(A2S353-tooth, "Our[us] teeth") -> isa(E3S353-build, "build up"), agent(E3S353-build, A2S353-tooth), object(E3S353-build, A5S353-food), isa(A5S353-food, "food"), throughout(E3S353-build, A8S353-day), isa(A8S353-day, "the day"), throughout(E3S353-build, A10S353-overnight), isa(A10S353-overnight, "overnight"), arg(E3S353-build, A13S353-sleep), isa(A13S353-sleep, "while we[us] sleep").
english(barrons.rule959, "Our[us] teeth build up food throughout the day and overnight while we[us] sleep").
pretty(barrons.rule959, "isa(Food, 'food') -> build up_throughout(Tooth, Food, Sleep, Day, throughout(Overnight)).").
barrons.rule959:: isa(A5S353-food, "food") -> isa(E3S353-build, "build up"), agent(E3S353-build, A2S353-tooth), isa(A2S353-tooth, "Our[us] teeth"), object(E3S353-build, A5S353-food), throughout(E3S353-build, A8S353-day), isa(A8S353-day, "the day"), throughout(E3S353-build, A10S353-overnight), isa(A10S353-overnight, "overnight"), arg(E3S353-build, A13S353-sleep), isa(A13S353-sleep, "while we[us] sleep").
english(barrons.rule960, "Our[us] teeth build up food throughout the day and overnight while we[us] sleep").
pretty(barrons.rule960, "isa(Day, 'the day') -> build up_throughout(Tooth, Food, Sleep, Day, throughout(Overnight)).").
barrons.rule960:: isa(A8S353-day, "the day") -> isa(E3S353-build, "build up"), agent(E3S353-build, A2S353-tooth), isa(A2S353-tooth, "Our[us] teeth"), object(E3S353-build, A5S353-food), isa(A5S353-food, "food"), throughout(E3S353-build, A8S353-day), throughout(E3S353-build, A10S353-overnight), isa(A10S353-overnight, "overnight"), arg(E3S353-build, A13S353-sleep), isa(A13S353-sleep, "while we[us] sleep").
english(barrons.rule961, "Our[us] teeth build up food throughout the day and overnight while we[us] sleep").
pretty(barrons.rule961, "isa(Overnight, 'overnight') -> build up_throughout(Tooth, Food, Sleep, Day, throughout(Overnight)).").
barrons.rule961:: isa(A10S353-overnight, "overnight") -> isa(E3S353-build, "build up"), agent(E3S353-build, A2S353-tooth), isa(A2S353-tooth, "Our[us] teeth"), object(E3S353-build, A5S353-food), isa(A5S353-food, "food"), throughout(E3S353-build, A8S353-day), isa(A8S353-day, "the day"), throughout(E3S353-build, A10S353-overnight), arg(E3S353-build, A13S353-sleep), isa(A13S353-sleep, "while we[us] sleep").
english(barrons.rule962, "Our[us] teeth build up food throughout the day and overnight while we[us] sleep").
pretty(barrons.rule962, "isa(Sleep, 'while sleep') -> build up_throughout(Tooth, Food, Sleep, Day, throughout(Overnight)).").
barrons.rule962:: isa(A13S353-sleep, "while we[us] sleep") -> isa(E3S353-build, "build up"), agent(E3S353-build, A2S353-tooth), isa(A2S353-tooth, "Our[us] teeth"), object(E3S353-build, A5S353-food), isa(A5S353-food, "food"), throughout(E3S353-build, A8S353-day), isa(A8S353-day, "the day"), throughout(E3S353-build, A10S353-overnight), isa(A10S353-overnight, "overnight"), arg(E3S353-build, A13S353-sleep).
english(barrons.rule963, "Brushing our[us] teeth removes the food and helps keep them[the teeth and tongue] strong").
pretty(barrons.rule963, "EFFECT(remove(Food), keep(Strong)), Food = 'the food', Strong = 'strong'.").
barrons.rule963:: isa(E4S354-remove, "remove"), object(E4S354-remove, A6S354-food), isa(A6S354-food, "the food") -> effect(E4S354-remove, E9S354-keep), isa(E9S354-keep, "keep"), arg(E9S354-keep, A11S354-strong), isa(A11S354-strong, "them[the teeth and tongue] strong").
english(barrons.rule964, "Brushing our[us] teeth removes the food and helps keep them[the teeth and tongue] strong").
pretty(barrons.rule964, "EFFECT(remove(Food), keep(Strong)), Food = 'the food', Strong = 'strong'.").
barrons.rule964:: isa(E9S354-keep, "keep"), arg(E9S354-keep, A11S354-strong), isa(A11S354-strong, "them[the teeth and tongue] strong") -> effect(E4S354-remove, E9S354-keep), isa(E4S354-remove, "remove"), object(E4S354-remove, A6S354-food), isa(A6S354-food, "the food").
english(barrons.rule965, "Brushing our[us] teeth removes the food and helps keep them[the teeth and tongue] strong").
pretty(barrons.rule965, "EFFECT(brush(Tooth), keep(Strong)), Tooth = 'our[us] teeth', Strong = 'strong'.").
barrons.rule965:: isa(E1S354-brush, "brush"), object(E1S354-brush, A3S354-tooth), isa(A3S354-tooth, "our[us] teeth") -> effect(E1S354-brush, E9S354-keep), isa(E9S354-keep, "keep"), arg(E9S354-keep, A11S354-strong), isa(A11S354-strong, "them[the teeth and tongue] strong").
english(barrons.rule966, "Brushing our[us] teeth removes the food and helps keep them[the teeth and tongue] strong").
pretty(barrons.rule966, "EFFECT(brush(Tooth), keep(Strong)), Tooth = 'our[us] teeth', Strong = 'strong'.").
barrons.rule966:: isa(E9S354-keep, "keep"), arg(E9S354-keep, A11S354-strong), isa(A11S354-strong, "them[the teeth and tongue] strong") -> effect(E1S354-brush, E9S354-keep), isa(E1S354-brush, "brush"), object(E1S354-brush, A3S354-tooth), isa(A3S354-tooth, "our[us] teeth").
english(barrons.rule967, "If you get a cut it must be cleaned to prevent any bacteria from creating an infection disease").
pretty(barrons.rule967, "REQUIREMENT(clean(It), prevent_from(Bacterium, Create)), It = 'it', Bacterium = 'any bacteria', Create = 'creating an infection disease'.").
barrons.rule967:: isa(E9S356-clean, "clean"), object(E9S356-clean, A6S356-it), isa(A6S356-it, "it") -> requirement(E9S356-clean, E11S356-prevent), isa(E11S356-prevent, "prevent"), object(E11S356-prevent, A13S356-bacterium), isa(A13S356-bacterium, "any bacteria"), from(E11S356-prevent, A15S356-create), isa(A15S356-create, "creating an infection disease").
english(barrons.rule968, "If you get a cut it must be cleaned to prevent any bacteria from creating an infection disease").
pretty(barrons.rule968, "REQUIREMENT(clean(It), prevent_from(Bacterium, Create)), It = 'it', Bacterium = 'any bacteria', Create = 'creating an infection disease'.").
barrons.rule968:: isa(E11S356-prevent, "prevent"), object(E11S356-prevent, A13S356-bacterium), isa(A13S356-bacterium, "any bacteria"), from(E11S356-prevent, A15S356-create), isa(A15S356-create, "creating an infection disease") -> requirement(E9S356-clean, E11S356-prevent), isa(E9S356-clean, "clean"), object(E9S356-clean, A6S356-it), isa(A6S356-it, "it").
english(barrons.rule969, "If you get a cut it must be cleaned to prevent any bacteria from creating an infection disease").
pretty(barrons.rule969, "EFFECT(get(You, Cut), clean(It)), You = 'you', Cut = 'a cut', It = 'it'.").
barrons.rule969:: isa(E3S356-get, "get"), agent(E3S356-get, A2S356-you), isa(A2S356-you, "you"), object(E3S356-get, A5S356-cut), isa(A5S356-cut, "a cut") -> effect(E3S356-get, E9S356-clean), isa(E9S356-clean, "clean"), object(E9S356-clean, A6S356-it), isa(A6S356-it, "it").
english(barrons.rule970, "If you get a cut it must be cleaned to prevent any bacteria from creating an infection disease").
pretty(barrons.rule970, "EFFECT(get(You, Cut), clean(It)), You = 'you', Cut = 'a cut', It = 'it'.").
barrons.rule970:: isa(E9S356-clean, "clean"), object(E9S356-clean, A6S356-it), isa(A6S356-it, "it") -> effect(E3S356-get, E9S356-clean), isa(E3S356-get, "get"), agent(E3S356-get, A2S356-you), isa(A2S356-you, "you"), object(E3S356-get, A5S356-cut), isa(A5S356-cut, "a cut").
english(barrons.rule971, "After the wound is cleaned it[the wound] should be covered with a bandage to reduce the chance of getting infected").
pretty(barrons.rule971, "EFFECT(cover_with(Bandage), reduce(Chance)), Bandage = 'a bandage', Chance = 'the chance of getting infected'.").
barrons.rule971:: isa(E9S357-cover, "cover"), with(E9S357-cover, A12S357-bandage), isa(A12S357-bandage, "a bandage") -> effect(E9S357-cover, E14S357-reduce), of(A16S357-chance, A19S357-infected), isa(A19S357-infected, "infected"), isa(E14S357-reduce, "reduce"), object(E14S357-reduce, A16S357-chance), isa(A16S357-chance, "the chance").
english(barrons.rule972, "After the wound is cleaned it[the wound] should be covered with a bandage to reduce the chance of getting infected").
pretty(barrons.rule972, "EFFECT(cover_with(Bandage), reduce(Chance)), Bandage = 'a bandage', Chance = 'the chance of getting infected'.").
barrons.rule972:: of(A16S357-chance, A19S357-infected), isa(A19S357-infected, "infected"), isa(E14S357-reduce, "reduce"), object(E14S357-reduce, A16S357-chance), isa(A16S357-chance, "the chance") -> effect(E9S357-cover, E14S357-reduce), isa(E9S357-cover, "cover"), with(E9S357-cover, A12S357-bandage), isa(A12S357-bandage, "a bandage").
english(barrons.rule973, "You have only one chance to live a healthy life style").
pretty(barrons.rule973, "EFFECT(have(You, Chance), live(You, Style)), You = 'You', Chance = 'one chance', Style = 'a healthy life style'.").
barrons.rule973:: isa(E2S358-have, "have"), agent(E2S358-have, A1S358-you), isa(A1S358-you, "You"), object(E2S358-have, A5S358-chance), isa(A5S358-chance, "one chance") -> effect(E2S358-have, E7S358-live), isa(E7S358-live, "live"), agent(E7S358-live, A1S358-you), object(E7S358-live, A11S358-style), isa(A11S358-style, "a healthy life style").
english(barrons.rule974, "You have only one chance to live a healthy life style").
pretty(barrons.rule974, "EFFECT(have(You, Chance), live(You, Style)), You = 'You', Chance = 'one chance', Style = 'a healthy life style'.").
barrons.rule974:: isa(E7S358-live, "live"), agent(E7S358-live, A1S358-you), isa(A1S358-you, "You"), object(E7S358-live, A11S358-style), isa(A11S358-style, "a healthy life style") -> effect(E2S358-have, E7S358-live), isa(E2S358-have, "have"), agent(E2S358-have, A1S358-you), object(E2S358-have, A5S358-chance), isa(A5S358-chance, "one chance").
english(barrons.rule975, "Because the lungs have to work harder to remove the chemicals the body has to work harder to get the air needed to survive").
pretty(barrons.rule975, "EFFECT(work(Lung, Harder), remove(Lung, Chemical)), Lung = 'the lungs', Harder = 'harder', Chemical = 'the chemicals'.").
barrons.rule975:: isa(E6S362-work, "work"), agent(E6S362-work, A3S362-lung), isa(A3S362-lung, "the lungs"), arg(E6S362-work, A7S362-harder), isa(A7S362-harder, "harder") -> effect(E6S362-work, E9S362-remove), isa(E9S362-remove, "remove"), agent(E9S362-remove, A3S362-lung), object(E9S362-remove, A11S362-chemical), isa(A11S362-chemical, "the chemicals").
english(barrons.rule976, "Because the lungs have to work harder to remove the chemicals the body has to work harder to get the air needed to survive").
pretty(barrons.rule976, "EFFECT(work(Lung, Harder), remove(Lung, Chemical)), Lung = 'the lungs', Harder = 'harder', Chemical = 'the chemicals'.").
barrons.rule976:: isa(E9S362-remove, "remove"), agent(E9S362-remove, A3S362-lung), isa(A3S362-lung, "the lungs"), object(E9S362-remove, A11S362-chemical), isa(A11S362-chemical, "the chemicals") -> effect(E6S362-work, E9S362-remove), isa(E6S362-work, "work"), agent(E6S362-work, A3S362-lung), arg(E6S362-work, A7S362-harder), isa(A7S362-harder, "harder").
english(barrons.rule977, "Because the lungs have to work harder to remove the chemicals the body has to work harder to get the air needed to survive").
pretty(barrons.rule977, "EFFECT(work(Body, Harder), get(Body)), Body = 'the body', Harder = 'harder'.").
barrons.rule977:: isa(E17S362-work, "work"), agent(E17S362-work, A14S362-body), isa(A14S362-body, "the body"), arg(E17S362-work, A18S362-harder), isa(A18S362-harder, "harder") -> effect(E17S362-work, E20S362-get), isa(E20S362-get, "get"), agent(E20S362-get, A14S362-body).
english(barrons.rule978, "Because the lungs have to work harder to remove the chemicals the body has to work harder to get the air needed to survive").
pretty(barrons.rule978, "EFFECT(work(Body, Harder), get(Body)), Body = 'the body', Harder = 'harder'.").
barrons.rule978:: isa(E20S362-get, "get"), agent(E20S362-get, A14S362-body), isa(A14S362-body, "the body") -> effect(E17S362-work, E20S362-get), isa(E17S362-work, "work"), agent(E17S362-work, A14S362-body), arg(E17S362-work, A18S362-harder), isa(A18S362-harder, "harder").
english(barrons.rule979, "The chemicals from smoking can also cause very serious diseases such as lung cancer").
pretty(barrons.rule979, "EXAMPLE(Cancer, Disease), Cancer = 'lung cancer', Disease = 'very serious diseases such as lung cancer'.").
barrons.rule979:: isa(A14S363-cancer, "lung cancer") -> example(A14S363-cancer, A10S363-disease), such_as(A10S363-disease, A14S363-cancer), isa(A10S363-disease, "very serious diseases").
english(barrons.rule980, "The chemicals from smoking can also cause very serious diseases such as lung cancer").
pretty(barrons.rule980, "EXAMPLE(Cancer, Disease), Cancer = 'lung cancer', Disease = 'very serious diseases such as lung cancer'.").
barrons.rule980:: such_as(A10S363-disease, A14S363-cancer), isa(A14S363-cancer, "lung cancer"), isa(A10S363-disease, "very serious diseases") -> example(A14S363-cancer, A10S363-disease).
english(barrons.rule981, "Smoking can also cause skin and teeth to turn an unhealthy color").
pretty(barrons.rule981, "CAUSE(Smoking, turn(Skin, Color)), Smoking = 'Smoking', Skin = 'skin', Color = 'an unhealthy color'.").
barrons.rule981:: isa(A1S364-smoking, "Smoking") -> cause(A1S364-smoking, E9S364-turn), isa(E9S364-turn, "turn"), agent(E9S364-turn, A5S364-skin), isa(A5S364-skin, "skin"), object(E9S364-turn, A12S364-color), isa(A12S364-color, "an unhealthy color").
english(barrons.rule982, "Smoking can also cause skin and teeth to turn an unhealthy color").
pretty(barrons.rule982, "CAUSE(Smoking, turn(Skin, Color)), Smoking = 'Smoking', Skin = 'skin', Color = 'an unhealthy color'.").
barrons.rule982:: isa(E9S364-turn, "turn"), agent(E9S364-turn, A5S364-skin), isa(A5S364-skin, "skin"), object(E9S364-turn, A12S364-color), isa(A12S364-color, "an unhealthy color") -> cause(A1S364-smoking, E9S364-turn), isa(A1S364-smoking, "Smoking").
english(barrons.rule983, "Smoking can also cause skin and teeth to turn an unhealthy color").
pretty(barrons.rule983, "CAUSE(Smoking, turn(Tooth, Color)), Smoking = 'Smoking', Tooth = 'teeth', Color = 'an unhealthy color'.").
barrons.rule983:: isa(A1S364-smoking, "Smoking") -> cause(A1S364-smoking, E9S364-turn), isa(E9S364-turn, "turn"), agent(E9S364-turn, A7S364-tooth), isa(A7S364-tooth, "teeth"), object(E9S364-turn, A12S364-color), isa(A12S364-color, "an unhealthy color").
english(barrons.rule984, "Smoking can also cause skin and teeth to turn an unhealthy color").
pretty(barrons.rule984, "CAUSE(Smoking, turn(Tooth, Color)), Smoking = 'Smoking', Tooth = 'teeth', Color = 'an unhealthy color'.").
barrons.rule984:: isa(E9S364-turn, "turn"), agent(E9S364-turn, A7S364-tooth), isa(A7S364-tooth, "teeth"), object(E9S364-turn, A12S364-color), isa(A12S364-color, "an unhealthy color") -> cause(A1S364-smoking, E9S364-turn), isa(A1S364-smoking, "Smoking").
english(barrons.rule985, "In order for alcohol and drugs to get out of your body the blood takes it[order for alcohol and drugs to get out of your body] to the liver which is the organ that cleans the blood").
pretty(barrons.rule985, "EFFECT(take_to(Blood, Order, Liver), get_out(Blood, Of)), Blood = 'the blood', Order = 'order for alcohol and drugs', Liver = 'the liver', Of = 'of your body'.").
barrons.rule985:: for(A2S366-order, A4S366-alcohol), isa(A4S366-alcohol, "alcohol"), for(A2S366-order, A6S366-drug), isa(A6S366-drug, "drugs"), isa(E15S366-take, "take"), agent(E15S366-take, A14S366-blood), isa(A14S366-blood, "the blood"), object(E15S366-take, A2S366-order), isa(A2S366-order, "order"), to(E15S366-take, A19S366-liver), isa(A19S366-liver, "the liver") -> effect(E15S366-take, E8S366-get), isa(E8S366-get, "get"), agent(E8S366-get, A14S366-blood), out(E8S366-get, A10S366-of), isa(A10S366-of, "of your body").
english(barrons.rule986, "In order for alcohol and drugs to get out of your body the blood takes it[order for alcohol and drugs to get out of your body] to the liver which is the organ that cleans the blood").
pretty(barrons.rule986, "EFFECT(take_to(Blood, Order, Liver), get_out(Blood, Of)), Blood = 'the blood', Order = 'order for alcohol and drugs', Liver = 'the liver', Of = 'of your body'.").
barrons.rule986:: isa(E8S366-get, "get"), agent(E8S366-get, A14S366-blood), isa(A14S366-blood, "the blood"), out(E8S366-get, A10S366-of), isa(A10S366-of, "of your body") -> effect(E15S366-take, E8S366-get), for(A2S366-order, A4S366-alcohol), isa(A4S366-alcohol, "alcohol"), for(A2S366-order, A6S366-drug), isa(A6S366-drug, "drugs"), isa(E15S366-take, "take"), agent(E15S366-take, A14S366-blood), object(E15S366-take, A2S366-order), isa(A2S366-order, "order"), to(E15S366-take, A19S366-liver), isa(A19S366-liver, "the liver").
english(barrons.rule987, "In order for alcohol and drugs to get out of your body the blood takes it[order for alcohol and drugs to get out of your body] to the liver which is the organ that cleans the blood").
pretty(barrons.rule987, "EFFECT(take_to(Blood, Order, Liver), get_out(Blood, Of)), Blood = 'the blood', Order = 'order for alcohol and drugs', Liver = 'the liver', Of = 'of your body'.").
barrons.rule987:: for(A2S366-order, A4S366-alcohol), isa(A4S366-alcohol, "alcohol"), for(A2S366-order, A6S366-drug), isa(A6S366-drug, "drugs"), isa(E15S366-take, "take"), agent(E15S366-take, A14S366-blood), isa(A14S366-blood, "the blood"), object(E15S366-take, A2S366-order), isa(A2S366-order, "order"), to(E15S366-take, A19S366-liver), isa(A19S366-liver, "the liver") -> effect(E15S366-take, E8S366-get), isa(E8S366-get, "get"), agent(E8S366-get, A14S366-blood), out(E8S366-get, A10S366-of), isa(A10S366-of, "of your body").
english(barrons.rule988, "In order for alcohol and drugs to get out of your body the blood takes it[order for alcohol and drugs to get out of your body] to the liver which is the organ that cleans the blood").
pretty(barrons.rule988, "EFFECT(take_to(Blood, Order, Liver), get_out(Blood, Of)), Blood = 'the blood', Order = 'order for alcohol and drugs', Liver = 'the liver', Of = 'of your body'.").
barrons.rule988:: isa(E8S366-get, "get"), agent(E8S366-get, A14S366-blood), isa(A14S366-blood, "the blood"), out(E8S366-get, A10S366-of), isa(A10S366-of, "of your body") -> effect(E15S366-take, E8S366-get), for(A2S366-order, A4S366-alcohol), isa(A4S366-alcohol, "alcohol"), for(A2S366-order, A6S366-drug), isa(A6S366-drug, "drugs"), isa(E15S366-take, "take"), agent(E15S366-take, A14S366-blood), object(E15S366-take, A2S366-order), isa(A2S366-order, "order"), to(E15S366-take, A19S366-liver), isa(A19S366-liver, "the liver").
english(barrons.rule989, "In order for alcohol and drugs to get out of your body the blood takes it[order for alcohol and drugs to get out of your body] to the liver which is the organ that cleans the blood").
pretty(barrons.rule989, "EXAMPLE(Which, clean(Liver, Blood)), Which = 'which', Liver = 'the liver', Blood = 'the blood'.").
barrons.rule989:: isa(A21S366-which, "which") -> example(A21S366-which, E26S366-clean), isa(E26S366-clean, "clean"), agent(E26S366-clean, A19S366-liver), isa(A19S366-liver, "the liver"), object(E26S366-clean, A28S366-blood), isa(A28S366-blood, "the blood").
english(barrons.rule990, "In order for alcohol and drugs to get out of your body the blood takes it[order for alcohol and drugs to get out of your body] to the liver which is the organ that cleans the blood").
pretty(barrons.rule990, "EXAMPLE(Which, clean(Liver, Blood)), Which = 'which', Liver = 'the liver', Blood = 'the blood'.").
barrons.rule990:: isa(E26S366-clean, "clean"), agent(E26S366-clean, A19S366-liver), isa(A19S366-liver, "the liver"), object(E26S366-clean, A28S366-blood), isa(A28S366-blood, "the blood") -> example(A21S366-which, E26S366-clean), isa(A21S366-which, "which").
english(barrons.rule991, "In order for alcohol and drugs to get out of your body the blood takes it[order for alcohol and drugs to get out of your body] to the liver which is the organ that cleans the blood").
pretty(barrons.rule991, "EXAMPLE(Which, clean(Organ, Blood)), Which = 'which', Organ = 'the organ', Blood = 'the blood'.").
barrons.rule991:: isa(A21S366-which, "which") -> example(A21S366-which, A24S366-organ), isa(E26S366-clean, "clean"), agent(E26S366-clean, A24S366-organ), isa(A24S366-organ, "the organ"), object(E26S366-clean, A28S366-blood), isa(A28S366-blood, "the blood"), isa(A21S366-which, A24S366-organ).
english(barrons.rule992, "In order for alcohol and drugs to get out of your body the blood takes it[order for alcohol and drugs to get out of your body] to the liver which is the organ that cleans the blood").
pretty(barrons.rule992, "EXAMPLE(Which, clean(Organ, Blood)), Which = 'which', Organ = 'the organ', Blood = 'the blood'.").
barrons.rule992:: isa(E26S366-clean, "clean"), agent(E26S366-clean, A24S366-organ), isa(A24S366-organ, "the organ"), object(E26S366-clean, A28S366-blood), isa(A28S366-blood, "the blood") -> example(A21S366-which, A24S366-organ), isa(A21S366-which, "which"), isa(A21S366-which, A24S366-organ).
english(barrons.rule993, "In order for alcohol and drugs to get out of your body the blood takes it[order for alcohol and drugs to get out of your body] to the liver which is the organ that cleans the blood").
pretty(barrons.rule993, "EXAMPLE(Which, Organ), Which = 'which', Organ = 'the organ'.").
barrons.rule993:: isa(A21S366-which, "which") -> example(A21S366-which, A24S366-organ), isa(A24S366-organ, "the organ").
english(barrons.rule994, "In order for alcohol and drugs to get out of your body the blood takes it[order for alcohol and drugs to get out of your body] to the liver which is the organ that cleans the blood").
pretty(barrons.rule994, "EXAMPLE(Which, Organ), Which = 'which', Organ = 'the organ'.").
barrons.rule994:: isa(A24S366-organ, "the organ") -> example(A21S366-which, A24S366-organ), isa(A21S366-which, "which").
english(barrons.rule995, "The liver has to work harder to remove these foreign substances").
pretty(barrons.rule995, "EFFECT(work(Liver, Harder), remove(Liver, Substance)), Liver = 'The liver', Harder = 'harder', Substance = 'these foreign substances'.").
barrons.rule995:: isa(E5S367-work, "work"), agent(E5S367-work, A2S367-liver), isa(A2S367-liver, "The liver"), arg(E5S367-work, A6S367-harder), isa(A6S367-harder, "harder") -> effect(E5S367-work, E8S367-remove), isa(E8S367-remove, "remove"), agent(E8S367-remove, A2S367-liver), object(E8S367-remove, A11S367-substance), isa(A11S367-substance, "these foreign substances").
english(barrons.rule996, "The liver has to work harder to remove these foreign substances").
pretty(barrons.rule996, "EFFECT(work(Liver, Harder), remove(Liver, Substance)), Liver = 'The liver', Harder = 'harder', Substance = 'these foreign substances'.").
barrons.rule996:: isa(E8S367-remove, "remove"), agent(E8S367-remove, A2S367-liver), isa(A2S367-liver, "The liver"), object(E8S367-remove, A11S367-substance), isa(A11S367-substance, "these foreign substances") -> effect(E5S367-work, E8S367-remove), isa(E5S367-work, "work"), agent(E5S367-work, A2S367-liver), arg(E5S367-work, A6S367-harder), isa(A6S367-harder, "harder").
english(barrons.rule997, "As a result your body may develop some serious illnesses").
pretty(barrons.rule997, "isa(develop, 'develop') -> develop_as(Body, Illness, Result).").
barrons.rule997:: isa(E8S368-develop, "develop") -> agent(E8S368-develop, A6S368-body), isa(A6S368-body, "your body"), object(E8S368-develop, A11S368-illness), isa(A11S368-illness, "some serious illnesses"), as(E8S368-develop, A3S368-result), isa(A3S368-result, "a result").
english(barrons.rule998, "As a result your body may develop some serious illnesses").
pretty(barrons.rule998, "isa(Body, 'your body') -> develop_as(Body, Illness, Result).").
barrons.rule998:: isa(A6S368-body, "your body") -> isa(E8S368-develop, "develop"), agent(E8S368-develop, A6S368-body), object(E8S368-develop, A11S368-illness), isa(A11S368-illness, "some serious illnesses"), as(E8S368-develop, A3S368-result), isa(A3S368-result, "a result").
english(barrons.rule999, "As a result your body may develop some serious illnesses").
pretty(barrons.rule999, "isa(Illness, 'some serious illnesses') -> develop_as(Body, Illness, Result).").
barrons.rule999:: isa(A11S368-illness, "some serious illnesses") -> isa(E8S368-develop, "develop"), agent(E8S368-develop, A6S368-body), isa(A6S368-body, "your body"), object(E8S368-develop, A11S368-illness), as(E8S368-develop, A3S368-result), isa(A3S368-result, "a result").
english(barrons.rule1000, "As a result your body may develop some serious illnesses").
pretty(barrons.rule1000, "isa(Result, 'a result') -> develop_as(Body, Illness, Result).").
barrons.rule1000:: isa(A3S368-result, "a result") -> isa(E8S368-develop, "develop"), agent(E8S368-develop, A6S368-body), isa(A6S368-body, "your body"), object(E8S368-develop, A11S368-illness), isa(A11S368-illness, "some serious illnesses"), as(E8S368-develop, A3S368-result).
english(barrons.rule1001, "It is important to take in the proper foods and nutrients everyday so that your body").
pretty(barrons.rule1001, "EFFECT(be(It, Important), take in(It, Food)), It = 'It', Important = 'important', Food = 'the proper foods everyday'.").
barrons.rule1001:: isa(E2S370-be, "be"), agent(E2S370-be, A1S370-it), isa(A1S370-it, "It"), object(E2S370-be, A3S370-important), isa(A3S370-important, "important") -> effect(E2S370-be, E5S370-take), isa(E5S370-take, "take in"), agent(E5S370-take, A1S370-it), object(E5S370-take, A9S370-food), isa(A9S370-food, "the proper foods everyday").
english(barrons.rule1002, "It is important to take in the proper foods and nutrients everyday so that your body").
pretty(barrons.rule1002, "EFFECT(be(It, Important), take in(It, Food)), It = 'It', Important = 'important', Food = 'the proper foods everyday'.").
barrons.rule1002:: isa(E5S370-take, "take in"), agent(E5S370-take, A1S370-it), isa(A1S370-it, "It"), object(E5S370-take, A9S370-food), isa(A9S370-food, "the proper foods everyday") -> effect(E2S370-be, E5S370-take), isa(E2S370-be, "be"), agent(E2S370-be, A1S370-it), object(E2S370-be, A3S370-important), isa(A3S370-important, "important").
english(barrons.rule1003, "It is important to take in the proper foods and nutrients everyday so that your body").
pretty(barrons.rule1003, "EFFECT(be(It, Important), take in(It, Nutrient)), It = 'It', Important = 'important', Nutrient = 'nutrients'.").
barrons.rule1003:: isa(E2S370-be, "be"), agent(E2S370-be, A1S370-it), isa(A1S370-it, "It"), object(E2S370-be, A3S370-important), isa(A3S370-important, "important") -> effect(E2S370-be, E5S370-take), isa(E5S370-take, "take in"), agent(E5S370-take, A1S370-it), object(E5S370-take, A11S370-nutrient), isa(A11S370-nutrient, "nutrients").
english(barrons.rule1004, "It is important to take in the proper foods and nutrients everyday so that your body").
pretty(barrons.rule1004, "EFFECT(be(It, Important), take in(It, Nutrient)), It = 'It', Important = 'important', Nutrient = 'nutrients'.").
barrons.rule1004:: isa(E5S370-take, "take in"), agent(E5S370-take, A1S370-it), isa(A1S370-it, "It"), object(E5S370-take, A11S370-nutrient), isa(A11S370-nutrient, "nutrients") -> effect(E2S370-be, E5S370-take), isa(E2S370-be, "be"), agent(E2S370-be, A1S370-it), object(E2S370-be, A3S370-important), isa(A3S370-important, "important").
english(barrons.rule1005, "It is important to take in the proper foods and nutrients everyday so that your body").
pretty(barrons.rule1005, "EFFECT(take in(Food), you body), Food = 'the proper foods everyday'.").
barrons.rule1005:: isa(E5S370-take, "take in"), object(E5S370-take, A9S370-food), isa(A9S370-food, "the proper foods everyday") -> effect(E5S370-take, E16S370-body), isa(E16S370-body, "you body").
english(barrons.rule1006, "It is important to take in the proper foods and nutrients everyday so that your body").
pretty(barrons.rule1006, "EFFECT(take in(Food), you body), Food = 'the proper foods everyday'.").
barrons.rule1006:: isa(E16S370-body, "you body") -> effect(E5S370-take, E16S370-body), isa(E5S370-take, "take in"), object(E5S370-take, A9S370-food), isa(A9S370-food, "the proper foods everyday").
english(barrons.rule1007, "It is important to take in the proper foods and nutrients everyday so that your body").
pretty(barrons.rule1007, "EFFECT(take in(Nutrient), you body), Nutrient = 'nutrients'.").
barrons.rule1007:: isa(E5S370-take, "take in"), object(E5S370-take, A11S370-nutrient), isa(A11S370-nutrient, "nutrients") -> effect(E5S370-take, E16S370-body), isa(E16S370-body, "you body").
english(barrons.rule1008, "It is important to take in the proper foods and nutrients everyday so that your body").
pretty(barrons.rule1008, "EFFECT(take in(Nutrient), you body), Nutrient = 'nutrients'.").
barrons.rule1008:: isa(E16S370-body, "you body") -> effect(E5S370-take, E16S370-body), isa(E5S370-take, "take in"), object(E5S370-take, A11S370-nutrient), isa(A11S370-nutrient, "nutrients").
english(barrons.rule1009, "The MyPyramid is an easy way to plan the foods you are going to eat").
pretty(barrons.rule1009, "EFFECT(plan(You, Food), eat(You)), You = 'you', Food = 'the foods'.").
barrons.rule1009:: isa(E8S379-plan, "plan"), agent(E8S379-plan, A11S379-you), isa(A11S379-you, "you"), object(E8S379-plan, A10S379-food), isa(A10S379-food, "the foods") -> effect(E8S379-plan, E15S379-eat), isa(E15S379-eat, "eat"), agent(E15S379-eat, A11S379-you).
english(barrons.rule1010, "The MyPyramid is an easy way to plan the foods you are going to eat").
pretty(barrons.rule1010, "EFFECT(plan(You, Food), eat(You)), You = 'you', Food = 'the foods'.").
barrons.rule1010:: isa(E15S379-eat, "eat"), agent(E15S379-eat, A11S379-you), isa(A11S379-you, "you") -> effect(E8S379-plan, E15S379-eat), isa(E8S379-plan, "plan"), agent(E8S379-plan, A11S379-you), object(E8S379-plan, A10S379-food), isa(A10S379-food, "the foods").
english(barrons.rule1011, "Each part of the pyramid represents the proper amounts of each type of food that will help you stay healthy").
pretty(barrons.rule1011, "isa(Pyramid, 'the pyramid') -> represent(Part, Amount).").
barrons.rule1011:: isa(A5S380-pyramid, "the pyramid") -> of(A2S380-part, A5S380-pyramid), of(A12S380-type, A14S380-food), isa(A14S380-food, "food"), of(A9S380-amount, A12S380-type), isa(A12S380-type, "each type"), isa(E6S380-represent, "represent"), agent(E6S380-represent, A2S380-part), isa(A2S380-part, "Each part"), object(E6S380-represent, A9S380-amount), isa(A9S380-amount, "the proper amounts").
english(barrons.rule1012, "Each part of the pyramid represents the proper amounts of each type of food that will help you stay healthy").
pretty(barrons.rule1012, "isa(Food, 'food') -> represent(Part, Amount).").
barrons.rule1012:: isa(A14S380-food, "food") -> of(A2S380-part, A5S380-pyramid), isa(A5S380-pyramid, "the pyramid"), of(A12S380-type, A14S380-food), of(A9S380-amount, A12S380-type), isa(A12S380-type, "each type"), isa(E6S380-represent, "represent"), agent(E6S380-represent, A2S380-part), isa(A2S380-part, "Each part"), object(E6S380-represent, A9S380-amount), isa(A9S380-amount, "the proper amounts").
english(barrons.rule1013, "Each part of the pyramid represents the proper amounts of each type of food that will help you stay healthy").
pretty(barrons.rule1013, "isa(Type, 'each type of food') -> represent(Part, Amount).").
barrons.rule1013:: isa(A12S380-type, "each type") -> of(A2S380-part, A5S380-pyramid), isa(A5S380-pyramid, "the pyramid"), of(A12S380-type, A14S380-food), isa(A14S380-food, "food"), of(A9S380-amount, A12S380-type), isa(E6S380-represent, "represent"), agent(E6S380-represent, A2S380-part), isa(A2S380-part, "Each part"), object(E6S380-represent, A9S380-amount), isa(A9S380-amount, "the proper amounts").
english(barrons.rule1014, "Each part of the pyramid represents the proper amounts of each type of food that will help you stay healthy").
pretty(barrons.rule1014, "isa(represent, 'represents') -> represent(Part, Amount).").
barrons.rule1014:: isa(E6S380-represent, "represent") -> of(A2S380-part, A5S380-pyramid), isa(A5S380-pyramid, "the pyramid"), of(A12S380-type, A14S380-food), isa(A14S380-food, "food"), of(A9S380-amount, A12S380-type), isa(A12S380-type, "each type"), agent(E6S380-represent, A2S380-part), isa(A2S380-part, "Each part"), object(E6S380-represent, A9S380-amount), isa(A9S380-amount, "the proper amounts").
english(barrons.rule1015, "Each part of the pyramid represents the proper amounts of each type of food that will help you stay healthy").
pretty(barrons.rule1015, "isa(Part, 'Each part of the pyramid') -> represent(Part, Amount).").
barrons.rule1015:: isa(A2S380-part, "Each part") -> of(A2S380-part, A5S380-pyramid), isa(A5S380-pyramid, "the pyramid"), of(A12S380-type, A14S380-food), isa(A14S380-food, "food"), of(A9S380-amount, A12S380-type), isa(A12S380-type, "each type"), isa(E6S380-represent, "represent"), agent(E6S380-represent, A2S380-part), object(E6S380-represent, A9S380-amount), isa(A9S380-amount, "the proper amounts").
english(barrons.rule1016, "Each part of the pyramid represents the proper amounts of each type of food that will help you stay healthy").
pretty(barrons.rule1016, "isa(Amount, 'the proper amounts of each type of food that will help you stay healthy') -> represent(Part, Amount).").
barrons.rule1016:: isa(A9S380-amount, "the proper amounts") -> of(A2S380-part, A5S380-pyramid), isa(A5S380-pyramid, "the pyramid"), of(A12S380-type, A14S380-food), isa(A14S380-food, "food"), of(A9S380-amount, A12S380-type), isa(A12S380-type, "each type"), isa(E6S380-represent, "represent"), agent(E6S380-represent, A2S380-part), isa(A2S380-part, "Each part"), object(E6S380-represent, A9S380-amount).
english(barrons.rule1017, "Each part of the pyramid represents the proper amounts of each type of food that will help you stay healthy").
pretty(barrons.rule1017, "PURPOSE(Type, stay(You, Healthy)), Type = 'each type of food', You = 'you', Healthy = 'healthy'.").
barrons.rule1017:: of(A12S380-type, A14S380-food), isa(A14S380-food, "food"), isa(A12S380-type, "each type") -> purpose(A12S380-type, E19S380-stay), isa(E19S380-stay, "stay"), agent(E19S380-stay, A18S380-you), isa(A18S380-you, "you"), object(E19S380-stay, A20S380-healthy), isa(A20S380-healthy, "healthy").
english(barrons.rule1018, "Each part of the pyramid represents the proper amounts of each type of food that will help you stay healthy").
pretty(barrons.rule1018, "PURPOSE(Type, stay(You, Healthy)), Type = 'each type of food', You = 'you', Healthy = 'healthy'.").
barrons.rule1018:: isa(E19S380-stay, "stay"), agent(E19S380-stay, A18S380-you), isa(A18S380-you, "you"), object(E19S380-stay, A20S380-healthy), isa(A20S380-healthy, "healthy") -> purpose(A12S380-type, E19S380-stay), of(A12S380-type, A14S380-food), isa(A14S380-food, "food"), isa(A12S380-type, "each type").
english(barrons.rule1019, "When we run jump walk play sports or ride our[we] bike we[we] are exercising").
pretty(barrons.rule1019, "WHEN(exercise(We), run(We)), We = 'we'.").
barrons.rule1019:: isa(E18S382-exercise, "exercise"), agent(E18S382-exercise, A2S382-we), isa(A2S382-we, "we") -> when(E18S382-exercise, E3S382-run), isa(E3S382-run, "run"), agent(E3S382-run, A2S382-we).
english(barrons.rule1020, "When we run jump walk play sports or ride our[we] bike we[we] are exercising").
pretty(barrons.rule1020, "WHEN(exercise(We), run(We)), We = 'we'.").
barrons.rule1020:: isa(E3S382-run, "run"), agent(E3S382-run, A2S382-we), isa(A2S382-we, "we") -> when(E18S382-exercise, E3S382-run), isa(E18S382-exercise, "exercise"), agent(E18S382-exercise, A2S382-we).
english(barrons.rule1021, "When we[we] exercise our[we] body is working hard and moving the nutrients water and air throughout our[we] body").
pretty(barrons.rule1021, "WHEN(work(We, Hard), exercise(We, Body)), We = 'we', Hard = 'hard', Body = 'our[we] body'.").
barrons.rule1021:: isa(E7S384-work, "work"), agent(E7S384-work, A2S382-we), isa(A2S382-we, "we"), arg(E7S384-work, A8S384-hard), isa(A8S384-hard, "hard") -> when(E7S384-work, E3S384-exercise), isa(E3S384-exercise, "exercise"), agent(E3S384-exercise, A2S382-we), object(E3S384-exercise, A5S384-body), isa(A5S384-body, "our[we] body").
english(barrons.rule1022, "When we[we] exercise our[we] body is working hard and moving the nutrients water and air throughout our[we] body").
pretty(barrons.rule1022, "WHEN(work(We, Hard), exercise(We, Body)), We = 'we', Hard = 'hard', Body = 'our[we] body'.").
barrons.rule1022:: isa(E3S384-exercise, "exercise"), agent(E3S384-exercise, A2S382-we), isa(A2S382-we, "we"), object(E3S384-exercise, A5S384-body), isa(A5S384-body, "our[we] body") -> when(E7S384-work, E3S384-exercise), isa(E7S384-work, "work"), agent(E7S384-work, A2S382-we), arg(E7S384-work, A8S384-hard), isa(A8S384-hard, "hard").
english(barrons.rule1023, "Getting enough rest is also an important part of living a healthy life").
pretty(barrons.rule1023, "PART(get(Rest), live(Life)), Rest = 'rest', Life = 'a healthy life'.").
barrons.rule1023:: isa(E1S385-get, "get"), object(E1S385-get, A3S385-rest), isa(A3S385-rest, "rest") -> part(E1S385-get, E10S385-live), isa(E10S385-live, "live"), object(E10S385-live, A13S385-life), isa(A13S385-life, "a healthy life").
english(barrons.rule1024, "Getting enough rest is also an important part of living a healthy life").
pretty(barrons.rule1024, "PART(get(Rest), live(Life)), Rest = 'rest', Life = 'a healthy life'.").
barrons.rule1024:: isa(E10S385-live, "live"), object(E10S385-live, A13S385-life), isa(A13S385-life, "a healthy life") -> part(E1S385-get, E10S385-live), isa(E1S385-get, "get"), object(E1S385-get, A3S385-rest), isa(A3S385-rest, "rest").
english(barrons.rule1025, "Our[we] bodies need time to rest and recover from our[we] busy day").
pretty(barrons.rule1025, "isa(need, 'need') -> need_to(Body, Time, Rest).").
barrons.rule1025:: isa(E3S386-need, "need") -> agent(E3S386-need, A2S386-body), isa(A2S386-body, "Our[we] bodies"), object(E3S386-need, A4S386-time), isa(A4S386-time, "time"), to(E3S386-need, A6S386-rest), isa(A6S386-rest, "rest").
english(barrons.rule1026, "Our[we] bodies need time to rest and recover from our[we] busy day").
pretty(barrons.rule1026, "isa(Body, 'Our[we] bodies') -> need_to(Body, Time, Rest).").
barrons.rule1026:: isa(A2S386-body, "Our[we] bodies") -> isa(E3S386-need, "need"), agent(E3S386-need, A2S386-body), object(E3S386-need, A4S386-time), isa(A4S386-time, "time"), to(E3S386-need, A6S386-rest), isa(A6S386-rest, "rest").
english(barrons.rule1027, "Our[we] bodies need time to rest and recover from our[we] busy day").
pretty(barrons.rule1027, "isa(Time, 'time') -> need_to(Body, Time, Rest).").
barrons.rule1027:: isa(A4S386-time, "time") -> isa(E3S386-need, "need"), agent(E3S386-need, A2S386-body), isa(A2S386-body, "Our[we] bodies"), object(E3S386-need, A4S386-time), to(E3S386-need, A6S386-rest), isa(A6S386-rest, "rest").
english(barrons.rule1028, "Our[we] bodies need time to rest and recover from our[we] busy day").
pretty(barrons.rule1028, "isa(Rest, 'rest') -> need_to(Body, Time, Rest).").
barrons.rule1028:: isa(A6S386-rest, "rest") -> isa(E3S386-need, "need"), agent(E3S386-need, A2S386-body), isa(A2S386-body, "Our[we] bodies"), object(E3S386-need, A4S386-time), isa(A4S386-time, "time"), to(E3S386-need, A6S386-rest).
english(barrons.rule1029, "While we[we] sleep our[we] body gives the cells time to grow and repair").
pretty(barrons.rule1029, "EFFECT(give(Cell, Time), grow), Cell = 'the cells', Time = 'time'.").
barrons.rule1029:: isa(E6S387-give, "give"), object(E6S387-give, A8S387-cell), isa(A8S387-cell, "the cells"), arg(E6S387-give, A9S387-time), isa(A9S387-time, "time") -> effect(E6S387-give, E11S387-grow), isa(E11S387-grow, "grow").
english(barrons.rule1030, "While we[we] sleep our[we] body gives the cells time to grow and repair").
pretty(barrons.rule1030, "EFFECT(give(Cell, Time), grow), Cell = 'the cells', Time = 'time'.").
barrons.rule1030:: isa(E11S387-grow, "grow") -> effect(E6S387-give, E11S387-grow), isa(E6S387-give, "give"), object(E6S387-give, A8S387-cell), isa(A8S387-cell, "the cells"), arg(E6S387-give, A9S387-time), isa(A9S387-time, "time").
english(barrons.rule1031, "While we[we] sleep our[we] body gives the cells time to grow and repair").
pretty(barrons.rule1031, "EFFECT(give(Cell, Time), repair), Cell = 'the cells', Time = 'time'.").
barrons.rule1031:: isa(E6S387-give, "give"), object(E6S387-give, A8S387-cell), isa(A8S387-cell, "the cells"), arg(E6S387-give, A9S387-time), isa(A9S387-time, "time") -> effect(E6S387-give, E13S387-repair), isa(E13S387-repair, "repair").
english(barrons.rule1032, "While we[we] sleep our[we] body gives the cells time to grow and repair").
pretty(barrons.rule1032, "EFFECT(give(Cell, Time), repair), Cell = 'the cells', Time = 'time'.").
barrons.rule1032:: isa(E13S387-repair, "repair") -> effect(E6S387-give, E13S387-repair), isa(E6S387-give, "give"), object(E6S387-give, A8S387-cell), isa(A8S387-cell, "the cells"), arg(E6S387-give, A9S387-time), isa(A9S387-time, "time").
english(barrons.rule1033, "When we[we] get a good night 's sleep we[we] are able to better concentrate in school and find it[to better concentrate in school and find it easier to complete our work] easier to complete our[we] work").
pretty(barrons.rule1033, "EFFECT(find(Concentrate), complete(Concentrate, Work)), Concentrate = 'better concentrate in school', Work = 'our[we] work'.").
barrons.rule1033:: in(A14S388-concentrate, A16S388-school), isa(A16S388-school, "school"), isa(E18S388-find, "find"), agent(E18S388-find, A14S388-concentrate), isa(A14S388-concentrate, "better concentrate") -> effect(E18S388-find, E22S388-complete), isa(E22S388-complete, "complete"), agent(E22S388-complete, A14S388-concentrate), object(E22S388-complete, A24S388-work), isa(A24S388-work, "our[we] work").
english(barrons.rule1034, "When we[we] get a good night 's sleep we[we] are able to better concentrate in school and find it[to better concentrate in school and find it easier to complete our work] easier to complete our[we] work").
pretty(barrons.rule1034, "EFFECT(find(Concentrate), complete(Concentrate, Work)), Concentrate = 'better concentrate in school', Work = 'our[we] work'.").
barrons.rule1034:: in(A14S388-concentrate, A16S388-school), isa(A16S388-school, "school"), isa(E22S388-complete, "complete"), agent(E22S388-complete, A14S388-concentrate), isa(A14S388-concentrate, "better concentrate"), object(E22S388-complete, A24S388-work), isa(A24S388-work, "our[we] work") -> effect(E18S388-find, E22S388-complete), isa(E18S388-find, "find"), agent(E18S388-find, A14S388-concentrate).
english(barrons.rule1035, "When we[we] get a good night 's sleep we[we] are able to better concentrate in school and find it[to better concentrate in school and find it easier to complete our work] easier to complete our[we] work").
pretty(barrons.rule1035, "EFFECT(find(find), complete(find, Work)), find = find, Work = 'our[we] work'.").
barrons.rule1035:: isa(E18S388-find, "find"), agent(E18S388-find, E18S388-find) -> effect(E18S388-find, E22S388-complete), isa(E22S388-complete, "complete"), agent(E22S388-complete, E18S388-find), object(E22S388-complete, A24S388-work), isa(A24S388-work, "our[we] work").
english(barrons.rule1036, "When we[we] get a good night 's sleep we[we] are able to better concentrate in school and find it[to better concentrate in school and find it easier to complete our work] easier to complete our[we] work").
pretty(barrons.rule1036, "EFFECT(find(find), complete(find, Work)), find = find, Work = 'our[we] work'.").
barrons.rule1036:: isa(E22S388-complete, "complete"), agent(E22S388-complete, E18S388-find), isa(E18S388-find, "find"), object(E22S388-complete, A24S388-work), isa(A24S388-work, "our[we] work") -> effect(E18S388-find, E22S388-complete), agent(E18S388-find, E18S388-find).
english(barrons.rule1037, "Ecology is the science that studies the relationships between organisms and their[living things organisms] environments").
pretty(barrons.rule1037, "EXAMPLE(Ecology, study(Science, Relationship)), Ecology = 'Ecology', Science = 'the science', Relationship = 'the relationships between organisms and their[living things organisms] environments'.").
barrons.rule1037:: isa(A1S389-Ecology, "Ecology") -> example(A1S389-Ecology, A4S389-science), between(A8S389-relationship, A10S389-organism), isa(A10S389-organism, "organisms"), between(A8S389-relationship, A13S389-environment), isa(A13S389-environment, "their[living things organisms] environments"), isa(E6S389-study, "study"), agent(E6S389-study, A4S389-science), isa(A4S389-science, "the science"), object(E6S389-study, A8S389-relationship), isa(A8S389-relationship, "the relationships"), isa(A1S389-Ecology, A4S389-science).
english(barrons.rule1038, "Ecology is the science that studies the relationships between organisms and their[living things organisms] environments").
pretty(barrons.rule1038, "EXAMPLE(Ecology, study(Science, Relationship)), Ecology = 'Ecology', Science = 'the science', Relationship = 'the relationships between organisms and their[living things organisms] environments'.").
barrons.rule1038:: between(A8S389-relationship, A10S389-organism), isa(A10S389-organism, "organisms"), between(A8S389-relationship, A13S389-environment), isa(A13S389-environment, "their[living things organisms] environments"), isa(E6S389-study, "study"), agent(E6S389-study, A4S389-science), isa(A4S389-science, "the science"), object(E6S389-study, A8S389-relationship), isa(A8S389-relationship, "the relationships") -> example(A1S389-Ecology, A4S389-science), isa(A1S389-Ecology, "Ecology"), isa(A1S389-Ecology, A4S389-science).
english(barrons.rule1039, "Ecology is the science that studies the relationships between organisms and their[living things organisms] environments").
pretty(barrons.rule1039, "EXAMPLE(Ecology, Science), Ecology = 'Ecology', Science = 'the science'.").
barrons.rule1039:: isa(A1S389-Ecology, "Ecology") -> example(A1S389-Ecology, A4S389-science), isa(A4S389-science, "the science").
english(barrons.rule1040, "Ecology is the science that studies the relationships between organisms and their[living things organisms] environments").
pretty(barrons.rule1040, "EXAMPLE(Ecology, Science), Ecology = 'Ecology', Science = 'the science'.").
barrons.rule1040:: isa(A4S389-science, "the science") -> example(A1S389-Ecology, A4S389-science), isa(A1S389-Ecology, "Ecology").
english(barrons.rule1041, "These interconnected relationships are called ecosystems").
pretty(barrons.rule1041, "EXAMPLE(Relationship, Ecosystem), Relationship = 'These interconnected relationships', Ecosystem = 'ecosystems'.").
barrons.rule1041:: isa(A3S390-relationship, "These interconnected relationships") -> example(A3S390-relationship, A6S390-ecosystem), isa(A6S390-ecosystem, "ecosystems").
english(barrons.rule1042, "These interconnected relationships are called ecosystems").
pretty(barrons.rule1042, "EXAMPLE(Relationship, Ecosystem), Relationship = 'These interconnected relationships', Ecosystem = 'ecosystems'.").
barrons.rule1042:: isa(A6S390-ecosystem, "ecosystems") -> example(A3S390-relationship, A6S390-ecosystem), isa(A3S390-relationship, "These interconnected relationships").
english(barrons.rule1043, "An ecosystem is a community of all the living and nonliving parts of an environment").
pretty(barrons.rule1043, "EXAMPLE(Ecosystem, Community), Ecosystem = 'An ecosystem', Community = 'a community of all the living and nonliving parts of an environment'.").
barrons.rule1043:: isa(A2S391-ecosystem, "An ecosystem") -> example(A2S391-ecosystem, A5S391-community), of(A12S391-part, A15S391-environment), isa(A15S391-environment, "an environment"), of(A5S391-community, A12S391-part), isa(A12S391-part, "all the living and nonliving parts"), isa(A5S391-community, "a community").
english(barrons.rule1044, "An ecosystem is a community of all the living and nonliving parts of an environment").
pretty(barrons.rule1044, "EXAMPLE(Ecosystem, Community), Ecosystem = 'An ecosystem', Community = 'a community of all the living and nonliving parts of an environment'.").
barrons.rule1044:: of(A12S391-part, A15S391-environment), isa(A15S391-environment, "an environment"), of(A5S391-community, A12S391-part), isa(A12S391-part, "all the living and nonliving parts"), isa(A5S391-community, "a community") -> example(A2S391-ecosystem, A5S391-community), isa(A2S391-ecosystem, "An ecosystem").
english(barrons.rule1045, "Living things need specific resources for survival such as air food and water").
pretty(barrons.rule1045, "PURPOSE(need(Thing, Resource), Survival), Thing = 'Living things', Resource = 'specific resources for survival such as air food and water', Survival = 'survival such as'.").
barrons.rule1045:: for(A5S393-resource, A7S393-survival), isa(A7S393-survival, "survival such as"), isa(E3S393-need, "need"), agent(E3S393-need, A2S393-thing), isa(A2S393-thing, "Living things"), object(E3S393-need, A5S393-resource), isa(A5S393-resource, "specific resources") -> purpose(E3S393-need, A7S393-survival).
english(barrons.rule1046, "Living things need specific resources for survival such as air food and water").
pretty(barrons.rule1046, "PURPOSE(need(Thing, Resource), Survival), Thing = 'Living things', Resource = 'specific resources for survival such as air food and water', Survival = 'survival such as'.").
barrons.rule1046:: isa(A7S393-survival, "survival such as") -> purpose(E3S393-need, A7S393-survival), for(A5S393-resource, A7S393-survival), isa(E3S393-need, "need"), agent(E3S393-need, A2S393-thing), isa(A2S393-thing, "Living things"), object(E3S393-need, A5S393-resource), isa(A5S393-resource, "specific resources").
english(barrons.rule1047, "While plants are able to make their[Plants are living organisms] own food by photosynthesis they[Plants are living organisms] need sunlight and water to do so").
pretty(barrons.rule1047, "EFFECT(need(Organism, Sunlight, Able), do(Organism)), Organism = 'living organisms', Sunlight = 'sunlight', Able = 'While able'.").
barrons.rule1047:: isa(E13S394-need, "need"), agent(E13S394-need, A4S74-organism), isa(A4S74-organism, "living organisms"), object(E13S394-need, A14S394-sunlight), isa(A14S394-sunlight, "sunlight"), arg(E13S394-need, A4S394-able), isa(A4S394-able, "While plants are able") -> effect(E13S394-need, E18S394-do), isa(E18S394-do, "do"), agent(E18S394-do, A4S74-organism).
english(barrons.rule1048, "While plants are able to make their[Plants are living organisms] own food by photosynthesis they[Plants are living organisms] need sunlight and water to do so").
pretty(barrons.rule1048, "EFFECT(need(Organism, Sunlight, Able), do(Organism)), Organism = 'living organisms', Sunlight = 'sunlight', Able = 'While able'.").
barrons.rule1048:: isa(E18S394-do, "do"), agent(E18S394-do, A4S74-organism), isa(A4S74-organism, "living organisms") -> effect(E13S394-need, E18S394-do), isa(E13S394-need, "need"), agent(E13S394-need, A4S74-organism), object(E13S394-need, A14S394-sunlight), isa(A14S394-sunlight, "sunlight"), arg(E13S394-need, A4S394-able), isa(A4S394-able, "While plants are able").
english(barrons.rule1049, "While plants are able to make their[Plants are living organisms] own food by photosynthesis they[Plants are living organisms] need sunlight and water to do so").
pretty(barrons.rule1049, "EFFECT(need(Organism, Water, Able), do(Organism)), Organism = 'living organisms', Water = 'water', Able = 'While able'.").
barrons.rule1049:: isa(E13S394-need, "need"), agent(E13S394-need, A4S74-organism), isa(A4S74-organism, "living organisms"), object(E13S394-need, A16S394-water), isa(A16S394-water, "water"), arg(E13S394-need, A4S394-able), isa(A4S394-able, "While plants are able") -> effect(E13S394-need, E18S394-do), isa(E18S394-do, "do"), agent(E18S394-do, A4S74-organism).
english(barrons.rule1050, "While plants are able to make their[Plants are living organisms] own food by photosynthesis they[Plants are living organisms] need sunlight and water to do so").
pretty(barrons.rule1050, "EFFECT(need(Organism, Water, Able), do(Organism)), Organism = 'living organisms', Water = 'water', Able = 'While able'.").
barrons.rule1050:: isa(E18S394-do, "do"), agent(E18S394-do, A4S74-organism), isa(A4S74-organism, "living organisms") -> effect(E13S394-need, E18S394-do), isa(E13S394-need, "need"), agent(E13S394-need, A4S74-organism), object(E13S394-need, A16S394-water), isa(A16S394-water, "water"), arg(E13S394-need, A4S394-able), isa(A4S394-able, "While plants are able").
english(barrons.rule1051, "Plants also take in carbon dioxide from the environment and return oxygen to the air for animals to use").
pretty(barrons.rule1051, "isa(take in, 'take in') -> take in_from(Plant, Dioxide, Oxygen, to(Air)).").
barrons.rule1051:: isa(E3S395-take, "take in") -> agent(E3S395-take, A1S395-plant), isa(A1S395-plant, "Plants"), object(E3S395-take, A6S395-dioxide), isa(A6S395-dioxide, "carbon dioxide"), from(E3S395-take, A12S395-oxygen), isa(A12S395-oxygen, "the environment and return oxygen"), to(E3S395-take, A15S395-air), isa(A15S395-air, "the air for animals to use").
english(barrons.rule1052, "Plants also take in carbon dioxide from the environment and return oxygen to the air for animals to use").
pretty(barrons.rule1052, "isa(Plant, 'Plants') -> take in_from(Plant, Dioxide, Oxygen, to(Air)).").
barrons.rule1052:: isa(A1S395-plant, "Plants") -> isa(E3S395-take, "take in"), agent(E3S395-take, A1S395-plant), object(E3S395-take, A6S395-dioxide), isa(A6S395-dioxide, "carbon dioxide"), from(E3S395-take, A12S395-oxygen), isa(A12S395-oxygen, "the environment and return oxygen"), to(E3S395-take, A15S395-air), isa(A15S395-air, "the air for animals to use").
english(barrons.rule1053, "Plants also take in carbon dioxide from the environment and return oxygen to the air for animals to use").
pretty(barrons.rule1053, "isa(Dioxide, 'carbon dioxide') -> take in_from(Plant, Dioxide, Oxygen, to(Air)).").
barrons.rule1053:: isa(A6S395-dioxide, "carbon dioxide") -> isa(E3S395-take, "take in"), agent(E3S395-take, A1S395-plant), isa(A1S395-plant, "Plants"), object(E3S395-take, A6S395-dioxide), from(E3S395-take, A12S395-oxygen), isa(A12S395-oxygen, "the environment and return oxygen"), to(E3S395-take, A15S395-air), isa(A15S395-air, "the air for animals to use").
english(barrons.rule1054, "Plants also take in carbon dioxide from the environment and return oxygen to the air for animals to use").
pretty(barrons.rule1054, "isa(Oxygen, 'the environment and return oxygen') -> take in_from(Plant, Dioxide, Oxygen, to(Air)).").
barrons.rule1054:: isa(A12S395-oxygen, "the environment and return oxygen") -> isa(E3S395-take, "take in"), agent(E3S395-take, A1S395-plant), isa(A1S395-plant, "Plants"), object(E3S395-take, A6S395-dioxide), isa(A6S395-dioxide, "carbon dioxide"), from(E3S395-take, A12S395-oxygen), to(E3S395-take, A15S395-air), isa(A15S395-air, "the air for animals to use").
english(barrons.rule1055, "Plants also take in carbon dioxide from the environment and return oxygen to the air for animals to use").
pretty(barrons.rule1055, "isa(Air, 'the air for animals to use') -> take in_from(Plant, Dioxide, Oxygen, to(Air)).").
barrons.rule1055:: isa(A15S395-air, "the air for animals to use") -> isa(E3S395-take, "take in"), agent(E3S395-take, A1S395-plant), isa(A1S395-plant, "Plants"), object(E3S395-take, A6S395-dioxide), isa(A6S395-dioxide, "carbon dioxide"), from(E3S395-take, A12S395-oxygen), isa(A12S395-oxygen, "the environment and return oxygen"), to(E3S395-take, A15S395-air).
english(barrons.rule1056, "Green plants are called producers because they[Green plants] provide the basic food supply for themselves[producers] and animals").
pretty(barrons.rule1056, "EXAMPLE(provide_for(Plant, Supply, Themselves, for(Animal)), Producer), Plant = 'Green plants', Supply = 'the basic food supply', Themselves = 'themselves[producers]', Animal = 'animals', Producer = 'producers'.").
barrons.rule1056:: isa(E8S396-provide, "provide"), agent(E8S396-provide, A2S396-plant), isa(A2S396-plant, "Green plants"), object(E8S396-provide, A12S396-supply), isa(A12S396-supply, "the basic food supply"), for(E8S396-provide, A14S396-themselves), isa(A14S396-themselves, "themselves[producers]"), for(E8S396-provide, A16S396-animal), isa(A16S396-animal, "animals") -> example(E8S396-provide, A5S396-producer), isa(A5S396-producer, "producers").
english(barrons.rule1057, "Green plants are called producers because they[Green plants] provide the basic food supply for themselves[producers] and animals").
pretty(barrons.rule1057, "EXAMPLE(provide_for(Plant, Supply, Themselves, for(Animal)), Producer), Plant = 'Green plants', Supply = 'the basic food supply', Themselves = 'themselves[producers]', Animal = 'animals', Producer = 'producers'.").
barrons.rule1057:: isa(A5S396-producer, "producers") -> example(E8S396-provide, A5S396-producer), isa(E8S396-provide, "provide"), agent(E8S396-provide, A2S396-plant), isa(A2S396-plant, "Green plants"), object(E8S396-provide, A12S396-supply), isa(A12S396-supply, "the basic food supply"), for(E8S396-provide, A14S396-themselves), isa(A14S396-themselves, "themselves[producers]"), for(E8S396-provide, A16S396-animal), isa(A16S396-animal, "animals").
english(barrons.rule1058, "Green plants are called producers because they[Green plants] provide the basic food supply for themselves[producers] and animals").
pretty(barrons.rule1058, "EFFECT(provide_for(Plant, Supply, Themselves, for(Animal)), call(Plant, Producer)), Plant = 'Green plants', Supply = 'the basic food supply', Themselves = 'themselves[producers]', Animal = 'animals', Producer = 'producers'.").
barrons.rule1058:: isa(E8S396-provide, "provide"), agent(E8S396-provide, A2S396-plant), isa(A2S396-plant, "Green plants"), object(E8S396-provide, A12S396-supply), isa(A12S396-supply, "the basic food supply"), for(E8S396-provide, A14S396-themselves), isa(A14S396-themselves, "themselves[producers]"), for(E8S396-provide, A16S396-animal), isa(A16S396-animal, "animals") -> effect(E8S396-provide, E4S396-call), isa(E4S396-call, "call"), object(E4S396-call, A2S396-plant), arg(E4S396-call, A5S396-producer), isa(A5S396-producer, "producers").
english(barrons.rule1059, "Green plants are called producers because they[Green plants] provide the basic food supply for themselves[producers] and animals").
pretty(barrons.rule1059, "EFFECT(provide_for(Plant, Supply, Themselves, for(Animal)), call(Plant, Producer)), Plant = 'Green plants', Supply = 'the basic food supply', Themselves = 'themselves[producers]', Animal = 'animals', Producer = 'producers'.").
barrons.rule1059:: isa(E4S396-call, "call"), object(E4S396-call, A2S396-plant), isa(A2S396-plant, "Green plants"), arg(E4S396-call, A5S396-producer), isa(A5S396-producer, "producers") -> effect(E8S396-provide, E4S396-call), isa(E8S396-provide, "provide"), agent(E8S396-provide, A2S396-plant), object(E8S396-provide, A12S396-supply), isa(A12S396-supply, "the basic food supply"), for(E8S396-provide, A14S396-themselves), isa(A14S396-themselves, "themselves[producers]"), for(E8S396-provide, A16S396-animal), isa(A16S396-animal, "animals").
english(barrons.rule1060, "The sun is the ultimate source of energy for all life and physical cycles on Earth").
pretty(barrons.rule1060, "EXAMPLE(Sun, Source), Sun = 'The sun', Source = 'the ultimate source of energy for all life and physical cycles on Earth'.").
barrons.rule1060:: isa(A2S397-sun, "The sun") -> example(A2S397-sun, A6S397-source), of(A6S397-source, A8S397-energy), isa(A8S397-energy, "energy"), on(A14S397-cycle, A16S397-Earth), isa(A16S397-Earth, "Earth"), for(A6S397-source, A14S397-cycle), isa(A14S397-cycle, "all life and physical cycles"), isa(A6S397-source, "the ultimate source").
english(barrons.rule1061, "The sun is the ultimate source of energy for all life and physical cycles on Earth").
pretty(barrons.rule1061, "EXAMPLE(Sun, Source), Sun = 'The sun', Source = 'the ultimate source of energy for all life and physical cycles on Earth'.").
barrons.rule1061:: of(A6S397-source, A8S397-energy), isa(A8S397-energy, "energy"), on(A14S397-cycle, A16S397-Earth), isa(A16S397-Earth, "Earth"), for(A6S397-source, A14S397-cycle), isa(A14S397-cycle, "all life and physical cycles"), isa(A6S397-source, "the ultimate source") -> example(A2S397-sun, A6S397-source), isa(A2S397-sun, "The sun").
english(barrons.rule1062, "Provided there are enough resources for plants and animals they[plants and animals] can survive in a successful balanced ecosystem community for long periods of time").
pretty(barrons.rule1062, "PURPOSE(survive_in(Plant, Plant, Community), Period), Plant = 'plants', Plant = 'plants', Community = 'a successful ecosystem community for long periods of time', Period = 'long periods of time'.").
barrons.rule1062:: isa(E12S401-survive, "survive"), agent(E12S401-survive, A7S281-plant), isa(A7S281-plant, "plants"), object(E12S401-survive, A7S401-plant), isa(A7S401-plant, "plants"), in(E12S401-survive, A20S401-community), isa(A20S401-community, "a successful balanced ecosystem community for long periods of time") -> purpose(E12S401-survive, A23S401-period), of(A23S401-period, A25S401-time), isa(A25S401-time, "time"), isa(A23S401-period, "long periods").
english(barrons.rule1063, "Provided there are enough resources for plants and animals they[plants and animals] can survive in a successful balanced ecosystem community for long periods of time").
pretty(barrons.rule1063, "PURPOSE(survive_in(Plant, Plant, Community), Period), Plant = 'plants', Plant = 'plants', Community = 'a successful ecosystem community for long periods of time', Period = 'long periods of time'.").
barrons.rule1063:: of(A23S401-period, A25S401-time), isa(A25S401-time, "time"), isa(A23S401-period, "long periods") -> purpose(E12S401-survive, A23S401-period), isa(E12S401-survive, "survive"), agent(E12S401-survive, A7S281-plant), isa(A7S281-plant, "plants"), object(E12S401-survive, A7S401-plant), isa(A7S401-plant, "plants"), in(E12S401-survive, A20S401-community), isa(A20S401-community, "a successful balanced ecosystem community for long periods of time").
english(barrons.rule1064, "Provided there are enough resources for plants and animals they[plants and animals] can survive in a successful balanced ecosystem community for long periods of time").
pretty(barrons.rule1064, "PURPOSE(survive_in(Animal, Plant, Community), Period), Animal = 'animals', Plant = 'plants', Community = 'a successful ecosystem community for long periods of time', Period = 'long periods of time'.").
barrons.rule1064:: isa(E12S401-survive, "survive"), agent(E12S401-survive, A9S281-animal), isa(A9S281-animal, "animals"), object(E12S401-survive, A7S401-plant), isa(A7S401-plant, "plants"), in(E12S401-survive, A20S401-community), isa(A20S401-community, "a successful balanced ecosystem community for long periods of time") -> purpose(E12S401-survive, A23S401-period), of(A23S401-period, A25S401-time), isa(A25S401-time, "time"), isa(A23S401-period, "long periods").
english(barrons.rule1065, "Provided there are enough resources for plants and animals they[plants and animals] can survive in a successful balanced ecosystem community for long periods of time").
pretty(barrons.rule1065, "PURPOSE(survive_in(Animal, Plant, Community), Period), Animal = 'animals', Plant = 'plants', Community = 'a successful ecosystem community for long periods of time', Period = 'long periods of time'.").
barrons.rule1065:: of(A23S401-period, A25S401-time), isa(A25S401-time, "time"), isa(A23S401-period, "long periods") -> purpose(E12S401-survive, A23S401-period), isa(E12S401-survive, "survive"), agent(E12S401-survive, A9S281-animal), isa(A9S281-animal, "animals"), object(E12S401-survive, A7S401-plant), isa(A7S401-plant, "plants"), in(E12S401-survive, A20S401-community), isa(A20S401-community, "a successful balanced ecosystem community for long periods of time").
english(barrons.rule1066, "Problems arise when the balance between the organisms and the available resources and space changes").
pretty(barrons.rule1066, "WHEN(arise(Problem), balance_between(Problem, Organism, between(Resource))), Problem = 'Problems', Organism = 'the organisms', Resource = 'the available resources'.").
barrons.rule1066:: isa(E2S405-arise, "arise"), agent(E2S405-arise, A1S405-problem), isa(A1S405-problem, "Problems") -> when(E2S405-arise, E5S405-balance), isa(E5S405-balance, "the balance"), agent(E5S405-balance, A1S405-problem), between(E5S405-balance, A8S405-organism), isa(A8S405-organism, "the organisms"), between(E5S405-balance, A12S405-resource), isa(A12S405-resource, "the available resources").
english(barrons.rule1067, "Problems arise when the balance between the organisms and the available resources and space changes").
pretty(barrons.rule1067, "WHEN(arise(Problem), balance_between(Problem, Organism, between(Resource))), Problem = 'Problems', Organism = 'the organisms', Resource = 'the available resources'.").
barrons.rule1067:: isa(E5S405-balance, "the balance"), agent(E5S405-balance, A1S405-problem), isa(A1S405-problem, "Problems"), between(E5S405-balance, A8S405-organism), isa(A8S405-organism, "the organisms"), between(E5S405-balance, A12S405-resource), isa(A12S405-resource, "the available resources") -> when(E2S405-arise, E5S405-balance), isa(E2S405-arise, "arise"), agent(E2S405-arise, A1S405-problem).
english(barrons.rule1068, "Building homes stores factories growing food crops and pollution are some causes of ecosystem failure").
pretty(barrons.rule1068, "CAUSE(Home, Failure), Home = 'Building homes', Failure = 'ecosystem failure'.").
barrons.rule1068:: isa(A2S406-home, "Building homes") -> cause(A2S406-home, A19S406-failure), isa(A19S406-failure, "ecosystem failure").
english(barrons.rule1069, "Building homes stores factories growing food crops and pollution are some causes of ecosystem failure").
pretty(barrons.rule1069, "CAUSE(Home, Failure), Home = 'Building homes', Failure = 'ecosystem failure'.").
barrons.rule1069:: isa(A19S406-failure, "ecosystem failure") -> cause(A2S406-home, A19S406-failure), isa(A2S406-home, "Building homes").
english(barrons.rule1070, "Building homes stores factories growing food crops and pollution are some causes of ecosystem failure").
pretty(barrons.rule1070, "CAUSE(Store, Failure), Store = 'stores', Failure = 'ecosystem failure'.").
barrons.rule1070:: isa(A4S406-store, "stores") -> cause(A4S406-store, A19S406-failure), isa(A19S406-failure, "ecosystem failure").
english(barrons.rule1071, "Building homes stores factories growing food crops and pollution are some causes of ecosystem failure").
pretty(barrons.rule1071, "CAUSE(Store, Failure), Store = 'stores', Failure = 'ecosystem failure'.").
barrons.rule1071:: isa(A19S406-failure, "ecosystem failure") -> cause(A4S406-store, A19S406-failure), isa(A4S406-store, "stores").
english(barrons.rule1072, "Building homes stores factories growing food crops and pollution are some causes of ecosystem failure").
pretty(barrons.rule1072, "CAUSE(Factory, Failure), Factory = 'factories', Failure = 'ecosystem failure'.").
barrons.rule1072:: isa(A6S406-factory, "factories") -> cause(A6S406-factory, A19S406-failure), isa(A19S406-failure, "ecosystem failure").
english(barrons.rule1073, "Building homes stores factories growing food crops and pollution are some causes of ecosystem failure").
pretty(barrons.rule1073, "CAUSE(Factory, Failure), Factory = 'factories', Failure = 'ecosystem failure'.").
barrons.rule1073:: isa(A19S406-failure, "ecosystem failure") -> cause(A6S406-factory, A19S406-failure), isa(A6S406-factory, "factories").
english(barrons.rule1074, "Building homes stores factories growing food crops and pollution are some causes of ecosystem failure").
pretty(barrons.rule1074, "CAUSE(Crop, Failure), Crop = 'growing food crops', Failure = 'ecosystem failure'.").
barrons.rule1074:: isa(A10S406-crop, "growing food crops") -> cause(A10S406-crop, A19S406-failure), isa(A19S406-failure, "ecosystem failure").
english(barrons.rule1075, "Building homes stores factories growing food crops and pollution are some causes of ecosystem failure").
pretty(barrons.rule1075, "CAUSE(Crop, Failure), Crop = 'growing food crops', Failure = 'ecosystem failure'.").
barrons.rule1075:: isa(A19S406-failure, "ecosystem failure") -> cause(A10S406-crop, A19S406-failure), isa(A10S406-crop, "growing food crops").
english(barrons.rule1076, "Building homes stores factories growing food crops and pollution are some causes of ecosystem failure").
pretty(barrons.rule1076, "CAUSE(Pollution, Failure), Pollution = 'pollution', Failure = 'ecosystem failure'.").
barrons.rule1076:: isa(A13S406-pollution, "pollution") -> cause(A13S406-pollution, A19S406-failure), isa(A19S406-failure, "ecosystem failure").
english(barrons.rule1077, "Building homes stores factories growing food crops and pollution are some causes of ecosystem failure").
pretty(barrons.rule1077, "CAUSE(Pollution, Failure), Pollution = 'pollution', Failure = 'ecosystem failure'.").
barrons.rule1077:: isa(A19S406-failure, "ecosystem failure") -> cause(A13S406-pollution, A19S406-failure), isa(A13S406-pollution, "pollution").
english(barrons.rule1078, "As the physical environment changes over time plants and animals change and so do the relationships within the ecosystem").
pretty(barrons.rule1078, "isa(do, 'do') -> do_as(Plant, Relationship, Change, within(Ecosystem)).").
barrons.rule1078:: isa(E15S407-do, "do") -> agent(E15S407-do, A9S407-plant), isa(A9S407-plant, "plants"), object(E15S407-do, A17S407-relationship), isa(A17S407-relationship, "the relationships"), as(E15S407-do, A5S407-change), isa(A5S407-change, "the physical environment changes over time"), within(E15S407-do, A20S407-ecosystem), isa(A20S407-ecosystem, "the ecosystem").
english(barrons.rule1079, "As the physical environment changes over time plants and animals change and so do the relationships within the ecosystem").
pretty(barrons.rule1079, "isa(Plant, 'plants change and so') -> do_as(Plant, Relationship, Change, within(Ecosystem)).").
barrons.rule1079:: isa(A9S407-plant, "plants") -> isa(E15S407-do, "do"), agent(E15S407-do, A9S407-plant), object(E15S407-do, A17S407-relationship), isa(A17S407-relationship, "the relationships"), as(E15S407-do, A5S407-change), isa(A5S407-change, "the physical environment changes over time"), within(E15S407-do, A20S407-ecosystem), isa(A20S407-ecosystem, "the ecosystem").
english(barrons.rule1080, "As the physical environment changes over time plants and animals change and so do the relationships within the ecosystem").
pretty(barrons.rule1080, "isa(Relationship, 'the relationships') -> do_as(Plant, Relationship, Change, within(Ecosystem)).").
barrons.rule1080:: isa(A17S407-relationship, "the relationships") -> isa(E15S407-do, "do"), agent(E15S407-do, A9S407-plant), isa(A9S407-plant, "plants"), object(E15S407-do, A17S407-relationship), as(E15S407-do, A5S407-change), isa(A5S407-change, "the physical environment changes over time"), within(E15S407-do, A20S407-ecosystem), isa(A20S407-ecosystem, "the ecosystem").
english(barrons.rule1081, "As the physical environment changes over time plants and animals change and so do the relationships within the ecosystem").
pretty(barrons.rule1081, "isa(Change, 'the physical environment changes over time') -> do_as(Plant, Relationship, Change, within(Ecosystem)).").
barrons.rule1081:: isa(A5S407-change, "the physical environment changes over time") -> isa(E15S407-do, "do"), agent(E15S407-do, A9S407-plant), isa(A9S407-plant, "plants"), object(E15S407-do, A17S407-relationship), isa(A17S407-relationship, "the relationships"), as(E15S407-do, A5S407-change), within(E15S407-do, A20S407-ecosystem), isa(A20S407-ecosystem, "the ecosystem").
english(barrons.rule1082, "As the physical environment changes over time plants and animals change and so do the relationships within the ecosystem").
pretty(barrons.rule1082, "isa(Ecosystem, 'the ecosystem') -> do_as(Plant, Relationship, Change, within(Ecosystem)).").
barrons.rule1082:: isa(A20S407-ecosystem, "the ecosystem") -> isa(E15S407-do, "do"), agent(E15S407-do, A9S407-plant), isa(A9S407-plant, "plants"), object(E15S407-do, A17S407-relationship), isa(A17S407-relationship, "the relationships"), as(E15S407-do, A5S407-change), isa(A5S407-change, "the physical environment changes over time"), within(E15S407-do, A20S407-ecosystem).
english(barrons.rule1083, "As the physical environment changes over time plants and animals change and so do the relationships within the ecosystem").
pretty(barrons.rule1083, "isa(do, 'do') -> do_as(Animal, Relationship, Change, within(Ecosystem)).").
barrons.rule1083:: isa(E15S407-do, "do") -> agent(E15S407-do, A11S407-animal), isa(A11S407-animal, "animals"), object(E15S407-do, A17S407-relationship), isa(A17S407-relationship, "the relationships"), as(E15S407-do, A5S407-change), isa(A5S407-change, "the physical environment changes over time"), within(E15S407-do, A20S407-ecosystem), isa(A20S407-ecosystem, "the ecosystem").
english(barrons.rule1084, "As the physical environment changes over time plants and animals change and so do the relationships within the ecosystem").
pretty(barrons.rule1084, "isa(Animal, 'animals') -> do_as(Animal, Relationship, Change, within(Ecosystem)).").
barrons.rule1084:: isa(A11S407-animal, "animals") -> isa(E15S407-do, "do"), agent(E15S407-do, A11S407-animal), object(E15S407-do, A17S407-relationship), isa(A17S407-relationship, "the relationships"), as(E15S407-do, A5S407-change), isa(A5S407-change, "the physical environment changes over time"), within(E15S407-do, A20S407-ecosystem), isa(A20S407-ecosystem, "the ecosystem").
english(barrons.rule1085, "As the physical environment changes over time plants and animals change and so do the relationships within the ecosystem").
pretty(barrons.rule1085, "isa(Relationship, 'the relationships') -> do_as(Animal, Relationship, Change, within(Ecosystem)).").
barrons.rule1085:: isa(A17S407-relationship, "the relationships") -> isa(E15S407-do, "do"), agent(E15S407-do, A11S407-animal), isa(A11S407-animal, "animals"), object(E15S407-do, A17S407-relationship), as(E15S407-do, A5S407-change), isa(A5S407-change, "the physical environment changes over time"), within(E15S407-do, A20S407-ecosystem), isa(A20S407-ecosystem, "the ecosystem").
english(barrons.rule1086, "As the physical environment changes over time plants and animals change and so do the relationships within the ecosystem").
pretty(barrons.rule1086, "isa(Change, 'the physical environment changes over time') -> do_as(Animal, Relationship, Change, within(Ecosystem)).").
barrons.rule1086:: isa(A5S407-change, "the physical environment changes over time") -> isa(E15S407-do, "do"), agent(E15S407-do, A11S407-animal), isa(A11S407-animal, "animals"), object(E15S407-do, A17S407-relationship), isa(A17S407-relationship, "the relationships"), as(E15S407-do, A5S407-change), within(E15S407-do, A20S407-ecosystem), isa(A20S407-ecosystem, "the ecosystem").
english(barrons.rule1087, "As the physical environment changes over time plants and animals change and so do the relationships within the ecosystem").
pretty(barrons.rule1087, "isa(Ecosystem, 'the ecosystem') -> do_as(Animal, Relationship, Change, within(Ecosystem)).").
barrons.rule1087:: isa(A20S407-ecosystem, "the ecosystem") -> isa(E15S407-do, "do"), agent(E15S407-do, A11S407-animal), isa(A11S407-animal, "animals"), object(E15S407-do, A17S407-relationship), isa(A17S407-relationship, "the relationships"), as(E15S407-do, A5S407-change), isa(A5S407-change, "the physical environment changes over time"), within(E15S407-do, A20S407-ecosystem).
english(barrons.rule1088, "This includes the kinds and numbers of other organisms present the availability of food and other resources and the physical characteristics of the environment").
pretty(barrons.rule1088, "isa(Organism, 'other organisms present') -> include(This, Kind).").
barrons.rule1088:: isa(A9S409-organism, "other organisms present") -> of(A4S409-kind, A9S409-organism), of(A13S409-availability, A15S409-food), isa(A15S409-food, "food"), of(A13S409-availability, A18S409-resource), isa(A18S409-resource, "other resources"), of(A4S409-kind, A13S409-availability), isa(A13S409-availability, "the availability"), of(A23S409-characteristic, A26S409-environment), isa(A26S409-environment, "the environment"), of(A4S409-kind, A23S409-characteristic), isa(A23S409-characteristic, "the physical characteristics"), isa(E2S409-include, "include"), agent(E2S409-include, A1S409-this), isa(A1S409-this, "This"), object(E2S409-include, A4S409-kind), isa(A4S409-kind, "the kinds").
english(barrons.rule1089, "This includes the kinds and numbers of other organisms present the availability of food and other resources and the physical characteristics of the environment").
pretty(barrons.rule1089, "isa(Food, 'food') -> include(This, Kind).").
barrons.rule1089:: isa(A15S409-food, "food") -> of(A4S409-kind, A9S409-organism), isa(A9S409-organism, "other organisms present"), of(A13S409-availability, A15S409-food), of(A13S409-availability, A18S409-resource), isa(A18S409-resource, "other resources"), of(A4S409-kind, A13S409-availability), isa(A13S409-availability, "the availability"), of(A23S409-characteristic, A26S409-environment), isa(A26S409-environment, "the environment"), of(A4S409-kind, A23S409-characteristic), isa(A23S409-characteristic, "the physical characteristics"), isa(E2S409-include, "include"), agent(E2S409-include, A1S409-this), isa(A1S409-this, "This"), object(E2S409-include, A4S409-kind), isa(A4S409-kind, "the kinds").
english(barrons.rule1090, "This includes the kinds and numbers of other organisms present the availability of food and other resources and the physical characteristics of the environment").
pretty(barrons.rule1090, "isa(Resource, 'other resources') -> include(This, Kind).").
barrons.rule1090:: isa(A18S409-resource, "other resources") -> of(A4S409-kind, A9S409-organism), isa(A9S409-organism, "other organisms present"), of(A13S409-availability, A15S409-food), isa(A15S409-food, "food"), of(A13S409-availability, A18S409-resource), of(A4S409-kind, A13S409-availability), isa(A13S409-availability, "the availability"), of(A23S409-characteristic, A26S409-environment), isa(A26S409-environment, "the environment"), of(A4S409-kind, A23S409-characteristic), isa(A23S409-characteristic, "the physical characteristics"), isa(E2S409-include, "include"), agent(E2S409-include, A1S409-this), isa(A1S409-this, "This"), object(E2S409-include, A4S409-kind), isa(A4S409-kind, "the kinds").
english(barrons.rule1091, "This includes the kinds and numbers of other organisms present the availability of food and other resources and the physical characteristics of the environment").
pretty(barrons.rule1091, "isa(Availability, 'the availability of food and other resources') -> include(This, Kind).").
barrons.rule1091:: isa(A13S409-availability, "the availability") -> of(A4S409-kind, A9S409-organism), isa(A9S409-organism, "other organisms present"), of(A13S409-availability, A15S409-food), isa(A15S409-food, "food"), of(A13S409-availability, A18S409-resource), isa(A18S409-resource, "other resources"), of(A4S409-kind, A13S409-availability), of(A23S409-characteristic, A26S409-environment), isa(A26S409-environment, "the environment"), of(A4S409-kind, A23S409-characteristic), isa(A23S409-characteristic, "the physical characteristics"), isa(E2S409-include, "include"), agent(E2S409-include, A1S409-this), isa(A1S409-this, "This"), object(E2S409-include, A4S409-kind), isa(A4S409-kind, "the kinds").
english(barrons.rule1092, "This includes the kinds and numbers of other organisms present the availability of food and other resources and the physical characteristics of the environment").
pretty(barrons.rule1092, "isa(Environment, 'the environment') -> include(This, Kind).").
barrons.rule1092:: isa(A26S409-environment, "the environment") -> of(A4S409-kind, A9S409-organism), isa(A9S409-organism, "other organisms present"), of(A13S409-availability, A15S409-food), isa(A15S409-food, "food"), of(A13S409-availability, A18S409-resource), isa(A18S409-resource, "other resources"), of(A4S409-kind, A13S409-availability), isa(A13S409-availability, "the availability"), of(A23S409-characteristic, A26S409-environment), of(A4S409-kind, A23S409-characteristic), isa(A23S409-characteristic, "the physical characteristics"), isa(E2S409-include, "include"), agent(E2S409-include, A1S409-this), isa(A1S409-this, "This"), object(E2S409-include, A4S409-kind), isa(A4S409-kind, "the kinds").
english(barrons.rule1093, "This includes the kinds and numbers of other organisms present the availability of food and other resources and the physical characteristics of the environment").
pretty(barrons.rule1093, "isa(Characteristic, 'the physical characteristics of the environment') -> include(This, Kind).").
barrons.rule1093:: isa(A23S409-characteristic, "the physical characteristics") -> of(A4S409-kind, A9S409-organism), isa(A9S409-organism, "other organisms present"), of(A13S409-availability, A15S409-food), isa(A15S409-food, "food"), of(A13S409-availability, A18S409-resource), isa(A18S409-resource, "other resources"), of(A4S409-kind, A13S409-availability), isa(A13S409-availability, "the availability"), of(A23S409-characteristic, A26S409-environment), isa(A26S409-environment, "the environment"), of(A4S409-kind, A23S409-characteristic), isa(E2S409-include, "include"), agent(E2S409-include, A1S409-this), isa(A1S409-this, "This"), object(E2S409-include, A4S409-kind), isa(A4S409-kind, "the kinds").
english(barrons.rule1094, "This includes the kinds and numbers of other organisms present the availability of food and other resources and the physical characteristics of the environment").
pretty(barrons.rule1094, "isa(include, 'includes') -> include(This, Kind).").
barrons.rule1094:: isa(E2S409-include, "include") -> of(A4S409-kind, A9S409-organism), isa(A9S409-organism, "other organisms present"), of(A13S409-availability, A15S409-food), isa(A15S409-food, "food"), of(A13S409-availability, A18S409-resource), isa(A18S409-resource, "other resources"), of(A4S409-kind, A13S409-availability), isa(A13S409-availability, "the availability"), of(A23S409-characteristic, A26S409-environment), isa(A26S409-environment, "the environment"), of(A4S409-kind, A23S409-characteristic), isa(A23S409-characteristic, "the physical characteristics"), agent(E2S409-include, A1S409-this), isa(A1S409-this, "This"), object(E2S409-include, A4S409-kind), isa(A4S409-kind, "the kinds").
english(barrons.rule1095, "This includes the kinds and numbers of other organisms present the availability of food and other resources and the physical characteristics of the environment").
pretty(barrons.rule1095, "isa(This, 'This') -> include(This, Kind).").
barrons.rule1095:: isa(A1S409-this, "This") -> of(A4S409-kind, A9S409-organism), isa(A9S409-organism, "other organisms present"), of(A13S409-availability, A15S409-food), isa(A15S409-food, "food"), of(A13S409-availability, A18S409-resource), isa(A18S409-resource, "other resources"), of(A4S409-kind, A13S409-availability), isa(A13S409-availability, "the availability"), of(A23S409-characteristic, A26S409-environment), isa(A26S409-environment, "the environment"), of(A4S409-kind, A23S409-characteristic), isa(A23S409-characteristic, "the physical characteristics"), isa(E2S409-include, "include"), agent(E2S409-include, A1S409-this), object(E2S409-include, A4S409-kind), isa(A4S409-kind, "the kinds").
english(barrons.rule1096, "This includes the kinds and numbers of other organisms present the availability of food and other resources and the physical characteristics of the environment").
pretty(barrons.rule1096, "isa(Kind, 'the kinds of other organisms present the availability of food and other resources and the physical characteristics of the environment') -> include(This, Kind).").
barrons.rule1096:: isa(A4S409-kind, "the kinds") -> of(A4S409-kind, A9S409-organism), isa(A9S409-organism, "other organisms present"), of(A13S409-availability, A15S409-food), isa(A15S409-food, "food"), of(A13S409-availability, A18S409-resource), isa(A18S409-resource, "other resources"), of(A4S409-kind, A13S409-availability), isa(A13S409-availability, "the availability"), of(A23S409-characteristic, A26S409-environment), isa(A26S409-environment, "the environment"), of(A4S409-kind, A23S409-characteristic), isa(A23S409-characteristic, "the physical characteristics"), isa(E2S409-include, "include"), agent(E2S409-include, A1S409-this), isa(A1S409-this, "This"), object(E2S409-include, A4S409-kind).
english(barrons.rule1097, "This includes the kinds and numbers of other organisms present the availability of food and other resources and the physical characteristics of the environment").
pretty(barrons.rule1097, "isa(include, 'includes') -> include(This, Number).").
barrons.rule1097:: isa(E2S409-include, "include") -> agent(E2S409-include, A1S409-this), isa(A1S409-this, "This"), object(E2S409-include, A6S409-number), isa(A6S409-number, "numbers").
english(barrons.rule1098, "This includes the kinds and numbers of other organisms present the availability of food and other resources and the physical characteristics of the environment").
pretty(barrons.rule1098, "isa(This, 'This') -> include(This, Number).").
barrons.rule1098:: isa(A1S409-this, "This") -> isa(E2S409-include, "include"), agent(E2S409-include, A1S409-this), object(E2S409-include, A6S409-number), isa(A6S409-number, "numbers").
english(barrons.rule1099, "This includes the kinds and numbers of other organisms present the availability of food and other resources and the physical characteristics of the environment").
pretty(barrons.rule1099, "isa(Number, 'numbers') -> include(This, Number).").
barrons.rule1099:: isa(A6S409-number, "numbers") -> isa(E2S409-include, "include"), agent(E2S409-include, A1S409-this), isa(A1S409-this, "This"), object(E2S409-include, A6S409-number).
english(barrons.rule1100, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1100, "isa(Weather, 'the weather') -> affect(Change, Plant).").
barrons.rule1100:: isa(A4S410-weather, "the weather") -> in(A1S410-change, A4S410-weather), isa(E15S410-affect, "affect"), agent(E15S410-affect, A1S410-change), isa(A1S410-change, "Changes"), object(E15S410-affect, A16S410-plant), isa(A16S410-plant, "plants").
english(barrons.rule1101, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1101, "isa(affect, 'affect') -> affect(Change, Plant).").
barrons.rule1101:: isa(E15S410-affect, "affect") -> in(A1S410-change, A4S410-weather), isa(A4S410-weather, "the weather"), agent(E15S410-affect, A1S410-change), isa(A1S410-change, "Changes"), object(E15S410-affect, A16S410-plant), isa(A16S410-plant, "plants").
english(barrons.rule1102, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1102, "isa(Change, 'Changes in the weather') -> affect(Change, Plant).").
barrons.rule1102:: isa(A1S410-change, "Changes") -> in(A1S410-change, A4S410-weather), isa(A4S410-weather, "the weather"), isa(E15S410-affect, "affect"), agent(E15S410-affect, A1S410-change), object(E15S410-affect, A16S410-plant), isa(A16S410-plant, "plants").
english(barrons.rule1103, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1103, "isa(Plant, 'plants') -> affect(Change, Plant).").
barrons.rule1103:: isa(A16S410-plant, "plants") -> in(A1S410-change, A4S410-weather), isa(A4S410-weather, "the weather"), isa(E15S410-affect, "affect"), agent(E15S410-affect, A1S410-change), isa(A1S410-change, "Changes"), object(E15S410-affect, A16S410-plant).
english(barrons.rule1104, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1104, "isa(affect, 'affect') -> affect(Rainfall, Plant).").
barrons.rule1104:: isa(E15S410-affect, "affect") -> agent(E15S410-affect, A8S410-rainfall), isa(A8S410-rainfall, "too much rainfall"), object(E15S410-affect, A16S410-plant), isa(A16S410-plant, "plants").
english(barrons.rule1105, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1105, "isa(Rainfall, 'too much rainfall') -> affect(Rainfall, Plant).").
barrons.rule1105:: isa(A8S410-rainfall, "too much rainfall") -> isa(E15S410-affect, "affect"), agent(E15S410-affect, A8S410-rainfall), object(E15S410-affect, A16S410-plant), isa(A16S410-plant, "plants").
english(barrons.rule1106, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1106, "isa(Plant, 'plants') -> affect(Rainfall, Plant).").
barrons.rule1106:: isa(A16S410-plant, "plants") -> isa(E15S410-affect, "affect"), agent(E15S410-affect, A8S410-rainfall), isa(A8S410-rainfall, "too much rainfall"), object(E15S410-affect, A16S410-plant).
english(barrons.rule1107, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1107, "isa(affect, 'affect') -> affect(Cold, Plant).").
barrons.rule1107:: isa(E15S410-affect, "affect") -> agent(E15S410-affect, A12S410-cold), isa(A12S410-cold, "severe cold"), object(E15S410-affect, A16S410-plant), isa(A16S410-plant, "plants").
english(barrons.rule1108, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1108, "isa(Cold, 'severe cold') -> affect(Cold, Plant).").
barrons.rule1108:: isa(A12S410-cold, "severe cold") -> isa(E15S410-affect, "affect"), agent(E15S410-affect, A12S410-cold), object(E15S410-affect, A16S410-plant), isa(A16S410-plant, "plants").
english(barrons.rule1109, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1109, "isa(Plant, 'plants') -> affect(Cold, Plant).").
barrons.rule1109:: isa(A16S410-plant, "plants") -> isa(E15S410-affect, "affect"), agent(E15S410-affect, A12S410-cold), isa(A12S410-cold, "severe cold"), object(E15S410-affect, A16S410-plant).
english(barrons.rule1110, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1110, "isa(affect, 'affect') -> affect(Heat, Plant).").
barrons.rule1110:: isa(E15S410-affect, "affect") -> agent(E15S410-affect, A14S410-heat), isa(A14S410-heat, "heat"), object(E15S410-affect, A16S410-plant), isa(A16S410-plant, "plants").
english(barrons.rule1111, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1111, "isa(Heat, 'heat') -> affect(Heat, Plant).").
barrons.rule1111:: isa(A14S410-heat, "heat") -> isa(E15S410-affect, "affect"), agent(E15S410-affect, A14S410-heat), object(E15S410-affect, A16S410-plant), isa(A16S410-plant, "plants").
english(barrons.rule1112, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1112, "isa(Plant, 'plants') -> affect(Heat, Plant).").
barrons.rule1112:: isa(A16S410-plant, "plants") -> isa(E15S410-affect, "affect"), agent(E15S410-affect, A14S410-heat), isa(A14S410-heat, "heat"), object(E15S410-affect, A16S410-plant).
english(barrons.rule1113, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1113, "isa(Weather, 'the weather') -> affect(Change, Animal).").
barrons.rule1113:: isa(A4S410-weather, "the weather") -> in(A1S410-change, A4S410-weather), isa(E15S410-affect, "affect"), agent(E15S410-affect, A1S410-change), isa(A1S410-change, "Changes"), object(E15S410-affect, A18S410-animal), isa(A18S410-animal, "animals").
english(barrons.rule1114, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1114, "isa(affect, 'affect') -> affect(Change, Animal).").
barrons.rule1114:: isa(E15S410-affect, "affect") -> in(A1S410-change, A4S410-weather), isa(A4S410-weather, "the weather"), agent(E15S410-affect, A1S410-change), isa(A1S410-change, "Changes"), object(E15S410-affect, A18S410-animal), isa(A18S410-animal, "animals").
english(barrons.rule1115, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1115, "isa(Change, 'Changes in the weather') -> affect(Change, Animal).").
barrons.rule1115:: isa(A1S410-change, "Changes") -> in(A1S410-change, A4S410-weather), isa(A4S410-weather, "the weather"), isa(E15S410-affect, "affect"), agent(E15S410-affect, A1S410-change), object(E15S410-affect, A18S410-animal), isa(A18S410-animal, "animals").
english(barrons.rule1116, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1116, "isa(Animal, 'animals') -> affect(Change, Animal).").
barrons.rule1116:: isa(A18S410-animal, "animals") -> in(A1S410-change, A4S410-weather), isa(A4S410-weather, "the weather"), isa(E15S410-affect, "affect"), agent(E15S410-affect, A1S410-change), isa(A1S410-change, "Changes"), object(E15S410-affect, A18S410-animal).
english(barrons.rule1117, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1117, "isa(affect, 'affect') -> affect(Rainfall, Animal).").
barrons.rule1117:: isa(E15S410-affect, "affect") -> agent(E15S410-affect, A8S410-rainfall), isa(A8S410-rainfall, "too much rainfall"), object(E15S410-affect, A18S410-animal), isa(A18S410-animal, "animals").
english(barrons.rule1118, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1118, "isa(Rainfall, 'too much rainfall') -> affect(Rainfall, Animal).").
barrons.rule1118:: isa(A8S410-rainfall, "too much rainfall") -> isa(E15S410-affect, "affect"), agent(E15S410-affect, A8S410-rainfall), object(E15S410-affect, A18S410-animal), isa(A18S410-animal, "animals").
english(barrons.rule1119, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1119, "isa(Animal, 'animals') -> affect(Rainfall, Animal).").
barrons.rule1119:: isa(A18S410-animal, "animals") -> isa(E15S410-affect, "affect"), agent(E15S410-affect, A8S410-rainfall), isa(A8S410-rainfall, "too much rainfall"), object(E15S410-affect, A18S410-animal).
english(barrons.rule1120, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1120, "isa(affect, 'affect') -> affect(Cold, Animal).").
barrons.rule1120:: isa(E15S410-affect, "affect") -> agent(E15S410-affect, A12S410-cold), isa(A12S410-cold, "severe cold"), object(E15S410-affect, A18S410-animal), isa(A18S410-animal, "animals").
english(barrons.rule1121, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1121, "isa(Cold, 'severe cold') -> affect(Cold, Animal).").
barrons.rule1121:: isa(A12S410-cold, "severe cold") -> isa(E15S410-affect, "affect"), agent(E15S410-affect, A12S410-cold), object(E15S410-affect, A18S410-animal), isa(A18S410-animal, "animals").
english(barrons.rule1122, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1122, "isa(Animal, 'animals') -> affect(Cold, Animal).").
barrons.rule1122:: isa(A18S410-animal, "animals") -> isa(E15S410-affect, "affect"), agent(E15S410-affect, A12S410-cold), isa(A12S410-cold, "severe cold"), object(E15S410-affect, A18S410-animal).
english(barrons.rule1123, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1123, "isa(affect, 'affect') -> affect(Heat, Animal).").
barrons.rule1123:: isa(E15S410-affect, "affect") -> agent(E15S410-affect, A14S410-heat), isa(A14S410-heat, "heat"), object(E15S410-affect, A18S410-animal), isa(A18S410-animal, "animals").
english(barrons.rule1124, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1124, "isa(Heat, 'heat') -> affect(Heat, Animal).").
barrons.rule1124:: isa(A14S410-heat, "heat") -> isa(E15S410-affect, "affect"), agent(E15S410-affect, A14S410-heat), object(E15S410-affect, A18S410-animal), isa(A18S410-animal, "animals").
english(barrons.rule1125, "Changes in the weather too much rainfall and severe cold or heat affect plants and animals").
pretty(barrons.rule1125, "isa(Animal, 'animals') -> affect(Heat, Animal).").
barrons.rule1125:: isa(A18S410-animal, "animals") -> isa(E15S410-affect, "affect"), agent(E15S410-affect, A14S410-heat), isa(A14S410-heat, "heat"), object(E15S410-affect, A18S410-animal).
english(barrons.rule1126, "When there are environmental changes some plants and animals survive reproduce and increase in number while others die or move to new locations").
pretty(barrons.rule1126, "WHEN(survive_in(Plant, Die, Move, Number), be(Change)), Plant = 'some plants', Die = 'while die to new locations', Move = 'move', Number = 'number', Change = 'environmental changes'.").
barrons.rule1126:: isa(E11S411-survive, "survive"), agent(E11S411-survive, A8S411-plant), isa(A8S411-plant, "some plants"), in(E11S411-survive, A18S411-number), isa(A18S411-number, "number"), arg(E11S411-survive, A22S411-die), isa(A22S411-die, "while others die to new locations"), arg(E11S411-survive, A24S411-move), isa(A24S411-move, "move") -> when(E11S411-survive, E3S411-be), isa(E3S411-be, "be"), agent(E3S411-be, A5S411-change), isa(A5S411-change, "environmental changes").
english(barrons.rule1127, "When there are environmental changes some plants and animals survive reproduce and increase in number while others die or move to new locations").
pretty(barrons.rule1127, "WHEN(survive_in(Plant, Die, Move, Number), be(Change)), Plant = 'some plants', Die = 'while die to new locations', Move = 'move', Number = 'number', Change = 'environmental changes'.").
barrons.rule1127:: isa(E3S411-be, "be"), agent(E3S411-be, A5S411-change), isa(A5S411-change, "environmental changes") -> when(E11S411-survive, E3S411-be), isa(E11S411-survive, "survive"), agent(E11S411-survive, A8S411-plant), isa(A8S411-plant, "some plants"), in(E11S411-survive, A18S411-number), isa(A18S411-number, "number"), arg(E11S411-survive, A22S411-die), isa(A22S411-die, "while others die to new locations"), arg(E11S411-survive, A24S411-move), isa(A24S411-move, "move").
english(barrons.rule1128, "When there are environmental changes some plants and animals survive reproduce and increase in number while others die or move to new locations").
pretty(barrons.rule1128, "WHEN(survive_in(Animal, Die, Move, Number), be(Change)), Animal = 'animals', Die = 'while die to new locations', Move = 'move', Number = 'number', Change = 'environmental changes'.").
barrons.rule1128:: isa(E11S411-survive, "survive"), agent(E11S411-survive, A10S411-animal), isa(A10S411-animal, "animals"), in(E11S411-survive, A18S411-number), isa(A18S411-number, "number"), arg(E11S411-survive, A22S411-die), isa(A22S411-die, "while others die to new locations"), arg(E11S411-survive, A24S411-move), isa(A24S411-move, "move") -> when(E11S411-survive, E3S411-be), isa(E3S411-be, "be"), agent(E3S411-be, A5S411-change), isa(A5S411-change, "environmental changes").
english(barrons.rule1129, "When there are environmental changes some plants and animals survive reproduce and increase in number while others die or move to new locations").
pretty(barrons.rule1129, "WHEN(survive_in(Animal, Die, Move, Number), be(Change)), Animal = 'animals', Die = 'while die to new locations', Move = 'move', Number = 'number', Change = 'environmental changes'.").
barrons.rule1129:: isa(E3S411-be, "be"), agent(E3S411-be, A5S411-change), isa(A5S411-change, "environmental changes") -> when(E11S411-survive, E3S411-be), isa(E11S411-survive, "survive"), agent(E11S411-survive, A10S411-animal), isa(A10S411-animal, "animals"), in(E11S411-survive, A18S411-number), isa(A18S411-number, "number"), arg(E11S411-survive, A22S411-die), isa(A22S411-die, "while others die to new locations"), arg(E11S411-survive, A24S411-move), isa(A24S411-move, "move").
english(barrons.rule1130, "This can have a major impact on the resources available").
pretty(barrons.rule1130, "isa(Resource, 'the resources available') -> have(This, Impact).").
barrons.rule1130:: isa(A9S412-resource, "the resources available") -> on(A6S412-impact, A9S412-resource), isa(E3S412-have, "have"), agent(E3S412-have, A1S412-this), isa(A1S412-this, "This"), object(E3S412-have, A6S412-impact), isa(A6S412-impact, "a major impact").
english(barrons.rule1131, "This can have a major impact on the resources available").
pretty(barrons.rule1131, "isa(have, 'have') -> have(This, Impact).").
barrons.rule1131:: isa(E3S412-have, "have") -> on(A6S412-impact, A9S412-resource), isa(A9S412-resource, "the resources available"), agent(E3S412-have, A1S412-this), isa(A1S412-this, "This"), object(E3S412-have, A6S412-impact), isa(A6S412-impact, "a major impact").
english(barrons.rule1132, "This can have a major impact on the resources available").
pretty(barrons.rule1132, "isa(This, 'This') -> have(This, Impact).").
barrons.rule1132:: isa(A1S412-this, "This") -> on(A6S412-impact, A9S412-resource), isa(A9S412-resource, "the resources available"), isa(E3S412-have, "have"), agent(E3S412-have, A1S412-this), object(E3S412-have, A6S412-impact), isa(A6S412-impact, "a major impact").
english(barrons.rule1133, "This can have a major impact on the resources available").
pretty(barrons.rule1133, "isa(Impact, 'a major impact on the resources available') -> have(This, Impact).").
barrons.rule1133:: isa(A6S412-impact, "a major impact") -> on(A6S412-impact, A9S412-resource), isa(A9S412-resource, "the resources available"), isa(E3S412-have, "have"), agent(E3S412-have, A1S412-this), isa(A1S412-this, "This"), object(E3S412-have, A6S412-impact).
english(barrons.rule1134, "Another example of an environmental change would be when there is a natural disaster such as a flood or fire").
pretty(barrons.rule1134, "EXAMPLE(be(Disaster), Change), Disaster = 'a natural disaster such as a flood or fire', Change = 'an environmental change'.").
barrons.rule1134:: such_as(A14S414-disaster, A18S414-flood), isa(A18S414-flood, "a flood"), such_as(A14S414-disaster, A20S414-fire), isa(A20S414-fire, "fire"), isa(E11S414-be, "be"), agent(E11S414-be, A14S414-disaster), isa(A14S414-disaster, "a natural disaster") -> example(E11S414-be, A6S414-change), isa(A6S414-change, "an environmental change").
english(barrons.rule1135, "Another example of an environmental change would be when there is a natural disaster such as a flood or fire").
pretty(barrons.rule1135, "EXAMPLE(be(Disaster), Change), Disaster = 'a natural disaster such as a flood or fire', Change = 'an environmental change'.").
barrons.rule1135:: isa(A6S414-change, "an environmental change") -> example(E11S414-be, A6S414-change), such_as(A14S414-disaster, A18S414-flood), isa(A18S414-flood, "a flood"), such_as(A14S414-disaster, A20S414-fire), isa(A20S414-fire, "fire"), isa(E11S414-be, "be"), agent(E11S414-be, A14S414-disaster), isa(A14S414-disaster, "a natural disaster").
english(barrons.rule1136, "Another example of an environmental change would be when there is a natural disaster such as a flood or fire").
pretty(barrons.rule1136, "EXAMPLE(Flood, Disaster), Flood = 'a flood', Disaster = 'a natural disaster such as a flood or fire'.").
barrons.rule1136:: isa(A18S414-flood, "a flood") -> example(A18S414-flood, A14S414-disaster), such_as(A14S414-disaster, A18S414-flood), such_as(A14S414-disaster, A20S414-fire), isa(A20S414-fire, "fire"), isa(A14S414-disaster, "a natural disaster").
english(barrons.rule1137, "Another example of an environmental change would be when there is a natural disaster such as a flood or fire").
pretty(barrons.rule1137, "EXAMPLE(Flood, Disaster), Flood = 'a flood', Disaster = 'a natural disaster such as a flood or fire'.").
barrons.rule1137:: such_as(A14S414-disaster, A18S414-flood), isa(A18S414-flood, "a flood"), such_as(A14S414-disaster, A20S414-fire), isa(A20S414-fire, "fire"), isa(A14S414-disaster, "a natural disaster") -> example(A18S414-flood, A14S414-disaster).
english(barrons.rule1138, "Another example of an environmental change would be when there is a natural disaster such as a flood or fire").
pretty(barrons.rule1138, "EXAMPLE(Fire, Disaster), Fire = 'fire', Disaster = 'a natural disaster such as a flood or fire'.").
barrons.rule1138:: isa(A20S414-fire, "fire") -> example(A20S414-fire, A14S414-disaster), such_as(A14S414-disaster, A18S414-flood), isa(A18S414-flood, "a flood"), such_as(A14S414-disaster, A20S414-fire), isa(A14S414-disaster, "a natural disaster").
english(barrons.rule1139, "Another example of an environmental change would be when there is a natural disaster such as a flood or fire").
pretty(barrons.rule1139, "EXAMPLE(Fire, Disaster), Fire = 'fire', Disaster = 'a natural disaster such as a flood or fire'.").
barrons.rule1139:: such_as(A14S414-disaster, A18S414-flood), isa(A18S414-flood, "a flood"), such_as(A14S414-disaster, A20S414-fire), isa(A20S414-fire, "fire"), isa(A14S414-disaster, "a natural disaster") -> example(A20S414-fire, A14S414-disaster).
english(barrons.rule1140, "Some animals predators eat other animals prey").
pretty(barrons.rule1140, "isa(eat, 'eat') -> eat(Animal, Animal).").
barrons.rule1140:: isa(E6S418-eat, "eat") -> agent(E6S418-eat, A2S418-animal), isa(A2S418-animal, "Some animals"), object(E6S418-eat, A8S418-animal), isa(A8S418-animal, "other animals").
english(barrons.rule1141, "Some animals predators eat other animals prey").
pretty(barrons.rule1141, "isa(Animal, 'Some animals') -> eat(Animal, Animal).").
barrons.rule1141:: isa(A2S418-animal, "Some animals") -> isa(E6S418-eat, "eat"), agent(E6S418-eat, A2S418-animal), object(E6S418-eat, A8S418-animal), isa(A8S418-animal, "other animals").
english(barrons.rule1142, "Some animals predators eat other animals prey").
pretty(barrons.rule1142, "isa(Animal, 'other animals') -> eat(Animal, Animal).").
barrons.rule1142:: isa(A8S418-animal, "other animals") -> isa(E6S418-eat, "eat"), agent(E6S418-eat, A2S418-animal), isa(A2S418-animal, "Some animals"), object(E6S418-eat, A8S418-animal).
english(barrons.rule1143, "Some animals predators eat other animals prey").
pretty(barrons.rule1143, "isa(eat, 'eat') -> eat(Predator, Animal).").
barrons.rule1143:: isa(E6S418-eat, "eat") -> agent(E6S418-eat, A4S418-predator), isa(A4S418-predator, "predators"), object(E6S418-eat, A8S418-animal), isa(A8S418-animal, "other animals").
english(barrons.rule1144, "Some animals predators eat other animals prey").
pretty(barrons.rule1144, "isa(Predator, 'predators') -> eat(Predator, Animal).").
barrons.rule1144:: isa(A4S418-predator, "predators") -> isa(E6S418-eat, "eat"), agent(E6S418-eat, A4S418-predator), object(E6S418-eat, A8S418-animal), isa(A8S418-animal, "other animals").
english(barrons.rule1145, "Some animals predators eat other animals prey").
pretty(barrons.rule1145, "isa(Animal, 'other animals') -> eat(Predator, Animal).").
barrons.rule1145:: isa(A8S418-animal, "other animals") -> isa(E6S418-eat, "eat"), agent(E6S418-eat, A4S418-predator), isa(A4S418-predator, "predators"), object(E6S418-eat, A8S418-animal).
english(barrons.rule1146, "Animals that eat plants for food may in turn become food for other animals").
pretty(barrons.rule1146, "PURPOSE(become(Animal, Food), Animal), Animal = 'Animals', Food = 'food for other animals', Animal = 'other animals'.").
barrons.rule1146:: isa(E10S420-become, "become"), agent(E10S420-become, A1S420-animal), isa(A1S420-animal, "Animals"), object(E10S420-become, A11S420-food), isa(A11S420-food, "food") -> purpose(E10S420-become, A14S420-animal), isa(A14S420-animal, "other animals").
english(barrons.rule1147, "Animals that eat plants for food may in turn become food for other animals").
pretty(barrons.rule1147, "PURPOSE(become(Animal, Food), Animal), Animal = 'Animals', Food = 'food for other animals', Animal = 'other animals'.").
barrons.rule1147:: isa(A14S420-animal, "other animals") -> purpose(E10S420-become, A14S420-animal), isa(E10S420-become, "become"), agent(E10S420-become, A1S420-animal), isa(A1S420-animal, "Animals"), object(E10S420-become, A11S420-food), isa(A11S420-food, "food").
english(barrons.rule1148, "This sequence is called a food chain").
pretty(barrons.rule1148, "EXAMPLE(Sequence, Chain), Sequence = 'This sequence', Chain = 'a food chain'.").
barrons.rule1148:: isa(A2S421-sequence, "This sequence") -> example(A2S421-sequence, A7S421-chain), isa(A7S421-chain, "a food chain").
english(barrons.rule1149, "This sequence is called a food chain").
pretty(barrons.rule1149, "EXAMPLE(Sequence, Chain), Sequence = 'This sequence', Chain = 'a food chain'.").
barrons.rule1149:: isa(A7S421-chain, "a food chain") -> example(A2S421-sequence, A7S421-chain), isa(A2S421-sequence, "This sequence").
english(barrons.rule1150, "Producers are living things that change the sun 's energy to make their[producers] own food").
pretty(barrons.rule1150, "EXAMPLE(Producer, change(Thing, Energy, Make)), Producer = 'Producers', Thing = 'living things', Energy = 'the sun ’s energy', Make = 'make their[producers] own food'.").
barrons.rule1150:: isa(A1S423-producer, "Producers") -> example(A1S423-producer, A4S423-thing), isa(E6S423-change, "change"), agent(E6S423-change, A4S423-thing), isa(A4S423-thing, "living things"), object(E6S423-change, A10S423-energy), isa(A10S423-energy, "the sun 's energy"), arg(E6S423-change, A12S423-make), isa(A12S423-make, "to make their[producers] own food"), isa(A1S423-producer, A4S423-thing).
english(barrons.rule1151, "Producers are living things that change the sun 's energy to make their[producers] own food").
pretty(barrons.rule1151, "EXAMPLE(Producer, change(Thing, Energy, Make)), Producer = 'Producers', Thing = 'living things', Energy = 'the sun ’s energy', Make = 'make their[producers] own food'.").
barrons.rule1151:: isa(E6S423-change, "change"), agent(E6S423-change, A4S423-thing), isa(A4S423-thing, "living things"), object(E6S423-change, A10S423-energy), isa(A10S423-energy, "the sun 's energy"), arg(E6S423-change, A12S423-make), isa(A12S423-make, "to make their[producers] own food") -> example(A1S423-producer, A4S423-thing), isa(A1S423-producer, "Producers"), isa(A1S423-producer, A4S423-thing).
english(barrons.rule1152, "Producers are living things that change the sun 's energy to make their[producers] own food").
pretty(barrons.rule1152, "EXAMPLE(Producer, Thing), Producer = 'Producers', Thing = 'living things'.").
barrons.rule1152:: isa(A1S423-producer, "Producers") -> example(A1S423-producer, A4S423-thing), isa(A4S423-thing, "living things").
english(barrons.rule1153, "Producers are living things that change the sun 's energy to make their[producers] own food").
pretty(barrons.rule1153, "EXAMPLE(Producer, Thing), Producer = 'Producers', Thing = 'living things'.").
barrons.rule1153:: isa(A4S423-thing, "living things") -> example(A1S423-producer, A4S423-thing), isa(A1S423-producer, "Producers").
english(barrons.rule1154, "Green plants do this by photosynthesis").
pretty(barrons.rule1154, "isa(do, 'do') -> do_by(Plant, This, Photosynthesis).").
barrons.rule1154:: isa(E3S424-do, "do") -> agent(E3S424-do, A2S424-plant), isa(A2S424-plant, "Green plants"), object(E3S424-do, A4S424-this), isa(A4S424-this, "this"), by(E3S424-do, A6S424-photosynthesis), isa(A6S424-photosynthesis, "photosynthesis").
english(barrons.rule1155, "Green plants do this by photosynthesis").
pretty(barrons.rule1155, "isa(Plant, 'Green plants') -> do_by(Plant, This, Photosynthesis).").
barrons.rule1155:: isa(A2S424-plant, "Green plants") -> isa(E3S424-do, "do"), agent(E3S424-do, A2S424-plant), object(E3S424-do, A4S424-this), isa(A4S424-this, "this"), by(E3S424-do, A6S424-photosynthesis), isa(A6S424-photosynthesis, "photosynthesis").
english(barrons.rule1156, "Green plants do this by photosynthesis").
pretty(barrons.rule1156, "isa(This, 'this') -> do_by(Plant, This, Photosynthesis).").
barrons.rule1156:: isa(A4S424-this, "this") -> isa(E3S424-do, "do"), agent(E3S424-do, A2S424-plant), isa(A2S424-plant, "Green plants"), object(E3S424-do, A4S424-this), by(E3S424-do, A6S424-photosynthesis), isa(A6S424-photosynthesis, "photosynthesis").
english(barrons.rule1157, "Green plants do this by photosynthesis").
pretty(barrons.rule1157, "isa(Photosynthesis, 'photosynthesis') -> do_by(Plant, This, Photosynthesis).").
barrons.rule1157:: isa(A6S424-photosynthesis, "photosynthesis") -> isa(E3S424-do, "do"), agent(E3S424-do, A2S424-plant), isa(A2S424-plant, "Green plants"), object(E3S424-do, A4S424-this), isa(A4S424-this, "this"), by(E3S424-do, A6S424-photosynthesis).
english(barrons.rule1158, "Consumers are living things that feed on others").
pretty(barrons.rule1158, "EXAMPLE(Consumer, feed_on(Thing, Other)), Consumer = 'Consumers', Thing = 'living things', Other = 'others'.").
barrons.rule1158:: isa(A1S425-consumer, "Consumers") -> example(A1S425-consumer, A4S425-thing), isa(E6S425-feed, "feed"), agent(E6S425-feed, A4S425-thing), isa(A4S425-thing, "living things"), on(E6S425-feed, A8S425-other), isa(A8S425-other, "others"), isa(A1S425-consumer, A4S425-thing).
english(barrons.rule1159, "Consumers are living things that feed on others").
pretty(barrons.rule1159, "EXAMPLE(Consumer, feed_on(Thing, Other)), Consumer = 'Consumers', Thing = 'living things', Other = 'others'.").
barrons.rule1159:: isa(E6S425-feed, "feed"), agent(E6S425-feed, A4S425-thing), isa(A4S425-thing, "living things"), on(E6S425-feed, A8S425-other), isa(A8S425-other, "others") -> example(A1S425-consumer, A4S425-thing), isa(A1S425-consumer, "Consumers"), isa(A1S425-consumer, A4S425-thing).
english(barrons.rule1160, "Consumers are living things that feed on others").
pretty(barrons.rule1160, "EXAMPLE(Consumer, Thing), Consumer = 'Consumers', Thing = 'living things'.").
barrons.rule1160:: isa(A1S425-consumer, "Consumers") -> example(A1S425-consumer, A4S425-thing), isa(A4S425-thing, "living things").
english(barrons.rule1161, "Consumers are living things that feed on others").
pretty(barrons.rule1161, "EXAMPLE(Consumer, Thing), Consumer = 'Consumers', Thing = 'living things'.").
barrons.rule1161:: isa(A4S425-thing, "living things") -> example(A1S425-consumer, A4S425-thing), isa(A1S425-consumer, "Consumers").
english(barrons.rule1162, "A primary 1st consumer eats producers plants").
pretty(barrons.rule1162, "isa(eat, 'eats') -> eat(Consumer, Producer).").
barrons.rule1162:: isa(E7S426-eat, "eat") -> agent(E7S426-eat, A6S426-consumer), isa(A6S426-consumer, "A primary 1st consumer"), object(E7S426-eat, A8S426-producer), isa(A8S426-producer, "producers").
english(barrons.rule1163, "A primary 1st consumer eats producers plants").
pretty(barrons.rule1163, "isa(Consumer, 'A primary 1st consumer') -> eat(Consumer, Producer).").
barrons.rule1163:: isa(A6S426-consumer, "A primary 1st consumer") -> isa(E7S426-eat, "eat"), agent(E7S426-eat, A6S426-consumer), object(E7S426-eat, A8S426-producer), isa(A8S426-producer, "producers").
english(barrons.rule1164, "A primary 1st consumer eats producers plants").
pretty(barrons.rule1164, "isa(Producer, 'producers') -> eat(Consumer, Producer).").
barrons.rule1164:: isa(A8S426-producer, "producers") -> isa(E7S426-eat, "eat"), agent(E7S426-eat, A6S426-consumer), isa(A6S426-consumer, "A primary 1st consumer"), object(E7S426-eat, A8S426-producer).
english(barrons.rule1165, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
pretty(barrons.rule1165, "EXAMPLE(Decomposer, break down(Thing, Organism)), Decomposer = 'Decomposers', Thing = 'living things', Organism = 'dead organisms'.").
barrons.rule1165:: isa(A1S429-decomposer, "Decomposers") -> example(A1S429-decomposer, A4S429-thing), isa(E6S429-break, "break down"), agent(E6S429-break, A4S429-thing), isa(A4S429-thing, "living things"), object(E6S429-break, A9S429-organism), isa(A9S429-organism, "dead organisms"), isa(A1S429-decomposer, A4S429-thing).
english(barrons.rule1166, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
pretty(barrons.rule1166, "EXAMPLE(Decomposer, break down(Thing, Organism)), Decomposer = 'Decomposers', Thing = 'living things', Organism = 'dead organisms'.").
barrons.rule1166:: isa(E6S429-break, "break down"), agent(E6S429-break, A4S429-thing), isa(A4S429-thing, "living things"), object(E6S429-break, A9S429-organism), isa(A9S429-organism, "dead organisms") -> example(A1S429-decomposer, A4S429-thing), isa(A1S429-decomposer, "Decomposers"), isa(A1S429-decomposer, A4S429-thing).
english(barrons.rule1167, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
pretty(barrons.rule1167, "EXAMPLE(Decomposer, recycle_into(Thing, Nutrient, Soil)), Decomposer = 'Decomposers', Thing = 'living things', Nutrient = 'their[dead organisms] nutrients', Soil = 'the soil'.").
barrons.rule1167:: isa(A1S429-decomposer, "Decomposers") -> example(A1S429-decomposer, A4S429-thing), isa(E11S429-recycle, "recycle"), agent(E11S429-recycle, A4S429-thing), isa(A4S429-thing, "living things"), object(E11S429-recycle, A13S429-nutrient), isa(A13S429-nutrient, "their[dead organisms] nutrients"), into(E11S429-recycle, A16S429-soil), isa(A16S429-soil, "the soil"), isa(A1S429-decomposer, A4S429-thing).
english(barrons.rule1168, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
pretty(barrons.rule1168, "EXAMPLE(Decomposer, recycle_into(Thing, Nutrient, Soil)), Decomposer = 'Decomposers', Thing = 'living things', Nutrient = 'their[dead organisms] nutrients', Soil = 'the soil'.").
barrons.rule1168:: isa(E11S429-recycle, "recycle"), agent(E11S429-recycle, A4S429-thing), isa(A4S429-thing, "living things"), object(E11S429-recycle, A13S429-nutrient), isa(A13S429-nutrient, "their[dead organisms] nutrients"), into(E11S429-recycle, A16S429-soil), isa(A16S429-soil, "the soil") -> example(A1S429-decomposer, A4S429-thing), isa(A1S429-decomposer, "Decomposers"), isa(A1S429-decomposer, A4S429-thing).
english(barrons.rule1169, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
pretty(barrons.rule1169, "EXAMPLE(Decomposer, Thing), Decomposer = 'Decomposers', Thing = 'living things'.").
barrons.rule1169:: isa(A1S429-decomposer, "Decomposers") -> example(A1S429-decomposer, A4S429-thing), isa(A4S429-thing, "living things").
english(barrons.rule1170, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
pretty(barrons.rule1170, "EXAMPLE(Decomposer, Thing), Decomposer = 'Decomposers', Thing = 'living things'.").
barrons.rule1170:: isa(A4S429-thing, "living things") -> example(A1S429-decomposer, A4S429-thing), isa(A1S429-decomposer, "Decomposers").
english(barrons.rule1171, "Human decisions and activities have had a major impact on the physical and living environments").
pretty(barrons.rule1171, "isa(Environment, 'the physical and living environments') -> have(Decision, Impact).").
barrons.rule1171:: isa(A15S433-environment, "the physical and living environments") -> on(A9S433-impact, A15S433-environment), isa(E6S433-have, "have"), agent(E6S433-have, A2S433-decision), isa(A2S433-decision, "Human decisions"), object(E6S433-have, A9S433-impact), isa(A9S433-impact, "a major impact").
english(barrons.rule1172, "Human decisions and activities have had a major impact on the physical and living environments").
pretty(barrons.rule1172, "isa(have, 'had') -> have(Decision, Impact).").
barrons.rule1172:: isa(E6S433-have, "have") -> on(A9S433-impact, A15S433-environment), isa(A15S433-environment, "the physical and living environments"), agent(E6S433-have, A2S433-decision), isa(A2S433-decision, "Human decisions"), object(E6S433-have, A9S433-impact), isa(A9S433-impact, "a major impact").
english(barrons.rule1173, "Human decisions and activities have had a major impact on the physical and living environments").
pretty(barrons.rule1173, "isa(Decision, 'Human decisions') -> have(Decision, Impact).").
barrons.rule1173:: isa(A2S433-decision, "Human decisions") -> on(A9S433-impact, A15S433-environment), isa(A15S433-environment, "the physical and living environments"), isa(E6S433-have, "have"), agent(E6S433-have, A2S433-decision), object(E6S433-have, A9S433-impact), isa(A9S433-impact, "a major impact").
english(barrons.rule1174, "Human decisions and activities have had a major impact on the physical and living environments").
pretty(barrons.rule1174, "isa(Impact, 'a major impact on the physical and living environments') -> have(Decision, Impact).").
barrons.rule1174:: isa(A9S433-impact, "a major impact") -> on(A9S433-impact, A15S433-environment), isa(A15S433-environment, "the physical and living environments"), isa(E6S433-have, "have"), agent(E6S433-have, A2S433-decision), isa(A2S433-decision, "Human decisions"), object(E6S433-have, A9S433-impact).
english(barrons.rule1175, "Human decisions and activities have had a major impact on the physical and living environments").
pretty(barrons.rule1175, "isa(Environment, 'the physical and living environments') -> have(Activity, Impact).").
barrons.rule1175:: isa(A15S433-environment, "the physical and living environments") -> on(A9S433-impact, A15S433-environment), isa(E6S433-have, "have"), agent(E6S433-have, A4S433-activity), isa(A4S433-activity, "activities"), object(E6S433-have, A9S433-impact), isa(A9S433-impact, "a major impact").
english(barrons.rule1176, "Human decisions and activities have had a major impact on the physical and living environments").
pretty(barrons.rule1176, "isa(have, 'had') -> have(Activity, Impact).").
barrons.rule1176:: isa(E6S433-have, "have") -> on(A9S433-impact, A15S433-environment), isa(A15S433-environment, "the physical and living environments"), agent(E6S433-have, A4S433-activity), isa(A4S433-activity, "activities"), object(E6S433-have, A9S433-impact), isa(A9S433-impact, "a major impact").
english(barrons.rule1177, "Human decisions and activities have had a major impact on the physical and living environments").
pretty(barrons.rule1177, "isa(Activity, 'activities') -> have(Activity, Impact).").
barrons.rule1177:: isa(A4S433-activity, "activities") -> on(A9S433-impact, A15S433-environment), isa(A15S433-environment, "the physical and living environments"), isa(E6S433-have, "have"), agent(E6S433-have, A4S433-activity), object(E6S433-have, A9S433-impact), isa(A9S433-impact, "a major impact").
english(barrons.rule1178, "Human decisions and activities have had a major impact on the physical and living environments").
pretty(barrons.rule1178, "isa(Impact, 'a major impact on the physical and living environments') -> have(Activity, Impact).").
barrons.rule1178:: isa(A9S433-impact, "a major impact") -> on(A9S433-impact, A15S433-environment), isa(A15S433-environment, "the physical and living environments"), isa(E6S433-have, "have"), agent(E6S433-have, A4S433-activity), isa(A4S433-activity, "activities"), object(E6S433-have, A9S433-impact).
english(barrons.rule1179, "Humans are dependent upon the environment for food shelter and energy").
pretty(barrons.rule1179, "PURPOSE(be_upon(Human, Dependent, Environment), Food), Human = 'Humans', Dependent = 'dependent upon the environment for food shelter and energy', Environment = 'the environment for food shelter and energy', Food = 'food'.").
barrons.rule1179:: isa(E2S434-be, "be"), agent(E2S434-be, A1S434-human), isa(A1S434-human, "Humans"), object(E2S434-be, A3S434-dependent), isa(A3S434-dependent, "dependent"), upon(E2S434-be, A6S434-environment), isa(A6S434-environment, "the environment for food shelter and energy") -> purpose(E2S434-be, A8S434-food), isa(A8S434-food, "food").
english(barrons.rule1180, "Humans are dependent upon the environment for food shelter and energy").
pretty(barrons.rule1180, "PURPOSE(be_upon(Human, Dependent, Environment), Food), Human = 'Humans', Dependent = 'dependent upon the environment for food shelter and energy', Environment = 'the environment for food shelter and energy', Food = 'food'.").
barrons.rule1180:: isa(A8S434-food, "food") -> purpose(E2S434-be, A8S434-food), isa(E2S434-be, "be"), agent(E2S434-be, A1S434-human), isa(A1S434-human, "Humans"), object(E2S434-be, A3S434-dependent), isa(A3S434-dependent, "dependent"), upon(E2S434-be, A6S434-environment), isa(A6S434-environment, "the environment for food shelter and energy").
english(barrons.rule1181, "Humans are dependent upon the environment for food shelter and energy").
pretty(barrons.rule1181, "PURPOSE(be_upon(Human, Dependent, Environment), Shelter), Human = 'Humans', Dependent = 'dependent upon the environment for food shelter and energy', Environment = 'the environment for food shelter and energy', Shelter = 'shelter'.").
barrons.rule1181:: isa(E2S434-be, "be"), agent(E2S434-be, A1S434-human), isa(A1S434-human, "Humans"), object(E2S434-be, A3S434-dependent), isa(A3S434-dependent, "dependent"), upon(E2S434-be, A6S434-environment), isa(A6S434-environment, "the environment for food shelter and energy") -> purpose(E2S434-be, A10S434-shelter), isa(A10S434-shelter, "shelter").
english(barrons.rule1182, "Humans are dependent upon the environment for food shelter and energy").
pretty(barrons.rule1182, "PURPOSE(be_upon(Human, Dependent, Environment), Shelter), Human = 'Humans', Dependent = 'dependent upon the environment for food shelter and energy', Environment = 'the environment for food shelter and energy', Shelter = 'shelter'.").
barrons.rule1182:: isa(A10S434-shelter, "shelter") -> purpose(E2S434-be, A10S434-shelter), isa(E2S434-be, "be"), agent(E2S434-be, A1S434-human), isa(A1S434-human, "Humans"), object(E2S434-be, A3S434-dependent), isa(A3S434-dependent, "dependent"), upon(E2S434-be, A6S434-environment), isa(A6S434-environment, "the environment for food shelter and energy").
english(barrons.rule1183, "Humans are dependent upon the environment for food shelter and energy").
pretty(barrons.rule1183, "PURPOSE(be_upon(Human, Dependent, Environment), Energy), Human = 'Humans', Dependent = 'dependent upon the environment for food shelter and energy', Environment = 'the environment for food shelter and energy', Energy = 'energy'.").
barrons.rule1183:: isa(E2S434-be, "be"), agent(E2S434-be, A1S434-human), isa(A1S434-human, "Humans"), object(E2S434-be, A3S434-dependent), isa(A3S434-dependent, "dependent"), upon(E2S434-be, A6S434-environment), isa(A6S434-environment, "the environment for food shelter and energy") -> purpose(E2S434-be, A13S434-energy), isa(A13S434-energy, "energy").
english(barrons.rule1184, "Humans are dependent upon the environment for food shelter and energy").
pretty(barrons.rule1184, "PURPOSE(be_upon(Human, Dependent, Environment), Energy), Human = 'Humans', Dependent = 'dependent upon the environment for food shelter and energy', Environment = 'the environment for food shelter and energy', Energy = 'energy'.").
barrons.rule1184:: isa(A13S434-energy, "energy") -> purpose(E2S434-be, A13S434-energy), isa(E2S434-be, "be"), agent(E2S434-be, A1S434-human), isa(A1S434-human, "Humans"), object(E2S434-be, A3S434-dependent), isa(A3S434-dependent, "dependent"), upon(E2S434-be, A6S434-environment), isa(A6S434-environment, "the environment for food shelter and energy").
english(barrons.rule1185, "Humans use resources from the environment to create shelters and energy").
pretty(barrons.rule1185, "EFFECT(use_from(Human, Resource, Environment), create(Human, Shelter)), Human = 'Humans', Resource = 'resources', Environment = 'the environment', Shelter = 'shelters'.").
barrons.rule1185:: isa(E2S439-use, "use"), agent(E2S439-use, A1S439-human), isa(A1S439-human, "Humans"), object(E2S439-use, A3S439-resource), isa(A3S439-resource, "resources"), from(E2S439-use, A6S439-environment), isa(A6S439-environment, "the environment") -> effect(E2S439-use, E8S439-create), isa(E8S439-create, "create"), agent(E8S439-create, A1S439-human), object(E8S439-create, A9S439-shelter), isa(A9S439-shelter, "shelters").
english(barrons.rule1186, "Humans use resources from the environment to create shelters and energy").
pretty(barrons.rule1186, "EFFECT(use_from(Human, Resource, Environment), create(Human, Shelter)), Human = 'Humans', Resource = 'resources', Environment = 'the environment', Shelter = 'shelters'.").
barrons.rule1186:: isa(E8S439-create, "create"), agent(E8S439-create, A1S439-human), isa(A1S439-human, "Humans"), object(E8S439-create, A9S439-shelter), isa(A9S439-shelter, "shelters") -> effect(E2S439-use, E8S439-create), isa(E2S439-use, "use"), agent(E2S439-use, A1S439-human), object(E2S439-use, A3S439-resource), isa(A3S439-resource, "resources"), from(E2S439-use, A6S439-environment), isa(A6S439-environment, "the environment").
english(barrons.rule1187, "Humans use resources from the environment to create shelters and energy").
pretty(barrons.rule1187, "EFFECT(use_from(Human, Resource, Environment), create(Human, Energy)), Human = 'Humans', Resource = 'resources', Environment = 'the environment', Energy = 'energy'.").
barrons.rule1187:: isa(E2S439-use, "use"), agent(E2S439-use, A1S439-human), isa(A1S439-human, "Humans"), object(E2S439-use, A3S439-resource), isa(A3S439-resource, "resources"), from(E2S439-use, A6S439-environment), isa(A6S439-environment, "the environment") -> effect(E2S439-use, E8S439-create), isa(E8S439-create, "create"), agent(E8S439-create, A1S439-human), object(E8S439-create, A11S439-energy), isa(A11S439-energy, "energy").
english(barrons.rule1188, "Humans use resources from the environment to create shelters and energy").
pretty(barrons.rule1188, "EFFECT(use_from(Human, Resource, Environment), create(Human, Energy)), Human = 'Humans', Resource = 'resources', Environment = 'the environment', Energy = 'energy'.").
barrons.rule1188:: isa(E8S439-create, "create"), agent(E8S439-create, A1S439-human), isa(A1S439-human, "Humans"), object(E8S439-create, A11S439-energy), isa(A11S439-energy, "energy") -> effect(E2S439-use, E8S439-create), isa(E2S439-use, "use"), agent(E2S439-use, A1S439-human), object(E2S439-use, A3S439-resource), isa(A3S439-resource, "resources"), from(E2S439-use, A6S439-environment), isa(A6S439-environment, "the environment").
english(barrons.rule1189, "By using materials that are found naturally in the environment humans must be responsible and make sure that they[materials that are found naturally in the environment] do not create problems for nature").
pretty(barrons.rule1189, "ENABLE(use(Human, Material), be(Human, Responsible)), Human = 'humans', Material = 'materials', Responsible = 'By using materials that are found naturally in the environment responsible'.").
barrons.rule1189:: isa(E2S440-use, "use"), agent(E2S440-use, A11S440-human), isa(A11S440-human, "humans"), object(E2S440-use, A3S440-material), isa(A3S440-material, "materials") -> enable(E2S440-use, E13S440-be), isa(E13S440-be, "be"), agent(E13S440-be, A11S440-human), object(E13S440-be, A14S440-responsible), isa(A14S440-responsible, "responsible").
english(barrons.rule1190, "By using materials that are found naturally in the environment humans must be responsible and make sure that they[materials that are found naturally in the environment] do not create problems for nature").
pretty(barrons.rule1190, "ENABLE(use(Human, Material), be(Human, Responsible)), Human = 'humans', Material = 'materials', Responsible = 'By using materials that are found naturally in the environment responsible'.").
barrons.rule1190:: isa(E13S440-be, "be"), agent(E13S440-be, A11S440-human), isa(A11S440-human, "humans"), object(E13S440-be, A14S440-responsible), isa(A14S440-responsible, "responsible") -> enable(E2S440-use, E13S440-be), isa(E2S440-use, "use"), agent(E2S440-use, A11S440-human), object(E2S440-use, A3S440-material), isa(A3S440-material, "materials").
english(barrons.rule1191, "By using materials that are found naturally in the environment humans must be responsible and make sure that they[materials that are found naturally in the environment] do not create problems for nature").
pretty(barrons.rule1191, "PURPOSE(not create(Material, Problem), Nature), Material = 'materials', Problem = 'problems for nature', Nature = 'nature'.").
barrons.rule1191:: for(A23S440-problem, A25S440-nature), isa(A25S440-nature, "nature"), isa(E22S440-create, "not create"), agent(E22S440-create, A3S440-material), isa(A3S440-material, "materials"), object(E22S440-create, A23S440-problem), isa(A23S440-problem, "problems") -> purpose(E22S440-create, A25S440-nature).
english(barrons.rule1192, "By using materials that are found naturally in the environment humans must be responsible and make sure that they[materials that are found naturally in the environment] do not create problems for nature").
pretty(barrons.rule1192, "PURPOSE(not create(Material, Problem), Nature), Material = 'materials', Problem = 'problems for nature', Nature = 'nature'.").
barrons.rule1192:: isa(A25S440-nature, "nature") -> purpose(E22S440-create, A25S440-nature), for(A23S440-problem, A25S440-nature), isa(E22S440-create, "not create"), agent(E22S440-create, A3S440-material), isa(A3S440-material, "materials"), object(E22S440-create, A23S440-problem), isa(A23S440-problem, "problems").
english(barrons.rule1193, "Humans use wood to build homes which comes from trees").
pretty(barrons.rule1193, "EFFECT(use(Human, Wood), build(Human, Home)), Human = 'Humans', Wood = 'wood', Home = 'homes'.").
barrons.rule1193:: isa(E2S441-use, "use"), agent(E2S441-use, A1S441-human), isa(A1S441-human, "Humans"), object(E2S441-use, A3S441-wood), isa(A3S441-wood, "wood") -> effect(E2S441-use, E5S441-build), isa(E5S441-build, "build"), agent(E5S441-build, A1S441-human), object(E5S441-build, A6S441-home), isa(A6S441-home, "homes").
english(barrons.rule1194, "Humans use wood to build homes which comes from trees").
pretty(barrons.rule1194, "EFFECT(use(Human, Wood), build(Human, Home)), Human = 'Humans', Wood = 'wood', Home = 'homes'.").
barrons.rule1194:: isa(E5S441-build, "build"), agent(E5S441-build, A1S441-human), isa(A1S441-human, "Humans"), object(E5S441-build, A6S441-home), isa(A6S441-home, "homes") -> effect(E2S441-use, E5S441-build), isa(E2S441-use, "use"), agent(E2S441-use, A1S441-human), object(E2S441-use, A3S441-wood), isa(A3S441-wood, "wood").
english(barrons.rule1195, "Cutting down too many trees has resulted in many forest animals no longer having homes").
pretty(barrons.rule1195, "EFFECT(cut(Animal, Tree, Down), have(Animal, Home, Longer)), Animal = 'many forest animals', Tree = 'too many trees', Down = 'down', Home = 'homes', Longer = 'longer'.").
barrons.rule1195:: isa(E1S442-cut, "cut"), agent(E1S442-cut, A11S442-animal), isa(A11S442-animal, "many forest animals"), object(E1S442-cut, A5S442-tree), isa(A5S442-tree, "too many trees"), arg(E1S442-cut, A2S442-down), isa(A2S442-down, "down") -> effect(E1S442-cut, E14S442-have), isa(E14S442-have, "have"), agent(E14S442-have, A11S442-animal), object(E14S442-have, A15S442-home), isa(A15S442-home, "homes"), arg(E14S442-have, A13S442-longer), isa(A13S442-longer, "no longer").
english(barrons.rule1196, "Cutting down too many trees has resulted in many forest animals no longer having homes").
pretty(barrons.rule1196, "EFFECT(cut(Animal, Tree, Down), have(Animal, Home, Longer)), Animal = 'many forest animals', Tree = 'too many trees', Down = 'down', Home = 'homes', Longer = 'longer'.").
barrons.rule1196:: isa(E14S442-have, "have"), agent(E14S442-have, A11S442-animal), isa(A11S442-animal, "many forest animals"), object(E14S442-have, A15S442-home), isa(A15S442-home, "homes"), arg(E14S442-have, A13S442-longer), isa(A13S442-longer, "no longer") -> effect(E1S442-cut, E14S442-have), isa(E1S442-cut, "cut"), agent(E1S442-cut, A11S442-animal), object(E1S442-cut, A5S442-tree), isa(A5S442-tree, "too many trees"), arg(E1S442-cut, A2S442-down), isa(A2S442-down, "down").
english(barrons.rule1197, "Humans also use materials found in nature to create energy").
pretty(barrons.rule1197, "EFFECT(use(Human, Material), create(Human, Energy)), Human = 'Humans', Material = 'materials', Energy = 'energy'.").
barrons.rule1197:: isa(E3S443-use, "use"), agent(E3S443-use, A1S443-human), isa(A1S443-human, "Humans"), object(E3S443-use, A4S443-material), isa(A4S443-material, "materials") -> effect(E3S443-use, E9S443-create), isa(E9S443-create, "create"), agent(E9S443-create, A1S443-human), object(E9S443-create, A10S443-energy), isa(A10S443-energy, "energy").
english(barrons.rule1198, "Humans also use materials found in nature to create energy").
pretty(barrons.rule1198, "EFFECT(use(Human, Material), create(Human, Energy)), Human = 'Humans', Material = 'materials', Energy = 'energy'.").
barrons.rule1198:: isa(E9S443-create, "create"), agent(E9S443-create, A1S443-human), isa(A1S443-human, "Humans"), object(E9S443-create, A10S443-energy), isa(A10S443-energy, "energy") -> effect(E3S443-use, E9S443-create), isa(E3S443-use, "use"), agent(E3S443-use, A1S443-human), object(E3S443-use, A4S443-material), isa(A4S443-material, "materials").
english(barrons.rule1199, "We use fossil fuels to make gasoline so that we[We] can drive cars and trucks and fly planes").
pretty(barrons.rule1199, "EFFECT(use(We, Fuel), make(We, Gasoline)), We = 'We', Fuel = 'fossil fuels', Gasoline = 'gasoline'.").
barrons.rule1199:: isa(E2S444-use, "use"), agent(E2S444-use, A1S444-we), isa(A1S444-we, "We"), object(E2S444-use, A4S444-fuel), isa(A4S444-fuel, "fossil fuels") -> effect(E2S444-use, E6S444-make), isa(E6S444-make, "make"), agent(E6S444-make, A1S444-we), object(E6S444-make, A7S444-gasoline), isa(A7S444-gasoline, "gasoline").
english(barrons.rule1200, "We use fossil fuels to make gasoline so that we[We] can drive cars and trucks and fly planes").
pretty(barrons.rule1200, "EFFECT(use(We, Fuel), make(We, Gasoline)), We = 'We', Fuel = 'fossil fuels', Gasoline = 'gasoline'.").
barrons.rule1200:: isa(E6S444-make, "make"), agent(E6S444-make, A1S444-we), isa(A1S444-we, "We"), object(E6S444-make, A7S444-gasoline), isa(A7S444-gasoline, "gasoline") -> effect(E2S444-use, E6S444-make), isa(E2S444-use, "use"), agent(E2S444-use, A1S444-we), object(E2S444-use, A4S444-fuel), isa(A4S444-fuel, "fossil fuels").
english(barrons.rule1201, "We use fossil fuels to make gasoline so that we[We] can drive cars and trucks and fly planes").
pretty(barrons.rule1201, "EFFECT(make(We, Gasoline), drive(We, Car)), We = 'We', Gasoline = 'gasoline', Car = 'cars'.").
barrons.rule1201:: isa(E6S444-make, "make"), agent(E6S444-make, A1S444-we), isa(A1S444-we, "We"), object(E6S444-make, A7S444-gasoline), isa(A7S444-gasoline, "gasoline") -> effect(E6S444-make, E12S444-drive), isa(E12S444-drive, "drive"), agent(E12S444-drive, A1S444-we), object(E12S444-drive, A13S444-car), isa(A13S444-car, "cars").
english(barrons.rule1202, "We use fossil fuels to make gasoline so that we[We] can drive cars and trucks and fly planes").
pretty(barrons.rule1202, "EFFECT(make(We, Gasoline), drive(We, Car)), We = 'We', Gasoline = 'gasoline', Car = 'cars'.").
barrons.rule1202:: isa(E12S444-drive, "drive"), agent(E12S444-drive, A1S444-we), isa(A1S444-we, "We"), object(E12S444-drive, A13S444-car), isa(A13S444-car, "cars") -> effect(E6S444-make, E12S444-drive), isa(E6S444-make, "make"), agent(E6S444-make, A1S444-we), object(E6S444-make, A7S444-gasoline), isa(A7S444-gasoline, "gasoline").
english(barrons.rule1203, "We use fossil fuels to make gasoline so that we[We] can drive cars and trucks and fly planes").
pretty(barrons.rule1203, "EFFECT(make(We, Gasoline), drive(We, Truck)), We = 'We', Gasoline = 'gasoline', Truck = 'trucks'.").
barrons.rule1203:: isa(E6S444-make, "make"), agent(E6S444-make, A1S444-we), isa(A1S444-we, "We"), object(E6S444-make, A7S444-gasoline), isa(A7S444-gasoline, "gasoline") -> effect(E6S444-make, E12S444-drive), isa(E12S444-drive, "drive"), agent(E12S444-drive, A1S444-we), object(E12S444-drive, A15S444-truck), isa(A15S444-truck, "trucks").
english(barrons.rule1204, "We use fossil fuels to make gasoline so that we[We] can drive cars and trucks and fly planes").
pretty(barrons.rule1204, "EFFECT(make(We, Gasoline), drive(We, Truck)), We = 'We', Gasoline = 'gasoline', Truck = 'trucks'.").
barrons.rule1204:: isa(E12S444-drive, "drive"), agent(E12S444-drive, A1S444-we), isa(A1S444-we, "We"), object(E12S444-drive, A15S444-truck), isa(A15S444-truck, "trucks") -> effect(E6S444-make, E12S444-drive), isa(E6S444-make, "make"), agent(E6S444-make, A1S444-we), object(E6S444-make, A7S444-gasoline), isa(A7S444-gasoline, "gasoline").
english(barrons.rule1205, "We use fossil fuels to make gasoline so that we[We] can drive cars and trucks and fly planes").
pretty(barrons.rule1205, "EFFECT(make(We, Gasoline), fly(We, Plane)), We = 'We', Gasoline = 'gasoline', Plane = 'planes'.").
barrons.rule1205:: isa(E6S444-make, "make"), agent(E6S444-make, A1S444-we), isa(A1S444-we, "We"), object(E6S444-make, A7S444-gasoline), isa(A7S444-gasoline, "gasoline") -> effect(E6S444-make, E17S444-fly), isa(E17S444-fly, "fly"), agent(E17S444-fly, A1S444-we), object(E17S444-fly, A18S444-plane), isa(A18S444-plane, "planes").
english(barrons.rule1206, "We use fossil fuels to make gasoline so that we[We] can drive cars and trucks and fly planes").
pretty(barrons.rule1206, "EFFECT(make(We, Gasoline), fly(We, Plane)), We = 'We', Gasoline = 'gasoline', Plane = 'planes'.").
barrons.rule1206:: isa(E17S444-fly, "fly"), agent(E17S444-fly, A1S444-we), isa(A1S444-we, "We"), object(E17S444-fly, A18S444-plane), isa(A18S444-plane, "planes") -> effect(E6S444-make, E17S444-fly), isa(E6S444-make, "make"), agent(E6S444-make, A1S444-we), object(E6S444-make, A7S444-gasoline), isa(A7S444-gasoline, "gasoline").
english(barrons.rule1207, "Fossil fuels like oil and natural gas are used to heat our[We] homes and power factories to make items that we[We] purchase").
pretty(barrons.rule1207, "PURPOSE(Fuel, heat(Fuel, Home)), Fuel = 'Fossil fuels like oil and natural gas', Home = 'our[We] homes'.").
barrons.rule1207:: like(A2S445-fuel, A4S445-oil), isa(A4S445-oil, "oil"), like(A2S445-fuel, A7S445-gas), isa(A7S445-gas, "natural gas"), isa(A2S445-fuel, "Fossil fuels") -> purpose(A2S445-fuel, E11S445-heat), isa(E11S445-heat, "heat"), agent(E11S445-heat, A2S445-fuel), object(E11S445-heat, A13S445-home), isa(A13S445-home, "our[We] homes").
english(barrons.rule1208, "Fossil fuels like oil and natural gas are used to heat our[We] homes and power factories to make items that we[We] purchase").
pretty(barrons.rule1208, "PURPOSE(Fuel, heat(Fuel, Home)), Fuel = 'Fossil fuels like oil and natural gas', Home = 'our[We] homes'.").
barrons.rule1208:: like(A2S445-fuel, A4S445-oil), isa(A4S445-oil, "oil"), like(A2S445-fuel, A7S445-gas), isa(A7S445-gas, "natural gas"), isa(E11S445-heat, "heat"), agent(E11S445-heat, A2S445-fuel), isa(A2S445-fuel, "Fossil fuels"), object(E11S445-heat, A13S445-home), isa(A13S445-home, "our[We] homes") -> purpose(A2S445-fuel, E11S445-heat).
english(barrons.rule1209, "Fossil fuels like oil and natural gas are used to heat our[We] homes and power factories to make items that we[We] purchase").
pretty(barrons.rule1209, "PURPOSE(Fuel, power factory(Fuel)), Fuel = 'Fossil fuels like oil and natural gas'.").
barrons.rule1209:: like(A2S445-fuel, A4S445-oil), isa(A4S445-oil, "oil"), like(A2S445-fuel, A7S445-gas), isa(A7S445-gas, "natural gas"), isa(A2S445-fuel, "Fossil fuels") -> purpose(A2S445-fuel, E16S445-factory), isa(E16S445-factory, "power factory"), agent(E16S445-factory, A2S445-fuel).
english(barrons.rule1210, "Fossil fuels like oil and natural gas are used to heat our[We] homes and power factories to make items that we[We] purchase").
pretty(barrons.rule1210, "PURPOSE(Fuel, power factory(Fuel)), Fuel = 'Fossil fuels like oil and natural gas'.").
barrons.rule1210:: like(A2S445-fuel, A4S445-oil), isa(A4S445-oil, "oil"), like(A2S445-fuel, A7S445-gas), isa(A7S445-gas, "natural gas"), isa(E16S445-factory, "power factory"), agent(E16S445-factory, A2S445-fuel), isa(A2S445-fuel, "Fossil fuels") -> purpose(A2S445-fuel, E16S445-factory).
english(barrons.rule1211, "Fossil fuels like oil and natural gas are used to heat our[We] homes and power factories to make items that we[We] purchase").
pretty(barrons.rule1211, "EFFECT(power factory, make(Item)), Item = 'items'.").
barrons.rule1211:: isa(E16S445-factory, "power factory") -> effect(E16S445-factory, E18S445-make), isa(E18S445-make, "make"), object(E18S445-make, A19S445-item), isa(A19S445-item, "items").
english(barrons.rule1212, "Fossil fuels like oil and natural gas are used to heat our[We] homes and power factories to make items that we[We] purchase").
pretty(barrons.rule1212, "EFFECT(power factory, make(Item)), Item = 'items'.").
barrons.rule1212:: isa(E18S445-make, "make"), object(E18S445-make, A19S445-item), isa(A19S445-item, "items") -> effect(E16S445-factory, E18S445-make), isa(E16S445-factory, "power factory").
english(barrons.rule1213, "It[oil and natural gas] can take thousands of years for certain fossil fuels to be created").
pretty(barrons.rule1213, "isa(Year, 'years for certain fossil fuels to be created') -> take(Oil, Thousand).").
barrons.rule1213:: isa(A6S446-year, "years") -> of(A4S446-thousand, A6S446-year), isa(E3S446-take, "take"), agent(E3S446-take, A4S445-oil), isa(A4S445-oil, "oil"), object(E3S446-take, A4S446-thousand), isa(A4S446-thousand, "thousands").
english(barrons.rule1214, "It[oil and natural gas] can take thousands of years for certain fossil fuels to be created").
pretty(barrons.rule1214, "isa(take, 'take') -> take(Oil, Thousand).").
barrons.rule1214:: isa(E3S446-take, "take") -> of(A4S446-thousand, A6S446-year), isa(A6S446-year, "years"), agent(E3S446-take, A4S445-oil), isa(A4S445-oil, "oil"), object(E3S446-take, A4S446-thousand), isa(A4S446-thousand, "thousands").
english(barrons.rule1215, "It[oil and natural gas] can take thousands of years for certain fossil fuels to be created").
pretty(barrons.rule1215, "isa(Oil, 'oil') -> take(Oil, Thousand).").
barrons.rule1215:: isa(A4S445-oil, "oil") -> of(A4S446-thousand, A6S446-year), isa(A6S446-year, "years"), isa(E3S446-take, "take"), agent(E3S446-take, A4S445-oil), object(E3S446-take, A4S446-thousand), isa(A4S446-thousand, "thousands").
english(barrons.rule1216, "It[oil and natural gas] can take thousands of years for certain fossil fuels to be created").
pretty(barrons.rule1216, "isa(Thousand, 'thousands of years for certain fossil fuels to be created') -> take(Oil, Thousand).").
barrons.rule1216:: isa(A4S446-thousand, "thousands") -> of(A4S446-thousand, A6S446-year), isa(A6S446-year, "years"), isa(E3S446-take, "take"), agent(E3S446-take, A4S445-oil), isa(A4S445-oil, "oil"), object(E3S446-take, A4S446-thousand).
english(barrons.rule1217, "It[oil and natural gas] can take thousands of years for certain fossil fuels to be created").
pretty(barrons.rule1217, "isa(Year, 'years for certain fossil fuels to be created') -> take(Gas, Thousand).").
barrons.rule1217:: isa(A6S446-year, "years") -> of(A4S446-thousand, A6S446-year), isa(E3S446-take, "take"), agent(E3S446-take, A7S445-gas), isa(A7S445-gas, "natural gas"), object(E3S446-take, A4S446-thousand), isa(A4S446-thousand, "thousands").
english(barrons.rule1218, "It[oil and natural gas] can take thousands of years for certain fossil fuels to be created").
pretty(barrons.rule1218, "isa(take, 'take') -> take(Gas, Thousand).").
barrons.rule1218:: isa(E3S446-take, "take") -> of(A4S446-thousand, A6S446-year), isa(A6S446-year, "years"), agent(E3S446-take, A7S445-gas), isa(A7S445-gas, "natural gas"), object(E3S446-take, A4S446-thousand), isa(A4S446-thousand, "thousands").
english(barrons.rule1219, "It[oil and natural gas] can take thousands of years for certain fossil fuels to be created").
pretty(barrons.rule1219, "isa(Gas, 'natural gas') -> take(Gas, Thousand).").
barrons.rule1219:: isa(A7S445-gas, "natural gas") -> of(A4S446-thousand, A6S446-year), isa(A6S446-year, "years"), isa(E3S446-take, "take"), agent(E3S446-take, A7S445-gas), object(E3S446-take, A4S446-thousand), isa(A4S446-thousand, "thousands").
english(barrons.rule1220, "It[oil and natural gas] can take thousands of years for certain fossil fuels to be created").
pretty(barrons.rule1220, "isa(Thousand, 'thousands of years for certain fossil fuels to be created') -> take(Gas, Thousand).").
barrons.rule1220:: isa(A4S446-thousand, "thousands") -> of(A4S446-thousand, A6S446-year), isa(A6S446-year, "years"), isa(E3S446-take, "take"), agent(E3S446-take, A7S445-gas), isa(A7S445-gas, "natural gas"), object(E3S446-take, A4S446-thousand).
english(barrons.rule1221, "The way that humans treat the environment has a large effect on the survival of all living and nonliving things").
pretty(barrons.rule1221, "isa(Thing, 'all living and nonliving things') -> have(Way, Effect).").
barrons.rule1221:: isa(A20S449-thing, "all living and nonliving things") -> of(A14S449-survival, A20S449-thing), on(A11S449-effect, A14S449-survival), isa(A14S449-survival, "the survival"), isa(E8S449-have, "have"), agent(E8S449-have, A2S449-way), isa(A2S449-way, "The way"), object(E8S449-have, A11S449-effect), isa(A11S449-effect, "a large effect").
english(barrons.rule1222, "The way that humans treat the environment has a large effect on the survival of all living and nonliving things").
pretty(barrons.rule1222, "isa(Survival, 'the survival of all living and nonliving things') -> have(Way, Effect).").
barrons.rule1222:: isa(A14S449-survival, "the survival") -> of(A14S449-survival, A20S449-thing), isa(A20S449-thing, "all living and nonliving things"), on(A11S449-effect, A14S449-survival), isa(E8S449-have, "have"), agent(E8S449-have, A2S449-way), isa(A2S449-way, "The way"), object(E8S449-have, A11S449-effect), isa(A11S449-effect, "a large effect").
english(barrons.rule1223, "The way that humans treat the environment has a large effect on the survival of all living and nonliving things").
pretty(barrons.rule1223, "isa(have, 'has') -> have(Way, Effect).").
barrons.rule1223:: isa(E8S449-have, "have") -> of(A14S449-survival, A20S449-thing), isa(A20S449-thing, "all living and nonliving things"), on(A11S449-effect, A14S449-survival), isa(A14S449-survival, "the survival"), agent(E8S449-have, A2S449-way), isa(A2S449-way, "The way"), object(E8S449-have, A11S449-effect), isa(A11S449-effect, "a large effect").
english(barrons.rule1224, "The way that humans treat the environment has a large effect on the survival of all living and nonliving things").
pretty(barrons.rule1224, "isa(Way, 'The way') -> have(Way, Effect).").
barrons.rule1224:: isa(A2S449-way, "The way") -> of(A14S449-survival, A20S449-thing), isa(A20S449-thing, "all living and nonliving things"), on(A11S449-effect, A14S449-survival), isa(A14S449-survival, "the survival"), isa(E8S449-have, "have"), agent(E8S449-have, A2S449-way), object(E8S449-have, A11S449-effect), isa(A11S449-effect, "a large effect").
english(barrons.rule1225, "The way that humans treat the environment has a large effect on the survival of all living and nonliving things").
pretty(barrons.rule1225, "isa(Effect, 'a large effect on the survival of all living and nonliving things') -> have(Way, Effect).").
barrons.rule1225:: isa(A11S449-effect, "a large effect") -> of(A14S449-survival, A20S449-thing), isa(A20S449-thing, "all living and nonliving things"), on(A11S449-effect, A14S449-survival), isa(A14S449-survival, "the survival"), isa(E8S449-have, "have"), agent(E8S449-have, A2S449-way), isa(A2S449-way, "The way"), object(E8S449-have, A11S449-effect).
english(barrons.rule1226, "The way that humans treat the environment has a large effect on the survival of all living and nonliving things").
pretty(barrons.rule1226, "EFFECT(Way, large effect_on(Way, Survival)), Way = 'The way', Survival = 'the survival of all living and nonliving things'.").
barrons.rule1226:: isa(A2S449-way, "The way") -> effect(A2S449-way, E11S449-effect), isa(E11S449-effect, "a large effect"), agent(E11S449-effect, A2S449-way), on(E11S449-effect, A14S449-survival), isa(A14S449-survival, "the survival of all living and nonliving things").
english(barrons.rule1227, "The way that humans treat the environment has a large effect on the survival of all living and nonliving things").
pretty(barrons.rule1227, "EFFECT(Way, large effect_on(Way, Survival)), Way = 'The way', Survival = 'the survival of all living and nonliving things'.").
barrons.rule1227:: isa(E11S449-effect, "a large effect"), agent(E11S449-effect, A2S449-way), isa(A2S449-way, "The way"), on(E11S449-effect, A14S449-survival), isa(A14S449-survival, "the survival of all living and nonliving things") -> effect(A2S449-way, E11S449-effect).
english(barrons.rule1228, "As humans build homes stores and communities they[humans] displace the animals that live in those areas").
pretty(barrons.rule1228, "isa(displace, 'displace') -> displace(Human, Animal).").
barrons.rule1228:: isa(E11S450-displace, "displace") -> agent(E11S450-displace, A11S27-human), isa(A11S27-human, "humans"), object(E11S450-displace, A13S450-animal), isa(A13S450-animal, "the animals").
english(barrons.rule1229, "As humans build homes stores and communities they[humans] displace the animals that live in those areas").
pretty(barrons.rule1229, "isa(Human, 'humans') -> displace(Human, Animal).").
barrons.rule1229:: isa(A11S27-human, "humans") -> isa(E11S450-displace, "displace"), agent(E11S450-displace, A11S27-human), object(E11S450-displace, A13S450-animal), isa(A13S450-animal, "the animals").
english(barrons.rule1230, "As humans build homes stores and communities they[humans] displace the animals that live in those areas").
pretty(barrons.rule1230, "isa(Animal, 'the animals') -> displace(Human, Animal).").
barrons.rule1230:: isa(A13S450-animal, "the animals") -> isa(E11S450-displace, "displace"), agent(E11S450-displace, A11S27-human), isa(A11S27-human, "humans"), object(E11S450-displace, A13S450-animal).
english(barrons.rule1231, "As humans build homes stores and communities they[humans] displace the animals that live in those areas").
pretty(barrons.rule1231, "EFFECT(build(Human, Home), displace(Human, Animal)), Human = 'humans', Home = 'homes', Human = 'humans', Animal = 'the animals'.").
barrons.rule1231:: isa(E3S450-build, "build"), agent(E3S450-build, A2S450-human), isa(A2S450-human, "humans"), object(E3S450-build, A4S450-home), isa(A4S450-home, "homes") -> effect(E3S450-build, E11S450-displace), isa(E11S450-displace, "displace"), agent(E11S450-displace, A11S27-human), isa(A11S27-human, "humans"), object(E11S450-displace, A13S450-animal), isa(A13S450-animal, "the animals").
english(barrons.rule1232, "As humans build homes stores and communities they[humans] displace the animals that live in those areas").
pretty(barrons.rule1232, "EFFECT(build(Human, Home), displace(Human, Animal)), Human = 'humans', Home = 'homes', Human = 'humans', Animal = 'the animals'.").
barrons.rule1232:: isa(E11S450-displace, "displace"), agent(E11S450-displace, A11S27-human), isa(A11S27-human, "humans"), object(E11S450-displace, A13S450-animal), isa(A13S450-animal, "the animals") -> effect(E3S450-build, E11S450-displace), isa(E3S450-build, "build"), agent(E3S450-build, A2S450-human), isa(A2S450-human, "humans"), object(E3S450-build, A4S450-home), isa(A4S450-home, "homes").
english(barrons.rule1233, "If they[the animals that live in those areas] find new homes the animals could have difficulty finding food could be in danger of predators or might not adapt to the new environment").
pretty(barrons.rule1233, "isa(have, 'have') -> have(Animal, Difficulty).").
barrons.rule1233:: isa(E10S452-have, "have") -> agent(E10S452-have, A8S452-animal), isa(A8S452-animal, "the animals"), object(E10S452-have, A11S452-difficulty), isa(A11S452-difficulty, "difficulty").
english(barrons.rule1234, "If they[the animals that live in those areas] find new homes the animals could have difficulty finding food could be in danger of predators or might not adapt to the new environment").
pretty(barrons.rule1234, "isa(Animal, 'the animals') -> have(Animal, Difficulty).").
barrons.rule1234:: isa(A8S452-animal, "the animals") -> isa(E10S452-have, "have"), agent(E10S452-have, A8S452-animal), object(E10S452-have, A11S452-difficulty), isa(A11S452-difficulty, "difficulty").
english(barrons.rule1235, "If they[the animals that live in those areas] find new homes the animals could have difficulty finding food could be in danger of predators or might not adapt to the new environment").
pretty(barrons.rule1235, "isa(Difficulty, 'difficulty') -> have(Animal, Difficulty).").
barrons.rule1235:: isa(A11S452-difficulty, "difficulty") -> isa(E10S452-have, "have"), agent(E10S452-have, A8S452-animal), isa(A8S452-animal, "the animals"), object(E10S452-have, A11S452-difficulty).
english(barrons.rule1236, "If they[the animals that live in those areas] find new homes the animals could have difficulty finding food could be in danger of predators or might not adapt to the new environment").
pretty(barrons.rule1236, "EFFECT(find(Animal, Home), have(Animal, Difficulty)), Animal = 'the animals', Home = 'new homes', Animal = 'the animals', Difficulty = 'difficulty'.").
barrons.rule1236:: isa(E3S452-find, "find"), agent(E3S452-find, A13S450-animal), isa(A13S450-animal, "the animals"), object(E3S452-find, A5S452-home), isa(A5S452-home, "new homes") -> effect(E3S452-find, E10S452-have), isa(E10S452-have, "have"), agent(E10S452-have, A8S452-animal), isa(A8S452-animal, "the animals"), object(E10S452-have, A11S452-difficulty), isa(A11S452-difficulty, "difficulty").
english(barrons.rule1237, "If they[the animals that live in those areas] find new homes the animals could have difficulty finding food could be in danger of predators or might not adapt to the new environment").
pretty(barrons.rule1237, "EFFECT(find(Animal, Home), have(Animal, Difficulty)), Animal = 'the animals', Home = 'new homes', Animal = 'the animals', Difficulty = 'difficulty'.").
barrons.rule1237:: isa(E10S452-have, "have"), agent(E10S452-have, A8S452-animal), isa(A8S452-animal, "the animals"), object(E10S452-have, A11S452-difficulty), isa(A11S452-difficulty, "difficulty") -> effect(E3S452-find, E10S452-have), isa(E3S452-find, "find"), agent(E3S452-find, A13S450-animal), isa(A13S450-animal, "the animals"), object(E3S452-find, A5S452-home), isa(A5S452-home, "new homes").
english(barrons.rule1238, "If they[the animals that live in those areas] are unsuccessful in their[the animals that live in those areas] new location they[the animals that live in those areas] may die").
pretty(barrons.rule1238, "EFFECT(be_in(Animal, Unsuccessful, Location), die(Animal)), Animal = 'the animals', Unsuccessful = 'If unsuccessful in their[the animals that live in those areas] new location', Location = 'their[the animals that live in those areas] new location'.").
barrons.rule1238:: isa(E3S453-be, "be"), agent(E3S453-be, A13S450-animal), isa(A13S450-animal, "the animals"), object(E3S453-be, A4S453-unsuccessful), isa(A4S453-unsuccessful, "unsuccessful"), in(E3S453-be, A8S453-location), isa(A8S453-location, "their[the animals that live in those areas] new location") -> effect(E3S453-be, E12S453-die), isa(E12S453-die, "die"), agent(E12S453-die, A13S450-animal).
english(barrons.rule1239, "If they[the animals that live in those areas] are unsuccessful in their[the animals that live in those areas] new location they[the animals that live in those areas] may die").
pretty(barrons.rule1239, "EFFECT(be_in(Animal, Unsuccessful, Location), die(Animal)), Animal = 'the animals', Unsuccessful = 'If unsuccessful in their[the animals that live in those areas] new location', Location = 'their[the animals that live in those areas] new location'.").
barrons.rule1239:: isa(E12S453-die, "die"), agent(E12S453-die, A13S450-animal), isa(A13S450-animal, "the animals") -> effect(E3S453-be, E12S453-die), isa(E3S453-be, "be"), agent(E3S453-be, A13S450-animal), object(E3S453-be, A4S453-unsuccessful), isa(A4S453-unsuccessful, "unsuccessful"), in(E3S453-be, A8S453-location), isa(A8S453-location, "their[the animals that live in those areas] new location").
english(barrons.rule1240, "As humans construct new homes and buildings they[humans] change the landscape of the nonliving environment").
pretty(barrons.rule1240, "isa(Environment, 'the nonliving environment') -> change(Human, Landscape).").
barrons.rule1240:: isa(A15S455-environment, "the nonliving environment") -> of(A11S455-landscape, A15S455-environment), isa(E9S455-change, "change"), agent(E9S455-change, A11S27-human), isa(A11S27-human, "humans"), object(E9S455-change, A11S455-landscape), isa(A11S455-landscape, "the landscape").
english(barrons.rule1241, "As humans construct new homes and buildings they[humans] change the landscape of the nonliving environment").
pretty(barrons.rule1241, "isa(change, 'change') -> change(Human, Landscape).").
barrons.rule1241:: isa(E9S455-change, "change") -> of(A11S455-landscape, A15S455-environment), isa(A15S455-environment, "the nonliving environment"), agent(E9S455-change, A11S27-human), isa(A11S27-human, "humans"), object(E9S455-change, A11S455-landscape), isa(A11S455-landscape, "the landscape").
english(barrons.rule1242, "As humans construct new homes and buildings they[humans] change the landscape of the nonliving environment").
pretty(barrons.rule1242, "isa(Human, 'humans') -> change(Human, Landscape).").
barrons.rule1242:: isa(A11S27-human, "humans") -> of(A11S455-landscape, A15S455-environment), isa(A15S455-environment, "the nonliving environment"), isa(E9S455-change, "change"), agent(E9S455-change, A11S27-human), object(E9S455-change, A11S455-landscape), isa(A11S455-landscape, "the landscape").
english(barrons.rule1243, "As humans construct new homes and buildings they[humans] change the landscape of the nonliving environment").
pretty(barrons.rule1243, "isa(Landscape, 'the landscape of the nonliving environment') -> change(Human, Landscape).").
barrons.rule1243:: isa(A11S455-landscape, "the landscape") -> of(A11S455-landscape, A15S455-environment), isa(A15S455-environment, "the nonliving environment"), isa(E9S455-change, "change"), agent(E9S455-change, A11S27-human), isa(A11S27-human, "humans"), object(E9S455-change, A11S455-landscape).
english(barrons.rule1244, "As humans construct new homes and buildings they[humans] change the landscape of the nonliving environment").
pretty(barrons.rule1244, "EFFECT(construct(Human, Home), change(Human, Landscape)), Human = 'humans', Home = 'new homes', Human = 'humans', Landscape = 'the landscape of the nonliving environment'.").
barrons.rule1244:: isa(E3S455-construct, "construct"), agent(E3S455-construct, A2S455-human), isa(A2S455-human, "humans"), object(E3S455-construct, A5S455-home), isa(A5S455-home, "new homes") -> effect(E3S455-construct, E9S455-change), of(A11S455-landscape, A15S455-environment), isa(A15S455-environment, "the nonliving environment"), isa(E9S455-change, "change"), agent(E9S455-change, A11S27-human), isa(A11S27-human, "humans"), object(E9S455-change, A11S455-landscape), isa(A11S455-landscape, "the landscape").
english(barrons.rule1245, "As humans construct new homes and buildings they[humans] change the landscape of the nonliving environment").
pretty(barrons.rule1245, "EFFECT(construct(Human, Home), change(Human, Landscape)), Human = 'humans', Home = 'new homes', Human = 'humans', Landscape = 'the landscape of the nonliving environment'.").
barrons.rule1245:: of(A11S455-landscape, A15S455-environment), isa(A15S455-environment, "the nonliving environment"), isa(E9S455-change, "change"), agent(E9S455-change, A11S27-human), isa(A11S27-human, "humans"), object(E9S455-change, A11S455-landscape), isa(A11S455-landscape, "the landscape") -> effect(E3S455-construct, E9S455-change), isa(E3S455-construct, "construct"), agent(E3S455-construct, A2S455-human), isa(A2S455-human, "humans"), object(E3S455-construct, A5S455-home), isa(A5S455-home, "new homes").
english(barrons.rule1246, "As humans construct new homes and buildings they[humans] change the landscape of the nonliving environment").
pretty(barrons.rule1246, "EFFECT(construct(Human, Building), change(Human, Landscape)), Human = 'humans', Building = 'buildings', Human = 'humans', Landscape = 'the landscape of the nonliving environment'.").
barrons.rule1246:: isa(E3S455-construct, "construct"), agent(E3S455-construct, A2S455-human), isa(A2S455-human, "humans"), object(E3S455-construct, A7S455-building), isa(A7S455-building, "buildings") -> effect(E3S455-construct, E9S455-change), of(A11S455-landscape, A15S455-environment), isa(A15S455-environment, "the nonliving environment"), isa(E9S455-change, "change"), agent(E9S455-change, A11S27-human), isa(A11S27-human, "humans"), object(E9S455-change, A11S455-landscape), isa(A11S455-landscape, "the landscape").
english(barrons.rule1247, "As humans construct new homes and buildings they[humans] change the landscape of the nonliving environment").
pretty(barrons.rule1247, "EFFECT(construct(Human, Building), change(Human, Landscape)), Human = 'humans', Building = 'buildings', Human = 'humans', Landscape = 'the landscape of the nonliving environment'.").
barrons.rule1247:: of(A11S455-landscape, A15S455-environment), isa(A15S455-environment, "the nonliving environment"), isa(E9S455-change, "change"), agent(E9S455-change, A11S27-human), isa(A11S27-human, "humans"), object(E9S455-change, A11S455-landscape), isa(A11S455-landscape, "the landscape") -> effect(E3S455-construct, E9S455-change), isa(E3S455-construct, "construct"), agent(E3S455-construct, A2S455-human), isa(A2S455-human, "humans"), object(E3S455-construct, A7S455-building), isa(A7S455-building, "buildings").
english(barrons.rule1248, "Humans have also changed the environment by cultivating growing crops and raising animals").
pretty(barrons.rule1248, "isa(change, 'changed') -> change(Human, Environment).").
barrons.rule1248:: isa(E4S457-change, "change") -> agent(E4S457-change, A1S457-human), isa(A1S457-human, "Humans"), object(E4S457-change, A6S457-environment), isa(A6S457-environment, "the environment").
english(barrons.rule1249, "Humans have also changed the environment by cultivating growing crops and raising animals").
pretty(barrons.rule1249, "isa(Human, 'Humans') -> change(Human, Environment).").
barrons.rule1249:: isa(A1S457-human, "Humans") -> isa(E4S457-change, "change"), agent(E4S457-change, A1S457-human), object(E4S457-change, A6S457-environment), isa(A6S457-environment, "the environment").
english(barrons.rule1250, "Humans have also changed the environment by cultivating growing crops and raising animals").
pretty(barrons.rule1250, "isa(Environment, 'the environment') -> change(Human, Environment).").
barrons.rule1250:: isa(A6S457-environment, "the environment") -> isa(E4S457-change, "change"), agent(E4S457-change, A1S457-human), isa(A1S457-human, "Humans"), object(E4S457-change, A6S457-environment).
english(barrons.rule1251, "Humans have also changed the environment by cultivating growing crops and raising animals").
pretty(barrons.rule1251, "ENABLE(cultivate(Human, Crop), change(Human, Environment)), Human = 'Humans', Crop = 'crops', Environment = 'the environment'.").
barrons.rule1251:: isa(E8S457-cultivate, "cultivate"), agent(E8S457-cultivate, A1S457-human), isa(A1S457-human, "Humans"), object(E8S457-cultivate, A12S457-crop), isa(A12S457-crop, "crops") -> enable(E8S457-cultivate, E4S457-change), isa(E4S457-change, "change"), agent(E4S457-change, A1S457-human), object(E4S457-change, A6S457-environment), isa(A6S457-environment, "the environment").
english(barrons.rule1252, "Humans have also changed the environment by cultivating growing crops and raising animals").
pretty(barrons.rule1252, "ENABLE(cultivate(Human, Crop), change(Human, Environment)), Human = 'Humans', Crop = 'crops', Environment = 'the environment'.").
barrons.rule1252:: isa(E4S457-change, "change"), agent(E4S457-change, A1S457-human), isa(A1S457-human, "Humans"), object(E4S457-change, A6S457-environment), isa(A6S457-environment, "the environment") -> enable(E8S457-cultivate, E4S457-change), isa(E8S457-cultivate, "cultivate"), agent(E8S457-cultivate, A1S457-human), object(E8S457-cultivate, A12S457-crop), isa(A12S457-crop, "crops").
english(barrons.rule1253, "Humans have also changed the environment by cultivating growing crops and raising animals").
pretty(barrons.rule1253, "ENABLE(raise(Human, Animal), change(Human, Environment)), Human = 'Humans', Animal = 'animals', Environment = 'the environment'.").
barrons.rule1253:: isa(E14S457-raise, "raise"), agent(E14S457-raise, A1S457-human), isa(A1S457-human, "Humans"), object(E14S457-raise, A15S457-animal), isa(A15S457-animal, "animals") -> enable(E14S457-raise, E4S457-change), isa(E4S457-change, "change"), agent(E4S457-change, A1S457-human), object(E4S457-change, A6S457-environment), isa(A6S457-environment, "the environment").
english(barrons.rule1254, "Humans have also changed the environment by cultivating growing crops and raising animals").
pretty(barrons.rule1254, "ENABLE(raise(Human, Animal), change(Human, Environment)), Human = 'Humans', Animal = 'animals', Environment = 'the environment'.").
barrons.rule1254:: isa(E4S457-change, "change"), agent(E4S457-change, A1S457-human), isa(A1S457-human, "Humans"), object(E4S457-change, A6S457-environment), isa(A6S457-environment, "the environment") -> enable(E14S457-raise, E4S457-change), isa(E14S457-raise, "raise"), agent(E14S457-raise, A1S457-human), object(E14S457-raise, A15S457-animal), isa(A15S457-animal, "animals").
english(barrons.rule1255, "Humans need food to survive and since the human population increases in size everyday there is a greater demand for food").
pretty(barrons.rule1255, "EFFECT(need(Human, Food), survive(Human)), Human = 'Humans', Food = 'food'.").
barrons.rule1255:: isa(E2S458-need, "need"), agent(E2S458-need, A1S458-human), isa(A1S458-human, "Humans"), object(E2S458-need, A3S458-food), isa(A3S458-food, "food") -> effect(E2S458-need, E5S458-survive), isa(E5S458-survive, "survive"), agent(E5S458-survive, A1S458-human).
english(barrons.rule1256, "Humans need food to survive and since the human population increases in size everyday there is a greater demand for food").
pretty(barrons.rule1256, "EFFECT(need(Human, Food), survive(Human)), Human = 'Humans', Food = 'food'.").
barrons.rule1256:: isa(E5S458-survive, "survive"), agent(E5S458-survive, A1S458-human), isa(A1S458-human, "Humans") -> effect(E2S458-need, E5S458-survive), isa(E2S458-need, "need"), agent(E2S458-need, A1S458-human), object(E2S458-need, A3S458-food), isa(A3S458-food, "food").
english(barrons.rule1257, "For there to be enough food farmers plant and harvest grain wheat corn fruits and vegetables").
pretty(barrons.rule1257, "EFFECT(plant(Farmer, Grain), be(There, Food)), Farmer = 'farmers', Grain = 'harvest grain', There = 'there', Food = 'For there enough food'.").
barrons.rule1257:: isa(E9S459-plant, "plant"), agent(E9S459-plant, A8S459-farmer), isa(A8S459-farmer, "farmers"), object(E9S459-plant, A12S459-grain), isa(A12S459-grain, "harvest grain") -> effect(E9S459-plant, E4S459-be), isa(E4S459-be, "be"), agent(E4S459-be, A2S459-there), isa(A2S459-there, "there"), object(E4S459-be, A6S459-food), isa(A6S459-food, "enough food").
english(barrons.rule1258, "For there to be enough food farmers plant and harvest grain wheat corn fruits and vegetables").
pretty(barrons.rule1258, "EFFECT(plant(Farmer, Grain), be(There, Food)), Farmer = 'farmers', Grain = 'harvest grain', There = 'there', Food = 'For there enough food'.").
barrons.rule1258:: isa(E4S459-be, "be"), agent(E4S459-be, A2S459-there), isa(A2S459-there, "there"), object(E4S459-be, A6S459-food), isa(A6S459-food, "enough food") -> effect(E9S459-plant, E4S459-be), isa(E9S459-plant, "plant"), agent(E9S459-plant, A8S459-farmer), isa(A8S459-farmer, "farmers"), object(E9S459-plant, A12S459-grain), isa(A12S459-grain, "harvest grain").
english(barrons.rule1259, "For there to be enough food farmers plant and harvest grain wheat corn fruits and vegetables").
pretty(barrons.rule1259, "EFFECT(plant(Farmer, Wheat), be(There, Food)), Farmer = 'farmers', Wheat = 'wheat', There = 'there', Food = 'For there enough food'.").
barrons.rule1259:: isa(E9S459-plant, "plant"), agent(E9S459-plant, A8S459-farmer), isa(A8S459-farmer, "farmers"), object(E9S459-plant, A14S459-wheat), isa(A14S459-wheat, "wheat") -> effect(E9S459-plant, E4S459-be), isa(E4S459-be, "be"), agent(E4S459-be, A2S459-there), isa(A2S459-there, "there"), object(E4S459-be, A6S459-food), isa(A6S459-food, "enough food").
english(barrons.rule1260, "For there to be enough food farmers plant and harvest grain wheat corn fruits and vegetables").
pretty(barrons.rule1260, "EFFECT(plant(Farmer, Wheat), be(There, Food)), Farmer = 'farmers', Wheat = 'wheat', There = 'there', Food = 'For there enough food'.").
barrons.rule1260:: isa(E4S459-be, "be"), agent(E4S459-be, A2S459-there), isa(A2S459-there, "there"), object(E4S459-be, A6S459-food), isa(A6S459-food, "enough food") -> effect(E9S459-plant, E4S459-be), isa(E9S459-plant, "plant"), agent(E9S459-plant, A8S459-farmer), isa(A8S459-farmer, "farmers"), object(E9S459-plant, A14S459-wheat), isa(A14S459-wheat, "wheat").
english(barrons.rule1261, "For there to be enough food farmers plant and harvest grain wheat corn fruits and vegetables").
pretty(barrons.rule1261, "EFFECT(plant(Farmer, Corn), be(There, Food)), Farmer = 'farmers', Corn = 'corn', There = 'there', Food = 'For there enough food'.").
barrons.rule1261:: isa(E9S459-plant, "plant"), agent(E9S459-plant, A8S459-farmer), isa(A8S459-farmer, "farmers"), object(E9S459-plant, A16S459-corn), isa(A16S459-corn, "corn") -> effect(E9S459-plant, E4S459-be), isa(E4S459-be, "be"), agent(E4S459-be, A2S459-there), isa(A2S459-there, "there"), object(E4S459-be, A6S459-food), isa(A6S459-food, "enough food").
english(barrons.rule1262, "For there to be enough food farmers plant and harvest grain wheat corn fruits and vegetables").
pretty(barrons.rule1262, "EFFECT(plant(Farmer, Corn), be(There, Food)), Farmer = 'farmers', Corn = 'corn', There = 'there', Food = 'For there enough food'.").
barrons.rule1262:: isa(E4S459-be, "be"), agent(E4S459-be, A2S459-there), isa(A2S459-there, "there"), object(E4S459-be, A6S459-food), isa(A6S459-food, "enough food") -> effect(E9S459-plant, E4S459-be), isa(E9S459-plant, "plant"), agent(E9S459-plant, A8S459-farmer), isa(A8S459-farmer, "farmers"), object(E9S459-plant, A16S459-corn), isa(A16S459-corn, "corn").
english(barrons.rule1263, "For there to be enough food farmers plant and harvest grain wheat corn fruits and vegetables").
pretty(barrons.rule1263, "EFFECT(plant(Farmer, Fruit), be(There, Food)), Farmer = 'farmers', Fruit = 'fruits', There = 'there', Food = 'For there enough food'.").
barrons.rule1263:: isa(E9S459-plant, "plant"), agent(E9S459-plant, A8S459-farmer), isa(A8S459-farmer, "farmers"), object(E9S459-plant, A18S459-fruit), isa(A18S459-fruit, "fruits") -> effect(E9S459-plant, E4S459-be), isa(E4S459-be, "be"), agent(E4S459-be, A2S459-there), isa(A2S459-there, "there"), object(E4S459-be, A6S459-food), isa(A6S459-food, "enough food").
english(barrons.rule1264, "For there to be enough food farmers plant and harvest grain wheat corn fruits and vegetables").
pretty(barrons.rule1264, "EFFECT(plant(Farmer, Fruit), be(There, Food)), Farmer = 'farmers', Fruit = 'fruits', There = 'there', Food = 'For there enough food'.").
barrons.rule1264:: isa(E4S459-be, "be"), agent(E4S459-be, A2S459-there), isa(A2S459-there, "there"), object(E4S459-be, A6S459-food), isa(A6S459-food, "enough food") -> effect(E9S459-plant, E4S459-be), isa(E9S459-plant, "plant"), agent(E9S459-plant, A8S459-farmer), isa(A8S459-farmer, "farmers"), object(E9S459-plant, A18S459-fruit), isa(A18S459-fruit, "fruits").
english(barrons.rule1265, "For there to be enough food farmers plant and harvest grain wheat corn fruits and vegetables").
pretty(barrons.rule1265, "EFFECT(plant(Farmer, Vegetable), be(There, Food)), Farmer = 'farmers', Vegetable = 'vegetables', There = 'there', Food = 'For there enough food'.").
barrons.rule1265:: isa(E9S459-plant, "plant"), agent(E9S459-plant, A8S459-farmer), isa(A8S459-farmer, "farmers"), object(E9S459-plant, A21S459-vegetable), isa(A21S459-vegetable, "vegetables") -> effect(E9S459-plant, E4S459-be), isa(E4S459-be, "be"), agent(E4S459-be, A2S459-there), isa(A2S459-there, "there"), object(E4S459-be, A6S459-food), isa(A6S459-food, "enough food").
english(barrons.rule1266, "For there to be enough food farmers plant and harvest grain wheat corn fruits and vegetables").
pretty(barrons.rule1266, "EFFECT(plant(Farmer, Vegetable), be(There, Food)), Farmer = 'farmers', Vegetable = 'vegetables', There = 'there', Food = 'For there enough food'.").
barrons.rule1266:: isa(E4S459-be, "be"), agent(E4S459-be, A2S459-there), isa(A2S459-there, "there"), object(E4S459-be, A6S459-food), isa(A6S459-food, "enough food") -> effect(E9S459-plant, E4S459-be), isa(E9S459-plant, "plant"), agent(E9S459-plant, A8S459-farmer), isa(A8S459-farmer, "farmers"), object(E9S459-plant, A21S459-vegetable), isa(A21S459-vegetable, "vegetables").
english(barrons.rule1267, "Animals are raised on farms for human consumption to eat").
pretty(barrons.rule1267, "PURPOSE(raise to eat_on(Animal, Farm), Consumption), Animal = 'Animals', Farm = 'farms for human consumption', Consumption = 'human consumption'.").
barrons.rule1267:: isa(E3S460-raise, "raise to eat"), object(E3S460-raise, A1S460-animal), isa(A1S460-animal, "Animals"), on(E3S460-raise, A5S460-farm), isa(A5S460-farm, "farms for human consumption") -> purpose(E3S460-raise, A8S460-consumption), isa(A8S460-consumption, "human consumption").
english(barrons.rule1268, "Animals are raised on farms for human consumption to eat").
pretty(barrons.rule1268, "PURPOSE(raise to eat_on(Animal, Farm), Consumption), Animal = 'Animals', Farm = 'farms for human consumption', Consumption = 'human consumption'.").
barrons.rule1268:: isa(A8S460-consumption, "human consumption") -> purpose(E3S460-raise, A8S460-consumption), isa(E3S460-raise, "raise to eat"), object(E3S460-raise, A1S460-animal), isa(A1S460-animal, "Animals"), on(E3S460-raise, A5S460-farm), isa(A5S460-farm, "farms for human consumption").
english(barrons.rule1269, "In addition to food shelter and energy humans manufacture produce goods that make life more comfortable").
pretty(barrons.rule1269, "isa(manufacture, 'manufacture') -> manufacture_to(Human, Goods, Food, to(Shelter), to(Energy)).").
barrons.rule1269:: isa(E12S461-manufacture, "manufacture") -> agent(E12S461-manufacture, A11S461-human), isa(A11S461-human, "humans"), object(E12S461-manufacture, A16S461-goods), isa(A16S461-goods, "goods"), to(E12S461-manufacture, A4S461-food), isa(A4S461-food, "food"), to(E12S461-manufacture, A6S461-shelter), isa(A6S461-shelter, "shelter"), to(E12S461-manufacture, A9S461-energy), isa(A9S461-energy, "energy").
english(barrons.rule1270, "In addition to food shelter and energy humans manufacture produce goods that make life more comfortable").
pretty(barrons.rule1270, "isa(Human, 'humans') -> manufacture_to(Human, Goods, Food, to(Shelter), to(Energy)).").
barrons.rule1270:: isa(A11S461-human, "humans") -> isa(E12S461-manufacture, "manufacture"), agent(E12S461-manufacture, A11S461-human), object(E12S461-manufacture, A16S461-goods), isa(A16S461-goods, "goods"), to(E12S461-manufacture, A4S461-food), isa(A4S461-food, "food"), to(E12S461-manufacture, A6S461-shelter), isa(A6S461-shelter, "shelter"), to(E12S461-manufacture, A9S461-energy), isa(A9S461-energy, "energy").
english(barrons.rule1271, "In addition to food shelter and energy humans manufacture produce goods that make life more comfortable").
pretty(barrons.rule1271, "isa(Goods, 'goods') -> manufacture_to(Human, Goods, Food, to(Shelter), to(Energy)).").
barrons.rule1271:: isa(A16S461-goods, "goods") -> isa(E12S461-manufacture, "manufacture"), agent(E12S461-manufacture, A11S461-human), isa(A11S461-human, "humans"), object(E12S461-manufacture, A16S461-goods), to(E12S461-manufacture, A4S461-food), isa(A4S461-food, "food"), to(E12S461-manufacture, A6S461-shelter), isa(A6S461-shelter, "shelter"), to(E12S461-manufacture, A9S461-energy), isa(A9S461-energy, "energy").
english(barrons.rule1272, "In addition to food shelter and energy humans manufacture produce goods that make life more comfortable").
pretty(barrons.rule1272, "isa(Food, 'food') -> manufacture_to(Human, Goods, Food, to(Shelter), to(Energy)).").
barrons.rule1272:: isa(A4S461-food, "food") -> isa(E12S461-manufacture, "manufacture"), agent(E12S461-manufacture, A11S461-human), isa(A11S461-human, "humans"), object(E12S461-manufacture, A16S461-goods), isa(A16S461-goods, "goods"), to(E12S461-manufacture, A4S461-food), to(E12S461-manufacture, A6S461-shelter), isa(A6S461-shelter, "shelter"), to(E12S461-manufacture, A9S461-energy), isa(A9S461-energy, "energy").
english(barrons.rule1273, "In addition to food shelter and energy humans manufacture produce goods that make life more comfortable").
pretty(barrons.rule1273, "isa(Shelter, 'shelter') -> manufacture_to(Human, Goods, Food, to(Shelter), to(Energy)).").
barrons.rule1273:: isa(A6S461-shelter, "shelter") -> isa(E12S461-manufacture, "manufacture"), agent(E12S461-manufacture, A11S461-human), isa(A11S461-human, "humans"), object(E12S461-manufacture, A16S461-goods), isa(A16S461-goods, "goods"), to(E12S461-manufacture, A4S461-food), isa(A4S461-food, "food"), to(E12S461-manufacture, A6S461-shelter), to(E12S461-manufacture, A9S461-energy), isa(A9S461-energy, "energy").
english(barrons.rule1274, "In addition to food shelter and energy humans manufacture produce goods that make life more comfortable").
pretty(barrons.rule1274, "isa(Energy, 'energy') -> manufacture_to(Human, Goods, Food, to(Shelter), to(Energy)).").
barrons.rule1274:: isa(A9S461-energy, "energy") -> isa(E12S461-manufacture, "manufacture"), agent(E12S461-manufacture, A11S461-human), isa(A11S461-human, "humans"), object(E12S461-manufacture, A16S461-goods), isa(A16S461-goods, "goods"), to(E12S461-manufacture, A4S461-food), isa(A4S461-food, "food"), to(E12S461-manufacture, A6S461-shelter), isa(A6S461-shelter, "shelter"), to(E12S461-manufacture, A9S461-energy).
english(barrons.rule1275, "In addition to food shelter and energy humans manufacture produce goods that make life more comfortable").
pretty(barrons.rule1275, "isa(manufacture, 'manufacture') -> manufacture_to(Human, Produce, Food, to(Shelter), to(Energy)).").
barrons.rule1275:: isa(E12S461-manufacture, "manufacture") -> agent(E12S461-manufacture, A11S461-human), isa(A11S461-human, "humans"), object(E12S461-manufacture, A14S461-produce), isa(A14S461-produce, "produce"), to(E12S461-manufacture, A4S461-food), isa(A4S461-food, "food"), to(E12S461-manufacture, A6S461-shelter), isa(A6S461-shelter, "shelter"), to(E12S461-manufacture, A9S461-energy), isa(A9S461-energy, "energy").
english(barrons.rule1276, "In addition to food shelter and energy humans manufacture produce goods that make life more comfortable").
pretty(barrons.rule1276, "isa(Human, 'humans') -> manufacture_to(Human, Produce, Food, to(Shelter), to(Energy)).").
barrons.rule1276:: isa(A11S461-human, "humans") -> isa(E12S461-manufacture, "manufacture"), agent(E12S461-manufacture, A11S461-human), object(E12S461-manufacture, A14S461-produce), isa(A14S461-produce, "produce"), to(E12S461-manufacture, A4S461-food), isa(A4S461-food, "food"), to(E12S461-manufacture, A6S461-shelter), isa(A6S461-shelter, "shelter"), to(E12S461-manufacture, A9S461-energy), isa(A9S461-energy, "energy").
english(barrons.rule1277, "In addition to food shelter and energy humans manufacture produce goods that make life more comfortable").
pretty(barrons.rule1277, "isa(Produce, 'produce') -> manufacture_to(Human, Produce, Food, to(Shelter), to(Energy)).").
barrons.rule1277:: isa(A14S461-produce, "produce") -> isa(E12S461-manufacture, "manufacture"), agent(E12S461-manufacture, A11S461-human), isa(A11S461-human, "humans"), object(E12S461-manufacture, A14S461-produce), to(E12S461-manufacture, A4S461-food), isa(A4S461-food, "food"), to(E12S461-manufacture, A6S461-shelter), isa(A6S461-shelter, "shelter"), to(E12S461-manufacture, A9S461-energy), isa(A9S461-energy, "energy").
english(barrons.rule1278, "In addition to food shelter and energy humans manufacture produce goods that make life more comfortable").
pretty(barrons.rule1278, "isa(Food, 'food') -> manufacture_to(Human, Produce, Food, to(Shelter), to(Energy)).").
barrons.rule1278:: isa(A4S461-food, "food") -> isa(E12S461-manufacture, "manufacture"), agent(E12S461-manufacture, A11S461-human), isa(A11S461-human, "humans"), object(E12S461-manufacture, A14S461-produce), isa(A14S461-produce, "produce"), to(E12S461-manufacture, A4S461-food), to(E12S461-manufacture, A6S461-shelter), isa(A6S461-shelter, "shelter"), to(E12S461-manufacture, A9S461-energy), isa(A9S461-energy, "energy").
english(barrons.rule1279, "In addition to food shelter and energy humans manufacture produce goods that make life more comfortable").
pretty(barrons.rule1279, "isa(Shelter, 'shelter') -> manufacture_to(Human, Produce, Food, to(Shelter), to(Energy)).").
barrons.rule1279:: isa(A6S461-shelter, "shelter") -> isa(E12S461-manufacture, "manufacture"), agent(E12S461-manufacture, A11S461-human), isa(A11S461-human, "humans"), object(E12S461-manufacture, A14S461-produce), isa(A14S461-produce, "produce"), to(E12S461-manufacture, A4S461-food), isa(A4S461-food, "food"), to(E12S461-manufacture, A6S461-shelter), to(E12S461-manufacture, A9S461-energy), isa(A9S461-energy, "energy").
english(barrons.rule1280, "In addition to food shelter and energy humans manufacture produce goods that make life more comfortable").
pretty(barrons.rule1280, "isa(Energy, 'energy') -> manufacture_to(Human, Produce, Food, to(Shelter), to(Energy)).").
barrons.rule1280:: isa(A9S461-energy, "energy") -> isa(E12S461-manufacture, "manufacture"), agent(E12S461-manufacture, A11S461-human), isa(A11S461-human, "humans"), object(E12S461-manufacture, A14S461-produce), isa(A14S461-produce, "produce"), to(E12S461-manufacture, A4S461-food), isa(A4S461-food, "food"), to(E12S461-manufacture, A6S461-shelter), isa(A6S461-shelter, "shelter"), to(E12S461-manufacture, A9S461-energy).
english(barrons.rule1281, "Factories are built and materials are taken from the environment to create many different products").
pretty(barrons.rule1281, "EFFECT(take_from(Material, Environment), create(Product)), Material = 'materials', Environment = 'the environment', Product = 'many different products'.").
barrons.rule1281:: isa(E7S462-take, "take"), object(E7S462-take, A5S462-material), isa(A5S462-material, "materials"), from(E7S462-take, A10S462-environment), isa(A10S462-environment, "the environment") -> effect(E7S462-take, E12S462-create), isa(E12S462-create, "create"), object(E12S462-create, A15S462-product), isa(A15S462-product, "many different products").
english(barrons.rule1282, "Factories are built and materials are taken from the environment to create many different products").
pretty(barrons.rule1282, "EFFECT(take_from(Material, Environment), create(Product)), Material = 'materials', Environment = 'the environment', Product = 'many different products'.").
barrons.rule1282:: isa(E12S462-create, "create"), object(E12S462-create, A15S462-product), isa(A15S462-product, "many different products") -> effect(E7S462-take, E12S462-create), isa(E7S462-take, "take"), object(E7S462-take, A5S462-material), isa(A5S462-material, "materials"), from(E7S462-take, A10S462-environment), isa(A10S462-environment, "the environment").
english(barrons.rule1283, "Humans developed various means of transportation so that they[humans] could live in one place and bring food energy and other goods to them[humans] rather than living at the site where they[humans] are made").
pretty(barrons.rule1283, "EFFECT(develop(Human, Means), live_in(Human, Place)), Human = 'Humans', Means = 'various means of transportation', Human = 'humans', Place = 'one place'.").
barrons.rule1283:: of(A4S463-means, A6S463-transportation), isa(A6S463-transportation, "transportation"), isa(E2S463-develop, "develop"), agent(E2S463-develop, A1S463-human), isa(A1S463-human, "Humans"), object(E2S463-develop, A4S463-means), isa(A4S463-means, "various means") -> effect(E2S463-develop, E11S463-live), isa(E11S463-live, "live"), agent(E11S463-live, A11S27-human), isa(A11S27-human, "humans"), in(E11S463-live, A14S463-place), isa(A14S463-place, "one place").
english(barrons.rule1284, "Humans developed various means of transportation so that they[humans] could live in one place and bring food energy and other goods to them[humans] rather than living at the site where they[humans] are made").
pretty(barrons.rule1284, "EFFECT(develop(Human, Means), live_in(Human, Place)), Human = 'Humans', Means = 'various means of transportation', Human = 'humans', Place = 'one place'.").
barrons.rule1284:: isa(E11S463-live, "live"), agent(E11S463-live, A11S27-human), isa(A11S27-human, "humans"), in(E11S463-live, A14S463-place), isa(A14S463-place, "one place") -> effect(E2S463-develop, E11S463-live), of(A4S463-means, A6S463-transportation), isa(A6S463-transportation, "transportation"), isa(E2S463-develop, "develop"), agent(E2S463-develop, A1S463-human), isa(A1S463-human, "Humans"), object(E2S463-develop, A4S463-means), isa(A4S463-means, "various means").
english(barrons.rule1285, "Humans developed various means of transportation so that they[humans] could live in one place and bring food energy and other goods to them[humans] rather than living at the site where they[humans] are made").
pretty(barrons.rule1285, "EFFECT(develop(Human, Means), bring_to(Human, Food, Rather, They, than(Live))), Human = 'Humans', Means = 'various means of transportation', Human = 'humans', Food = 'food', Rather = 'rather', They = 'them[humans]', Live = 'living at the site where they[humans] are made'.").
barrons.rule1285:: of(A4S463-means, A6S463-transportation), isa(A6S463-transportation, "transportation"), isa(E2S463-develop, "develop"), agent(E2S463-develop, A1S463-human), isa(A1S463-human, "Humans"), object(E2S463-develop, A4S463-means), isa(A4S463-means, "various means") -> effect(E2S463-develop, E16S463-bring), isa(E16S463-bring, "bring"), agent(E16S463-bring, A11S27-human), isa(A11S27-human, "humans"), object(E16S463-bring, A17S463-food), isa(A17S463-food, "food"), to(E16S463-bring, A25S463-they), isa(A25S463-they, "them[humans]"), than(E16S463-bring, A28S463-live), isa(A28S463-live, "living at the site where they[humans] are made"), arg(E16S463-bring, A26S463-rather), isa(A26S463-rather, "rather").
english(barrons.rule1286, "Humans developed various means of transportation so that they[humans] could live in one place and bring food energy and other goods to them[humans] rather than living at the site where they[humans] are made").
pretty(barrons.rule1286, "EFFECT(develop(Human, Means), bring_to(Human, Food, Rather, They, than(Live))), Human = 'Humans', Means = 'various means of transportation', Human = 'humans', Food = 'food', Rather = 'rather', They = 'them[humans]', Live = 'living at the site where they[humans] are made'.").
barrons.rule1286:: isa(E16S463-bring, "bring"), agent(E16S463-bring, A11S27-human), isa(A11S27-human, "humans"), object(E16S463-bring, A17S463-food), isa(A17S463-food, "food"), to(E16S463-bring, A25S463-they), isa(A25S463-they, "them[humans]"), than(E16S463-bring, A28S463-live), isa(A28S463-live, "living at the site where they[humans] are made"), arg(E16S463-bring, A26S463-rather), isa(A26S463-rather, "rather") -> effect(E2S463-develop, E16S463-bring), of(A4S463-means, A6S463-transportation), isa(A6S463-transportation, "transportation"), isa(E2S463-develop, "develop"), agent(E2S463-develop, A1S463-human), isa(A1S463-human, "Humans"), object(E2S463-develop, A4S463-means), isa(A4S463-means, "various means").
english(barrons.rule1287, "Humans developed various means of transportation so that they[humans] could live in one place and bring food energy and other goods to them[humans] rather than living at the site where they[humans] are made").
pretty(barrons.rule1287, "EFFECT(develop(Human, Means), bring_to(Human, Energy, Rather, They, than(Live))), Human = 'Humans', Means = 'various means of transportation', Human = 'humans', Energy = 'energy', Rather = 'rather', They = 'them[humans]', Live = 'living at the site where they[humans] are made'.").
barrons.rule1287:: of(A4S463-means, A6S463-transportation), isa(A6S463-transportation, "transportation"), isa(E2S463-develop, "develop"), agent(E2S463-develop, A1S463-human), isa(A1S463-human, "Humans"), object(E2S463-develop, A4S463-means), isa(A4S463-means, "various means") -> effect(E2S463-develop, E16S463-bring), isa(E16S463-bring, "bring"), agent(E16S463-bring, A11S27-human), isa(A11S27-human, "humans"), object(E16S463-bring, A19S463-energy), isa(A19S463-energy, "energy"), to(E16S463-bring, A25S463-they), isa(A25S463-they, "them[humans]"), than(E16S463-bring, A28S463-live), isa(A28S463-live, "living at the site where they[humans] are made"), arg(E16S463-bring, A26S463-rather), isa(A26S463-rather, "rather").
english(barrons.rule1288, "Humans developed various means of transportation so that they[humans] could live in one place and bring food energy and other goods to them[humans] rather than living at the site where they[humans] are made").
pretty(barrons.rule1288, "EFFECT(develop(Human, Means), bring_to(Human, Energy, Rather, They, than(Live))), Human = 'Humans', Means = 'various means of transportation', Human = 'humans', Energy = 'energy', Rather = 'rather', They = 'them[humans]', Live = 'living at the site where they[humans] are made'.").
barrons.rule1288:: isa(E16S463-bring, "bring"), agent(E16S463-bring, A11S27-human), isa(A11S27-human, "humans"), object(E16S463-bring, A19S463-energy), isa(A19S463-energy, "energy"), to(E16S463-bring, A25S463-they), isa(A25S463-they, "them[humans]"), than(E16S463-bring, A28S463-live), isa(A28S463-live, "living at the site where they[humans] are made"), arg(E16S463-bring, A26S463-rather), isa(A26S463-rather, "rather") -> effect(E2S463-develop, E16S463-bring), of(A4S463-means, A6S463-transportation), isa(A6S463-transportation, "transportation"), isa(E2S463-develop, "develop"), agent(E2S463-develop, A1S463-human), isa(A1S463-human, "Humans"), object(E2S463-develop, A4S463-means), isa(A4S463-means, "various means").
english(barrons.rule1289, "Humans developed various means of transportation so that they[humans] could live in one place and bring food energy and other goods to them[humans] rather than living at the site where they[humans] are made").
pretty(barrons.rule1289, "EFFECT(develop(Human, Means), bring_to(Human, Goods, Rather, They, than(Live))), Human = 'Humans', Means = 'various means of transportation', Human = 'humans', Goods = 'other goods', Rather = 'rather', They = 'them[humans]', Live = 'living at the site where they[humans] are made'.").
barrons.rule1289:: of(A4S463-means, A6S463-transportation), isa(A6S463-transportation, "transportation"), isa(E2S463-develop, "develop"), agent(E2S463-develop, A1S463-human), isa(A1S463-human, "Humans"), object(E2S463-develop, A4S463-means), isa(A4S463-means, "various means") -> effect(E2S463-develop, E16S463-bring), isa(E16S463-bring, "bring"), agent(E16S463-bring, A11S27-human), isa(A11S27-human, "humans"), object(E16S463-bring, A23S463-goods), isa(A23S463-goods, "other goods"), to(E16S463-bring, A25S463-they), isa(A25S463-they, "them[humans]"), than(E16S463-bring, A28S463-live), isa(A28S463-live, "living at the site where they[humans] are made"), arg(E16S463-bring, A26S463-rather), isa(A26S463-rather, "rather").
english(barrons.rule1290, "Humans developed various means of transportation so that they[humans] could live in one place and bring food energy and other goods to them[humans] rather than living at the site where they[humans] are made").
pretty(barrons.rule1290, "EFFECT(develop(Human, Means), bring_to(Human, Goods, Rather, They, than(Live))), Human = 'Humans', Means = 'various means of transportation', Human = 'humans', Goods = 'other goods', Rather = 'rather', They = 'them[humans]', Live = 'living at the site where they[humans] are made'.").
barrons.rule1290:: isa(E16S463-bring, "bring"), agent(E16S463-bring, A11S27-human), isa(A11S27-human, "humans"), object(E16S463-bring, A23S463-goods), isa(A23S463-goods, "other goods"), to(E16S463-bring, A25S463-they), isa(A25S463-they, "them[humans]"), than(E16S463-bring, A28S463-live), isa(A28S463-live, "living at the site where they[humans] are made"), arg(E16S463-bring, A26S463-rather), isa(A26S463-rather, "rather") -> effect(E2S463-develop, E16S463-bring), of(A4S463-means, A6S463-transportation), isa(A6S463-transportation, "transportation"), isa(E2S463-develop, "develop"), agent(E2S463-develop, A1S463-human), isa(A1S463-human, "Humans"), object(E2S463-develop, A4S463-means), isa(A4S463-means, "various means").
english(barrons.rule1291, "While it is nice to have cars planes and trains for transportation these machines give off gases that are not helpful to the atmosphere").
pretty(barrons.rule1291, "isa(give off, 'give off') -> give off(Machine, Gas, Nice).").
barrons.rule1291:: isa(E18S464-give, "give off") -> agent(E18S464-give, A17S464-machine), isa(A17S464-machine, "these machines"), object(E18S464-give, A20S464-gas), isa(A20S464-gas, "gases"), arg(E18S464-give, A4S464-nice), isa(A4S464-nice, "While it is nice").
english(barrons.rule1292, "While it is nice to have cars planes and trains for transportation these machines give off gases that are not helpful to the atmosphere").
pretty(barrons.rule1292, "isa(Machine, 'these machines') -> give off(Machine, Gas, Nice).").
barrons.rule1292:: isa(A17S464-machine, "these machines") -> isa(E18S464-give, "give off"), agent(E18S464-give, A17S464-machine), object(E18S464-give, A20S464-gas), isa(A20S464-gas, "gases"), arg(E18S464-give, A4S464-nice), isa(A4S464-nice, "While it is nice").
english(barrons.rule1293, "While it is nice to have cars planes and trains for transportation these machines give off gases that are not helpful to the atmosphere").
pretty(barrons.rule1293, "isa(Gas, 'gases') -> give off(Machine, Gas, Nice).").
barrons.rule1293:: isa(A20S464-gas, "gases") -> isa(E18S464-give, "give off"), agent(E18S464-give, A17S464-machine), isa(A17S464-machine, "these machines"), object(E18S464-give, A20S464-gas), arg(E18S464-give, A4S464-nice), isa(A4S464-nice, "While it is nice").
english(barrons.rule1294, "While it is nice to have cars planes and trains for transportation these machines give off gases that are not helpful to the atmosphere").
pretty(barrons.rule1294, "isa(Nice, 'While nice') -> give off(Machine, Gas, Nice).").
barrons.rule1294:: isa(A4S464-nice, "While it is nice") -> isa(E18S464-give, "give off"), agent(E18S464-give, A17S464-machine), isa(A17S464-machine, "these machines"), object(E18S464-give, A20S464-gas), isa(A20S464-gas, "gases"), arg(E18S464-give, A4S464-nice).
english(barrons.rule1295, "While it is nice to have cars planes and trains for transportation these machines give off gases that are not helpful to the atmosphere").
pretty(barrons.rule1295, "PURPOSE(have(Car), Transportation), Car = 'cars for transportation', Transportation = 'transportation'.").
barrons.rule1295:: for(A7S464-car, A14S464-transportation), isa(A14S464-transportation, "transportation"), isa(E6S464-have, "have"), object(E6S464-have, A7S464-car), isa(A7S464-car, "cars") -> purpose(E6S464-have, A14S464-transportation).
english(barrons.rule1296, "While it is nice to have cars planes and trains for transportation these machines give off gases that are not helpful to the atmosphere").
pretty(barrons.rule1296, "PURPOSE(have(Car), Transportation), Car = 'cars for transportation', Transportation = 'transportation'.").
barrons.rule1296:: isa(A14S464-transportation, "transportation") -> purpose(E6S464-have, A14S464-transportation), for(A7S464-car, A14S464-transportation), isa(E6S464-have, "have"), object(E6S464-have, A7S464-car), isa(A7S464-car, "cars").
english(barrons.rule1297, "While it is nice to have cars planes and trains for transportation these machines give off gases that are not helpful to the atmosphere").
pretty(barrons.rule1297, "PURPOSE(have(Plane), Transportation), Plane = 'planes', Transportation = 'transportation'.").
barrons.rule1297:: isa(E6S464-have, "have"), object(E6S464-have, A9S464-plane), isa(A9S464-plane, "planes") -> purpose(E6S464-have, A14S464-transportation), isa(A14S464-transportation, "transportation").
english(barrons.rule1298, "While it is nice to have cars planes and trains for transportation these machines give off gases that are not helpful to the atmosphere").
pretty(barrons.rule1298, "PURPOSE(have(Plane), Transportation), Plane = 'planes', Transportation = 'transportation'.").
barrons.rule1298:: isa(A14S464-transportation, "transportation") -> purpose(E6S464-have, A14S464-transportation), isa(E6S464-have, "have"), object(E6S464-have, A9S464-plane), isa(A9S464-plane, "planes").
english(barrons.rule1299, "While it is nice to have cars planes and trains for transportation these machines give off gases that are not helpful to the atmosphere").
pretty(barrons.rule1299, "PURPOSE(have(Train), Transportation), Train = 'trains', Transportation = 'transportation'.").
barrons.rule1299:: isa(E6S464-have, "have"), object(E6S464-have, A12S464-train), isa(A12S464-train, "trains") -> purpose(E6S464-have, A14S464-transportation), isa(A14S464-transportation, "transportation").
english(barrons.rule1300, "While it is nice to have cars planes and trains for transportation these machines give off gases that are not helpful to the atmosphere").
pretty(barrons.rule1300, "PURPOSE(have(Train), Transportation), Train = 'trains', Transportation = 'transportation'.").
barrons.rule1300:: isa(A14S464-transportation, "transportation") -> purpose(E6S464-have, A14S464-transportation), isa(E6S464-have, "have"), object(E6S464-have, A12S464-train), isa(A12S464-train, "trains").
english(barrons.rule1301, "Humans have changed their[humans] environment by developing communities in areas where living things had to struggle to survive").
pretty(barrons.rule1301, "isa(change, 'changed') -> change(Human, Environment).").
barrons.rule1301:: isa(E3S467-change, "change") -> agent(E3S467-change, A1S467-human), isa(A1S467-human, "Humans"), object(E3S467-change, A5S467-environment), isa(A5S467-environment, "their[humans] environment").
english(barrons.rule1302, "Humans have changed their[humans] environment by developing communities in areas where living things had to struggle to survive").
pretty(barrons.rule1302, "isa(Human, 'Humans') -> change(Human, Environment).").
barrons.rule1302:: isa(A1S467-human, "Humans") -> isa(E3S467-change, "change"), agent(E3S467-change, A1S467-human), object(E3S467-change, A5S467-environment), isa(A5S467-environment, "their[humans] environment").
english(barrons.rule1303, "Humans have changed their[humans] environment by developing communities in areas where living things had to struggle to survive").
pretty(barrons.rule1303, "isa(Environment, 'their[humans] environment') -> change(Human, Environment).").
barrons.rule1303:: isa(A5S467-environment, "their[humans] environment") -> isa(E3S467-change, "change"), agent(E3S467-change, A1S467-human), isa(A1S467-human, "Humans"), object(E3S467-change, A5S467-environment).
english(barrons.rule1304, "Humans have changed their[humans] environment by developing communities in areas where living things had to struggle to survive").
pretty(barrons.rule1304, "ENABLE(develop_in(Human, Community, Area), change(Human, Environment)), Human = 'Humans', Community = 'communities', Area = 'areas', Environment = 'their[humans] environment'.").
barrons.rule1304:: isa(E7S467-develop, "develop"), agent(E7S467-develop, A1S467-human), isa(A1S467-human, "Humans"), object(E7S467-develop, A8S467-community), isa(A8S467-community, "communities"), in(E7S467-develop, A10S467-area), isa(A10S467-area, "areas") -> enable(E7S467-develop, E3S467-change), isa(E3S467-change, "change"), agent(E3S467-change, A1S467-human), object(E3S467-change, A5S467-environment), isa(A5S467-environment, "their[humans] environment").
english(barrons.rule1305, "Humans have changed their[humans] environment by developing communities in areas where living things had to struggle to survive").
pretty(barrons.rule1305, "ENABLE(develop_in(Human, Community, Area), change(Human, Environment)), Human = 'Humans', Community = 'communities', Area = 'areas', Environment = 'their[humans] environment'.").
barrons.rule1305:: isa(E3S467-change, "change"), agent(E3S467-change, A1S467-human), isa(A1S467-human, "Humans"), object(E3S467-change, A5S467-environment), isa(A5S467-environment, "their[humans] environment") -> enable(E7S467-develop, E3S467-change), isa(E7S467-develop, "develop"), agent(E7S467-develop, A1S467-human), object(E7S467-develop, A8S467-community), isa(A8S467-community, "communities"), in(E7S467-develop, A10S467-area), isa(A10S467-area, "areas").
english(barrons.rule1306, "Humans have changed their[humans] environment by developing communities in areas where living things had to struggle to survive").
pretty(barrons.rule1306, "EFFECT(struggle(Thing), survive(Thing)), Thing = 'living things'.").
barrons.rule1306:: isa(E16S467-struggle, "struggle"), agent(E16S467-struggle, A13S467-thing), isa(A13S467-thing, "living things") -> effect(E16S467-struggle, E18S467-survive), isa(E18S467-survive, "survive"), agent(E18S467-survive, A13S467-thing).
english(barrons.rule1307, "Humans have changed their[humans] environment by developing communities in areas where living things had to struggle to survive").
pretty(barrons.rule1307, "EFFECT(struggle(Thing), survive(Thing)), Thing = 'living things'.").
barrons.rule1307:: isa(E18S467-survive, "survive"), agent(E18S467-survive, A13S467-thing), isa(A13S467-thing, "living things") -> effect(E16S467-struggle, E18S467-survive), isa(E16S467-struggle, "struggle"), agent(E16S467-struggle, A13S467-thing).
english(barrons.rule1308, "When a new community is built in the desert humans may bring in plants that are not familiar to that environment").
pretty(barrons.rule1308, "WHEN(bring in(Human, Plant), build_in(Community, Desert)), Human = 'humans', Plant = 'plants', Community = 'a new community', Desert = 'the desert'.").
barrons.rule1308:: isa(E13S468-bring, "bring in"), agent(E13S468-bring, A11S468-human), isa(A11S468-human, "humans"), object(E13S468-bring, A15S468-plant), isa(A15S468-plant, "plants") -> when(E13S468-bring, E6S468-build), isa(E6S468-build, "build"), object(E6S468-build, A4S468-community), isa(A4S468-community, "a new community"), in(E6S468-build, A9S468-desert), isa(A9S468-desert, "the desert").
english(barrons.rule1309, "When a new community is built in the desert humans may bring in plants that are not familiar to that environment").
pretty(barrons.rule1309, "WHEN(bring in(Human, Plant), build_in(Community, Desert)), Human = 'humans', Plant = 'plants', Community = 'a new community', Desert = 'the desert'.").
barrons.rule1309:: isa(E6S468-build, "build"), object(E6S468-build, A4S468-community), isa(A4S468-community, "a new community"), in(E6S468-build, A9S468-desert), isa(A9S468-desert, "the desert") -> when(E13S468-bring, E6S468-build), isa(E13S468-bring, "bring in"), agent(E13S468-bring, A11S468-human), isa(A11S468-human, "humans"), object(E13S468-bring, A15S468-plant), isa(A15S468-plant, "plants").
english(barrons.rule1310, "Watering their[humans] imported lawns increases the moisture in the dry air").
pretty(barrons.rule1310, "isa(increase, 'increases') -> increase_in(Water, Moisture, Air).").
barrons.rule1310:: isa(E5S469-increase, "increase") -> agent(E5S469-increase, A1S469-water), isa(A1S469-water, "Watering their[humans] imported lawns"), object(E5S469-increase, A7S469-moisture), isa(A7S469-moisture, "the moisture"), in(E5S469-increase, A11S469-air), isa(A11S469-air, "the dry air").
english(barrons.rule1311, "Watering their[humans] imported lawns increases the moisture in the dry air").
pretty(barrons.rule1311, "isa(Water, 'Watering their[humans] imported lawns') -> increase_in(Water, Moisture, Air).").
barrons.rule1311:: isa(A1S469-water, "Watering their[humans] imported lawns") -> isa(E5S469-increase, "increase"), agent(E5S469-increase, A1S469-water), object(E5S469-increase, A7S469-moisture), isa(A7S469-moisture, "the moisture"), in(E5S469-increase, A11S469-air), isa(A11S469-air, "the dry air").
english(barrons.rule1312, "Watering their[humans] imported lawns increases the moisture in the dry air").
pretty(barrons.rule1312, "isa(Moisture, 'the moisture') -> increase_in(Water, Moisture, Air).").
barrons.rule1312:: isa(A7S469-moisture, "the moisture") -> isa(E5S469-increase, "increase"), agent(E5S469-increase, A1S469-water), isa(A1S469-water, "Watering their[humans] imported lawns"), object(E5S469-increase, A7S469-moisture), in(E5S469-increase, A11S469-air), isa(A11S469-air, "the dry air").
english(barrons.rule1313, "Watering their[humans] imported lawns increases the moisture in the dry air").
pretty(barrons.rule1313, "isa(Air, 'the dry air') -> increase_in(Water, Moisture, Air).").
barrons.rule1313:: isa(A11S469-air, "the dry air") -> isa(E5S469-increase, "increase"), agent(E5S469-increase, A1S469-water), isa(A1S469-water, "Watering their[humans] imported lawns"), object(E5S469-increase, A7S469-moisture), isa(A7S469-moisture, "the moisture"), in(E5S469-increase, A11S469-air).
english(barrons.rule1314, "This can change the air quality and lead to pollution").
pretty(barrons.rule1314, "isa(change, 'change') -> change(This, Quality).").
barrons.rule1314:: isa(E3S470-change, "change") -> agent(E3S470-change, A1S470-this), isa(A1S470-this, "This"), object(E3S470-change, A6S470-quality), isa(A6S470-quality, "the air quality").
english(barrons.rule1315, "This can change the air quality and lead to pollution").
pretty(barrons.rule1315, "isa(This, 'This') -> change(This, Quality).").
barrons.rule1315:: isa(A1S470-this, "This") -> isa(E3S470-change, "change"), agent(E3S470-change, A1S470-this), object(E3S470-change, A6S470-quality), isa(A6S470-quality, "the air quality").
english(barrons.rule1316, "This can change the air quality and lead to pollution").
pretty(barrons.rule1316, "isa(Quality, 'the air quality') -> change(This, Quality).").
barrons.rule1316:: isa(A6S470-quality, "the air quality") -> isa(E3S470-change, "change"), agent(E3S470-change, A1S470-this), isa(A1S470-this, "This"), object(E3S470-change, A6S470-quality).
english(barrons.rule1317, "Creating new clean forms of energy to conserve fossil fuels").
pretty(barrons.rule1317, "EFFECT(create(Form), conserve(Fuel)), Form = 'new clean forms of energy', Fuel = 'fossil fuels'.").
barrons.rule1317:: of(A4S476-form, A6S476-energy), isa(A6S476-energy, "energy"), isa(E1S476-create, "create"), object(E1S476-create, A4S476-form), isa(A4S476-form, "new clean forms") -> effect(E1S476-create, E8S476-conserve), isa(E8S476-conserve, "conserve"), object(E8S476-conserve, A10S476-fuel), isa(A10S476-fuel, "fossil fuels").
english(barrons.rule1318, "Creating new clean forms of energy to conserve fossil fuels").
pretty(barrons.rule1318, "EFFECT(create(Form), conserve(Fuel)), Form = 'new clean forms of energy', Fuel = 'fossil fuels'.").
barrons.rule1318:: isa(E8S476-conserve, "conserve"), object(E8S476-conserve, A10S476-fuel), isa(A10S476-fuel, "fossil fuels") -> effect(E1S476-create, E8S476-conserve), of(A4S476-form, A6S476-energy), isa(A6S476-energy, "energy"), isa(E1S476-create, "create"), object(E1S476-create, A4S476-form), isa(A4S476-form, "new clean forms").
english(barrons.rule1319, "Mass is the amount of material present in an object").
pretty(barrons.rule1319, "EXAMPLE(Mass, Amount), Mass = 'Mass', Amount = 'the amount of material present in an object'.").
barrons.rule1319:: isa(A1S478-Mass, "Mass") -> example(A1S478-Mass, A4S478-amount), of(A4S478-amount, A6S478-material), isa(A6S478-material, "material present in an object"), isa(A4S478-amount, "the amount").
english(barrons.rule1320, "Mass is the amount of material present in an object").
pretty(barrons.rule1320, "EXAMPLE(Mass, Amount), Mass = 'Mass', Amount = 'the amount of material present in an object'.").
barrons.rule1320:: of(A4S478-amount, A6S478-material), isa(A6S478-material, "material present in an object"), isa(A4S478-amount, "the amount") -> example(A1S478-Mass, A4S478-amount), isa(A1S478-Mass, "Mass").
english(barrons.rule1321, "To measure liquid volume scientists use a graduated cylinder").
pretty(barrons.rule1321, "isa(use, 'use') -> use(Scientist, Cylinder).").
barrons.rule1321:: isa(E6S481-use, "use") -> agent(E6S481-use, A5S481-scientist), isa(A5S481-scientist, "scientists"), object(E6S481-use, A9S481-cylinder), isa(A9S481-cylinder, "a graduated cylinder").
english(barrons.rule1322, "To measure liquid volume scientists use a graduated cylinder").
pretty(barrons.rule1322, "isa(Scientist, 'scientists') -> use(Scientist, Cylinder).").
barrons.rule1322:: isa(A5S481-scientist, "scientists") -> isa(E6S481-use, "use"), agent(E6S481-use, A5S481-scientist), object(E6S481-use, A9S481-cylinder), isa(A9S481-cylinder, "a graduated cylinder").
english(barrons.rule1323, "To measure liquid volume scientists use a graduated cylinder").
pretty(barrons.rule1323, "isa(Cylinder, 'a graduated cylinder') -> use(Scientist, Cylinder).").
barrons.rule1323:: isa(A9S481-cylinder, "a graduated cylinder") -> isa(E6S481-use, "use"), agent(E6S481-use, A5S481-scientist), isa(A5S481-scientist, "scientists"), object(E6S481-use, A9S481-cylinder).
english(barrons.rule1324, "It[this book] has mass as well as volume therefore it[this book] is considered matter").
pretty(barrons.rule1324, "isa(have, 'has') -> have(Book, Mass, Consider, Well, Therefore).").
barrons.rule1324:: isa(E2S484-have, "have") -> agent(E2S484-have, A4S483-book), isa(A4S483-book, "this book"), object(E2S484-have, A3S484-mass), isa(A3S484-mass, "mass"), arg(E2S484-have, A12S484-consider), isa(A12S484-consider, "it[this book] is considered matter"), arg(E2S484-have, A5S484-well), isa(A5S484-well, "as well as volume"), arg(E2S484-have, A9S484-therefore), isa(A9S484-therefore, "therefore").
english(barrons.rule1325, "It[this book] has mass as well as volume therefore it[this book] is considered matter").
pretty(barrons.rule1325, "isa(Book, 'this book') -> have(Book, Mass, Consider, Well, Therefore).").
barrons.rule1325:: isa(A4S483-book, "this book") -> isa(E2S484-have, "have"), agent(E2S484-have, A4S483-book), object(E2S484-have, A3S484-mass), isa(A3S484-mass, "mass"), arg(E2S484-have, A12S484-consider), isa(A12S484-consider, "it[this book] is considered matter"), arg(E2S484-have, A5S484-well), isa(A5S484-well, "as well as volume"), arg(E2S484-have, A9S484-therefore), isa(A9S484-therefore, "therefore").
english(barrons.rule1326, "It[this book] has mass as well as volume therefore it[this book] is considered matter").
pretty(barrons.rule1326, "isa(Mass, 'mass') -> have(Book, Mass, Consider, Well, Therefore).").
barrons.rule1326:: isa(A3S484-mass, "mass") -> isa(E2S484-have, "have"), agent(E2S484-have, A4S483-book), isa(A4S483-book, "this book"), object(E2S484-have, A3S484-mass), arg(E2S484-have, A12S484-consider), isa(A12S484-consider, "it[this book] is considered matter"), arg(E2S484-have, A5S484-well), isa(A5S484-well, "as well as volume"), arg(E2S484-have, A9S484-therefore), isa(A9S484-therefore, "therefore").
english(barrons.rule1327, "It[this book] has mass as well as volume therefore it[this book] is considered matter").
pretty(barrons.rule1327, "isa(Consider, 'it[this book] is considered') -> have(Book, Mass, Consider, Well, Therefore).").
barrons.rule1327:: isa(A12S484-consider, "it[this book] is considered matter") -> isa(E2S484-have, "have"), agent(E2S484-have, A4S483-book), isa(A4S483-book, "this book"), object(E2S484-have, A3S484-mass), isa(A3S484-mass, "mass"), arg(E2S484-have, A12S484-consider), arg(E2S484-have, A5S484-well), isa(A5S484-well, "as well as volume"), arg(E2S484-have, A9S484-therefore), isa(A9S484-therefore, "therefore").
english(barrons.rule1328, "It[this book] has mass as well as volume therefore it[this book] is considered matter").
pretty(barrons.rule1328, "isa(Well, 'well as volume') -> have(Book, Mass, Consider, Well, Therefore).").
barrons.rule1328:: isa(A5S484-well, "as well as volume") -> isa(E2S484-have, "have"), agent(E2S484-have, A4S483-book), isa(A4S483-book, "this book"), object(E2S484-have, A3S484-mass), isa(A3S484-mass, "mass"), arg(E2S484-have, A12S484-consider), isa(A12S484-consider, "it[this book] is considered matter"), arg(E2S484-have, A5S484-well), arg(E2S484-have, A9S484-therefore), isa(A9S484-therefore, "therefore").
english(barrons.rule1329, "It[this book] has mass as well as volume therefore it[this book] is considered matter").
pretty(barrons.rule1329, "isa(Therefore, 'therefore') -> have(Book, Mass, Consider, Well, Therefore).").
barrons.rule1329:: isa(A9S484-therefore, "therefore") -> isa(E2S484-have, "have"), agent(E2S484-have, A4S483-book), isa(A4S483-book, "this book"), object(E2S484-have, A3S484-mass), isa(A3S484-mass, "mass"), arg(E2S484-have, A12S484-consider), isa(A12S484-consider, "it[this book] is considered matter"), arg(E2S484-have, A5S484-well), isa(A5S484-well, "as well as volume"), arg(E2S484-have, A9S484-therefore).
english(barrons.rule1330, "Solids have a definite shape and volume").
pretty(barrons.rule1330, "isa(have, 'have') -> have(Solid, Shape).").
barrons.rule1330:: isa(E2S486-have, "have") -> agent(E2S486-have, A1S486-solid), isa(A1S486-solid, "Solids"), object(E2S486-have, A5S486-shape), isa(A5S486-shape, "a definite shape").
english(barrons.rule1331, "Solids have a definite shape and volume").
pretty(barrons.rule1331, "isa(Solid, 'Solids') -> have(Solid, Shape).").
barrons.rule1331:: isa(A1S486-solid, "Solids") -> isa(E2S486-have, "have"), agent(E2S486-have, A1S486-solid), object(E2S486-have, A5S486-shape), isa(A5S486-shape, "a definite shape").
english(barrons.rule1332, "Solids have a definite shape and volume").
pretty(barrons.rule1332, "isa(Shape, 'a definite shape') -> have(Solid, Shape).").
barrons.rule1332:: isa(A5S486-shape, "a definite shape") -> isa(E2S486-have, "have"), agent(E2S486-have, A1S486-solid), isa(A1S486-solid, "Solids"), object(E2S486-have, A5S486-shape).
english(barrons.rule1333, "Solids have a definite shape and volume").
pretty(barrons.rule1333, "isa(have, 'have') -> have(Solid, Volume).").
barrons.rule1333:: isa(E2S486-have, "have") -> agent(E2S486-have, A1S486-solid), isa(A1S486-solid, "Solids"), object(E2S486-have, A7S486-volume), isa(A7S486-volume, "volume").
english(barrons.rule1334, "Solids have a definite shape and volume").
pretty(barrons.rule1334, "isa(Solid, 'Solids') -> have(Solid, Volume).").
barrons.rule1334:: isa(A1S486-solid, "Solids") -> isa(E2S486-have, "have"), agent(E2S486-have, A1S486-solid), object(E2S486-have, A7S486-volume), isa(A7S486-volume, "volume").
english(barrons.rule1335, "Solids have a definite shape and volume").
pretty(barrons.rule1335, "isa(Volume, 'volume') -> have(Solid, Volume).").
barrons.rule1335:: isa(A7S486-volume, "volume") -> isa(E2S486-have, "have"), agent(E2S486-have, A1S486-solid), isa(A1S486-solid, "Solids"), object(E2S486-have, A7S486-volume).
english(barrons.rule1336, "Liquids take the shape of the container they[Liquids] are placed in and have a definite volume").
pretty(barrons.rule1336, "isa(Container, 'the container') -> take(Liquid, Shape).").
barrons.rule1336:: isa(A7S487-container, "the container") -> of(A4S487-shape, A7S487-container), isa(E2S487-take, "take"), agent(E2S487-take, A1S487-liquid), isa(A1S487-liquid, "Liquids"), object(E2S487-take, A4S487-shape), isa(A4S487-shape, "the shape").
english(barrons.rule1337, "Liquids take the shape of the container they[Liquids] are placed in and have a definite volume").
pretty(barrons.rule1337, "isa(take, 'take') -> take(Liquid, Shape).").
barrons.rule1337:: isa(E2S487-take, "take") -> of(A4S487-shape, A7S487-container), isa(A7S487-container, "the container"), agent(E2S487-take, A1S487-liquid), isa(A1S487-liquid, "Liquids"), object(E2S487-take, A4S487-shape), isa(A4S487-shape, "the shape").
english(barrons.rule1338, "Liquids take the shape of the container they[Liquids] are placed in and have a definite volume").
pretty(barrons.rule1338, "isa(Liquid, 'Liquids') -> take(Liquid, Shape).").
barrons.rule1338:: isa(A1S487-liquid, "Liquids") -> of(A4S487-shape, A7S487-container), isa(A7S487-container, "the container"), isa(E2S487-take, "take"), agent(E2S487-take, A1S487-liquid), object(E2S487-take, A4S487-shape), isa(A4S487-shape, "the shape").
english(barrons.rule1339, "Liquids take the shape of the container they[Liquids] are placed in and have a definite volume").
pretty(barrons.rule1339, "isa(Shape, 'the shape of the container') -> take(Liquid, Shape).").
barrons.rule1339:: isa(A4S487-shape, "the shape") -> of(A4S487-shape, A7S487-container), isa(A7S487-container, "the container"), isa(E2S487-take, "take"), agent(E2S487-take, A1S487-liquid), isa(A1S487-liquid, "Liquids"), object(E2S487-take, A4S487-shape).
english(barrons.rule1340, "Gases take the shape and volume of whatever container they[gases that are not helpful to the atmosphere] occupy").
pretty(barrons.rule1340, "isa(Occupy, 'whatever container occupy') -> take(Gas, Shape).").
barrons.rule1340:: isa(A11S488-occupy, "whatever container occupy") -> of(A4S488-shape, A11S488-occupy), isa(E2S488-take, "take"), agent(E2S488-take, A1S488-gas), isa(A1S488-gas, "Gases"), object(E2S488-take, A4S488-shape), isa(A4S488-shape, "the shape").
english(barrons.rule1341, "Gases take the shape and volume of whatever container they[gases that are not helpful to the atmosphere] occupy").
pretty(barrons.rule1341, "isa(take, 'take') -> take(Gas, Shape).").
barrons.rule1341:: isa(E2S488-take, "take") -> of(A4S488-shape, A11S488-occupy), isa(A11S488-occupy, "whatever container occupy"), agent(E2S488-take, A1S488-gas), isa(A1S488-gas, "Gases"), object(E2S488-take, A4S488-shape), isa(A4S488-shape, "the shape").
english(barrons.rule1342, "Gases take the shape and volume of whatever container they[gases that are not helpful to the atmosphere] occupy").
pretty(barrons.rule1342, "isa(Gas, 'Gases') -> take(Gas, Shape).").
barrons.rule1342:: isa(A1S488-gas, "Gases") -> of(A4S488-shape, A11S488-occupy), isa(A11S488-occupy, "whatever container occupy"), isa(E2S488-take, "take"), agent(E2S488-take, A1S488-gas), object(E2S488-take, A4S488-shape), isa(A4S488-shape, "the shape").
english(barrons.rule1343, "Gases take the shape and volume of whatever container they[gases that are not helpful to the atmosphere] occupy").
pretty(barrons.rule1343, "isa(Shape, 'the shape of whatever container they[gases that are not helpful to the atmosphere] occupy') -> take(Gas, Shape).").
barrons.rule1343:: isa(A4S488-shape, "the shape") -> of(A4S488-shape, A11S488-occupy), isa(A11S488-occupy, "whatever container occupy"), isa(E2S488-take, "take"), agent(E2S488-take, A1S488-gas), isa(A1S488-gas, "Gases"), object(E2S488-take, A4S488-shape).
english(barrons.rule1344, "Gases take the shape and volume of whatever container they[gases that are not helpful to the atmosphere] occupy").
pretty(barrons.rule1344, "isa(take, 'take') -> take(Gas, Volume).").
barrons.rule1344:: isa(E2S488-take, "take") -> agent(E2S488-take, A1S488-gas), isa(A1S488-gas, "Gases"), object(E2S488-take, A6S488-volume), isa(A6S488-volume, "volume").
english(barrons.rule1345, "Gases take the shape and volume of whatever container they[gases that are not helpful to the atmosphere] occupy").
pretty(barrons.rule1345, "isa(Gas, 'Gases') -> take(Gas, Volume).").
barrons.rule1345:: isa(A1S488-gas, "Gases") -> isa(E2S488-take, "take"), agent(E2S488-take, A1S488-gas), object(E2S488-take, A6S488-volume), isa(A6S488-volume, "volume").
english(barrons.rule1346, "Gases take the shape and volume of whatever container they[gases that are not helpful to the atmosphere] occupy").
pretty(barrons.rule1346, "isa(Volume, 'volume') -> take(Gas, Volume).").
barrons.rule1346:: isa(A6S488-volume, "volume") -> isa(E2S488-take, "take"), agent(E2S488-take, A1S488-gas), isa(A1S488-gas, "Gases"), object(E2S488-take, A6S488-volume).
english(barrons.rule1347, "The simplest way to observe matter is to use your senses sight sound taste touch and hearing").
pretty(barrons.rule1347, "isa(be, 'is') -> be(Way, Sight).").
barrons.rule1347:: isa(E7S489-be, "be") -> agent(E7S489-be, A3S489-way), isa(A3S489-way, "The simplest way"), object(E7S489-be, A13S489-sight), isa(A13S489-sight, "sight").
english(barrons.rule1348, "The simplest way to observe matter is to use your senses sight sound taste touch and hearing").
pretty(barrons.rule1348, "isa(Way, 'The simplest way to observe matter') -> be(Way, Sight).").
barrons.rule1348:: isa(A3S489-way, "The simplest way") -> isa(E7S489-be, "be"), agent(E7S489-be, A3S489-way), object(E7S489-be, A13S489-sight), isa(A13S489-sight, "sight").
english(barrons.rule1349, "The simplest way to observe matter is to use your senses sight sound taste touch and hearing").
pretty(barrons.rule1349, "isa(Sight, 'sight') -> be(Way, Sight).").
barrons.rule1349:: isa(A13S489-sight, "sight") -> isa(E7S489-be, "be"), agent(E7S489-be, A3S489-way), isa(A3S489-way, "The simplest way"), object(E7S489-be, A13S489-sight).
english(barrons.rule1350, "The simplest way to observe matter is to use your senses sight sound taste touch and hearing").
pretty(barrons.rule1350, "isa(be, 'is') -> be(Way, Sound).").
barrons.rule1350:: isa(E7S489-be, "be") -> agent(E7S489-be, A3S489-way), isa(A3S489-way, "The simplest way"), object(E7S489-be, A15S489-sound), isa(A15S489-sound, "sound").
english(barrons.rule1351, "The simplest way to observe matter is to use your senses sight sound taste touch and hearing").
pretty(barrons.rule1351, "isa(Way, 'The simplest way to observe matter') -> be(Way, Sound).").
barrons.rule1351:: isa(A3S489-way, "The simplest way") -> isa(E7S489-be, "be"), agent(E7S489-be, A3S489-way), object(E7S489-be, A15S489-sound), isa(A15S489-sound, "sound").
english(barrons.rule1352, "The simplest way to observe matter is to use your senses sight sound taste touch and hearing").
pretty(barrons.rule1352, "isa(Sound, 'sound') -> be(Way, Sound).").
barrons.rule1352:: isa(A15S489-sound, "sound") -> isa(E7S489-be, "be"), agent(E7S489-be, A3S489-way), isa(A3S489-way, "The simplest way"), object(E7S489-be, A15S489-sound).
english(barrons.rule1353, "The simplest way to observe matter is to use your senses sight sound taste touch and hearing").
pretty(barrons.rule1353, "isa(be, 'is') -> be(Way, Taste).").
barrons.rule1353:: isa(E7S489-be, "be") -> agent(E7S489-be, A3S489-way), isa(A3S489-way, "The simplest way"), object(E7S489-be, A17S489-taste), isa(A17S489-taste, "taste").
english(barrons.rule1354, "The simplest way to observe matter is to use your senses sight sound taste touch and hearing").
pretty(barrons.rule1354, "isa(Way, 'The simplest way to observe matter') -> be(Way, Taste).").
barrons.rule1354:: isa(A3S489-way, "The simplest way") -> isa(E7S489-be, "be"), agent(E7S489-be, A3S489-way), object(E7S489-be, A17S489-taste), isa(A17S489-taste, "taste").
english(barrons.rule1355, "The simplest way to observe matter is to use your senses sight sound taste touch and hearing").
pretty(barrons.rule1355, "isa(Taste, 'taste') -> be(Way, Taste).").
barrons.rule1355:: isa(A17S489-taste, "taste") -> isa(E7S489-be, "be"), agent(E7S489-be, A3S489-way), isa(A3S489-way, "The simplest way"), object(E7S489-be, A17S489-taste).
english(barrons.rule1356, "The simplest way to observe matter is to use your senses sight sound taste touch and hearing").
pretty(barrons.rule1356, "isa(be, 'is') -> be(Way, Touch).").
barrons.rule1356:: isa(E7S489-be, "be") -> agent(E7S489-be, A3S489-way), isa(A3S489-way, "The simplest way"), object(E7S489-be, A19S489-touch), isa(A19S489-touch, "touch").
english(barrons.rule1357, "The simplest way to observe matter is to use your senses sight sound taste touch and hearing").
pretty(barrons.rule1357, "isa(Way, 'The simplest way to observe matter') -> be(Way, Touch).").
barrons.rule1357:: isa(A3S489-way, "The simplest way") -> isa(E7S489-be, "be"), agent(E7S489-be, A3S489-way), object(E7S489-be, A19S489-touch), isa(A19S489-touch, "touch").
english(barrons.rule1358, "The simplest way to observe matter is to use your senses sight sound taste touch and hearing").
pretty(barrons.rule1358, "isa(Touch, 'touch') -> be(Way, Touch).").
barrons.rule1358:: isa(A19S489-touch, "touch") -> isa(E7S489-be, "be"), agent(E7S489-be, A3S489-way), isa(A3S489-way, "The simplest way"), object(E7S489-be, A19S489-touch).
english(barrons.rule1359, "The simplest way to observe matter is to use your senses sight sound taste touch and hearing").
pretty(barrons.rule1359, "isa(be, 'is') -> be(Way, Hearing).").
barrons.rule1359:: isa(E7S489-be, "be") -> agent(E7S489-be, A3S489-way), isa(A3S489-way, "The simplest way"), object(E7S489-be, A22S489-hearing), isa(A22S489-hearing, "hearing").
english(barrons.rule1360, "The simplest way to observe matter is to use your senses sight sound taste touch and hearing").
pretty(barrons.rule1360, "isa(Way, 'The simplest way to observe matter') -> be(Way, Hearing).").
barrons.rule1360:: isa(A3S489-way, "The simplest way") -> isa(E7S489-be, "be"), agent(E7S489-be, A3S489-way), object(E7S489-be, A22S489-hearing), isa(A22S489-hearing, "hearing").
english(barrons.rule1361, "The simplest way to observe matter is to use your senses sight sound taste touch and hearing").
pretty(barrons.rule1361, "isa(Hearing, 'hearing') -> be(Way, Hearing).").
barrons.rule1361:: isa(A22S489-hearing, "hearing") -> isa(E7S489-be, "be"), agent(E7S489-be, A3S489-way), isa(A3S489-way, "The simplest way"), object(E7S489-be, A22S489-hearing).
english(barrons.rule1362, "In addition to their[five senses taste touch smell sight and hearing] senses scientists often use tools and/or instruments to observe matter").
pretty(barrons.rule1362, "EFFECT(use_to(Scientist, Tool, Sens), observe(Scientist, Matter)), Scientist = 'scientists', Tool = 'tools', Sens = 'their[five senses taste touch smell sight and hearing] senses', Matter = 'matter'.").
barrons.rule1362:: isa(E9S490-use, "use"), agent(E9S490-use, A7S490-scientist), isa(A7S490-scientist, "scientists"), object(E9S490-use, A10S490-tool), isa(A10S490-tool, "tools"), to(E9S490-use, A5S490-sens), isa(A5S490-sens, "their[five senses taste touch smell sight and hearing] senses") -> effect(E9S490-use, E14S490-observe), isa(E14S490-observe, "observe"), agent(E14S490-observe, A7S490-scientist), object(E14S490-observe, A15S490-matter), isa(A15S490-matter, "matter").
english(barrons.rule1363, "In addition to their[five senses taste touch smell sight and hearing] senses scientists often use tools and/or instruments to observe matter").
pretty(barrons.rule1363, "EFFECT(use_to(Scientist, Tool, Sens), observe(Scientist, Matter)), Scientist = 'scientists', Tool = 'tools', Sens = 'their[five senses taste touch smell sight and hearing] senses', Matter = 'matter'.").
barrons.rule1363:: isa(E14S490-observe, "observe"), agent(E14S490-observe, A7S490-scientist), isa(A7S490-scientist, "scientists"), object(E14S490-observe, A15S490-matter), isa(A15S490-matter, "matter") -> effect(E9S490-use, E14S490-observe), isa(E9S490-use, "use"), agent(E9S490-use, A7S490-scientist), object(E9S490-use, A10S490-tool), isa(A10S490-tool, "tools"), to(E9S490-use, A5S490-sens), isa(A5S490-sens, "their[five senses taste touch smell sight and hearing] senses").
english(barrons.rule1364, "In addition to their[five senses taste touch smell sight and hearing] senses scientists often use tools and/or instruments to observe matter").
pretty(barrons.rule1364, "EFFECT(use_to(Scientist, Instrument, Sens), observe(Scientist, Matter)), Scientist = 'scientists', Instrument = 'instruments', Sens = 'their[five senses taste touch smell sight and hearing] senses', Matter = 'matter'.").
barrons.rule1364:: isa(E9S490-use, "use"), agent(E9S490-use, A7S490-scientist), isa(A7S490-scientist, "scientists"), object(E9S490-use, A12S490-instrument), isa(A12S490-instrument, "instruments"), to(E9S490-use, A5S490-sens), isa(A5S490-sens, "their[five senses taste touch smell sight and hearing] senses") -> effect(E9S490-use, E14S490-observe), isa(E14S490-observe, "observe"), agent(E14S490-observe, A7S490-scientist), object(E14S490-observe, A15S490-matter), isa(A15S490-matter, "matter").
english(barrons.rule1365, "In addition to their[five senses taste touch smell sight and hearing] senses scientists often use tools and/or instruments to observe matter").
pretty(barrons.rule1365, "EFFECT(use_to(Scientist, Instrument, Sens), observe(Scientist, Matter)), Scientist = 'scientists', Instrument = 'instruments', Sens = 'their[five senses taste touch smell sight and hearing] senses', Matter = 'matter'.").
barrons.rule1365:: isa(E14S490-observe, "observe"), agent(E14S490-observe, A7S490-scientist), isa(A7S490-scientist, "scientists"), object(E14S490-observe, A15S490-matter), isa(A15S490-matter, "matter") -> effect(E9S490-use, E14S490-observe), isa(E9S490-use, "use"), agent(E9S490-use, A7S490-scientist), object(E9S490-use, A12S490-instrument), isa(A12S490-instrument, "instruments"), to(E9S490-use, A5S490-sens), isa(A5S490-sens, "their[five senses taste touch smell sight and hearing] senses").
english(barrons.rule1366, "A ruler measures length").
pretty(barrons.rule1366, "isa(measure, 'measures') -> measure(Ruler, Length).").
barrons.rule1366:: isa(E3S492-measure, "measure") -> agent(E3S492-measure, A2S492-ruler), isa(A2S492-ruler, "A ruler"), object(E3S492-measure, A4S492-length), isa(A4S492-length, "length").
english(barrons.rule1367, "A ruler measures length").
pretty(barrons.rule1367, "isa(Ruler, 'A ruler') -> measure(Ruler, Length).").
barrons.rule1367:: isa(A2S492-ruler, "A ruler") -> isa(E3S492-measure, "measure"), agent(E3S492-measure, A2S492-ruler), object(E3S492-measure, A4S492-length), isa(A4S492-length, "length").
english(barrons.rule1368, "A ruler measures length").
pretty(barrons.rule1368, "isa(Length, 'length') -> measure(Ruler, Length).").
barrons.rule1368:: isa(A4S492-length, "length") -> isa(E3S492-measure, "measure"), agent(E3S492-measure, A2S492-ruler), isa(A2S492-ruler, "A ruler"), object(E3S492-measure, A4S492-length).
english(barrons.rule1369, "A ruler measures length").
pretty(barrons.rule1369, "PURPOSE(Ruler, measure(Ruler, Length)), Ruler = 'A ruler', Length = 'length'.").
barrons.rule1369:: isa(A2S492-ruler, "A ruler") -> purpose(A2S492-ruler, E3S492-measure), isa(E3S492-measure, "measure"), agent(E3S492-measure, A2S492-ruler), object(E3S492-measure, A4S492-length), isa(A4S492-length, "length").
english(barrons.rule1370, "A ruler measures length").
pretty(barrons.rule1370, "PURPOSE(Ruler, measure(Ruler, Length)), Ruler = 'A ruler', Length = 'length'.").
barrons.rule1370:: isa(E3S492-measure, "measure"), agent(E3S492-measure, A2S492-ruler), isa(A2S492-ruler, "A ruler"), object(E3S492-measure, A4S492-length), isa(A4S492-length, "length") -> purpose(A2S492-ruler, E3S492-measure).
english(barrons.rule1371, "A balance measures mass").
pretty(barrons.rule1371, "isa(measure, 'measures') -> measure(Balance, Mass).").
barrons.rule1371:: isa(E3S493-measure, "measure") -> agent(E3S493-measure, A2S493-balance), isa(A2S493-balance, "A balance"), object(E3S493-measure, A4S493-mass), isa(A4S493-mass, "mass").
english(barrons.rule1372, "A balance measures mass").
pretty(barrons.rule1372, "isa(Balance, 'A balance') -> measure(Balance, Mass).").
barrons.rule1372:: isa(A2S493-balance, "A balance") -> isa(E3S493-measure, "measure"), agent(E3S493-measure, A2S493-balance), object(E3S493-measure, A4S493-mass), isa(A4S493-mass, "mass").
english(barrons.rule1373, "A balance measures mass").
pretty(barrons.rule1373, "isa(Mass, 'mass') -> measure(Balance, Mass).").
barrons.rule1373:: isa(A4S493-mass, "mass") -> isa(E3S493-measure, "measure"), agent(E3S493-measure, A2S493-balance), isa(A2S493-balance, "A balance"), object(E3S493-measure, A4S493-mass).
english(barrons.rule1374, "A balance measures mass").
pretty(barrons.rule1374, "PURPOSE(Balance, measure(Balance, Mass)), Balance = 'A balance', Mass = 'mass'.").
barrons.rule1374:: isa(A2S493-balance, "A balance") -> purpose(A2S493-balance, E3S493-measure), isa(E3S493-measure, "measure"), agent(E3S493-measure, A2S493-balance), object(E3S493-measure, A4S493-mass), isa(A4S493-mass, "mass").
english(barrons.rule1375, "A balance measures mass").
pretty(barrons.rule1375, "PURPOSE(Balance, measure(Balance, Mass)), Balance = 'A balance', Mass = 'mass'.").
barrons.rule1375:: isa(E3S493-measure, "measure"), agent(E3S493-measure, A2S493-balance), isa(A2S493-balance, "A balance"), object(E3S493-measure, A4S493-mass), isa(A4S493-mass, "mass") -> purpose(A2S493-balance, E3S493-measure).
english(barrons.rule1376, "A thermometer measures temperature").
pretty(barrons.rule1376, "isa(measure, 'measures') -> measure(Thermometer, Temperature).").
barrons.rule1376:: isa(E3S494-measure, "measure") -> agent(E3S494-measure, A2S494-thermometer), isa(A2S494-thermometer, "A thermometer"), object(E3S494-measure, A4S494-temperature), isa(A4S494-temperature, "temperature").
english(barrons.rule1377, "A thermometer measures temperature").
pretty(barrons.rule1377, "isa(Thermometer, 'A thermometer') -> measure(Thermometer, Temperature).").
barrons.rule1377:: isa(A2S494-thermometer, "A thermometer") -> isa(E3S494-measure, "measure"), agent(E3S494-measure, A2S494-thermometer), object(E3S494-measure, A4S494-temperature), isa(A4S494-temperature, "temperature").
english(barrons.rule1378, "A thermometer measures temperature").
pretty(barrons.rule1378, "isa(Temperature, 'temperature') -> measure(Thermometer, Temperature).").
barrons.rule1378:: isa(A4S494-temperature, "temperature") -> isa(E3S494-measure, "measure"), agent(E3S494-measure, A2S494-thermometer), isa(A2S494-thermometer, "A thermometer"), object(E3S494-measure, A4S494-temperature).
english(barrons.rule1379, "A thermometer measures temperature").
pretty(barrons.rule1379, "PURPOSE(Thermometer, measure(Thermometer, Temperature)), Thermometer = 'A thermometer', Temperature = 'temperature'.").
barrons.rule1379:: isa(A2S494-thermometer, "A thermometer") -> purpose(A2S494-thermometer, E3S494-measure), isa(E3S494-measure, "measure"), agent(E3S494-measure, A2S494-thermometer), object(E3S494-measure, A4S494-temperature), isa(A4S494-temperature, "temperature").
english(barrons.rule1380, "A thermometer measures temperature").
pretty(barrons.rule1380, "PURPOSE(Thermometer, measure(Thermometer, Temperature)), Thermometer = 'A thermometer', Temperature = 'temperature'.").
barrons.rule1380:: isa(E3S494-measure, "measure"), agent(E3S494-measure, A2S494-thermometer), isa(A2S494-thermometer, "A thermometer"), object(E3S494-measure, A4S494-temperature), isa(A4S494-temperature, "temperature") -> purpose(A2S494-thermometer, E3S494-measure).
english(barrons.rule1381, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1381, "isa(include, 'include') -> include(Property, Color).").
barrons.rule1381:: isa(E3S498-include, "include") -> agent(E3S498-include, A2S498-property), isa(A2S498-property, "Physical properties"), object(E3S498-include, A5S498-color), isa(A5S498-color, "color").
english(barrons.rule1382, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1382, "isa(Property, 'Physical properties') -> include(Property, Color).").
barrons.rule1382:: isa(A2S498-property, "Physical properties") -> isa(E3S498-include, "include"), agent(E3S498-include, A2S498-property), object(E3S498-include, A5S498-color), isa(A5S498-color, "color").
english(barrons.rule1383, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1383, "isa(Color, 'color') -> include(Property, Color).").
barrons.rule1383:: isa(A5S498-color, "color") -> isa(E3S498-include, "include"), agent(E3S498-include, A2S498-property), isa(A2S498-property, "Physical properties"), object(E3S498-include, A5S498-color).
english(barrons.rule1384, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1384, "isa(include, 'include') -> include(Property, Hardness).").
barrons.rule1384:: isa(E3S498-include, "include") -> agent(E3S498-include, A2S498-property), isa(A2S498-property, "Physical properties"), object(E3S498-include, A7S498-hardness), isa(A7S498-hardness, "hardness").
english(barrons.rule1385, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1385, "isa(Property, 'Physical properties') -> include(Property, Hardness).").
barrons.rule1385:: isa(A2S498-property, "Physical properties") -> isa(E3S498-include, "include"), agent(E3S498-include, A2S498-property), object(E3S498-include, A7S498-hardness), isa(A7S498-hardness, "hardness").
english(barrons.rule1386, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1386, "isa(Hardness, 'hardness') -> include(Property, Hardness).").
barrons.rule1386:: isa(A7S498-hardness, "hardness") -> isa(E3S498-include, "include"), agent(E3S498-include, A2S498-property), isa(A2S498-property, "Physical properties"), object(E3S498-include, A7S498-hardness).
english(barrons.rule1387, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1387, "isa(include, 'include') -> include(Property, Odor).").
barrons.rule1387:: isa(E3S498-include, "include") -> agent(E3S498-include, A2S498-property), isa(A2S498-property, "Physical properties"), object(E3S498-include, A9S498-odor), isa(A9S498-odor, "odor").
english(barrons.rule1388, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1388, "isa(Property, 'Physical properties') -> include(Property, Odor).").
barrons.rule1388:: isa(A2S498-property, "Physical properties") -> isa(E3S498-include, "include"), agent(E3S498-include, A2S498-property), object(E3S498-include, A9S498-odor), isa(A9S498-odor, "odor").
english(barrons.rule1389, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1389, "isa(Odor, 'odor') -> include(Property, Odor).").
barrons.rule1389:: isa(A9S498-odor, "odor") -> isa(E3S498-include, "include"), agent(E3S498-include, A2S498-property), isa(A2S498-property, "Physical properties"), object(E3S498-include, A9S498-odor).
english(barrons.rule1390, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1390, "isa(include, 'include') -> include(Property, Sound).").
barrons.rule1390:: isa(E3S498-include, "include") -> agent(E3S498-include, A2S498-property), isa(A2S498-property, "Physical properties"), object(E3S498-include, A11S498-sound), isa(A11S498-sound, "sound").
english(barrons.rule1391, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1391, "isa(Property, 'Physical properties') -> include(Property, Sound).").
barrons.rule1391:: isa(A2S498-property, "Physical properties") -> isa(E3S498-include, "include"), agent(E3S498-include, A2S498-property), object(E3S498-include, A11S498-sound), isa(A11S498-sound, "sound").
english(barrons.rule1392, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1392, "isa(Sound, 'sound') -> include(Property, Sound).").
barrons.rule1392:: isa(A11S498-sound, "sound") -> isa(E3S498-include, "include"), agent(E3S498-include, A2S498-property), isa(A2S498-property, "Physical properties"), object(E3S498-include, A11S498-sound).
english(barrons.rule1393, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1393, "isa(include, 'include') -> include(Property, Taste).").
barrons.rule1393:: isa(E3S498-include, "include") -> agent(E3S498-include, A2S498-property), isa(A2S498-property, "Physical properties"), object(E3S498-include, A13S498-taste), isa(A13S498-taste, "taste").
english(barrons.rule1394, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1394, "isa(Property, 'Physical properties') -> include(Property, Taste).").
barrons.rule1394:: isa(A2S498-property, "Physical properties") -> isa(E3S498-include, "include"), agent(E3S498-include, A2S498-property), object(E3S498-include, A13S498-taste), isa(A13S498-taste, "taste").
english(barrons.rule1395, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1395, "isa(Taste, 'taste') -> include(Property, Taste).").
barrons.rule1395:: isa(A13S498-taste, "taste") -> isa(E3S498-include, "include"), agent(E3S498-include, A2S498-property), isa(A2S498-property, "Physical properties"), object(E3S498-include, A13S498-taste).
english(barrons.rule1396, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1396, "isa(include, 'include') -> include(Property, Texture).").
barrons.rule1396:: isa(E3S498-include, "include") -> agent(E3S498-include, A2S498-property), isa(A2S498-property, "Physical properties"), object(E3S498-include, A15S498-texture), isa(A15S498-texture, "texture").
english(barrons.rule1397, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1397, "isa(Property, 'Physical properties') -> include(Property, Texture).").
barrons.rule1397:: isa(A2S498-property, "Physical properties") -> isa(E3S498-include, "include"), agent(E3S498-include, A2S498-property), object(E3S498-include, A15S498-texture), isa(A15S498-texture, "texture").
english(barrons.rule1398, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1398, "isa(Texture, 'texture') -> include(Property, Texture).").
barrons.rule1398:: isa(A15S498-texture, "texture") -> isa(E3S498-include, "include"), agent(E3S498-include, A2S498-property), isa(A2S498-property, "Physical properties"), object(E3S498-include, A15S498-texture).
english(barrons.rule1399, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1399, "isa(include, 'include') -> include(Property, Size).").
barrons.rule1399:: isa(E3S498-include, "include") -> agent(E3S498-include, A2S498-property), isa(A2S498-property, "Physical properties"), object(E3S498-include, A18S498-size), isa(A18S498-size, "size").
english(barrons.rule1400, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1400, "isa(Property, 'Physical properties') -> include(Property, Size).").
barrons.rule1400:: isa(A2S498-property, "Physical properties") -> isa(E3S498-include, "include"), agent(E3S498-include, A2S498-property), object(E3S498-include, A18S498-size), isa(A18S498-size, "size").
english(barrons.rule1401, "Physical properties include color hardness odor sound taste texture and size").
pretty(barrons.rule1401, "isa(Size, 'size') -> include(Property, Size).").
barrons.rule1401:: isa(A18S498-size, "size") -> isa(E3S498-include, "include"), agent(E3S498-include, A2S498-property), isa(A2S498-property, "Physical properties"), object(E3S498-include, A18S498-size).
english(barrons.rule1402, "An example of a chemical property would be rusting").
pretty(barrons.rule1402, "EXAMPLE(Rusting, Property), Rusting = 'rusting', Property = 'a chemical property'.").
barrons.rule1402:: isa(A9S500-rusting, "rusting") -> example(A9S500-rusting, A6S500-property), isa(A6S500-property, "a chemical property").
english(barrons.rule1403, "An example of a chemical property would be rusting").
pretty(barrons.rule1403, "EXAMPLE(Rusting, Property), Rusting = 'rusting', Property = 'a chemical property'.").
barrons.rule1403:: isa(A6S500-property, "a chemical property") -> example(A9S500-rusting, A6S500-property), isa(A9S500-rusting, "rusting").
english(barrons.rule1404, "Scientists often classify or organize different objects based on their[mass scientists] physical properties").
pretty(barrons.rule1404, "isa(classify, 'classify') -> classify(Scientist, Object).").
barrons.rule1404:: isa(E3S501-classify, "classify") -> agent(E3S501-classify, A1S501-scientist), isa(A1S501-scientist, "Scientists"), object(E3S501-classify, A7S501-object), isa(A7S501-object, "different objects").
english(barrons.rule1405, "Scientists often classify or organize different objects based on their[mass scientists] physical properties").
pretty(barrons.rule1405, "isa(Scientist, 'Scientists') -> classify(Scientist, Object).").
barrons.rule1405:: isa(A1S501-scientist, "Scientists") -> isa(E3S501-classify, "classify"), agent(E3S501-classify, A1S501-scientist), object(E3S501-classify, A7S501-object), isa(A7S501-object, "different objects").
english(barrons.rule1406, "Scientists often classify or organize different objects based on their[mass scientists] physical properties").
pretty(barrons.rule1406, "isa(Object, 'different objects') -> classify(Scientist, Object).").
barrons.rule1406:: isa(A7S501-object, "different objects") -> isa(E3S501-classify, "classify"), agent(E3S501-classify, A1S501-scientist), isa(A1S501-scientist, "Scientists"), object(E3S501-classify, A7S501-object).
english(barrons.rule1407, "Just as we can describe physical and chemical properties of matter we[we] can describe the physical and chemical changes to matter").
pretty(barrons.rule1407, "EFFECT(describe(We, Change, Describe), matter(We)), We = 'we', Change = 'the physical and chemical changes', Describe = 'as describe physical and chemical properties of matter'.").
barrons.rule1407:: isa(E14S502-describe, "describe"), agent(E14S502-describe, A3S502-we), isa(A3S502-we, "we"), object(E14S502-describe, A19S502-change), isa(A19S502-change, "the physical and chemical changes"), arg(E14S502-describe, A5S502-describe), isa(A5S502-describe, "Just as we can describe physical and chemical properties of matter") -> effect(E14S502-describe, E21S502-matter), isa(E21S502-matter, "matter"), agent(E21S502-matter, A3S502-we).
english(barrons.rule1408, "Just as we can describe physical and chemical properties of matter we[we] can describe the physical and chemical changes to matter").
pretty(barrons.rule1408, "EFFECT(describe(We, Change, Describe), matter(We)), We = 'we', Change = 'the physical and chemical changes', Describe = 'as describe physical and chemical properties of matter'.").
barrons.rule1408:: isa(E21S502-matter, "matter"), agent(E21S502-matter, A3S502-we), isa(A3S502-we, "we") -> effect(E14S502-describe, E21S502-matter), isa(E14S502-describe, "describe"), agent(E14S502-describe, A3S502-we), object(E14S502-describe, A19S502-change), isa(A19S502-change, "the physical and chemical changes"), arg(E14S502-describe, A5S502-describe), isa(A5S502-describe, "Just as we can describe physical and chemical properties of matter").
english(barrons.rule1409, "We can describe the paper in terms of its[notebook paper] color white and its[notebook paper] size 21 centimeters wide and 27 centimeters long").
pretty(barrons.rule1409, "isa(describe, 'describe') -> describe_in(We, Paper, Term).").
barrons.rule1409:: isa(E3S506-describe, "describe") -> agent(E3S506-describe, A1S506-we), isa(A1S506-we, "We"), object(E3S506-describe, A5S506-paper), isa(A5S506-paper, "the paper"), in(E3S506-describe, A7S506-term), isa(A7S506-term, "terms of its[notebook paper] color white and its[notebook paper] size 21 centimeters wide and 27 centimeters long").
english(barrons.rule1410, "We can describe the paper in terms of its[notebook paper] color white and its[notebook paper] size 21 centimeters wide and 27 centimeters long").
pretty(barrons.rule1410, "isa(We, 'We') -> describe_in(We, Paper, Term).").
barrons.rule1410:: isa(A1S506-we, "We") -> isa(E3S506-describe, "describe"), agent(E3S506-describe, A1S506-we), object(E3S506-describe, A5S506-paper), isa(A5S506-paper, "the paper"), in(E3S506-describe, A7S506-term), isa(A7S506-term, "terms of its[notebook paper] color white and its[notebook paper] size 21 centimeters wide and 27 centimeters long").
english(barrons.rule1411, "We can describe the paper in terms of its[notebook paper] color white and its[notebook paper] size 21 centimeters wide and 27 centimeters long").
pretty(barrons.rule1411, "isa(Paper, 'the paper') -> describe_in(We, Paper, Term).").
barrons.rule1411:: isa(A5S506-paper, "the paper") -> isa(E3S506-describe, "describe"), agent(E3S506-describe, A1S506-we), isa(A1S506-we, "We"), object(E3S506-describe, A5S506-paper), in(E3S506-describe, A7S506-term), isa(A7S506-term, "terms of its[notebook paper] color white and its[notebook paper] size 21 centimeters wide and 27 centimeters long").
english(barrons.rule1412, "We can describe the paper in terms of its[notebook paper] color white and its[notebook paper] size 21 centimeters wide and 27 centimeters long").
pretty(barrons.rule1412, "isa(Term, 'terms of its[notebook paper] color white and its[notebook paper] size 21 centimeters wide and 27 centimeters long') -> describe_in(We, Paper, Term).").
barrons.rule1412:: isa(A7S506-term, "terms of its[notebook paper] color white and its[notebook paper] size 21 centimeters wide and 27 centimeters long") -> isa(E3S506-describe, "describe"), agent(E3S506-describe, A1S506-we), isa(A1S506-we, "We"), object(E3S506-describe, A5S506-paper), isa(A5S506-paper, "the paper"), in(E3S506-describe, A7S506-term).
english(barrons.rule1413, "How can we[We] change the paper in order to give it[notebook paper] different properties but still consider it[notebook paper] to be paper").
pretty(barrons.rule1413, "EFFECT(change(We, Paper, Consider, How), give(We, Paper, Property)), We = 'We', Paper = 'the paper', Consider = 'consider it[notebook paper]', How = 'How', Paper = 'notebook paper', Property = 'different properties'.").
barrons.rule1413:: isa(E4S507-change, "change"), agent(E4S507-change, A1S506-we), isa(A1S506-we, "We"), object(E4S507-change, A6S507-paper), isa(A6S507-paper, "the paper"), arg(E4S507-change, A16S507-consider), isa(A16S507-consider, "consider it[notebook paper]"), arg(E4S507-change, A1S507-how), isa(A1S507-how, "How") -> effect(E4S507-change, E10S507-give), isa(E10S507-give, "give"), agent(E10S507-give, A1S506-we), object(E10S507-give, A6S504-paper), isa(A6S504-paper, "notebook paper"), arg(E10S507-give, A13S507-property), isa(A13S507-property, "different properties").
english(barrons.rule1414, "How can we[We] change the paper in order to give it[notebook paper] different properties but still consider it[notebook paper] to be paper").
pretty(barrons.rule1414, "EFFECT(change(We, Paper, Consider, How), give(We, Paper, Property)), We = 'We', Paper = 'the paper', Consider = 'consider it[notebook paper]', How = 'How', Paper = 'notebook paper', Property = 'different properties'.").
barrons.rule1414:: isa(E10S507-give, "give"), agent(E10S507-give, A1S506-we), isa(A1S506-we, "We"), object(E10S507-give, A6S504-paper), isa(A6S504-paper, "notebook paper"), arg(E10S507-give, A13S507-property), isa(A13S507-property, "different properties") -> effect(E4S507-change, E10S507-give), isa(E4S507-change, "change"), agent(E4S507-change, A1S506-we), object(E4S507-change, A6S507-paper), isa(A6S507-paper, "the paper"), arg(E4S507-change, A16S507-consider), isa(A16S507-consider, "consider it[notebook paper]"), arg(E4S507-change, A1S507-how), isa(A1S507-how, "How").
english(barrons.rule1415, "We[We] can rip the paper into little pieces").
pretty(barrons.rule1415, "isa(rip, 'rip') -> rip_into(We, Paper, Piece).").
barrons.rule1415:: isa(E3S508-rip, "rip") -> agent(E3S508-rip, A1S506-we), isa(A1S506-we, "We"), object(E3S508-rip, A5S508-paper), isa(A5S508-paper, "the paper"), into(E3S508-rip, A8S508-piece), isa(A8S508-piece, "little pieces").
english(barrons.rule1416, "We[We] can rip the paper into little pieces").
pretty(barrons.rule1416, "isa(We, 'We') -> rip_into(We, Paper, Piece).").
barrons.rule1416:: isa(A1S506-we, "We") -> isa(E3S508-rip, "rip"), agent(E3S508-rip, A1S506-we), object(E3S508-rip, A5S508-paper), isa(A5S508-paper, "the paper"), into(E3S508-rip, A8S508-piece), isa(A8S508-piece, "little pieces").
english(barrons.rule1417, "We[We] can rip the paper into little pieces").
pretty(barrons.rule1417, "isa(Paper, 'the paper') -> rip_into(We, Paper, Piece).").
barrons.rule1417:: isa(A5S508-paper, "the paper") -> isa(E3S508-rip, "rip"), agent(E3S508-rip, A1S506-we), isa(A1S506-we, "We"), object(E3S508-rip, A5S508-paper), into(E3S508-rip, A8S508-piece), isa(A8S508-piece, "little pieces").
english(barrons.rule1418, "We[We] can rip the paper into little pieces").
pretty(barrons.rule1418, "isa(Piece, 'little pieces') -> rip_into(We, Paper, Piece).").
barrons.rule1418:: isa(A8S508-piece, "little pieces") -> isa(E3S508-rip, "rip"), agent(E3S508-rip, A1S506-we), isa(A1S506-we, "We"), object(E3S508-rip, A5S508-paper), isa(A5S508-paper, "the paper"), into(E3S508-rip, A8S508-piece).
english(barrons.rule1419, "We[We] can color the paper using crayons or markers").
pretty(barrons.rule1419, "EFFECT(color(We, Paper), use(We, Crayon)), We = 'We', Paper = 'the paper', Crayon = 'crayons'.").
barrons.rule1419:: isa(E3S509-color, "color"), agent(E3S509-color, A1S506-we), isa(A1S506-we, "We"), object(E3S509-color, A5S509-paper), isa(A5S509-paper, "the paper") -> effect(E3S509-color, E6S509-use), isa(E6S509-use, "use"), agent(E6S509-use, A1S506-we), object(E6S509-use, A7S509-crayon), isa(A7S509-crayon, "crayons").
english(barrons.rule1420, "We[We] can color the paper using crayons or markers").
pretty(barrons.rule1420, "EFFECT(color(We, Paper), use(We, Crayon)), We = 'We', Paper = 'the paper', Crayon = 'crayons'.").
barrons.rule1420:: isa(E6S509-use, "use"), agent(E6S509-use, A1S506-we), isa(A1S506-we, "We"), object(E6S509-use, A7S509-crayon), isa(A7S509-crayon, "crayons") -> effect(E3S509-color, E6S509-use), isa(E3S509-color, "color"), agent(E3S509-color, A1S506-we), object(E3S509-color, A5S509-paper), isa(A5S509-paper, "the paper").
english(barrons.rule1421, "We[We] can color the paper using crayons or markers").
pretty(barrons.rule1421, "EFFECT(color(We, Paper), use(We, Marker)), We = 'We', Paper = 'the paper', Marker = 'markers'.").
barrons.rule1421:: isa(E3S509-color, "color"), agent(E3S509-color, A1S506-we), isa(A1S506-we, "We"), object(E3S509-color, A5S509-paper), isa(A5S509-paper, "the paper") -> effect(E3S509-color, E6S509-use), isa(E6S509-use, "use"), agent(E6S509-use, A1S506-we), object(E6S509-use, A9S509-marker), isa(A9S509-marker, "markers").
english(barrons.rule1422, "We[We] can color the paper using crayons or markers").
pretty(barrons.rule1422, "EFFECT(color(We, Paper), use(We, Marker)), We = 'We', Paper = 'the paper', Marker = 'markers'.").
barrons.rule1422:: isa(E6S509-use, "use"), agent(E6S509-use, A1S506-we), isa(A1S506-we, "We"), object(E6S509-use, A9S509-marker), isa(A9S509-marker, "markers") -> effect(E3S509-color, E6S509-use), isa(E3S509-color, "color"), agent(E3S509-color, A1S506-we), object(E3S509-color, A5S509-paper), isa(A5S509-paper, "the paper").
english(barrons.rule1423, "We[We] can fold the paper into a smaller size").
pretty(barrons.rule1423, "isa(fold, 'fold') -> fold_into(We, Paper, Size).").
barrons.rule1423:: isa(E3S510-fold, "fold") -> agent(E3S510-fold, A1S506-we), isa(A1S506-we, "We"), object(E3S510-fold, A5S510-paper), isa(A5S510-paper, "the paper"), into(E3S510-fold, A9S510-size), isa(A9S510-size, "a smaller size").
english(barrons.rule1424, "We[We] can fold the paper into a smaller size").
pretty(barrons.rule1424, "isa(We, 'We') -> fold_into(We, Paper, Size).").
barrons.rule1424:: isa(A1S506-we, "We") -> isa(E3S510-fold, "fold"), agent(E3S510-fold, A1S506-we), object(E3S510-fold, A5S510-paper), isa(A5S510-paper, "the paper"), into(E3S510-fold, A9S510-size), isa(A9S510-size, "a smaller size").
english(barrons.rule1425, "We[We] can fold the paper into a smaller size").
pretty(barrons.rule1425, "isa(Paper, 'the paper') -> fold_into(We, Paper, Size).").
barrons.rule1425:: isa(A5S510-paper, "the paper") -> isa(E3S510-fold, "fold"), agent(E3S510-fold, A1S506-we), isa(A1S506-we, "We"), object(E3S510-fold, A5S510-paper), into(E3S510-fold, A9S510-size), isa(A9S510-size, "a smaller size").
english(barrons.rule1426, "We[We] can fold the paper into a smaller size").
pretty(barrons.rule1426, "isa(Size, 'a smaller size') -> fold_into(We, Paper, Size).").
barrons.rule1426:: isa(A9S510-size, "a smaller size") -> isa(E3S510-fold, "fold"), agent(E3S510-fold, A1S506-we), isa(A1S506-we, "We"), object(E3S510-fold, A5S510-paper), isa(A5S510-paper, "the paper"), into(E3S510-fold, A9S510-size).
english(barrons.rule1427, "How might we[We] change the paper chemically").
pretty(barrons.rule1427, "isa(change, 'change') -> change(We, Paper, How, Chemically).").
barrons.rule1427:: isa(E4S514-change, "change") -> agent(E4S514-change, A1S506-we), isa(A1S506-we, "We"), object(E4S514-change, A6S514-paper), isa(A6S514-paper, "the paper"), arg(E4S514-change, A1S514-how), isa(A1S514-how, "How"), arg(E4S514-change, A7S514-chemically), isa(A7S514-chemically, "chemically").
english(barrons.rule1428, "How might we[We] change the paper chemically").
pretty(barrons.rule1428, "isa(We, 'We') -> change(We, Paper, How, Chemically).").
barrons.rule1428:: isa(A1S506-we, "We") -> isa(E4S514-change, "change"), agent(E4S514-change, A1S506-we), object(E4S514-change, A6S514-paper), isa(A6S514-paper, "the paper"), arg(E4S514-change, A1S514-how), isa(A1S514-how, "How"), arg(E4S514-change, A7S514-chemically), isa(A7S514-chemically, "chemically").
english(barrons.rule1429, "How might we[We] change the paper chemically").
pretty(barrons.rule1429, "isa(Paper, 'the paper') -> change(We, Paper, How, Chemically).").
barrons.rule1429:: isa(A6S514-paper, "the paper") -> isa(E4S514-change, "change"), agent(E4S514-change, A1S506-we), isa(A1S506-we, "We"), object(E4S514-change, A6S514-paper), arg(E4S514-change, A1S514-how), isa(A1S514-how, "How"), arg(E4S514-change, A7S514-chemically), isa(A7S514-chemically, "chemically").
english(barrons.rule1430, "How might we[We] change the paper chemically").
pretty(barrons.rule1430, "isa(How, 'How') -> change(We, Paper, How, Chemically).").
barrons.rule1430:: isa(A1S514-how, "How") -> isa(E4S514-change, "change"), agent(E4S514-change, A1S506-we), isa(A1S506-we, "We"), object(E4S514-change, A6S514-paper), isa(A6S514-paper, "the paper"), arg(E4S514-change, A1S514-how), arg(E4S514-change, A7S514-chemically), isa(A7S514-chemically, "chemically").
english(barrons.rule1431, "How might we[We] change the paper chemically").
pretty(barrons.rule1431, "isa(Chemically, 'chemically') -> change(We, Paper, How, Chemically).").
barrons.rule1431:: isa(A7S514-chemically, "chemically") -> isa(E4S514-change, "change"), agent(E4S514-change, A1S506-we), isa(A1S506-we, "We"), object(E4S514-change, A6S514-paper), isa(A6S514-paper, "the paper"), arg(E4S514-change, A1S514-how), isa(A1S514-how, "How"), arg(E4S514-change, A7S514-chemically).
english(barrons.rule1432, "The white sheet of paper would become a pile of black ashes").
pretty(barrons.rule1432, "EXAMPLE(Sheet, Pile), Sheet = 'The white sheet of paper', Pile = 'a pile of black ashes'.").
barrons.rule1432:: of(A3S516-sheet, A5S516-paper), isa(A5S516-paper, "paper"), isa(A3S516-sheet, "The white sheet") -> example(A3S516-sheet, A9S516-pile), of(A9S516-pile, A12S516-ash), isa(A12S516-ash, "black ashes"), isa(A9S516-pile, "a pile").
english(barrons.rule1433, "The white sheet of paper would become a pile of black ashes").
pretty(barrons.rule1433, "EXAMPLE(Sheet, Pile), Sheet = 'The white sheet of paper', Pile = 'a pile of black ashes'.").
barrons.rule1433:: of(A9S516-pile, A12S516-ash), isa(A12S516-ash, "black ashes"), isa(A9S516-pile, "a pile") -> example(A3S516-sheet, A9S516-pile), of(A3S516-sheet, A5S516-paper), isa(A5S516-paper, "paper"), isa(A3S516-sheet, "The white sheet").
english(barrons.rule1434, "Energy is the ability to do work").
pretty(barrons.rule1434, "EXAMPLE(Energy, Ability), Energy = 'Energy', Ability = 'the ability'.").
barrons.rule1434:: isa(A1S518-Energy, "Energy") -> example(A1S518-Energy, A4S518-ability), isa(A4S518-ability, "the ability").
english(barrons.rule1435, "Energy is the ability to do work").
pretty(barrons.rule1435, "EXAMPLE(Energy, Ability), Energy = 'Energy', Ability = 'the ability'.").
barrons.rule1435:: isa(A4S518-ability, "the ability") -> example(A1S518-Energy, A4S518-ability), isa(A1S518-Energy, "Energy").
english(barrons.rule1436, "Work involves the changing of an object 's position moving up and down or from side to side").
pretty(barrons.rule1436, "isa(Position, 'an object ’s position') -> involve(Work, The).").
barrons.rule1436:: isa(A9S519-position, "an object 's position") -> of(A3S519-the, A9S519-position), isa(E2S519-involve, "involve"), agent(E2S519-involve, A1S519-work), isa(A1S519-work, "Work"), object(E2S519-involve, A3S519-the), isa(A3S519-the, "the changing").
english(barrons.rule1437, "Work involves the changing of an object 's position moving up and down or from side to side").
pretty(barrons.rule1437, "isa(involve, 'involves') -> involve(Work, The).").
barrons.rule1437:: isa(E2S519-involve, "involve") -> of(A3S519-the, A9S519-position), isa(A9S519-position, "an object 's position"), agent(E2S519-involve, A1S519-work), isa(A1S519-work, "Work"), object(E2S519-involve, A3S519-the), isa(A3S519-the, "the changing").
english(barrons.rule1438, "Work involves the changing of an object 's position moving up and down or from side to side").
pretty(barrons.rule1438, "isa(Work, 'Work') -> involve(Work, The).").
barrons.rule1438:: isa(A1S519-work, "Work") -> of(A3S519-the, A9S519-position), isa(A9S519-position, "an object 's position"), isa(E2S519-involve, "involve"), agent(E2S519-involve, A1S519-work), object(E2S519-involve, A3S519-the), isa(A3S519-the, "the changing").
english(barrons.rule1439, "Work involves the changing of an object 's position moving up and down or from side to side").
pretty(barrons.rule1439, "isa(The, 'the changing of an object ’s position moving up and down or from side to side') -> involve(Work, The).").
barrons.rule1439:: isa(A3S519-the, "the changing") -> of(A3S519-the, A9S519-position), isa(A9S519-position, "an object 's position"), isa(E2S519-involve, "involve"), agent(E2S519-involve, A1S519-work), isa(A1S519-work, "Work"), object(E2S519-involve, A3S519-the).
english(barrons.rule1440, "It[a whole day] would be because you have no energy").
pretty(barrons.rule1440, "EFFECT(have(You, Energy), be(Day)), You = 'you', Energy = 'no energy', Day = 'a whole day'.").
barrons.rule1440:: isa(E6S523-have, "have"), agent(E6S523-have, A5S523-you), isa(A5S523-you, "you"), object(E6S523-have, A8S523-energy), isa(A8S523-energy, "no energy") -> effect(E6S523-have, E3S523-be), isa(E3S523-be, "be"), agent(E3S523-be, A6S521-day), isa(A6S521-day, "a whole day").
english(barrons.rule1441, "It[a whole day] would be because you have no energy").
pretty(barrons.rule1441, "EFFECT(have(You, Energy), be(Day)), You = 'you', Energy = 'no energy', Day = 'a whole day'.").
barrons.rule1441:: isa(E3S523-be, "be"), agent(E3S523-be, A6S521-day), isa(A6S521-day, "a whole day") -> effect(E6S523-have, E3S523-be), isa(E6S523-have, "have"), agent(E6S523-have, A5S523-you), isa(A5S523-you, "you"), object(E6S523-have, A8S523-energy), isa(A8S523-energy, "no energy").
english(barrons.rule1442, "Food is converted to energy so that we[we] can work and play").
pretty(barrons.rule1442, "EFFECT(convert_to(We, Food, Energy), work(We)), We = 'we', Food = 'Food', Energy = 'energy'.").
barrons.rule1442:: isa(E3S525-convert, "convert"), agent(E3S525-convert, A8S524-we), isa(A8S524-we, "we"), object(E3S525-convert, A1S525-Food), isa(A1S525-Food, "Food"), to(E3S525-convert, A5S525-energy), isa(A5S525-energy, "energy") -> effect(E3S525-convert, E10S525-work), isa(E10S525-work, "work"), agent(E10S525-work, A8S524-we).
english(barrons.rule1443, "Food is converted to energy so that we[we] can work and play").
pretty(barrons.rule1443, "EFFECT(convert_to(We, Food, Energy), work(We)), We = 'we', Food = 'Food', Energy = 'energy'.").
barrons.rule1443:: isa(E10S525-work, "work"), agent(E10S525-work, A8S524-we), isa(A8S524-we, "we") -> effect(E3S525-convert, E10S525-work), isa(E3S525-convert, "convert"), agent(E3S525-convert, A8S524-we), object(E3S525-convert, A1S525-Food), isa(A1S525-Food, "Food"), to(E3S525-convert, A5S525-energy), isa(A5S525-energy, "energy").
english(barrons.rule1444, "Food is converted to energy so that we[we] can work and play").
pretty(barrons.rule1444, "EFFECT(convert_to(We, Food, Energy), play(We)), We = 'we', Food = 'Food', Energy = 'energy'.").
barrons.rule1444:: isa(E3S525-convert, "convert"), agent(E3S525-convert, A8S524-we), isa(A8S524-we, "we"), object(E3S525-convert, A1S525-Food), isa(A1S525-Food, "Food"), to(E3S525-convert, A5S525-energy), isa(A5S525-energy, "energy") -> effect(E3S525-convert, E12S525-play), isa(E12S525-play, "play"), agent(E12S525-play, A8S524-we).
english(barrons.rule1445, "Food is converted to energy so that we[we] can work and play").
pretty(barrons.rule1445, "EFFECT(convert_to(We, Food, Energy), play(We)), We = 'we', Food = 'Food', Energy = 'energy'.").
barrons.rule1445:: isa(E12S525-play, "play"), agent(E12S525-play, A8S524-we), isa(A8S524-we, "we") -> effect(E3S525-convert, E12S525-play), isa(E3S525-convert, "convert"), agent(E3S525-convert, A8S524-we), object(E3S525-convert, A1S525-Food), isa(A1S525-Food, "Food"), to(E3S525-convert, A5S525-energy), isa(A5S525-energy, "energy").
english(barrons.rule1446, "A rock at the top of a hill that is standing still has potential energy").
pretty(barrons.rule1446, "isa(Hill, 'a hill') -> have(Rock, Energy).").
barrons.rule1446:: isa(A8S528-hill, "a hill") -> of(A5S528-top, A8S528-hill), at(A2S528-rock, A5S528-top), isa(A5S528-top, "the top"), isa(E13S528-have, "have"), agent(E13S528-have, A2S528-rock), isa(A2S528-rock, "A rock"), object(E13S528-have, A15S528-energy), isa(A15S528-energy, "potential energy").
english(barrons.rule1447, "A rock at the top of a hill that is standing still has potential energy").
pretty(barrons.rule1447, "isa(Top, 'the top of a hill') -> have(Rock, Energy).").
barrons.rule1447:: isa(A5S528-top, "the top") -> of(A5S528-top, A8S528-hill), isa(A8S528-hill, "a hill"), at(A2S528-rock, A5S528-top), isa(E13S528-have, "have"), agent(E13S528-have, A2S528-rock), isa(A2S528-rock, "A rock"), object(E13S528-have, A15S528-energy), isa(A15S528-energy, "potential energy").
english(barrons.rule1448, "A rock at the top of a hill that is standing still has potential energy").
pretty(barrons.rule1448, "isa(have, 'has') -> have(Rock, Energy).").
barrons.rule1448:: isa(E13S528-have, "have") -> of(A5S528-top, A8S528-hill), isa(A8S528-hill, "a hill"), at(A2S528-rock, A5S528-top), isa(A5S528-top, "the top"), agent(E13S528-have, A2S528-rock), isa(A2S528-rock, "A rock"), object(E13S528-have, A15S528-energy), isa(A15S528-energy, "potential energy").
english(barrons.rule1449, "A rock at the top of a hill that is standing still has potential energy").
pretty(barrons.rule1449, "isa(Rock, 'A rock at the top of a hill') -> have(Rock, Energy).").
barrons.rule1449:: isa(A2S528-rock, "A rock") -> of(A5S528-top, A8S528-hill), isa(A8S528-hill, "a hill"), at(A2S528-rock, A5S528-top), isa(A5S528-top, "the top"), isa(E13S528-have, "have"), agent(E13S528-have, A2S528-rock), object(E13S528-have, A15S528-energy), isa(A15S528-energy, "potential energy").
english(barrons.rule1450, "A rock at the top of a hill that is standing still has potential energy").
pretty(barrons.rule1450, "isa(Energy, 'potential energy') -> have(Rock, Energy).").
barrons.rule1450:: isa(A15S528-energy, "potential energy") -> of(A5S528-top, A8S528-hill), isa(A8S528-hill, "a hill"), at(A2S528-rock, A5S528-top), isa(A5S528-top, "the top"), isa(E13S528-have, "have"), agent(E13S528-have, A2S528-rock), isa(A2S528-rock, "A rock"), object(E13S528-have, A15S528-energy).
english(barrons.rule1451, "If you give that rock a push and it[that rock a push and it begins to move down the hill] begins to move down the hill the potential energy is changed to kinetic energy allowing the rock to move").
pretty(barrons.rule1451, "EFFECT(give(You, Push, Begin), change_to(Energy, Allow, Energy)), You = 'you', Push = 'that a push', Begin = 'begins', Energy = 'the potential energy', Allow = 'allowing', Energy = 'kinetic energy'.").
barrons.rule1451:: isa(E3S529-give, "give"), agent(E3S529-give, A2S529-you), isa(A2S529-you, "you"), arg(E3S529-give, A7S529-push), isa(A7S529-push, "that rock a push"), arg(E3S529-give, A10S529-begin), isa(A10S529-begin, "it[that rock a push and it begins to move down the hill] begins") -> effect(E3S529-give, E21S529-change), isa(E21S529-change, "change"), object(E21S529-change, A19S529-energy), isa(A19S529-energy, "the potential energy"), to(E21S529-change, A24S529-energy), isa(A24S529-energy, "kinetic energy"), arg(E21S529-change, A26S529-allow), isa(A26S529-allow, "allowing").
english(barrons.rule1452, "If you give that rock a push and it[that rock a push and it begins to move down the hill] begins to move down the hill the potential energy is changed to kinetic energy allowing the rock to move").
pretty(barrons.rule1452, "EFFECT(give(You, Push, Begin), change_to(Energy, Allow, Energy)), You = 'you', Push = 'that a push', Begin = 'begins', Energy = 'the potential energy', Allow = 'allowing', Energy = 'kinetic energy'.").
barrons.rule1452:: isa(E21S529-change, "change"), object(E21S529-change, A19S529-energy), isa(A19S529-energy, "the potential energy"), to(E21S529-change, A24S529-energy), isa(A24S529-energy, "kinetic energy"), arg(E21S529-change, A26S529-allow), isa(A26S529-allow, "allowing") -> effect(E3S529-give, E21S529-change), isa(E3S529-give, "give"), agent(E3S529-give, A2S529-you), isa(A2S529-you, "you"), arg(E3S529-give, A7S529-push), isa(A7S529-push, "that rock a push"), arg(E3S529-give, A10S529-begin), isa(A10S529-begin, "it[that rock a push and it begins to move down the hill] begins").
english(barrons.rule1453, "Heat electric sound chemical mechanical and light are all examples of different forms of energy").
pretty(barrons.rule1453, "EXAMPLE(Heat, Form), Heat = 'Heat', Form = 'different forms of energy'.").
barrons.rule1453:: isa(A1S531-heat, "Heat") -> example(A1S531-heat, A18S531-form), of(A18S531-form, A20S531-energy), isa(A20S531-energy, "energy"), isa(A18S531-form, "different forms").
english(barrons.rule1454, "Heat electric sound chemical mechanical and light are all examples of different forms of energy").
pretty(barrons.rule1454, "EXAMPLE(Heat, Form), Heat = 'Heat', Form = 'different forms of energy'.").
barrons.rule1454:: of(A18S531-form, A20S531-energy), isa(A20S531-energy, "energy"), isa(A18S531-form, "different forms") -> example(A1S531-heat, A18S531-form), isa(A1S531-heat, "Heat").
english(barrons.rule1455, "Heat electric sound chemical mechanical and light are all examples of different forms of energy").
pretty(barrons.rule1455, "EXAMPLE(Electric, Form), Electric = 'electric', Form = 'different forms of energy'.").
barrons.rule1455:: isa(A3S531-electric, "electric") -> example(A3S531-electric, A18S531-form), of(A18S531-form, A20S531-energy), isa(A20S531-energy, "energy"), isa(A18S531-form, "different forms").
english(barrons.rule1456, "Heat electric sound chemical mechanical and light are all examples of different forms of energy").
pretty(barrons.rule1456, "EXAMPLE(Electric, Form), Electric = 'electric', Form = 'different forms of energy'.").
barrons.rule1456:: of(A18S531-form, A20S531-energy), isa(A20S531-energy, "energy"), isa(A18S531-form, "different forms") -> example(A3S531-electric, A18S531-form), isa(A3S531-electric, "electric").
english(barrons.rule1457, "Heat electric sound chemical mechanical and light are all examples of different forms of energy").
pretty(barrons.rule1457, "EXAMPLE(Sound, Form), Sound = 'sound', Form = 'different forms of energy'.").
barrons.rule1457:: isa(A5S531-sound, "sound") -> example(A5S531-sound, A18S531-form), of(A18S531-form, A20S531-energy), isa(A20S531-energy, "energy"), isa(A18S531-form, "different forms").
english(barrons.rule1458, "Heat electric sound chemical mechanical and light are all examples of different forms of energy").
pretty(barrons.rule1458, "EXAMPLE(Sound, Form), Sound = 'sound', Form = 'different forms of energy'.").
barrons.rule1458:: of(A18S531-form, A20S531-energy), isa(A20S531-energy, "energy"), isa(A18S531-form, "different forms") -> example(A5S531-sound, A18S531-form), isa(A5S531-sound, "sound").
english(barrons.rule1459, "Heat electric sound chemical mechanical and light are all examples of different forms of energy").
pretty(barrons.rule1459, "EXAMPLE(Chemical, Form), Chemical = 'chemical', Form = 'different forms of energy'.").
barrons.rule1459:: isa(A7S531-chemical, "chemical") -> example(A7S531-chemical, A18S531-form), of(A18S531-form, A20S531-energy), isa(A20S531-energy, "energy"), isa(A18S531-form, "different forms").
english(barrons.rule1460, "Heat electric sound chemical mechanical and light are all examples of different forms of energy").
pretty(barrons.rule1460, "EXAMPLE(Chemical, Form), Chemical = 'chemical', Form = 'different forms of energy'.").
barrons.rule1460:: of(A18S531-form, A20S531-energy), isa(A20S531-energy, "energy"), isa(A18S531-form, "different forms") -> example(A7S531-chemical, A18S531-form), isa(A7S531-chemical, "chemical").
english(barrons.rule1461, "Heat electric sound chemical mechanical and light are all examples of different forms of energy").
pretty(barrons.rule1461, "EXAMPLE(Mechanical, Form), Mechanical = 'mechanical', Form = 'different forms of energy'.").
barrons.rule1461:: isa(A9S531-mechanical, "mechanical") -> example(A9S531-mechanical, A18S531-form), of(A18S531-form, A20S531-energy), isa(A20S531-energy, "energy"), isa(A18S531-form, "different forms").
english(barrons.rule1462, "Heat electric sound chemical mechanical and light are all examples of different forms of energy").
pretty(barrons.rule1462, "EXAMPLE(Mechanical, Form), Mechanical = 'mechanical', Form = 'different forms of energy'.").
barrons.rule1462:: of(A18S531-form, A20S531-energy), isa(A20S531-energy, "energy"), isa(A18S531-form, "different forms") -> example(A9S531-mechanical, A18S531-form), isa(A9S531-mechanical, "mechanical").
english(barrons.rule1463, "Heat electric sound chemical mechanical and light are all examples of different forms of energy").
pretty(barrons.rule1463, "EXAMPLE(Light, Form), Light = 'light', Form = 'different forms of energy'.").
barrons.rule1463:: isa(A12S531-light, "light") -> example(A12S531-light, A18S531-form), of(A18S531-form, A20S531-energy), isa(A20S531-energy, "energy"), isa(A18S531-form, "different forms").
english(barrons.rule1464, "Heat electric sound chemical mechanical and light are all examples of different forms of energy").
pretty(barrons.rule1464, "EXAMPLE(Light, Form), Light = 'light', Form = 'different forms of energy'.").
barrons.rule1464:: of(A18S531-form, A20S531-energy), isa(A20S531-energy, "energy"), isa(A18S531-form, "different forms") -> example(A12S531-light, A18S531-form), isa(A12S531-light, "light").
english(barrons.rule1465, "Electric energy is energy that allows us[us] to turn on lights ring door bells and so on").
pretty(barrons.rule1465, "PURPOSE(energize(We), turn on(We, Light)), We = 'us', Light = 'lights'.").
barrons.rule1465:: isa(E4S534-energy, "energize"), agent(E4S534-energy, A7S532-we), isa(A7S532-we, "us") -> purpose(E4S534-energy, E9S534-turn), isa(E9S534-turn, "turn on"), agent(E9S534-turn, A7S532-we), object(E9S534-turn, A11S534-light), isa(A11S534-light, "lights").
english(barrons.rule1466, "Electric energy is energy that allows us[us] to turn on lights ring door bells and so on").
pretty(barrons.rule1466, "PURPOSE(energize(We), turn on(We, Light)), We = 'us', Light = 'lights'.").
barrons.rule1466:: isa(E9S534-turn, "turn on"), agent(E9S534-turn, A7S532-we), isa(A7S532-we, "us"), object(E9S534-turn, A11S534-light), isa(A11S534-light, "lights") -> purpose(E4S534-energy, E9S534-turn), isa(E4S534-energy, "energize"), agent(E4S534-energy, A7S532-we).
english(barrons.rule1467, "Electric energy is energy that allows us[us] to turn on lights ring door bells and so on").
pretty(barrons.rule1467, "PURPOSE(energize(We), turn on(We, Bell)), We = 'us', Bell = 'ring door bells'.").
barrons.rule1467:: isa(E4S534-energy, "energize"), agent(E4S534-energy, A7S532-we), isa(A7S532-we, "us") -> purpose(E4S534-energy, E9S534-turn), isa(E9S534-turn, "turn on"), agent(E9S534-turn, A7S532-we), object(E9S534-turn, A15S534-bell), isa(A15S534-bell, "ring door bells").
english(barrons.rule1468, "Electric energy is energy that allows us[us] to turn on lights ring door bells and so on").
pretty(barrons.rule1468, "PURPOSE(energize(We), turn on(We, Bell)), We = 'us', Bell = 'ring door bells'.").
barrons.rule1468:: isa(E9S534-turn, "turn on"), agent(E9S534-turn, A7S532-we), isa(A7S532-we, "us"), object(E9S534-turn, A15S534-bell), isa(A15S534-bell, "ring door bells") -> purpose(E4S534-energy, E9S534-turn), isa(E4S534-energy, "energize"), agent(E4S534-energy, A7S532-we).
english(barrons.rule1469, "Electric energy is energy that allows us[us] to turn on lights ring door bells and so on").
pretty(barrons.rule1469, "PURPOSE(energize(We), turn on(We, Light)), We = 'us', Light = 'lights'.").
barrons.rule1469:: isa(E2S534-energy, "energize"), agent(E2S534-energy, A7S532-we), isa(A7S532-we, "us") -> purpose(E2S534-energy, E9S534-turn), isa(E9S534-turn, "turn on"), agent(E9S534-turn, A7S532-we), object(E9S534-turn, A11S534-light), isa(A11S534-light, "lights").
english(barrons.rule1470, "Electric energy is energy that allows us[us] to turn on lights ring door bells and so on").
pretty(barrons.rule1470, "PURPOSE(energize(We), turn on(We, Light)), We = 'us', Light = 'lights'.").
barrons.rule1470:: isa(E9S534-turn, "turn on"), agent(E9S534-turn, A7S532-we), isa(A7S532-we, "us"), object(E9S534-turn, A11S534-light), isa(A11S534-light, "lights") -> purpose(E2S534-energy, E9S534-turn), isa(E2S534-energy, "energize"), agent(E2S534-energy, A7S532-we).
english(barrons.rule1471, "Electric energy is energy that allows us[us] to turn on lights ring door bells and so on").
pretty(barrons.rule1471, "PURPOSE(energize(We), turn on(We, Bell)), We = 'us', Bell = 'ring door bells'.").
barrons.rule1471:: isa(E2S534-energy, "energize"), agent(E2S534-energy, A7S532-we), isa(A7S532-we, "us") -> purpose(E2S534-energy, E9S534-turn), isa(E9S534-turn, "turn on"), agent(E9S534-turn, A7S532-we), object(E9S534-turn, A15S534-bell), isa(A15S534-bell, "ring door bells").
english(barrons.rule1472, "Electric energy is energy that allows us[us] to turn on lights ring door bells and so on").
pretty(barrons.rule1472, "PURPOSE(energize(We), turn on(We, Bell)), We = 'us', Bell = 'ring door bells'.").
barrons.rule1472:: isa(E9S534-turn, "turn on"), agent(E9S534-turn, A7S532-we), isa(A7S532-we, "us"), object(E9S534-turn, A15S534-bell), isa(A15S534-bell, "ring door bells") -> purpose(E2S534-energy, E9S534-turn), isa(E2S534-energy, "energize"), agent(E2S534-energy, A7S532-we).
english(barrons.rule1473, "Sound is energy noise that we[us] hear when matter vibrates and the particles in the matter hit each other").
pretty(barrons.rule1473, "WHEN(hear(We, Sound, Particle), vibrate(Matter)), We = 'us', Sound = 'Sound', Particle = 'the particles', Matter = 'matter'.").
barrons.rule1473:: isa(E9S535-hear, "hear"), agent(E9S535-hear, A7S532-we), isa(A7S532-we, "us"), object(E9S535-hear, A1S535-sound), isa(A1S535-sound, "Sound"), arg(E9S535-hear, A15S535-particle), isa(A15S535-particle, "the particles in the matter hit each other") -> when(E9S535-hear, E12S535-vibrate), isa(E12S535-vibrate, "vibrate"), agent(E12S535-vibrate, A11S535-matter), isa(A11S535-matter, "matter").
english(barrons.rule1474, "Sound is energy noise that we[us] hear when matter vibrates and the particles in the matter hit each other").
pretty(barrons.rule1474, "WHEN(hear(We, Sound, Particle), vibrate(Matter)), We = 'us', Sound = 'Sound', Particle = 'the particles', Matter = 'matter'.").
barrons.rule1474:: isa(E12S535-vibrate, "vibrate"), agent(E12S535-vibrate, A11S535-matter), isa(A11S535-matter, "matter") -> when(E9S535-hear, E12S535-vibrate), isa(E9S535-hear, "hear"), agent(E9S535-hear, A7S532-we), isa(A7S532-we, "us"), object(E9S535-hear, A1S535-sound), isa(A1S535-sound, "Sound"), arg(E9S535-hear, A15S535-particle), isa(A15S535-particle, "the particles in the matter hit each other").
english(barrons.rule1475, "Sound is energy noise that we[us] hear when matter vibrates and the particles in the matter hit each other").
pretty(barrons.rule1475, "WHEN(hear(We, Energy, Particle), vibrate(Matter)), We = 'us', Energy = 'energy', Particle = 'the particles', Matter = 'matter'.").
barrons.rule1475:: isa(E9S535-hear, "hear"), agent(E9S535-hear, A7S532-we), isa(A7S532-we, "us"), object(E9S535-hear, A3S535-energy), isa(A3S535-energy, "energy"), arg(E9S535-hear, A15S535-particle), isa(A15S535-particle, "the particles in the matter hit each other") -> when(E9S535-hear, E12S535-vibrate), isa(E12S535-vibrate, "vibrate"), agent(E12S535-vibrate, A11S535-matter), isa(A11S535-matter, "matter").
english(barrons.rule1476, "Sound is energy noise that we[us] hear when matter vibrates and the particles in the matter hit each other").
pretty(barrons.rule1476, "WHEN(hear(We, Energy, Particle), vibrate(Matter)), We = 'us', Energy = 'energy', Particle = 'the particles', Matter = 'matter'.").
barrons.rule1476:: isa(E12S535-vibrate, "vibrate"), agent(E12S535-vibrate, A11S535-matter), isa(A11S535-matter, "matter") -> when(E9S535-hear, E12S535-vibrate), isa(E9S535-hear, "hear"), agent(E9S535-hear, A7S532-we), isa(A7S532-we, "us"), object(E9S535-hear, A3S535-energy), isa(A3S535-energy, "energy"), arg(E9S535-hear, A15S535-particle), isa(A15S535-particle, "the particles in the matter hit each other").
english(barrons.rule1477, "Chemical energy is energy that is released when a chemical reaction takes place").
pretty(barrons.rule1477, "WHEN(release(Reaction, Energy), take(Reaction, Place)), Reaction = 'a chemical reaction', Energy = 'Chemical energy', Place = 'place'.").
barrons.rule1477:: isa(E7S536-release, "release"), agent(E7S536-release, A11S536-reaction), isa(A11S536-reaction, "a chemical reaction"), object(E7S536-release, A2S536-energy), isa(A2S536-energy, "Chemical energy") -> when(E7S536-release, E12S536-take), isa(E12S536-take, "take"), agent(E12S536-take, A11S536-reaction), object(E12S536-take, A13S536-place), isa(A13S536-place, "place").
english(barrons.rule1478, "Chemical energy is energy that is released when a chemical reaction takes place").
pretty(barrons.rule1478, "WHEN(release(Reaction, Energy), take(Reaction, Place)), Reaction = 'a chemical reaction', Energy = 'Chemical energy', Place = 'place'.").
barrons.rule1478:: isa(E12S536-take, "take"), agent(E12S536-take, A11S536-reaction), isa(A11S536-reaction, "a chemical reaction"), object(E12S536-take, A13S536-place), isa(A13S536-place, "place") -> when(E7S536-release, E12S536-take), isa(E7S536-release, "release"), agent(E7S536-release, A11S536-reaction), object(E7S536-release, A2S536-energy), isa(A2S536-energy, "Chemical energy").
english(barrons.rule1479, "Chemical energy is energy that is released when a chemical reaction takes place").
pretty(barrons.rule1479, "WHEN(release(Reaction, Energy), take(Reaction, Place)), Reaction = 'a chemical reaction', Energy = 'energy', Place = 'place'.").
barrons.rule1479:: isa(E7S536-release, "release"), agent(E7S536-release, A11S536-reaction), isa(A11S536-reaction, "a chemical reaction"), object(E7S536-release, A4S536-energy), isa(A4S536-energy, "energy") -> when(E7S536-release, E12S536-take), isa(E12S536-take, "take"), agent(E12S536-take, A11S536-reaction), object(E12S536-take, A13S536-place), isa(A13S536-place, "place").
english(barrons.rule1480, "Chemical energy is energy that is released when a chemical reaction takes place").
pretty(barrons.rule1480, "WHEN(release(Reaction, Energy), take(Reaction, Place)), Reaction = 'a chemical reaction', Energy = 'energy', Place = 'place'.").
barrons.rule1480:: isa(E12S536-take, "take"), agent(E12S536-take, A11S536-reaction), isa(A11S536-reaction, "a chemical reaction"), object(E12S536-take, A13S536-place), isa(A13S536-place, "place") -> when(E7S536-release, E12S536-take), isa(E7S536-release, "release"), agent(E7S536-release, A11S536-reaction), object(E7S536-release, A4S536-energy), isa(A4S536-energy, "energy").
english(barrons.rule1481, "Mechanical energy is produced when two objects move together").
pretty(barrons.rule1481, "WHEN(produce(Object, Energy), move(Object, Together)), Object = 'two objects', Energy = 'Mechanical energy', Together = 'together'.").
barrons.rule1481:: isa(E4S537-produce, "produce"), agent(E4S537-produce, A7S537-object), isa(A7S537-object, "two objects"), object(E4S537-produce, A2S537-energy), isa(A2S537-energy, "Mechanical energy") -> when(E4S537-produce, E8S537-move), isa(E8S537-move, "move"), agent(E8S537-move, A7S537-object), arg(E8S537-move, A9S537-together), isa(A9S537-together, "together").
english(barrons.rule1482, "Mechanical energy is produced when two objects move together").
pretty(barrons.rule1482, "WHEN(produce(Object, Energy), move(Object, Together)), Object = 'two objects', Energy = 'Mechanical energy', Together = 'together'.").
barrons.rule1482:: isa(E8S537-move, "move"), agent(E8S537-move, A7S537-object), isa(A7S537-object, "two objects"), arg(E8S537-move, A9S537-together), isa(A9S537-together, "together") -> when(E4S537-produce, E8S537-move), isa(E4S537-produce, "produce"), agent(E4S537-produce, A7S537-object), object(E4S537-produce, A2S537-energy), isa(A2S537-energy, "Mechanical energy").
english(barrons.rule1483, "Light energy is energy that is given off from a light source such as the sun or a light bulb").
pretty(barrons.rule1483, "EXAMPLE(Sun, Source), Sun = 'the sun', Source = 'a light source such as the sun or a light bulb'.").
barrons.rule1483:: isa(A16S538-sun, "the sun") -> example(A16S538-sun, A12S538-source), such_as(A12S538-source, A16S538-sun), such_as(A12S538-source, A20S538-bulb), isa(A20S538-bulb, "a light bulb"), isa(A12S538-source, "a light source").
english(barrons.rule1484, "Light energy is energy that is given off from a light source such as the sun or a light bulb").
pretty(barrons.rule1484, "EXAMPLE(Sun, Source), Sun = 'the sun', Source = 'a light source such as the sun or a light bulb'.").
barrons.rule1484:: such_as(A12S538-source, A16S538-sun), isa(A16S538-sun, "the sun"), such_as(A12S538-source, A20S538-bulb), isa(A20S538-bulb, "a light bulb"), isa(A12S538-source, "a light source") -> example(A16S538-sun, A12S538-source).
english(barrons.rule1485, "Light energy is energy that is given off from a light source such as the sun or a light bulb").
pretty(barrons.rule1485, "EXAMPLE(Bulb, Source), Bulb = 'a light bulb', Source = 'a light source such as the sun or a light bulb'.").
barrons.rule1485:: isa(A20S538-bulb, "a light bulb") -> example(A20S538-bulb, A12S538-source), such_as(A12S538-source, A16S538-sun), isa(A16S538-sun, "the sun"), such_as(A12S538-source, A20S538-bulb), isa(A12S538-source, "a light source").
english(barrons.rule1486, "Light energy is energy that is given off from a light source such as the sun or a light bulb").
pretty(barrons.rule1486, "EXAMPLE(Bulb, Source), Bulb = 'a light bulb', Source = 'a light source such as the sun or a light bulb'.").
barrons.rule1486:: such_as(A12S538-source, A16S538-sun), isa(A16S538-sun, "the sun"), such_as(A12S538-source, A20S538-bulb), isa(A20S538-bulb, "a light bulb"), isa(A12S538-source, "a light source") -> example(A20S538-bulb, A12S538-source).
english(barrons.rule1487, "Mechanical energy exerted by one object can push or pull another object").
pretty(barrons.rule1487, "isa(push, 'push') -> push(Energy, Object).").
barrons.rule1487:: isa(E8S547-push, "push") -> agent(E8S547-push, A2S547-energy), isa(A2S547-energy, "Mechanical energy"), object(E8S547-push, A12S547-object), isa(A12S547-object, "another object").
english(barrons.rule1488, "Mechanical energy exerted by one object can push or pull another object").
pretty(barrons.rule1488, "isa(Energy, 'Mechanical energy') -> push(Energy, Object).").
barrons.rule1488:: isa(A2S547-energy, "Mechanical energy") -> isa(E8S547-push, "push"), agent(E8S547-push, A2S547-energy), object(E8S547-push, A12S547-object), isa(A12S547-object, "another object").
english(barrons.rule1489, "Mechanical energy exerted by one object can push or pull another object").
pretty(barrons.rule1489, "isa(Object, 'another object') -> push(Energy, Object).").
barrons.rule1489:: isa(A12S547-object, "another object") -> isa(E8S547-push, "push"), agent(E8S547-push, A2S547-energy), isa(A2S547-energy, "Mechanical energy"), object(E8S547-push, A12S547-object).
english(barrons.rule1490, "Mechanical energy changes to sound energy by clapping your hands together").
pretty(barrons.rule1490, "isa(sound, 'sound') -> sound(Change, Energy).").
barrons.rule1490:: isa(E5S556-sound, "sound") -> agent(E5S556-sound, A3S556-change), isa(A3S556-change, "Mechanical energy changes"), object(E5S556-sound, A6S556-energy), isa(A6S556-energy, "energy").
english(barrons.rule1491, "Mechanical energy changes to sound energy by clapping your hands together").
pretty(barrons.rule1491, "isa(Change, 'Mechanical energy changes') -> sound(Change, Energy).").
barrons.rule1491:: isa(A3S556-change, "Mechanical energy changes") -> isa(E5S556-sound, "sound"), agent(E5S556-sound, A3S556-change), object(E5S556-sound, A6S556-energy), isa(A6S556-energy, "energy").
english(barrons.rule1492, "Mechanical energy changes to sound energy by clapping your hands together").
pretty(barrons.rule1492, "isa(Energy, 'energy') -> sound(Change, Energy).").
barrons.rule1492:: isa(A6S556-energy, "energy") -> isa(E5S556-sound, "sound"), agent(E5S556-sound, A3S556-change), isa(A3S556-change, "Mechanical energy changes"), object(E5S556-sound, A6S556-energy).
english(barrons.rule1493, "Mechanical energy changes to sound energy by clapping your hands together").
pretty(barrons.rule1493, "ENABLE(clap together(Change, Hand), sound(Change, Energy)), Change = 'Mechanical energy changes', Hand = 'your hands', Energy = 'energy'.").
barrons.rule1493:: isa(E8S556-clap, "clap together"), agent(E8S556-clap, A3S556-change), isa(A3S556-change, "Mechanical energy changes"), object(E8S556-clap, A10S556-hand), isa(A10S556-hand, "your hands") -> enable(E8S556-clap, E5S556-sound), isa(E5S556-sound, "sound"), agent(E5S556-sound, A3S556-change), object(E5S556-sound, A6S556-energy), isa(A6S556-energy, "energy").
english(barrons.rule1494, "Mechanical energy changes to sound energy by clapping your hands together").
pretty(barrons.rule1494, "ENABLE(clap together(Change, Hand), sound(Change, Energy)), Change = 'Mechanical energy changes', Hand = 'your hands', Energy = 'energy'.").
barrons.rule1494:: isa(E5S556-sound, "sound"), agent(E5S556-sound, A3S556-change), isa(A3S556-change, "Mechanical energy changes"), object(E5S556-sound, A6S556-energy), isa(A6S556-energy, "energy") -> enable(E8S556-clap, E5S556-sound), isa(E8S556-clap, "clap together"), agent(E8S556-clap, A3S556-change), object(E8S556-clap, A10S556-hand), isa(A10S556-hand, "your hands").
english(barrons.rule1495, "Electrical energy changes to sound energy in a door buzzer").
pretty(barrons.rule1495, "isa(sound, 'sound') -> sound_in(Change, Energy, Buzzer).").
barrons.rule1495:: isa(E5S557-sound, "sound") -> agent(E5S557-sound, A3S557-change), isa(A3S557-change, "Electrical energy changes"), object(E5S557-sound, A6S557-energy), isa(A6S557-energy, "energy"), in(E5S557-sound, A10S557-buzzer), isa(A10S557-buzzer, "a door buzzer").
english(barrons.rule1496, "Electrical energy changes to sound energy in a door buzzer").
pretty(barrons.rule1496, "isa(Change, 'Electrical energy changes') -> sound_in(Change, Energy, Buzzer).").
barrons.rule1496:: isa(A3S557-change, "Electrical energy changes") -> isa(E5S557-sound, "sound"), agent(E5S557-sound, A3S557-change), object(E5S557-sound, A6S557-energy), isa(A6S557-energy, "energy"), in(E5S557-sound, A10S557-buzzer), isa(A10S557-buzzer, "a door buzzer").
english(barrons.rule1497, "Electrical energy changes to sound energy in a door buzzer").
pretty(barrons.rule1497, "isa(Energy, 'energy') -> sound_in(Change, Energy, Buzzer).").
barrons.rule1497:: isa(A6S557-energy, "energy") -> isa(E5S557-sound, "sound"), agent(E5S557-sound, A3S557-change), isa(A3S557-change, "Electrical energy changes"), object(E5S557-sound, A6S557-energy), in(E5S557-sound, A10S557-buzzer), isa(A10S557-buzzer, "a door buzzer").
english(barrons.rule1498, "Electrical energy changes to sound energy in a door buzzer").
pretty(barrons.rule1498, "isa(Buzzer, 'a door buzzer') -> sound_in(Change, Energy, Buzzer).").
barrons.rule1498:: isa(A10S557-buzzer, "a door buzzer") -> isa(E5S557-sound, "sound"), agent(E5S557-sound, A3S557-change), isa(A3S557-change, "Electrical energy changes"), object(E5S557-sound, A6S557-energy), isa(A6S557-energy, "energy"), in(E5S557-sound, A10S557-buzzer).
english(barrons.rule1499, "Mechanical energy changes to sound energy by playing a musical instrument").
pretty(barrons.rule1499, "isa(sound, 'sound') -> sound(Change, Energy).").
barrons.rule1499:: isa(E5S558-sound, "sound") -> agent(E5S558-sound, A3S558-change), isa(A3S558-change, "Mechanical energy changes"), object(E5S558-sound, A6S558-energy), isa(A6S558-energy, "energy").
english(barrons.rule1500, "Mechanical energy changes to sound energy by playing a musical instrument").
pretty(barrons.rule1500, "isa(Change, 'Mechanical energy changes') -> sound(Change, Energy).").
barrons.rule1500:: isa(A3S558-change, "Mechanical energy changes") -> isa(E5S558-sound, "sound"), agent(E5S558-sound, A3S558-change), object(E5S558-sound, A6S558-energy), isa(A6S558-energy, "energy").
english(barrons.rule1501, "Mechanical energy changes to sound energy by playing a musical instrument").
pretty(barrons.rule1501, "isa(Energy, 'energy') -> sound(Change, Energy).").
barrons.rule1501:: isa(A6S558-energy, "energy") -> isa(E5S558-sound, "sound"), agent(E5S558-sound, A3S558-change), isa(A3S558-change, "Mechanical energy changes"), object(E5S558-sound, A6S558-energy).
english(barrons.rule1502, "Mechanical energy changes to sound energy by playing a musical instrument").
pretty(barrons.rule1502, "ENABLE(play(Change, Instrument), sound(Change, Energy)), Change = 'Mechanical energy changes', Instrument = 'a musical instrument', Energy = 'energy'.").
barrons.rule1502:: isa(E8S558-play, "play"), agent(E8S558-play, A3S558-change), isa(A3S558-change, "Mechanical energy changes"), object(E8S558-play, A11S558-instrument), isa(A11S558-instrument, "a musical instrument") -> enable(E8S558-play, E5S558-sound), isa(E5S558-sound, "sound"), agent(E5S558-sound, A3S558-change), object(E5S558-sound, A6S558-energy), isa(A6S558-energy, "energy").
english(barrons.rule1503, "Mechanical energy changes to sound energy by playing a musical instrument").
pretty(barrons.rule1503, "ENABLE(play(Change, Instrument), sound(Change, Energy)), Change = 'Mechanical energy changes', Instrument = 'a musical instrument', Energy = 'energy'.").
barrons.rule1503:: isa(E5S558-sound, "sound"), agent(E5S558-sound, A3S558-change), isa(A3S558-change, "Mechanical energy changes"), object(E5S558-sound, A6S558-energy), isa(A6S558-energy, "energy") -> enable(E8S558-play, E5S558-sound), isa(E8S558-play, "play"), agent(E8S558-play, A3S558-change), object(E8S558-play, A11S558-instrument), isa(A11S558-instrument, "a musical instrument").
english(barrons.rule1504, "Some materials allow energy to be transferred more easily than others").
pretty(barrons.rule1504, "PURPOSE(Material, transfer(Energy, Easily)), Material = 'Some materials', Energy = 'energy', Easily = 'easily than others'.").
barrons.rule1504:: isa(A2S572-material, "Some materials") -> purpose(A2S572-material, E7S572-transfer), isa(E7S572-transfer, "transfer"), object(E7S572-transfer, A4S572-energy), isa(A4S572-energy, "energy"), arg(E7S572-transfer, A9S572-easily), isa(A9S572-easily, "more easily than others").
english(barrons.rule1505, "Some materials allow energy to be transferred more easily than others").
pretty(barrons.rule1505, "PURPOSE(Material, transfer(Energy, Easily)), Material = 'Some materials', Energy = 'energy', Easily = 'easily than others'.").
barrons.rule1505:: isa(E7S572-transfer, "transfer"), object(E7S572-transfer, A4S572-energy), isa(A4S572-energy, "energy"), arg(E7S572-transfer, A9S572-easily), isa(A9S572-easily, "more easily than others") -> purpose(A2S572-material, E7S572-transfer), isa(A2S572-material, "Some materials").
english(barrons.rule1506, "For example some metal objects allow heat and electricity to transfer better than do plastic or rubber objects").
pretty(barrons.rule1506, "PURPOSE(Object, transfer(Heat, Better)), Object = 'some metal objects', Heat = 'heat', Better = 'better than do plastic or rubber objects'.").
barrons.rule1506:: isa(A6S573-object, "some metal objects") -> purpose(A6S573-object, E12S573-transfer), isa(E12S573-transfer, "transfer"), agent(E12S573-transfer, A8S573-heat), isa(A8S573-heat, "heat"), arg(E12S573-transfer, A13S573-better), isa(A13S573-better, "better than do plastic or rubber objects").
english(barrons.rule1507, "For example some metal objects allow heat and electricity to transfer better than do plastic or rubber objects").
pretty(barrons.rule1507, "PURPOSE(Object, transfer(Heat, Better)), Object = 'some metal objects', Heat = 'heat', Better = 'better than do plastic or rubber objects'.").
barrons.rule1507:: isa(E12S573-transfer, "transfer"), agent(E12S573-transfer, A8S573-heat), isa(A8S573-heat, "heat"), arg(E12S573-transfer, A13S573-better), isa(A13S573-better, "better than do plastic or rubber objects") -> purpose(A6S573-object, E12S573-transfer), isa(A6S573-object, "some metal objects").
english(barrons.rule1508, "For example some metal objects allow heat and electricity to transfer better than do plastic or rubber objects").
pretty(barrons.rule1508, "PURPOSE(Object, transfer(Electricity, Better)), Object = 'some metal objects', Electricity = 'electricity', Better = 'better than do plastic or rubber objects'.").
barrons.rule1508:: isa(A6S573-object, "some metal objects") -> purpose(A6S573-object, E12S573-transfer), isa(E12S573-transfer, "transfer"), agent(E12S573-transfer, A10S573-electricity), isa(A10S573-electricity, "electricity"), arg(E12S573-transfer, A13S573-better), isa(A13S573-better, "better than do plastic or rubber objects").
english(barrons.rule1509, "For example some metal objects allow heat and electricity to transfer better than do plastic or rubber objects").
pretty(barrons.rule1509, "PURPOSE(Object, transfer(Electricity, Better)), Object = 'some metal objects', Electricity = 'electricity', Better = 'better than do plastic or rubber objects'.").
barrons.rule1509:: isa(E12S573-transfer, "transfer"), agent(E12S573-transfer, A10S573-electricity), isa(A10S573-electricity, "electricity"), arg(E12S573-transfer, A13S573-better), isa(A13S573-better, "better than do plastic or rubber objects") -> purpose(A6S573-object, E12S573-transfer), isa(A6S573-object, "some metal objects").
english(barrons.rule1510, "A complete circuit allows electrical energy to flow").
pretty(barrons.rule1510, "PURPOSE(Circuit, flow(Energy)), Circuit = 'A complete circuit', Energy = 'electrical energy'.").
barrons.rule1510:: isa(A3S579-circuit, "A complete circuit") -> purpose(A3S579-circuit, E8S579-flow), isa(E8S579-flow, "flow"), agent(E8S579-flow, A6S579-energy), isa(A6S579-energy, "electrical energy").
english(barrons.rule1511, "A complete circuit allows electrical energy to flow").
pretty(barrons.rule1511, "PURPOSE(Circuit, flow(Energy)), Circuit = 'A complete circuit', Energy = 'electrical energy'.").
barrons.rule1511:: isa(E8S579-flow, "flow"), agent(E8S579-flow, A6S579-energy), isa(A6S579-energy, "electrical energy") -> purpose(A3S579-circuit, E8S579-flow), isa(A3S579-circuit, "A complete circuit").
english(barrons.rule1512, "A simple circuit generally involves a battery or other source of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb").
pretty(barrons.rule1512, "isa(Electron, 'electrons') -> involve(Circuit, Battery, Generally).").
barrons.rule1512:: isa(A13S583-electron, "electrons") -> of(A7S583-battery, A13S583-electron), of(A7S583-battery, A15S583-wire), isa(A15S583-wire, "wires"), of(A7S583-battery, A25S583-object), isa(A25S583-object, "the object"), such_as(A7S583-battery, A37S583-bulb), isa(A37S583-bulb, "a light bulb"), isa(E5S583-involve, "involve"), agent(E5S583-involve, A3S583-circuit), isa(A3S583-circuit, "A simple circuit"), object(E5S583-involve, A7S583-battery), isa(A7S583-battery, "a battery"), arg(E5S583-involve, A4S583-generally), isa(A4S583-generally, "generally").
english(barrons.rule1513, "A simple circuit generally involves a battery or other source of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb").
pretty(barrons.rule1513, "isa(Wire, 'wires') -> involve(Circuit, Battery, Generally).").
barrons.rule1513:: isa(A15S583-wire, "wires") -> of(A7S583-battery, A13S583-electron), isa(A13S583-electron, "electrons"), of(A7S583-battery, A15S583-wire), of(A7S583-battery, A25S583-object), isa(A25S583-object, "the object"), such_as(A7S583-battery, A37S583-bulb), isa(A37S583-bulb, "a light bulb"), isa(E5S583-involve, "involve"), agent(E5S583-involve, A3S583-circuit), isa(A3S583-circuit, "A simple circuit"), object(E5S583-involve, A7S583-battery), isa(A7S583-battery, "a battery"), arg(E5S583-involve, A4S583-generally), isa(A4S583-generally, "generally").
english(barrons.rule1514, "A simple circuit generally involves a battery or other source of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb").
pretty(barrons.rule1514, "isa(Object, 'the object') -> involve(Circuit, Battery, Generally).").
barrons.rule1514:: isa(A25S583-object, "the object") -> of(A7S583-battery, A13S583-electron), isa(A13S583-electron, "electrons"), of(A7S583-battery, A15S583-wire), isa(A15S583-wire, "wires"), of(A7S583-battery, A25S583-object), such_as(A7S583-battery, A37S583-bulb), isa(A37S583-bulb, "a light bulb"), isa(E5S583-involve, "involve"), agent(E5S583-involve, A3S583-circuit), isa(A3S583-circuit, "A simple circuit"), object(E5S583-involve, A7S583-battery), isa(A7S583-battery, "a battery"), arg(E5S583-involve, A4S583-generally), isa(A4S583-generally, "generally").
english(barrons.rule1515, "A simple circuit generally involves a battery or other source of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb").
pretty(barrons.rule1515, "isa(Bulb, 'a light bulb') -> involve(Circuit, Battery, Generally).").
barrons.rule1515:: isa(A37S583-bulb, "a light bulb") -> of(A7S583-battery, A13S583-electron), isa(A13S583-electron, "electrons"), of(A7S583-battery, A15S583-wire), isa(A15S583-wire, "wires"), of(A7S583-battery, A25S583-object), isa(A25S583-object, "the object"), such_as(A7S583-battery, A37S583-bulb), isa(E5S583-involve, "involve"), agent(E5S583-involve, A3S583-circuit), isa(A3S583-circuit, "A simple circuit"), object(E5S583-involve, A7S583-battery), isa(A7S583-battery, "a battery"), arg(E5S583-involve, A4S583-generally), isa(A4S583-generally, "generally").
english(barrons.rule1516, "A simple circuit generally involves a battery or other source of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb").
pretty(barrons.rule1516, "isa(involve, 'involves') -> involve(Circuit, Battery, Generally).").
barrons.rule1516:: isa(E5S583-involve, "involve") -> of(A7S583-battery, A13S583-electron), isa(A13S583-electron, "electrons"), of(A7S583-battery, A15S583-wire), isa(A15S583-wire, "wires"), of(A7S583-battery, A25S583-object), isa(A25S583-object, "the object"), such_as(A7S583-battery, A37S583-bulb), isa(A37S583-bulb, "a light bulb"), agent(E5S583-involve, A3S583-circuit), isa(A3S583-circuit, "A simple circuit"), object(E5S583-involve, A7S583-battery), isa(A7S583-battery, "a battery"), arg(E5S583-involve, A4S583-generally), isa(A4S583-generally, "generally").
english(barrons.rule1517, "A simple circuit generally involves a battery or other source of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb").
pretty(barrons.rule1517, "isa(Circuit, 'A simple circuit') -> involve(Circuit, Battery, Generally).").
barrons.rule1517:: isa(A3S583-circuit, "A simple circuit") -> of(A7S583-battery, A13S583-electron), isa(A13S583-electron, "electrons"), of(A7S583-battery, A15S583-wire), isa(A15S583-wire, "wires"), of(A7S583-battery, A25S583-object), isa(A25S583-object, "the object"), such_as(A7S583-battery, A37S583-bulb), isa(A37S583-bulb, "a light bulb"), isa(E5S583-involve, "involve"), agent(E5S583-involve, A3S583-circuit), object(E5S583-involve, A7S583-battery), isa(A7S583-battery, "a battery"), arg(E5S583-involve, A4S583-generally), isa(A4S583-generally, "generally").
english(barrons.rule1518, "A simple circuit generally involves a battery or other source of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb").
pretty(barrons.rule1518, "isa(Battery, 'a battery of electrons wires through which the energy can flow and the object that needs the energy to work') -> involve(Circuit, Battery, Generally).").
barrons.rule1518:: isa(A7S583-battery, "a battery") -> of(A7S583-battery, A13S583-electron), isa(A13S583-electron, "electrons"), of(A7S583-battery, A15S583-wire), isa(A15S583-wire, "wires"), of(A7S583-battery, A25S583-object), isa(A25S583-object, "the object"), such_as(A7S583-battery, A37S583-bulb), isa(A37S583-bulb, "a light bulb"), isa(E5S583-involve, "involve"), agent(E5S583-involve, A3S583-circuit), isa(A3S583-circuit, "A simple circuit"), object(E5S583-involve, A7S583-battery), arg(E5S583-involve, A4S583-generally), isa(A4S583-generally, "generally").
english(barrons.rule1519, "A simple circuit generally involves a battery or other source of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb").
pretty(barrons.rule1519, "isa(Generally, 'generally') -> involve(Circuit, Battery, Generally).").
barrons.rule1519:: isa(A4S583-generally, "generally") -> of(A7S583-battery, A13S583-electron), isa(A13S583-electron, "electrons"), of(A7S583-battery, A15S583-wire), isa(A15S583-wire, "wires"), of(A7S583-battery, A25S583-object), isa(A25S583-object, "the object"), such_as(A7S583-battery, A37S583-bulb), isa(A37S583-bulb, "a light bulb"), isa(E5S583-involve, "involve"), agent(E5S583-involve, A3S583-circuit), isa(A3S583-circuit, "A simple circuit"), object(E5S583-involve, A7S583-battery), isa(A7S583-battery, "a battery"), arg(E5S583-involve, A4S583-generally).
english(barrons.rule1520, "A simple circuit generally involves a battery or other source of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb").
pretty(barrons.rule1520, "isa(involve, 'involves') -> involve(Circuit, Source, Generally).").
barrons.rule1520:: isa(E5S583-involve, "involve") -> agent(E5S583-involve, A3S583-circuit), isa(A3S583-circuit, "A simple circuit"), object(E5S583-involve, A11S583-source), isa(A11S583-source, "other source"), arg(E5S583-involve, A4S583-generally), isa(A4S583-generally, "generally").
english(barrons.rule1521, "A simple circuit generally involves a battery or other source of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb").
pretty(barrons.rule1521, "isa(Circuit, 'A simple circuit') -> involve(Circuit, Source, Generally).").
barrons.rule1521:: isa(A3S583-circuit, "A simple circuit") -> isa(E5S583-involve, "involve"), agent(E5S583-involve, A3S583-circuit), object(E5S583-involve, A11S583-source), isa(A11S583-source, "other source"), arg(E5S583-involve, A4S583-generally), isa(A4S583-generally, "generally").
english(barrons.rule1522, "A simple circuit generally involves a battery or other source of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb").
pretty(barrons.rule1522, "isa(Source, 'other source') -> involve(Circuit, Source, Generally).").
barrons.rule1522:: isa(A11S583-source, "other source") -> isa(E5S583-involve, "involve"), agent(E5S583-involve, A3S583-circuit), isa(A3S583-circuit, "A simple circuit"), object(E5S583-involve, A11S583-source), arg(E5S583-involve, A4S583-generally), isa(A4S583-generally, "generally").
english(barrons.rule1523, "A simple circuit generally involves a battery or other source of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb").
pretty(barrons.rule1523, "isa(Generally, 'generally') -> involve(Circuit, Source, Generally).").
barrons.rule1523:: isa(A4S583-generally, "generally") -> isa(E5S583-involve, "involve"), agent(E5S583-involve, A3S583-circuit), isa(A3S583-circuit, "A simple circuit"), object(E5S583-involve, A11S583-source), isa(A11S583-source, "other source"), arg(E5S583-involve, A4S583-generally).
english(barrons.rule1524, "A simple circuit generally involves a battery or other source of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb").
pretty(barrons.rule1524, "EXAMPLE(Bulb, Battery), Bulb = 'a light bulb', Battery = 'a battery of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb'.").
barrons.rule1524:: isa(A37S583-bulb, "a light bulb") -> example(A37S583-bulb, A7S583-battery), of(A7S583-battery, A13S583-electron), isa(A13S583-electron, "electrons"), of(A7S583-battery, A15S583-wire), isa(A15S583-wire, "wires"), of(A7S583-battery, A25S583-object), isa(A25S583-object, "the object"), such_as(A7S583-battery, A37S583-bulb), isa(A7S583-battery, "a battery").
english(barrons.rule1525, "A simple circuit generally involves a battery or other source of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb").
pretty(barrons.rule1525, "EXAMPLE(Bulb, Battery), Bulb = 'a light bulb', Battery = 'a battery of electrons wires through which the energy can flow and the object that needs the energy to work such as a light bulb'.").
barrons.rule1525:: of(A7S583-battery, A13S583-electron), isa(A13S583-electron, "electrons"), of(A7S583-battery, A15S583-wire), isa(A15S583-wire, "wires"), of(A7S583-battery, A25S583-object), isa(A25S583-object, "the object"), such_as(A7S583-battery, A37S583-bulb), isa(A37S583-bulb, "a light bulb"), isa(A7S583-battery, "a battery") -> example(A37S583-bulb, A7S583-battery).
english(barrons.rule1526, "The circuit or path must be complete in order for the object to work").
pretty(barrons.rule1526, "EFFECT(be(Circuit, Complete), work(Object)), Circuit = 'The circuit', Complete = 'complete in order for the object to work', Object = 'the object'.").
barrons.rule1526:: isa(E6S584-be, "be"), agent(E6S584-be, A2S584-circuit), isa(A2S584-circuit, "The circuit"), object(E6S584-be, A7S584-complete), isa(A7S584-complete, "complete") -> effect(E6S584-be, E14S584-work), isa(E14S584-work, "work"), agent(E14S584-work, A12S584-object), isa(A12S584-object, "the object").
english(barrons.rule1527, "The circuit or path must be complete in order for the object to work").
pretty(barrons.rule1527, "EFFECT(be(Circuit, Complete), work(Object)), Circuit = 'The circuit', Complete = 'complete in order for the object to work', Object = 'the object'.").
barrons.rule1527:: isa(E14S584-work, "work"), agent(E14S584-work, A12S584-object), isa(A12S584-object, "the object") -> effect(E6S584-be, E14S584-work), isa(E6S584-be, "be"), agent(E6S584-be, A2S584-circuit), isa(A2S584-circuit, "The circuit"), object(E6S584-be, A7S584-complete), isa(A7S584-complete, "complete").
english(barrons.rule1528, "The circuit or path must be complete in order for the object to work").
pretty(barrons.rule1528, "EFFECT(be(Path, Complete), work(Object)), Path = 'path', Complete = 'complete in order for the object to work', Object = 'the object'.").
barrons.rule1528:: isa(E6S584-be, "be"), agent(E6S584-be, A4S584-path), isa(A4S584-path, "path"), object(E6S584-be, A7S584-complete), isa(A7S584-complete, "complete") -> effect(E6S584-be, E14S584-work), isa(E14S584-work, "work"), agent(E14S584-work, A12S584-object), isa(A12S584-object, "the object").
english(barrons.rule1529, "The circuit or path must be complete in order for the object to work").
pretty(barrons.rule1529, "EFFECT(be(Path, Complete), work(Object)), Path = 'path', Complete = 'complete in order for the object to work', Object = 'the object'.").
barrons.rule1529:: isa(E14S584-work, "work"), agent(E14S584-work, A12S584-object), isa(A12S584-object, "the object") -> effect(E6S584-be, E14S584-work), isa(E6S584-be, "be"), agent(E6S584-be, A4S584-path), isa(A4S584-path, "path"), object(E6S584-be, A7S584-complete), isa(A7S584-complete, "complete").
english(barrons.rule1530, "This is an example of a simple circuit").
pretty(barrons.rule1530, "EXAMPLE(This, Circuit), This = 'This', Circuit = 'a simple circuit'.").
barrons.rule1530:: isa(A1S585-this, "This") -> example(A1S585-this, A8S585-circuit), isa(A8S585-circuit, "a simple circuit").
english(barrons.rule1531, "This is an example of a simple circuit").
pretty(barrons.rule1531, "EXAMPLE(This, Circuit), This = 'This', Circuit = 'a simple circuit'.").
barrons.rule1531:: isa(A8S585-circuit, "a simple circuit") -> example(A1S585-this, A8S585-circuit), isa(A1S585-this, "This").
english(barrons.rule1532, "When all the wires are attached the bulb will give off light").
pretty(barrons.rule1532, "WHEN(give off(Bulb, Light), attach(Wire)), Bulb = 'the bulb', Light = 'light', Wire = 'all the wires'.").
barrons.rule1532:: isa(E11S588-give, "give off"), agent(E11S588-give, A9S588-bulb), isa(A9S588-bulb, "the bulb"), object(E11S588-give, A13S588-light), isa(A13S588-light, "light") -> when(E11S588-give, E6S588-attach), isa(E6S588-attach, "attach"), object(E6S588-attach, A4S588-wire), isa(A4S588-wire, "all the wires").
english(barrons.rule1533, "When all the wires are attached the bulb will give off light").
pretty(barrons.rule1533, "WHEN(give off(Bulb, Light), attach(Wire)), Bulb = 'the bulb', Light = 'light', Wire = 'all the wires'.").
barrons.rule1533:: isa(E6S588-attach, "attach"), object(E6S588-attach, A4S588-wire), isa(A4S588-wire, "all the wires") -> when(E11S588-give, E6S588-attach), isa(E11S588-give, "give off"), agent(E11S588-give, A9S588-bulb), isa(A9S588-bulb, "the bulb"), object(E11S588-give, A13S588-light), isa(A13S588-light, "light").
english(barrons.rule1534, "When one of the wires is not attached as in the diagram below the circuit will not be complete and the bulb will not give off light").
pretty(barrons.rule1534, "WHEN(be_as(Circuit, Complete, In), not attach(One)), Circuit = 'the circuit', Complete = 'When one of the wires is not attached as in the diagram below not complete', In = 'in the diagram below', One = 'one of the wires'.").
barrons.rule1534:: isa(E20S589-be, "be"), agent(E20S589-be, A17S589-circuit), isa(A17S589-circuit, "the circuit"), object(E20S589-be, A21S589-complete), isa(A21S589-complete, "not complete"), as(E20S589-be, A11S589-in), isa(A11S589-in, "in the diagram below") -> when(E20S589-be, E8S589-attach), of(A2S589-one, A5S589-wire), isa(A5S589-wire, "the wires"), isa(E8S589-attach, "not attach"), object(E8S589-attach, A2S589-one), isa(A2S589-one, "one").
english(barrons.rule1535, "When one of the wires is not attached as in the diagram below the circuit will not be complete and the bulb will not give off light").
pretty(barrons.rule1535, "WHEN(be_as(Circuit, Complete, In), not attach(One)), Circuit = 'the circuit', Complete = 'When one of the wires is not attached as in the diagram below not complete', In = 'in the diagram below', One = 'one of the wires'.").
barrons.rule1535:: of(A2S589-one, A5S589-wire), isa(A5S589-wire, "the wires"), isa(E8S589-attach, "not attach"), object(E8S589-attach, A2S589-one), isa(A2S589-one, "one") -> when(E20S589-be, E8S589-attach), isa(E20S589-be, "be"), agent(E20S589-be, A17S589-circuit), isa(A17S589-circuit, "the circuit"), object(E20S589-be, A21S589-complete), isa(A21S589-complete, "not complete"), as(E20S589-be, A11S589-in), isa(A11S589-in, "in the diagram below").
english(barrons.rule1536, "A force is a push or pull").
pretty(barrons.rule1536, "EXAMPLE(Force, Push), Force = 'A force', Push = 'a push'.").
barrons.rule1536:: isa(A2S590-force, "A force") -> example(A2S590-force, A5S590-push), isa(A5S590-push, "a push").
english(barrons.rule1537, "A force is a push or pull").
pretty(barrons.rule1537, "EXAMPLE(Force, Push), Force = 'A force', Push = 'a push'.").
barrons.rule1537:: isa(A5S590-push, "a push") -> example(A2S590-force, A5S590-push), isa(A2S590-force, "A force").
english(barrons.rule1538, "A force can also be used to change the direction that an object is moving").
pretty(barrons.rule1538, "PURPOSE(Force, change(Force, Direction)), Force = 'A force', Direction = 'the direction'.").
barrons.rule1538:: isa(A2S592-force, "A force") -> purpose(A2S592-force, E8S592-change), isa(E8S592-change, "change"), agent(E8S592-change, A2S592-force), object(E8S592-change, A10S592-direction), isa(A10S592-direction, "the direction").
english(barrons.rule1539, "A force can also be used to change the direction that an object is moving").
pretty(barrons.rule1539, "PURPOSE(Force, change(Force, Direction)), Force = 'A force', Direction = 'the direction'.").
barrons.rule1539:: isa(E8S592-change, "change"), agent(E8S592-change, A2S592-force), isa(A2S592-force, "A force"), object(E8S592-change, A10S592-direction), isa(A10S592-direction, "the direction") -> purpose(A2S592-force, E8S592-change).
english(barrons.rule1540, "If the box were empty and you gave it[a box] a push it[a box] would easily move across the floor").
pretty(barrons.rule1540, "EFFECT(be(Box, Empty), move_across(Box, Easily, Floor)), Box = 'the box', Empty = 'If empty', Box = 'a box', Easily = 'easily', Floor = 'the floor'.").
barrons.rule1540:: isa(E4S596-be, "be"), agent(E4S596-be, A3S596-box), isa(A3S596-box, "the box"), object(E4S596-be, A5S596-empty), isa(A5S596-empty, "empty") -> effect(E4S596-be, E15S596-move), isa(E15S596-move, "move"), agent(E15S596-move, A5S595-box), isa(A5S595-box, "a box"), across(E15S596-move, A18S596-floor), isa(A18S596-floor, "the floor"), arg(E15S596-move, A14S596-easily), isa(A14S596-easily, "easily").
english(barrons.rule1541, "If the box were empty and you gave it[a box] a push it[a box] would easily move across the floor").
pretty(barrons.rule1541, "EFFECT(be(Box, Empty), move_across(Box, Easily, Floor)), Box = 'the box', Empty = 'If empty', Box = 'a box', Easily = 'easily', Floor = 'the floor'.").
barrons.rule1541:: isa(E15S596-move, "move"), agent(E15S596-move, A5S595-box), isa(A5S595-box, "a box"), across(E15S596-move, A18S596-floor), isa(A18S596-floor, "the floor"), arg(E15S596-move, A14S596-easily), isa(A14S596-easily, "easily") -> effect(E4S596-be, E15S596-move), isa(E4S596-be, "be"), agent(E4S596-be, A3S596-box), isa(A3S596-box, "the box"), object(E4S596-be, A5S596-empty), isa(A5S596-empty, "empty").
english(barrons.rule1542, "If the box were empty and you gave it[a box] a push it[a box] would easily move across the floor").
pretty(barrons.rule1542, "EFFECT(give(You, Box, Push), move_across(Box, Easily, Floor)), You = 'you', Box = 'a box', Push = 'a push', Easily = 'easily', Floor = 'the floor'.").
barrons.rule1542:: isa(E8S596-give, "give"), agent(E8S596-give, A7S596-you), isa(A7S596-you, "you"), object(E8S596-give, A5S595-box), isa(A5S595-box, "a box"), arg(E8S596-give, A11S596-push), isa(A11S596-push, "a push") -> effect(E8S596-give, E15S596-move), isa(E15S596-move, "move"), agent(E15S596-move, A5S595-box), across(E15S596-move, A18S596-floor), isa(A18S596-floor, "the floor"), arg(E15S596-move, A14S596-easily), isa(A14S596-easily, "easily").
english(barrons.rule1543, "If the box were empty and you gave it[a box] a push it[a box] would easily move across the floor").
pretty(barrons.rule1543, "EFFECT(give(You, Box, Push), move_across(Box, Easily, Floor)), You = 'you', Box = 'a box', Push = 'a push', Easily = 'easily', Floor = 'the floor'.").
barrons.rule1543:: isa(E15S596-move, "move"), agent(E15S596-move, A5S595-box), isa(A5S595-box, "a box"), across(E15S596-move, A18S596-floor), isa(A18S596-floor, "the floor"), arg(E15S596-move, A14S596-easily), isa(A14S596-easily, "easily") -> effect(E8S596-give, E15S596-move), isa(E8S596-give, "give"), agent(E8S596-give, A7S596-you), isa(A7S596-you, "you"), object(E8S596-give, A5S595-box), arg(E8S596-give, A11S596-push), isa(A11S596-push, "a push").
english(barrons.rule1544, "If the same box were full of marbles you would need more force to move it[the same box] across the floor").
pretty(barrons.rule1544, "EFFECT(need(You, Force), move_across(You, Box, Floor)), You = 'you', Force = 'more force', Box = 'the same box', Floor = 'the floor'.").
barrons.rule1544:: isa(E11S597-need, "need"), agent(E11S597-need, A9S597-you), isa(A9S597-you, "you"), object(E11S597-need, A13S597-force), isa(A13S597-force, "more force") -> effect(E11S597-need, E15S597-move), isa(E15S597-move, "move"), agent(E15S597-move, A9S597-you), object(E15S597-move, A4S597-box), isa(A4S597-box, "the same box"), across(E15S597-move, A19S597-floor), isa(A19S597-floor, "the floor").
english(barrons.rule1545, "If the same box were full of marbles you would need more force to move it[the same box] across the floor").
pretty(barrons.rule1545, "EFFECT(need(You, Force), move_across(You, Box, Floor)), You = 'you', Force = 'more force', Box = 'the same box', Floor = 'the floor'.").
barrons.rule1545:: isa(E15S597-move, "move"), agent(E15S597-move, A9S597-you), isa(A9S597-you, "you"), object(E15S597-move, A4S597-box), isa(A4S597-box, "the same box"), across(E15S597-move, A19S597-floor), isa(A19S597-floor, "the floor") -> effect(E11S597-need, E15S597-move), isa(E11S597-need, "need"), agent(E11S597-need, A9S597-you), object(E11S597-need, A13S597-force), isa(A13S597-force, "more force").
english(barrons.rule1546, "If the same box were full of marbles you would need more force to move it[the same box] across the floor").
pretty(barrons.rule1546, "EFFECT(be(Box, Full), need(You, Force)), Box = 'the same box', Full = 'If full', You = 'you', Force = 'more force'.").
barrons.rule1546:: isa(E5S597-be, "be"), agent(E5S597-be, A4S597-box), isa(A4S597-box, "the same box"), object(E5S597-be, A6S597-full), isa(A6S597-full, "full") -> effect(E5S597-be, E11S597-need), isa(E11S597-need, "need"), agent(E11S597-need, A9S597-you), isa(A9S597-you, "you"), object(E11S597-need, A13S597-force), isa(A13S597-force, "more force").
english(barrons.rule1547, "If the same box were full of marbles you would need more force to move it[the same box] across the floor").
pretty(barrons.rule1547, "EFFECT(be(Box, Full), need(You, Force)), Box = 'the same box', Full = 'If full', You = 'you', Force = 'more force'.").
barrons.rule1547:: isa(E11S597-need, "need"), agent(E11S597-need, A9S597-you), isa(A9S597-you, "you"), object(E11S597-need, A13S597-force), isa(A13S597-force, "more force") -> effect(E5S597-be, E11S597-need), isa(E5S597-be, "be"), agent(E5S597-be, A4S597-box), isa(A4S597-box, "the same box"), object(E5S597-be, A6S597-full), isa(A6S597-full, "full").
english(barrons.rule1548, "Friction is a force that provides resistance whenever two surfaces are in contact").
pretty(barrons.rule1548, "EXAMPLE(Friction, provide(Force, Resistance)), Friction = 'Friction', Force = 'a force', Resistance = 'resistance'.").
barrons.rule1548:: isa(A1S598-friction, "Friction") -> example(A1S598-friction, A4S598-force), isa(E6S598-provide, "provide"), agent(E6S598-provide, A4S598-force), isa(A4S598-force, "a force"), object(E6S598-provide, A7S598-resistance), isa(A7S598-resistance, "resistance"), isa(A1S598-friction, A4S598-force).
english(barrons.rule1549, "Friction is a force that provides resistance whenever two surfaces are in contact").
pretty(barrons.rule1549, "EXAMPLE(Friction, provide(Force, Resistance)), Friction = 'Friction', Force = 'a force', Resistance = 'resistance'.").
barrons.rule1549:: isa(E6S598-provide, "provide"), agent(E6S598-provide, A4S598-force), isa(A4S598-force, "a force"), object(E6S598-provide, A7S598-resistance), isa(A7S598-resistance, "resistance") -> example(A1S598-friction, A4S598-force), isa(A1S598-friction, "Friction"), isa(A1S598-friction, A4S598-force).
english(barrons.rule1550, "Friction is a force that provides resistance whenever two surfaces are in contact").
pretty(barrons.rule1550, "EXAMPLE(Friction, Force), Friction = 'Friction', Force = 'a force'.").
barrons.rule1550:: isa(A1S598-friction, "Friction") -> example(A1S598-friction, A4S598-force), isa(A4S598-force, "a force").
english(barrons.rule1551, "Friction is a force that provides resistance whenever two surfaces are in contact").
pretty(barrons.rule1551, "EXAMPLE(Friction, Force), Friction = 'Friction', Force = 'a force'.").
barrons.rule1551:: isa(A4S598-force, "a force") -> example(A1S598-friction, A4S598-force), isa(A1S598-friction, "Friction").
english(barrons.rule1552, "The smoother the surface the less friction against an object so the faster it[The smoother] will move").
pretty(barrons.rule1552, "isa(Object, 'an object') -> surface(Smoother, Friction, Move).").
barrons.rule1552:: isa(A11S601-object, "an object") -> against(A8S601-friction, A11S601-object), isa(E4S601-surface, "the surface"), agent(E4S601-surface, A2S601-smoother), isa(A2S601-smoother, "The smoother"), object(E4S601-surface, A8S601-friction), isa(A8S601-friction, "the less friction"), arg(E4S601-surface, A18S601-move), isa(A18S601-move, "the faster it[The smoother] will move").
english(barrons.rule1553, "The smoother the surface the less friction against an object so the faster it[The smoother] will move").
pretty(barrons.rule1553, "isa(surface, 'the surface') -> surface(Smoother, Friction, Move).").
barrons.rule1553:: isa(E4S601-surface, "the surface") -> against(A8S601-friction, A11S601-object), isa(A11S601-object, "an object"), agent(E4S601-surface, A2S601-smoother), isa(A2S601-smoother, "The smoother"), object(E4S601-surface, A8S601-friction), isa(A8S601-friction, "the less friction"), arg(E4S601-surface, A18S601-move), isa(A18S601-move, "the faster it[The smoother] will move").
english(barrons.rule1554, "The smoother the surface the less friction against an object so the faster it[The smoother] will move").
pretty(barrons.rule1554, "isa(Smoother, 'The smoother') -> surface(Smoother, Friction, Move).").
barrons.rule1554:: isa(A2S601-smoother, "The smoother") -> against(A8S601-friction, A11S601-object), isa(A11S601-object, "an object"), isa(E4S601-surface, "the surface"), agent(E4S601-surface, A2S601-smoother), object(E4S601-surface, A8S601-friction), isa(A8S601-friction, "the less friction"), arg(E4S601-surface, A18S601-move), isa(A18S601-move, "the faster it[The smoother] will move").
english(barrons.rule1555, "The smoother the surface the less friction against an object so the faster it[The smoother] will move").
pretty(barrons.rule1555, "isa(Friction, 'the less friction against an object') -> surface(Smoother, Friction, Move).").
barrons.rule1555:: isa(A8S601-friction, "the less friction") -> against(A8S601-friction, A11S601-object), isa(A11S601-object, "an object"), isa(E4S601-surface, "the surface"), agent(E4S601-surface, A2S601-smoother), isa(A2S601-smoother, "The smoother"), object(E4S601-surface, A8S601-friction), arg(E4S601-surface, A18S601-move), isa(A18S601-move, "the faster it[The smoother] will move").
english(barrons.rule1556, "The smoother the surface the less friction against an object so the faster it[The smoother] will move").
pretty(barrons.rule1556, "isa(Move, 'move') -> surface(Smoother, Friction, Move).").
barrons.rule1556:: isa(A18S601-move, "the faster it[The smoother] will move") -> against(A8S601-friction, A11S601-object), isa(A11S601-object, "an object"), isa(E4S601-surface, "the surface"), agent(E4S601-surface, A2S601-smoother), isa(A2S601-smoother, "The smoother"), object(E4S601-surface, A8S601-friction), isa(A8S601-friction, "the less friction"), arg(E4S601-surface, A18S601-move).
english(barrons.rule1557, "Skiers and surfers often apply wax to their[Skiers and surfers] skis and boards in order to make them[Skiers and surfers] smoother so they[Skiers and surfers] will glide along the surface of the snow or water faster").
pretty(barrons.rule1557, "EFFECT(apply_to(Skier, Wax, Ski, to(Board)), make(Skier, Smoother)), Skier = 'Skiers', Wax = 'wax', Ski = 'their[Skiers and surfers] skis', Board = 'boards', Smoother = 'smoother'.").
barrons.rule1557:: isa(E5S602-apply, "apply"), agent(E5S602-apply, A1S602-skier), isa(A1S602-skier, "Skiers"), object(E5S602-apply, A6S602-wax), isa(A6S602-wax, "wax"), to(E5S602-apply, A9S602-ski), isa(A9S602-ski, "their[Skiers and surfers] skis"), to(E5S602-apply, A11S602-board), isa(A11S602-board, "boards") -> effect(E5S602-apply, E15S602-make), isa(E15S602-make, "make"), agent(E15S602-make, A1S602-skier), arg(E15S602-make, A17S602-smoother), isa(A17S602-smoother, "them[Skiers and surfers] smoother").
english(barrons.rule1558, "Skiers and surfers often apply wax to their[Skiers and surfers] skis and boards in order to make them[Skiers and surfers] smoother so they[Skiers and surfers] will glide along the surface of the snow or water faster").
pretty(barrons.rule1558, "EFFECT(apply_to(Skier, Wax, Ski, to(Board)), make(Skier, Smoother)), Skier = 'Skiers', Wax = 'wax', Ski = 'their[Skiers and surfers] skis', Board = 'boards', Smoother = 'smoother'.").
barrons.rule1558:: isa(E15S602-make, "make"), agent(E15S602-make, A1S602-skier), isa(A1S602-skier, "Skiers"), arg(E15S602-make, A17S602-smoother), isa(A17S602-smoother, "them[Skiers and surfers] smoother") -> effect(E5S602-apply, E15S602-make), isa(E5S602-apply, "apply"), agent(E5S602-apply, A1S602-skier), object(E5S602-apply, A6S602-wax), isa(A6S602-wax, "wax"), to(E5S602-apply, A9S602-ski), isa(A9S602-ski, "their[Skiers and surfers] skis"), to(E5S602-apply, A11S602-board), isa(A11S602-board, "boards").
english(barrons.rule1559, "Skiers and surfers often apply wax to their[Skiers and surfers] skis and boards in order to make them[Skiers and surfers] smoother so they[Skiers and surfers] will glide along the surface of the snow or water faster").
pretty(barrons.rule1559, "EFFECT(apply_to(Surfer, Wax, Ski, to(Board)), make(Surfer, Smoother)), Surfer = 'surfers', Wax = 'wax', Ski = 'their[Skiers and surfers] skis', Board = 'boards', Smoother = 'smoother'.").
barrons.rule1559:: isa(E5S602-apply, "apply"), agent(E5S602-apply, A3S602-surfer), isa(A3S602-surfer, "surfers"), object(E5S602-apply, A6S602-wax), isa(A6S602-wax, "wax"), to(E5S602-apply, A9S602-ski), isa(A9S602-ski, "their[Skiers and surfers] skis"), to(E5S602-apply, A11S602-board), isa(A11S602-board, "boards") -> effect(E5S602-apply, E15S602-make), isa(E15S602-make, "make"), agent(E15S602-make, A3S602-surfer), arg(E15S602-make, A17S602-smoother), isa(A17S602-smoother, "them[Skiers and surfers] smoother").
english(barrons.rule1560, "Skiers and surfers often apply wax to their[Skiers and surfers] skis and boards in order to make them[Skiers and surfers] smoother so they[Skiers and surfers] will glide along the surface of the snow or water faster").
pretty(barrons.rule1560, "EFFECT(apply_to(Surfer, Wax, Ski, to(Board)), make(Surfer, Smoother)), Surfer = 'surfers', Wax = 'wax', Ski = 'their[Skiers and surfers] skis', Board = 'boards', Smoother = 'smoother'.").
barrons.rule1560:: isa(E15S602-make, "make"), agent(E15S602-make, A3S602-surfer), isa(A3S602-surfer, "surfers"), arg(E15S602-make, A17S602-smoother), isa(A17S602-smoother, "them[Skiers and surfers] smoother") -> effect(E5S602-apply, E15S602-make), isa(E5S602-apply, "apply"), agent(E5S602-apply, A3S602-surfer), object(E5S602-apply, A6S602-wax), isa(A6S602-wax, "wax"), to(E5S602-apply, A9S602-ski), isa(A9S602-ski, "their[Skiers and surfers] skis"), to(E5S602-apply, A11S602-board), isa(A11S602-board, "boards").
english(barrons.rule1561, "Friction is also the force exerted by brakes on a bicycle or car in order to stop").
pretty(barrons.rule1561, "EXAMPLE(Friction, exert(Force)), Friction = 'Friction', Force = 'the force'.").
barrons.rule1561:: isa(A1S603-friction, "Friction") -> example(A1S603-friction, E6S603-exert), isa(E6S603-exert, "exert"), agent(E6S603-exert, A5S603-force), isa(A5S603-force, "the force").
english(barrons.rule1562, "Friction is also the force exerted by brakes on a bicycle or car in order to stop").
pretty(barrons.rule1562, "EXAMPLE(Friction, exert(Force)), Friction = 'Friction', Force = 'the force'.").
barrons.rule1562:: isa(E6S603-exert, "exert"), agent(E6S603-exert, A5S603-force), isa(A5S603-force, "the force") -> example(A1S603-friction, E6S603-exert), isa(A1S603-friction, "Friction").
english(barrons.rule1563, "Friction is also the force exerted by brakes on a bicycle or car in order to stop").
pretty(barrons.rule1563, "EXAMPLE(Friction, Force), Friction = 'Friction', Force = 'the force'.").
barrons.rule1563:: isa(A1S603-friction, "Friction") -> example(A1S603-friction, A5S603-force), isa(A5S603-force, "the force").
english(barrons.rule1564, "Friction is also the force exerted by brakes on a bicycle or car in order to stop").
pretty(barrons.rule1564, "EXAMPLE(Friction, Force), Friction = 'Friction', Force = 'the force'.").
barrons.rule1564:: isa(A5S603-force, "the force") -> example(A1S603-friction, A5S603-force), isa(A1S603-friction, "Friction").
english(barrons.rule1565, "A magnet is an object that attracts metals").
pretty(barrons.rule1565, "EXAMPLE(Magnet, attract(Object, Metal)), Magnet = 'A magnet', Object = 'an object', Metal = 'metals'.").
barrons.rule1565:: isa(A2S607-magnet, "A magnet") -> example(A2S607-magnet, A5S607-object), isa(E7S607-attract, "attract"), agent(E7S607-attract, A5S607-object), isa(A5S607-object, "an object"), object(E7S607-attract, A8S607-metal), isa(A8S607-metal, "metals"), isa(A2S607-magnet, A5S607-object).
english(barrons.rule1566, "A magnet is an object that attracts metals").
pretty(barrons.rule1566, "EXAMPLE(Magnet, attract(Object, Metal)), Magnet = 'A magnet', Object = 'an object', Metal = 'metals'.").
barrons.rule1566:: isa(E7S607-attract, "attract"), agent(E7S607-attract, A5S607-object), isa(A5S607-object, "an object"), object(E7S607-attract, A8S607-metal), isa(A8S607-metal, "metals") -> example(A2S607-magnet, A5S607-object), isa(A2S607-magnet, "A magnet"), isa(A2S607-magnet, A5S607-object).
english(barrons.rule1567, "A magnet is an object that attracts metals").
pretty(barrons.rule1567, "EXAMPLE(Magnet, Object), Magnet = 'A magnet', Object = 'an object'.").
barrons.rule1567:: isa(A2S607-magnet, "A magnet") -> example(A2S607-magnet, A5S607-object), isa(A5S607-object, "an object").
english(barrons.rule1568, "A magnet is an object that attracts metals").
pretty(barrons.rule1568, "EXAMPLE(Magnet, Object), Magnet = 'A magnet', Object = 'an object'.").
barrons.rule1568:: isa(A5S607-object, "an object") -> example(A2S607-magnet, A5S607-object), isa(A2S607-magnet, "A magnet").
english(barrons.rule1569, "The magnet works because the forces in it[a magnet] are all moving in the same direction resulting in two different poles ends").
pretty(barrons.rule1569, "EFFECT(be(Force, All), work(Magnet)), Force = 'the forces in it[a magnet]', All = 'because all', Magnet = 'The magnet'.").
barrons.rule1569:: in(A6S608-force, A8S608-it), isa(A8S608-it, "it[a magnet]"), isa(E9S608-be, "be"), agent(E9S608-be, A6S608-force), isa(A6S608-force, "the forces"), object(E9S608-be, A10S608-all), isa(A10S608-all, "all move in the same direction result in two different pole end") -> effect(E9S608-be, E3S608-work), isa(E3S608-work, "work"), agent(E3S608-work, A2S608-magnet), isa(A2S608-magnet, "The magnet").
english(barrons.rule1570, "The magnet works because the forces in it[a magnet] are all moving in the same direction resulting in two different poles ends").
pretty(barrons.rule1570, "EFFECT(be(Force, All), work(Magnet)), Force = 'the forces in it[a magnet]', All = 'because all', Magnet = 'The magnet'.").
barrons.rule1570:: isa(E3S608-work, "work"), agent(E3S608-work, A2S608-magnet), isa(A2S608-magnet, "The magnet") -> effect(E9S608-be, E3S608-work), in(A6S608-force, A8S608-it), isa(A8S608-it, "it[a magnet]"), isa(E9S608-be, "be"), agent(E9S608-be, A6S608-force), isa(A6S608-force, "the forces"), object(E9S608-be, A10S608-all), isa(A10S608-all, "all move in the same direction result in two different pole end").
english(barrons.rule1571, "The magnet works because the forces in it[a magnet] are all moving in the same direction resulting in two different poles ends").
pretty(barrons.rule1571, "EFFECT(move_in(All, Direction), result_in(All, Pole)), All = 'because all', Direction = 'the same direction', Pole = 'two different poles'.").
barrons.rule1571:: isa(E11S608-move, "move"), agent(E11S608-move, A10S608-all), isa(A10S608-all, "because all"), in(E11S608-move, A15S608-direction), isa(A15S608-direction, "the same direction") -> effect(E11S608-move, E17S608-result), isa(E17S608-result, "result"), agent(E17S608-result, A10S608-all), in(E17S608-result, A21S608-pole), isa(A21S608-pole, "two different poles ends").
english(barrons.rule1572, "The magnet works because the forces in it[a magnet] are all moving in the same direction resulting in two different poles ends").
pretty(barrons.rule1572, "EFFECT(move_in(All, Direction), result_in(All, Pole)), All = 'because all', Direction = 'the same direction', Pole = 'two different poles'.").
barrons.rule1572:: isa(E17S608-result, "result"), agent(E17S608-result, A10S608-all), isa(A10S608-all, "because all"), in(E17S608-result, A21S608-pole), isa(A21S608-pole, "two different poles ends") -> effect(E11S608-move, E17S608-result), isa(E11S608-move, "move"), agent(E11S608-move, A10S608-all), in(E11S608-move, A15S608-direction), isa(A15S608-direction, "the same direction").
english(barrons.rule1573, "The space around the magnet is called the magnetic field").
pretty(barrons.rule1573, "EXAMPLE(Space, Field), Space = 'The space around the magnet', Field = 'the magnetic field'.").
barrons.rule1573:: around(A2S609-space, A5S609-magnet), isa(A5S609-magnet, "the magnet"), isa(A2S609-space, "The space") -> example(A2S609-space, A10S609-field), isa(A10S609-field, "the magnetic field").
english(barrons.rule1574, "The space around the magnet is called the magnetic field").
pretty(barrons.rule1574, "EXAMPLE(Space, Field), Space = 'The space around the magnet', Field = 'the magnetic field'.").
barrons.rule1574:: isa(A10S609-field, "the magnetic field") -> example(A2S609-space, A10S609-field), around(A2S609-space, A5S609-magnet), isa(A5S609-magnet, "the magnet"), isa(A2S609-space, "The space").
english(barrons.rule1575, "If however you were to try and put the two north ends of two different magnets together you would feel the force that causes the magnets to be repelled pushed away from one another").
pretty(barrons.rule1575, "EFFECT(feel(You, Force), repel_from(Magnet, One)), You = 'you', Force = 'the force', Magnet = 'the magnets', One = 'one'.").
barrons.rule1575:: isa(E22S614-feel, "feel"), agent(E22S614-feel, A20S614-you), isa(A20S614-you, "you"), object(E22S614-feel, A24S614-force), isa(A24S614-force, "the force") -> effect(E22S614-feel, E31S614-repel), isa(E31S614-repel, "repel"), object(E31S614-repel, A28S614-magnet), isa(A28S614-magnet, "the magnets"), from(E31S614-repel, A37S614-one), isa(A37S614-one, "one another").
english(barrons.rule1576, "If however you were to try and put the two north ends of two different magnets together you would feel the force that causes the magnets to be repelled pushed away from one another").
pretty(barrons.rule1576, "EFFECT(feel(You, Force), repel_from(Magnet, One)), You = 'you', Force = 'the force', Magnet = 'the magnets', One = 'one'.").
barrons.rule1576:: isa(E31S614-repel, "repel"), object(E31S614-repel, A28S614-magnet), isa(A28S614-magnet, "the magnets"), from(E31S614-repel, A37S614-one), isa(A37S614-one, "one another") -> effect(E22S614-feel, E31S614-repel), isa(E22S614-feel, "feel"), agent(E22S614-feel, A20S614-you), isa(A20S614-you, "you"), object(E22S614-feel, A24S614-force), isa(A24S614-force, "the force").
english(barrons.rule1577, "If however you were to try and put the two north ends of two different magnets together you would feel the force that causes the magnets to be repelled pushed away from one another").
pretty(barrons.rule1577, "CAUSE(Force, repel_from(Magnet, One)), Force = 'the force', Magnet = 'the magnets', One = 'one'.").
barrons.rule1577:: isa(A24S614-force, "the force") -> cause(A24S614-force, E31S614-repel), isa(E31S614-repel, "repel"), object(E31S614-repel, A28S614-magnet), isa(A28S614-magnet, "the magnets"), from(E31S614-repel, A37S614-one), isa(A37S614-one, "one another").
english(barrons.rule1578, "If however you were to try and put the two north ends of two different magnets together you would feel the force that causes the magnets to be repelled pushed away from one another").
pretty(barrons.rule1578, "CAUSE(Force, repel_from(Magnet, One)), Force = 'the force', Magnet = 'the magnets', One = 'one'.").
barrons.rule1578:: isa(E31S614-repel, "repel"), object(E31S614-repel, A28S614-magnet), isa(A28S614-magnet, "the magnets"), from(E31S614-repel, A37S614-one), isa(A37S614-one, "one another") -> cause(A24S614-force, E31S614-repel), isa(A24S614-force, "the force").
english(barrons.rule1579, "The distance between two magnets or a magnet and another metal object has an effect on the force of attraction").
pretty(barrons.rule1579, "isa(Magnet, 'two magnets') -> have(Distance, Effect).").
barrons.rule1579:: isa(A5S615-magnet, "two magnets") -> between(A2S615-distance, A5S615-magnet), between(A2S615-distance, A8S615-magnet), isa(A8S615-magnet, "a magnet"), between(A2S615-distance, A12S615-object), isa(A12S615-object, "another metal object"), of(A18S615-force, A20S615-attraction), isa(A20S615-attraction, "attraction"), on(A15S615-effect, A18S615-force), isa(A18S615-force, "the force"), isa(E13S615-have, "have"), agent(E13S615-have, A2S615-distance), isa(A2S615-distance, "The distance"), object(E13S615-have, A15S615-effect), isa(A15S615-effect, "an effect").
english(barrons.rule1580, "The distance between two magnets or a magnet and another metal object has an effect on the force of attraction").
pretty(barrons.rule1580, "isa(Magnet, 'a magnet') -> have(Distance, Effect).").
barrons.rule1580:: isa(A8S615-magnet, "a magnet") -> between(A2S615-distance, A5S615-magnet), isa(A5S615-magnet, "two magnets"), between(A2S615-distance, A8S615-magnet), between(A2S615-distance, A12S615-object), isa(A12S615-object, "another metal object"), of(A18S615-force, A20S615-attraction), isa(A20S615-attraction, "attraction"), on(A15S615-effect, A18S615-force), isa(A18S615-force, "the force"), isa(E13S615-have, "have"), agent(E13S615-have, A2S615-distance), isa(A2S615-distance, "The distance"), object(E13S615-have, A15S615-effect), isa(A15S615-effect, "an effect").
english(barrons.rule1581, "The distance between two magnets or a magnet and another metal object has an effect on the force of attraction").
pretty(barrons.rule1581, "isa(Object, 'another metal object') -> have(Distance, Effect).").
barrons.rule1581:: isa(A12S615-object, "another metal object") -> between(A2S615-distance, A5S615-magnet), isa(A5S615-magnet, "two magnets"), between(A2S615-distance, A8S615-magnet), isa(A8S615-magnet, "a magnet"), between(A2S615-distance, A12S615-object), of(A18S615-force, A20S615-attraction), isa(A20S615-attraction, "attraction"), on(A15S615-effect, A18S615-force), isa(A18S615-force, "the force"), isa(E13S615-have, "have"), agent(E13S615-have, A2S615-distance), isa(A2S615-distance, "The distance"), object(E13S615-have, A15S615-effect), isa(A15S615-effect, "an effect").
english(barrons.rule1582, "The distance between two magnets or a magnet and another metal object has an effect on the force of attraction").
pretty(barrons.rule1582, "isa(Attraction, 'attraction') -> have(Distance, Effect).").
barrons.rule1582:: isa(A20S615-attraction, "attraction") -> between(A2S615-distance, A5S615-magnet), isa(A5S615-magnet, "two magnets"), between(A2S615-distance, A8S615-magnet), isa(A8S615-magnet, "a magnet"), between(A2S615-distance, A12S615-object), isa(A12S615-object, "another metal object"), of(A18S615-force, A20S615-attraction), on(A15S615-effect, A18S615-force), isa(A18S615-force, "the force"), isa(E13S615-have, "have"), agent(E13S615-have, A2S615-distance), isa(A2S615-distance, "The distance"), object(E13S615-have, A15S615-effect), isa(A15S615-effect, "an effect").
english(barrons.rule1583, "The distance between two magnets or a magnet and another metal object has an effect on the force of attraction").
pretty(barrons.rule1583, "isa(Force, 'the force of attraction') -> have(Distance, Effect).").
barrons.rule1583:: isa(A18S615-force, "the force") -> between(A2S615-distance, A5S615-magnet), isa(A5S615-magnet, "two magnets"), between(A2S615-distance, A8S615-magnet), isa(A8S615-magnet, "a magnet"), between(A2S615-distance, A12S615-object), isa(A12S615-object, "another metal object"), of(A18S615-force, A20S615-attraction), isa(A20S615-attraction, "attraction"), on(A15S615-effect, A18S615-force), isa(E13S615-have, "have"), agent(E13S615-have, A2S615-distance), isa(A2S615-distance, "The distance"), object(E13S615-have, A15S615-effect), isa(A15S615-effect, "an effect").
english(barrons.rule1584, "The distance between two magnets or a magnet and another metal object has an effect on the force of attraction").
pretty(barrons.rule1584, "isa(have, 'has') -> have(Distance, Effect).").
barrons.rule1584:: isa(E13S615-have, "have") -> between(A2S615-distance, A5S615-magnet), isa(A5S615-magnet, "two magnets"), between(A2S615-distance, A8S615-magnet), isa(A8S615-magnet, "a magnet"), between(A2S615-distance, A12S615-object), isa(A12S615-object, "another metal object"), of(A18S615-force, A20S615-attraction), isa(A20S615-attraction, "attraction"), on(A15S615-effect, A18S615-force), isa(A18S615-force, "the force"), agent(E13S615-have, A2S615-distance), isa(A2S615-distance, "The distance"), object(E13S615-have, A15S615-effect), isa(A15S615-effect, "an effect").
english(barrons.rule1585, "The distance between two magnets or a magnet and another metal object has an effect on the force of attraction").
pretty(barrons.rule1585, "isa(Distance, 'The distance between two magnets or a magnet and another metal object') -> have(Distance, Effect).").
barrons.rule1585:: isa(A2S615-distance, "The distance") -> between(A2S615-distance, A5S615-magnet), isa(A5S615-magnet, "two magnets"), between(A2S615-distance, A8S615-magnet), isa(A8S615-magnet, "a magnet"), between(A2S615-distance, A12S615-object), isa(A12S615-object, "another metal object"), of(A18S615-force, A20S615-attraction), isa(A20S615-attraction, "attraction"), on(A15S615-effect, A18S615-force), isa(A18S615-force, "the force"), isa(E13S615-have, "have"), agent(E13S615-have, A2S615-distance), object(E13S615-have, A15S615-effect), isa(A15S615-effect, "an effect").
english(barrons.rule1586, "The distance between two magnets or a magnet and another metal object has an effect on the force of attraction").
pretty(barrons.rule1586, "isa(Effect, 'an effect on the force of attraction') -> have(Distance, Effect).").
barrons.rule1586:: isa(A15S615-effect, "an effect") -> between(A2S615-distance, A5S615-magnet), isa(A5S615-magnet, "two magnets"), between(A2S615-distance, A8S615-magnet), isa(A8S615-magnet, "a magnet"), between(A2S615-distance, A12S615-object), isa(A12S615-object, "another metal object"), of(A18S615-force, A20S615-attraction), isa(A20S615-attraction, "attraction"), on(A15S615-effect, A18S615-force), isa(A18S615-force, "the force"), isa(E13S615-have, "have"), agent(E13S615-have, A2S615-distance), isa(A2S615-distance, "The distance"), object(E13S615-have, A15S615-effect).
english(barrons.rule1587, "The distance between two magnets or a magnet and another metal object has an effect on the force of attraction").
pretty(barrons.rule1587, "EFFECT(Distance, effect_on(Distance, Force)), Distance = 'The distance between two magnets or a magnet and another metal object', Force = 'the force of attraction'.").
barrons.rule1587:: between(A2S615-distance, A5S615-magnet), isa(A5S615-magnet, "two magnets"), between(A2S615-distance, A8S615-magnet), isa(A8S615-magnet, "a magnet"), between(A2S615-distance, A12S615-object), isa(A12S615-object, "another metal object"), isa(A2S615-distance, "The distance") -> effect(A2S615-distance, E15S615-effect), isa(E15S615-effect, "a effect"), agent(E15S615-effect, A2S615-distance), on(E15S615-effect, A18S615-force), isa(A18S615-force, "the force of attraction").
english(barrons.rule1588, "The distance between two magnets or a magnet and another metal object has an effect on the force of attraction").
pretty(barrons.rule1588, "EFFECT(Distance, effect_on(Distance, Force)), Distance = 'The distance between two magnets or a magnet and another metal object', Force = 'the force of attraction'.").
barrons.rule1588:: between(A2S615-distance, A5S615-magnet), isa(A5S615-magnet, "two magnets"), between(A2S615-distance, A8S615-magnet), isa(A8S615-magnet, "a magnet"), between(A2S615-distance, A12S615-object), isa(A12S615-object, "another metal object"), isa(E15S615-effect, "a effect"), agent(E15S615-effect, A2S615-distance), isa(A2S615-distance, "The distance"), on(E15S615-effect, A18S615-force), isa(A18S615-force, "the force of attraction") -> effect(A2S615-distance, E15S615-effect).
english(barrons.rule1589, "As the distance between the objects increases the magnetic force of attraction decreases").
pretty(barrons.rule1589, "isa(Object, 'the objects') -> increase(Distance, Force).").
barrons.rule1589:: isa(A6S617-object, "the objects") -> between(A3S617-distance, A6S617-object), of(A10S617-force, A13S617-decrease), isa(A13S617-decrease, "attraction decreases"), isa(E7S617-increase, "increase"), agent(E7S617-increase, A3S617-distance), isa(A3S617-distance, "the distance"), object(E7S617-increase, A10S617-force), isa(A10S617-force, "the magnetic force").
english(barrons.rule1590, "As the distance between the objects increases the magnetic force of attraction decreases").
pretty(barrons.rule1590, "isa(Decrease, 'attraction decreases') -> increase(Distance, Force).").
barrons.rule1590:: isa(A13S617-decrease, "attraction decreases") -> between(A3S617-distance, A6S617-object), isa(A6S617-object, "the objects"), of(A10S617-force, A13S617-decrease), isa(E7S617-increase, "increase"), agent(E7S617-increase, A3S617-distance), isa(A3S617-distance, "the distance"), object(E7S617-increase, A10S617-force), isa(A10S617-force, "the magnetic force").
english(barrons.rule1591, "As the distance between the objects increases the magnetic force of attraction decreases").
pretty(barrons.rule1591, "isa(increase, 'increases') -> increase(Distance, Force).").
barrons.rule1591:: isa(E7S617-increase, "increase") -> between(A3S617-distance, A6S617-object), isa(A6S617-object, "the objects"), of(A10S617-force, A13S617-decrease), isa(A13S617-decrease, "attraction decreases"), agent(E7S617-increase, A3S617-distance), isa(A3S617-distance, "the distance"), object(E7S617-increase, A10S617-force), isa(A10S617-force, "the magnetic force").
english(barrons.rule1592, "As the distance between the objects increases the magnetic force of attraction decreases").
pretty(barrons.rule1592, "isa(Distance, 'the distance between the objects') -> increase(Distance, Force).").
barrons.rule1592:: isa(A3S617-distance, "the distance") -> between(A3S617-distance, A6S617-object), isa(A6S617-object, "the objects"), of(A10S617-force, A13S617-decrease), isa(A13S617-decrease, "attraction decreases"), isa(E7S617-increase, "increase"), agent(E7S617-increase, A3S617-distance), object(E7S617-increase, A10S617-force), isa(A10S617-force, "the magnetic force").
english(barrons.rule1593, "As the distance between the objects increases the magnetic force of attraction decreases").
pretty(barrons.rule1593, "isa(Force, 'the magnetic force of attraction decreases') -> increase(Distance, Force).").
barrons.rule1593:: isa(A10S617-force, "the magnetic force") -> between(A3S617-distance, A6S617-object), isa(A6S617-object, "the objects"), of(A10S617-force, A13S617-decrease), isa(A13S617-decrease, "attraction decreases"), isa(E7S617-increase, "increase"), agent(E7S617-increase, A3S617-distance), isa(A3S617-distance, "the distance"), object(E7S617-increase, A10S617-force).
english(barrons.rule1594, "Gravity is also a force that acts on objects here on Earth").
pretty(barrons.rule1594, "EXAMPLE(Gravity, act_on(Force, Object)), Gravity = 'Gravity', Force = 'a force', Object = 'objects on Earth'.").
barrons.rule1594:: isa(A1S618-gravity, "Gravity") -> example(A1S618-gravity, A5S618-force), isa(E7S618-act, "act"), agent(E7S618-act, A5S618-force), isa(A5S618-force, "a force"), on(E7S618-act, A9S618-object), isa(A9S618-object, "objects here on Earth"), isa(A1S618-gravity, A5S618-force).
english(barrons.rule1595, "Gravity is also a force that acts on objects here on Earth").
pretty(barrons.rule1595, "EXAMPLE(Gravity, act_on(Force, Object)), Gravity = 'Gravity', Force = 'a force', Object = 'objects on Earth'.").
barrons.rule1595:: isa(E7S618-act, "act"), agent(E7S618-act, A5S618-force), isa(A5S618-force, "a force"), on(E7S618-act, A9S618-object), isa(A9S618-object, "objects here on Earth") -> example(A1S618-gravity, A5S618-force), isa(A1S618-gravity, "Gravity"), isa(A1S618-gravity, A5S618-force).
english(barrons.rule1596, "Gravity is also a force that acts on objects here on Earth").
pretty(barrons.rule1596, "EXAMPLE(Gravity, Force), Gravity = 'Gravity', Force = 'a force'.").
barrons.rule1596:: isa(A1S618-gravity, "Gravity") -> example(A1S618-gravity, A5S618-force), isa(A5S618-force, "a force").
english(barrons.rule1597, "Gravity is also a force that acts on objects here on Earth").
pretty(barrons.rule1597, "EXAMPLE(Gravity, Force), Gravity = 'Gravity', Force = 'a force'.").
barrons.rule1597:: isa(A5S618-force, "a force") -> example(A1S618-gravity, A5S618-force), isa(A1S618-gravity, "Gravity").
english(barrons.rule1598, "If an object is thrown into the air the force used will only allow it[A magnet is an object that attracts metals] to travel a certain distance before the gravitational attraction between the object and the Earth causes it[the gravitational attraction between the object and the Earth] to fall back down to Earth 's surface").
pretty(barrons.rule1598, "EFFECT(throw_into(Force, Object, Air), allow(Force, Only)), Force = 'the force', Object = 'an object', Air = 'the air', Only = 'only'.").
barrons.rule1598:: isa(E5S621-throw, "throw"), agent(E5S621-throw, A11S621-force), isa(A11S621-force, "the force"), object(E5S621-throw, A3S621-object), isa(A3S621-object, "an object"), into(E5S621-throw, A8S621-air), isa(A8S621-air, "the air") -> effect(E5S621-throw, E15S621-allow), isa(E15S621-allow, "allow"), agent(E15S621-allow, A11S621-force), arg(E15S621-allow, A14S621-only), isa(A14S621-only, "only").
english(barrons.rule1599, "If an object is thrown into the air the force used will only allow it[A magnet is an object that attracts metals] to travel a certain distance before the gravitational attraction between the object and the Earth causes it[the gravitational attraction between the object and the Earth] to fall back down to Earth 's surface").
pretty(barrons.rule1599, "EFFECT(throw_into(Force, Object, Air), allow(Force, Only)), Force = 'the force', Object = 'an object', Air = 'the air', Only = 'only'.").
barrons.rule1599:: isa(E15S621-allow, "allow"), agent(E15S621-allow, A11S621-force), isa(A11S621-force, "the force"), arg(E15S621-allow, A14S621-only), isa(A14S621-only, "only") -> effect(E5S621-throw, E15S621-allow), isa(E5S621-throw, "throw"), agent(E5S621-throw, A11S621-force), object(E5S621-throw, A3S621-object), isa(A3S621-object, "an object"), into(E5S621-throw, A8S621-air), isa(A8S621-air, "the air").
english(barrons.rule1600, "If an object is thrown into the air the force used will only allow it[A magnet is an object that attracts metals] to travel a certain distance before the gravitational attraction between the object and the Earth causes it[the gravitational attraction between the object and the Earth] to fall back down to Earth 's surface").
pretty(barrons.rule1600, "PURPOSE(Force, travel(Object, Distance, Cause)), Force = 'the force', Object = 'an object', Distance = 'a certain distance', Cause = 'before causes'.").
barrons.rule1600:: isa(A11S621-force, "the force") -> purpose(A11S621-force, E18S621-travel), isa(E18S621-travel, "travel"), agent(E18S621-travel, A5S607-object), isa(A5S607-object, "an object"), object(E18S621-travel, A21S621-distance), isa(A21S621-distance, "a certain distance"), arg(E18S621-travel, A32S621-cause), isa(A32S621-cause, "before the gravitational attraction between the object and the Earth causes").
english(barrons.rule1601, "If an object is thrown into the air the force used will only allow it[A magnet is an object that attracts metals] to travel a certain distance before the gravitational attraction between the object and the Earth causes it[the gravitational attraction between the object and the Earth] to fall back down to Earth 's surface").
pretty(barrons.rule1601, "PURPOSE(Force, travel(Object, Distance, Cause)), Force = 'the force', Object = 'an object', Distance = 'a certain distance', Cause = 'before causes'.").
barrons.rule1601:: isa(E18S621-travel, "travel"), agent(E18S621-travel, A5S607-object), isa(A5S607-object, "an object"), object(E18S621-travel, A21S621-distance), isa(A21S621-distance, "a certain distance"), arg(E18S621-travel, A32S621-cause), isa(A32S621-cause, "before the gravitational attraction between the object and the Earth causes") -> purpose(A11S621-force, E18S621-travel), isa(A11S621-force, "the force").
english(barrons.rule1602, "If an object is thrown into the air the force used will only allow it[A magnet is an object that attracts metals] to travel a certain distance before the gravitational attraction between the object and the Earth causes it[the gravitational attraction between the object and the Earth] to fall back down to Earth 's surface").
pretty(barrons.rule1602, "CAUSE(Attraction, fall(Attraction, Back, Down)), Attraction = 'the gravitational attraction between the object and the Earth', Back = 'back', Down = 'down to Earth ’s surface'.").
barrons.rule1602:: between(A25S621-attraction, A28S621-object), isa(A28S621-object, "the object"), between(A25S621-attraction, A31S621-Earth), isa(A31S621-Earth, "the Earth"), isa(A25S621-attraction, "the gravitational attraction") -> cause(A25S621-attraction, E35S621-fall), isa(E35S621-fall, "fall"), agent(E35S621-fall, A25S621-attraction), arg(E35S621-fall, A36S621-back), isa(A36S621-back, "back"), arg(E35S621-fall, A37S621-down), isa(A37S621-down, "down to Earth 's surface").
english(barrons.rule1603, "If an object is thrown into the air the force used will only allow it[A magnet is an object that attracts metals] to travel a certain distance before the gravitational attraction between the object and the Earth causes it[the gravitational attraction between the object and the Earth] to fall back down to Earth 's surface").
pretty(barrons.rule1603, "CAUSE(Attraction, fall(Attraction, Back, Down)), Attraction = 'the gravitational attraction between the object and the Earth', Back = 'back', Down = 'down to Earth ’s surface'.").
barrons.rule1603:: between(A25S621-attraction, A28S621-object), isa(A28S621-object, "the object"), between(A25S621-attraction, A31S621-Earth), isa(A31S621-Earth, "the Earth"), isa(E35S621-fall, "fall"), agent(E35S621-fall, A25S621-attraction), isa(A25S621-attraction, "the gravitational attraction"), arg(E35S621-fall, A36S621-back), isa(A36S621-back, "back"), arg(E35S621-fall, A37S621-down), isa(A37S621-down, "down to Earth 's surface") -> cause(A25S621-attraction, E35S621-fall).
english(barrons.rule1604, "Mechanical energy is the energy produced when two objects move together").
pretty(barrons.rule1604, "EXAMPLE(Energy, produce(Energy)), Energy = 'Mechanical energy', Energy = 'the energy'.").
barrons.rule1604:: isa(A2S623-energy, "Mechanical energy") -> example(A2S623-energy, E6S623-produce), isa(E6S623-produce, "produce"), agent(E6S623-produce, A5S623-energy), isa(A5S623-energy, "the energy").
english(barrons.rule1605, "Mechanical energy is the energy produced when two objects move together").
pretty(barrons.rule1605, "EXAMPLE(Energy, produce(Energy)), Energy = 'Mechanical energy', Energy = 'the energy'.").
barrons.rule1605:: isa(E6S623-produce, "produce"), agent(E6S623-produce, A5S623-energy), isa(A5S623-energy, "the energy") -> example(A2S623-energy, E6S623-produce), isa(A2S623-energy, "Mechanical energy").
english(barrons.rule1606, "Mechanical energy is the energy produced when two objects move together").
pretty(barrons.rule1606, "EXAMPLE(Energy, Energy), Energy = 'Mechanical energy', Energy = 'the energy'.").
barrons.rule1606:: isa(A2S623-energy, "Mechanical energy") -> example(A2S623-energy, A5S623-energy), isa(A5S623-energy, "the energy").
english(barrons.rule1607, "Mechanical energy is the energy produced when two objects move together").
pretty(barrons.rule1607, "EXAMPLE(Energy, Energy), Energy = 'Mechanical energy', Energy = 'the energy'.").
barrons.rule1607:: isa(A5S623-energy, "the energy") -> example(A2S623-energy, A5S623-energy), isa(A2S623-energy, "Mechanical energy").
english(barrons.rule1608, "Mechanical energy is the energy produced when two objects move together").
pretty(barrons.rule1608, "WHEN(produce(Energy), move(Object, Together)), Energy = 'the energy', Object = 'two objects', Together = 'together'.").
barrons.rule1608:: isa(E6S623-produce, "produce"), agent(E6S623-produce, A5S623-energy), isa(A5S623-energy, "the energy") -> when(E6S623-produce, E10S623-move), isa(E10S623-move, "move"), agent(E10S623-move, A9S623-object), isa(A9S623-object, "two objects"), arg(E10S623-move, A11S623-together), isa(A11S623-together, "together").
english(barrons.rule1609, "Mechanical energy is the energy produced when two objects move together").
pretty(barrons.rule1609, "WHEN(produce(Energy), move(Object, Together)), Energy = 'the energy', Object = 'two objects', Together = 'together'.").
barrons.rule1609:: isa(E10S623-move, "move"), agent(E10S623-move, A9S623-object), isa(A9S623-object, "two objects"), arg(E10S623-move, A11S623-together), isa(A11S623-together, "together") -> when(E6S623-produce, E10S623-move), isa(E6S623-produce, "produce"), agent(E6S623-produce, A5S623-energy), isa(A5S623-energy, "the energy").
english(barrons.rule1610, "We[we] have also learned that in order to do work an object must move and that a force is a push or pull").
pretty(barrons.rule1610, "EFFECT(move(Object), work(Object)), Object = 'an object'.").
barrons.rule1610:: isa(E14S624-move, "move"), agent(E14S624-move, A12S624-object), isa(A12S624-object, "an object") -> effect(E14S624-move, E10S624-work), isa(E10S624-work, "work"), agent(E10S624-work, A12S624-object).
english(barrons.rule1611, "We[we] have also learned that in order to do work an object must move and that a force is a push or pull").
pretty(barrons.rule1611, "EFFECT(move(Object), work(Object)), Object = 'an object'.").
barrons.rule1611:: isa(E10S624-work, "work"), agent(E10S624-work, A12S624-object), isa(A12S624-object, "an object") -> effect(E14S624-move, E10S624-work), isa(E14S624-move, "move"), agent(E14S624-move, A12S624-object).
english(barrons.rule1612, "We[we] have also learned that in order to do work an object must move and that a force is a push or pull").
pretty(barrons.rule1612, "EXAMPLE(Force, Push), Force = 'a force', Push = 'that a push'.").
barrons.rule1612:: isa(A18S624-force, "a force") -> example(A18S624-force, A21S624-push), isa(A21S624-push, "that a push").
english(barrons.rule1613, "We[we] have also learned that in order to do work an object must move and that a force is a push or pull").
pretty(barrons.rule1613, "EXAMPLE(Force, Push), Force = 'a force', Push = 'that a push'.").
barrons.rule1613:: isa(A21S624-push, "that a push") -> example(A18S624-force, A21S624-push), isa(A18S624-force, "a force").
english(barrons.rule1614, "In our[we] everyday lives we[we] exert force to do work").
pretty(barrons.rule1614, "EFFECT(exert_in(We, Force, Life), do(We, Work)), We = 'we', Force = 'force', Life = 'our[we] everyday lives', Work = 'work'.").
barrons.rule1614:: isa(E6S625-exert, "exert"), agent(E6S625-exert, A5S622-we), isa(A5S622-we, "we"), object(E6S625-exert, A7S625-force), isa(A7S625-force, "force"), in(E6S625-exert, A4S625-life), isa(A4S625-life, "our[we] everyday lives") -> effect(E6S625-exert, E9S625-do), isa(E9S625-do, "do"), agent(E9S625-do, A5S622-we), object(E9S625-do, A10S625-work), isa(A10S625-work, "work").
english(barrons.rule1615, "In our[we] everyday lives we[we] exert force to do work").
pretty(barrons.rule1615, "EFFECT(exert_in(We, Force, Life), do(We, Work)), We = 'we', Force = 'force', Life = 'our[we] everyday lives', Work = 'work'.").
barrons.rule1615:: isa(E9S625-do, "do"), agent(E9S625-do, A5S622-we), isa(A5S622-we, "we"), object(E9S625-do, A10S625-work), isa(A10S625-work, "work") -> effect(E6S625-exert, E9S625-do), isa(E6S625-exert, "exert"), agent(E6S625-exert, A5S622-we), object(E6S625-exert, A7S625-force), isa(A7S625-force, "force"), in(E6S625-exert, A4S625-life), isa(A4S625-life, "our[we] everyday lives").
english(barrons.rule1616, "Often the force we[we] need in order to do the work is too much for one person and we[we] need help").
pretty(barrons.rule1616, "PURPOSE(be(Force, Much, Too), Person), Force = 'the force', Much = 'much for one person', Too = 'too', Person = 'one person'.").
barrons.rule1616:: isa(E12S626-be, "be"), agent(E12S626-be, A3S626-force), isa(A3S626-force, "the force"), object(E12S626-be, A14S626-much), isa(A14S626-much, "much"), arg(E12S626-be, A13S626-too), isa(A13S626-too, "too") -> purpose(E12S626-be, A17S626-person), isa(A17S626-person, "one person").
english(barrons.rule1617, "Often the force we[we] need in order to do the work is too much for one person and we[we] need help").
pretty(barrons.rule1617, "PURPOSE(be(Force, Much, Too), Person), Force = 'the force', Much = 'much for one person', Too = 'too', Person = 'one person'.").
barrons.rule1617:: isa(A17S626-person, "one person") -> purpose(E12S626-be, A17S626-person), isa(E12S626-be, "be"), agent(E12S626-be, A3S626-force), isa(A3S626-force, "the force"), object(E12S626-be, A14S626-much), isa(A14S626-much, "much"), arg(E12S626-be, A13S626-too), isa(A13S626-too, "too").
english(barrons.rule1618, "Often the force we[we] need in order to do the work is too much for one person and we[we] need help").
pretty(barrons.rule1618, "EFFECT(need(We, Force), do(We, Work)), We = 'we', Force = 'the force', Work = 'the work'.").
barrons.rule1618:: isa(E5S626-need, "need"), agent(E5S626-need, A5S622-we), isa(A5S622-we, "we"), object(E5S626-need, A3S626-force), isa(A3S626-force, "the force") -> effect(E5S626-need, E9S626-do), isa(E9S626-do, "do"), agent(E9S626-do, A5S622-we), object(E9S626-do, A11S626-work), isa(A11S626-work, "the work").
english(barrons.rule1619, "Often the force we[we] need in order to do the work is too much for one person and we[we] need help").
pretty(barrons.rule1619, "EFFECT(need(We, Force), do(We, Work)), We = 'we', Force = 'the force', Work = 'the work'.").
barrons.rule1619:: isa(E9S626-do, "do"), agent(E9S626-do, A5S622-we), isa(A5S622-we, "we"), object(E9S626-do, A11S626-work), isa(A11S626-work, "the work") -> effect(E5S626-need, E9S626-do), isa(E5S626-need, "need"), agent(E5S626-need, A5S622-we), object(E5S626-need, A3S626-force), isa(A3S626-force, "the force").
english(barrons.rule1620, "When this happens we[we] use tools or machines to help us[we] do work").
pretty(barrons.rule1620, "EFFECT(use(We, Tool, Help, Happen), work(We)), We = 'we', Tool = 'tools', Help = 'help us[we] do work', Happen = 'happens'.").
barrons.rule1620:: isa(E5S627-use, "use"), agent(E5S627-use, A5S622-we), isa(A5S622-we, "we"), object(E5S627-use, A6S627-tool), isa(A6S627-tool, "tools"), arg(E5S627-use, A12S627-help), isa(A12S627-help, "to help us[we] do work"), arg(E5S627-use, A3S627-happen), isa(A3S627-happen, "When this happens") -> effect(E5S627-use, E15S627-work), isa(E15S627-work, "work"), agent(E15S627-work, A5S622-we).
english(barrons.rule1621, "When this happens we[we] use tools or machines to help us[we] do work").
pretty(barrons.rule1621, "EFFECT(use(We, Tool, Help, Happen), work(We)), We = 'we', Tool = 'tools', Help = 'help us[we] do work', Happen = 'happens'.").
barrons.rule1621:: isa(E15S627-work, "work"), agent(E15S627-work, A5S622-we), isa(A5S622-we, "we") -> effect(E5S627-use, E15S627-work), isa(E5S627-use, "use"), agent(E5S627-use, A5S622-we), object(E5S627-use, A6S627-tool), isa(A6S627-tool, "tools"), arg(E5S627-use, A12S627-help), isa(A12S627-help, "to help us[we] do work"), arg(E5S627-use, A3S627-happen), isa(A3S627-happen, "When this happens").
english(barrons.rule1622, "When this happens we[we] use tools or machines to help us[we] do work").
pretty(barrons.rule1622, "EFFECT(use(We, Machine, Help, Happen), work(We)), We = 'we', Machine = 'machines', Help = 'help us[we] do work', Happen = 'happens'.").
barrons.rule1622:: isa(E5S627-use, "use"), agent(E5S627-use, A5S622-we), isa(A5S622-we, "we"), object(E5S627-use, A9S627-machine), isa(A9S627-machine, "machines"), arg(E5S627-use, A12S627-help), isa(A12S627-help, "to help us[we] do work"), arg(E5S627-use, A3S627-happen), isa(A3S627-happen, "When this happens") -> effect(E5S627-use, E15S627-work), isa(E15S627-work, "work"), agent(E15S627-work, A5S622-we).
english(barrons.rule1623, "When this happens we[we] use tools or machines to help us[we] do work").
pretty(barrons.rule1623, "EFFECT(use(We, Machine, Help, Happen), work(We)), We = 'we', Machine = 'machines', Help = 'help us[we] do work', Happen = 'happens'.").
barrons.rule1623:: isa(E15S627-work, "work"), agent(E15S627-work, A5S622-we), isa(A5S622-we, "we") -> effect(E5S627-use, E15S627-work), isa(E5S627-use, "use"), agent(E5S627-use, A5S622-we), object(E5S627-use, A9S627-machine), isa(A9S627-machine, "machines"), arg(E5S627-use, A12S627-help), isa(A12S627-help, "to help us[we] do work"), arg(E5S627-use, A3S627-happen), isa(A3S627-happen, "When this happens").
english(barrons.rule1624, "Simple machines are tools with very few parts that help us[we] work").
pretty(barrons.rule1624, "EXAMPLE(Machine, Tool), Machine = 'Simple machines', Tool = 'tools with very few parts that help us[we] work'.").
barrons.rule1624:: isa(A2S628-machine, "Simple machines") -> example(A2S628-machine, A4S628-tool), with(A4S628-tool, A8S628-part), isa(A8S628-part, "very few parts"), isa(A4S628-tool, "tools").
english(barrons.rule1625, "Simple machines are tools with very few parts that help us[we] work").
pretty(barrons.rule1625, "EXAMPLE(Machine, Tool), Machine = 'Simple machines', Tool = 'tools with very few parts that help us[we] work'.").
barrons.rule1625:: with(A4S628-tool, A8S628-part), isa(A8S628-part, "very few parts"), isa(A4S628-tool, "tools") -> example(A2S628-machine, A4S628-tool), isa(A2S628-machine, "Simple machines").
english(barrons.rule1626, "Simple machines are tools with very few parts that help us[we] work").
pretty(barrons.rule1626, "PURPOSE(Part, work(We)), Part = 'very few parts', We = 'we'.").
barrons.rule1626:: isa(A8S628-part, "very few parts") -> purpose(A8S628-part, E12S628-work), isa(E12S628-work, "work"), agent(E12S628-work, A5S622-we), isa(A5S622-we, "we").
english(barrons.rule1627, "Simple machines are tools with very few parts that help us[we] work").
pretty(barrons.rule1627, "PURPOSE(Part, work(We)), Part = 'very few parts', We = 'we'.").
barrons.rule1627:: isa(E12S628-work, "work"), agent(E12S628-work, A5S622-we), isa(A5S622-we, "we") -> purpose(A8S628-part, E12S628-work), isa(A8S628-part, "very few parts").
english(barrons.rule1628, "A lever is a flat structure that is placed on a fixed point").
pretty(barrons.rule1628, "EXAMPLE(Lever, place_on(Lever, Point)), Lever = 'A lever', Point = 'a fixed point'.").
barrons.rule1628:: isa(A2S630-lever, "A lever") -> example(A2S630-lever, E9S630-place), isa(E9S630-place, "place"), object(E9S630-place, A2S630-lever), on(E9S630-place, A13S630-point), isa(A13S630-point, "a fixed point").
english(barrons.rule1629, "A lever is a flat structure that is placed on a fixed point").
pretty(barrons.rule1629, "EXAMPLE(Lever, place_on(Lever, Point)), Lever = 'A lever', Point = 'a fixed point'.").
barrons.rule1629:: isa(E9S630-place, "place"), object(E9S630-place, A2S630-lever), isa(A2S630-lever, "A lever"), on(E9S630-place, A13S630-point), isa(A13S630-point, "a fixed point") -> example(A2S630-lever, E9S630-place).
english(barrons.rule1630, "A lever is a flat structure that is placed on a fixed point").
pretty(barrons.rule1630, "EXAMPLE(Lever, place_on(Structure, Point)), Lever = 'A lever', Structure = 'a flat structure', Point = 'a fixed point'.").
barrons.rule1630:: isa(A2S630-lever, "A lever") -> example(A2S630-lever, E9S630-place), isa(E9S630-place, "place"), object(E9S630-place, A6S630-structure), isa(A6S630-structure, "a flat structure"), on(E9S630-place, A13S630-point), isa(A13S630-point, "a fixed point").
english(barrons.rule1631, "A lever is a flat structure that is placed on a fixed point").
pretty(barrons.rule1631, "EXAMPLE(Lever, place_on(Structure, Point)), Lever = 'A lever', Structure = 'a flat structure', Point = 'a fixed point'.").
barrons.rule1631:: isa(E9S630-place, "place"), object(E9S630-place, A6S630-structure), isa(A6S630-structure, "a flat structure"), on(E9S630-place, A13S630-point), isa(A13S630-point, "a fixed point") -> example(A2S630-lever, E9S630-place), isa(A2S630-lever, "A lever").
english(barrons.rule1632, "A lever is a flat structure that is placed on a fixed point").
pretty(barrons.rule1632, "EXAMPLE(Lever, Structure), Lever = 'A lever', Structure = 'a flat structure'.").
barrons.rule1632:: isa(A2S630-lever, "A lever") -> example(A2S630-lever, A6S630-structure), isa(A6S630-structure, "a flat structure").
english(barrons.rule1633, "A lever is a flat structure that is placed on a fixed point").
pretty(barrons.rule1633, "EXAMPLE(Lever, Structure), Lever = 'A lever', Structure = 'a flat structure'.").
barrons.rule1633:: isa(A6S630-structure, "a flat structure") -> example(A2S630-lever, A6S630-structure), isa(A2S630-lever, "A lever").
english(barrons.rule1634, "The lever can assist in moving an object that is too heavy such as a big weight or can assist in opening an object such as a paint can").
pretty(barrons.rule1634, "PURPOSE(Lever, move(Lever, Object)), Lever = 'The lever', Object = 'an object'.").
barrons.rule1634:: isa(A2S631-lever, "The lever") -> purpose(A2S631-lever, E6S631-move), isa(E6S631-move, "move"), agent(E6S631-move, A2S631-lever), object(E6S631-move, A8S631-object), isa(A8S631-object, "an object").
english(barrons.rule1635, "The lever can assist in moving an object that is too heavy such as a big weight or can assist in opening an object such as a paint can").
pretty(barrons.rule1635, "PURPOSE(Lever, move(Lever, Object)), Lever = 'The lever', Object = 'an object'.").
barrons.rule1635:: isa(E6S631-move, "move"), agent(E6S631-move, A2S631-lever), isa(A2S631-lever, "The lever"), object(E6S631-move, A8S631-object), isa(A8S631-object, "an object") -> purpose(A2S631-lever, E6S631-move).
english(barrons.rule1636, "The lever can assist in moving an object that is too heavy such as a big weight or can assist in opening an object such as a paint can").
pretty(barrons.rule1636, "EXAMPLE(Weight, Heavy), Weight = 'a big weight', Heavy = 'heavy such as a big weight'.").
barrons.rule1636:: isa(A17S631-weight, "a big weight") -> example(A17S631-weight, A12S631-heavy), such_as(A12S631-heavy, A17S631-weight), isa(A12S631-heavy, "heavy").
english(barrons.rule1637, "The lever can assist in moving an object that is too heavy such as a big weight or can assist in opening an object such as a paint can").
pretty(barrons.rule1637, "EXAMPLE(Weight, Heavy), Weight = 'a big weight', Heavy = 'heavy such as a big weight'.").
barrons.rule1637:: such_as(A12S631-heavy, A17S631-weight), isa(A17S631-weight, "a big weight"), isa(A12S631-heavy, "heavy") -> example(A17S631-weight, A12S631-heavy).
english(barrons.rule1638, "The lever can assist in moving an object that is too heavy such as a big weight or can assist in opening an object such as a paint can").
pretty(barrons.rule1638, "EXAMPLE(Paint, Object), Paint = 'a paint', Object = 'an object such as a paint can'.").
barrons.rule1638:: isa(A29S631-paint, "a paint") -> example(A29S631-paint, A25S631-object), such_as(A25S631-object, A29S631-paint), isa(A25S631-object, "an object").
english(barrons.rule1639, "The lever can assist in moving an object that is too heavy such as a big weight or can assist in opening an object such as a paint can").
pretty(barrons.rule1639, "EXAMPLE(Paint, Object), Paint = 'a paint', Object = 'an object such as a paint can'.").
barrons.rule1639:: such_as(A25S631-object, A29S631-paint), isa(A29S631-paint, "a paint"), isa(A25S631-object, "an object") -> example(A29S631-paint, A25S631-object).
english(barrons.rule1640, "An inclined plane is a ramp that extends from one level to another").
pretty(barrons.rule1640, "EXAMPLE(Plane, extend_from(Ramp, Level, to(Another))), Plane = 'An inclined plane', Ramp = 'a ramp', Level = 'one level', Another = 'another'.").
barrons.rule1640:: isa(A3S633-plane, "An inclined plane") -> example(A3S633-plane, A6S633-ramp), isa(E8S633-extend, "extend"), agent(E8S633-extend, A6S633-ramp), isa(A6S633-ramp, "a ramp"), from(E8S633-extend, A11S633-level), isa(A11S633-level, "one level"), to(E8S633-extend, A13S633-another), isa(A13S633-another, "another"), isa(A3S633-plane, A6S633-ramp).
english(barrons.rule1641, "An inclined plane is a ramp that extends from one level to another").
pretty(barrons.rule1641, "EXAMPLE(Plane, extend_from(Ramp, Level, to(Another))), Plane = 'An inclined plane', Ramp = 'a ramp', Level = 'one level', Another = 'another'.").
barrons.rule1641:: isa(E8S633-extend, "extend"), agent(E8S633-extend, A6S633-ramp), isa(A6S633-ramp, "a ramp"), from(E8S633-extend, A11S633-level), isa(A11S633-level, "one level"), to(E8S633-extend, A13S633-another), isa(A13S633-another, "another") -> example(A3S633-plane, A6S633-ramp), isa(A3S633-plane, "An inclined plane"), isa(A3S633-plane, A6S633-ramp).
english(barrons.rule1642, "An inclined plane is a ramp that extends from one level to another").
pretty(barrons.rule1642, "EXAMPLE(Plane, Ramp), Plane = 'An inclined plane', Ramp = 'a ramp'.").
barrons.rule1642:: isa(A3S633-plane, "An inclined plane") -> example(A3S633-plane, A6S633-ramp), isa(A6S633-ramp, "a ramp").
english(barrons.rule1643, "An inclined plane is a ramp that extends from one level to another").
pretty(barrons.rule1643, "EXAMPLE(Plane, Ramp), Plane = 'An inclined plane', Ramp = 'a ramp'.").
barrons.rule1643:: isa(A6S633-ramp, "a ramp") -> example(A3S633-plane, A6S633-ramp), isa(A3S633-plane, "An inclined plane").
english(barrons.rule1644, "A wheelchair ramp into your school is an example of an inclined plane").
pretty(barrons.rule1644, "EXAMPLE(Ramp, Plane), Ramp = 'A wheelchair ramp into your school', Plane = 'an inclined plane'.").
barrons.rule1644:: into(A3S634-ramp, A6S634-school), isa(A6S634-school, "your school"), isa(A3S634-ramp, "A wheelchair ramp") -> example(A3S634-ramp, A13S634-plane), isa(A13S634-plane, "an inclined plane").
english(barrons.rule1645, "A wheelchair ramp into your school is an example of an inclined plane").
pretty(barrons.rule1645, "EXAMPLE(Ramp, Plane), Ramp = 'A wheelchair ramp into your school', Plane = 'an inclined plane'.").
barrons.rule1645:: isa(A13S634-plane, "an inclined plane") -> example(A3S634-ramp, A13S634-plane), into(A3S634-ramp, A6S634-school), isa(A6S634-school, "your school"), isa(A3S634-ramp, "A wheelchair ramp").
english(barrons.rule1646, "Pulleys are used to lift objects").
pretty(barrons.rule1646, "PURPOSE(Pulley, lift(Pulley, Object)), Pulley = 'Pulleys', Object = 'objects'.").
barrons.rule1646:: isa(A1S636-pulley, "Pulleys") -> purpose(A1S636-pulley, E5S636-lift), isa(E5S636-lift, "lift"), agent(E5S636-lift, A1S636-pulley), object(E5S636-lift, A6S636-object), isa(A6S636-object, "objects").
english(barrons.rule1647, "Pulleys are used to lift objects").
pretty(barrons.rule1647, "PURPOSE(Pulley, lift(Pulley, Object)), Pulley = 'Pulleys', Object = 'objects'.").
barrons.rule1647:: isa(E5S636-lift, "lift"), agent(E5S636-lift, A1S636-pulley), isa(A1S636-pulley, "Pulleys"), object(E5S636-lift, A6S636-object), isa(A6S636-object, "objects") -> purpose(A1S636-pulley, E5S636-lift).
english(barrons.rule1648, "A pulley is used to raise the flag up the flagpole at your school each day").
pretty(barrons.rule1648, "PURPOSE(Pulley, raise_up(Pulley, Flag, Day, Flagpole, at(School))), Pulley = 'A pulley', Flag = 'the flag', Day = 'each day', Flagpole = 'the flagpole', School = 'your school'.").
barrons.rule1648:: isa(A2S638-pulley, "A pulley") -> purpose(A2S638-pulley, E6S638-raise), isa(E6S638-raise, "raise"), agent(E6S638-raise, A2S638-pulley), object(E6S638-raise, A8S638-flag), isa(A8S638-flag, "the flag"), up(E6S638-raise, A11S638-flagpole), isa(A11S638-flagpole, "the flagpole"), at(E6S638-raise, A14S638-school), isa(A14S638-school, "your school"), arg(E6S638-raise, A16S638-day), isa(A16S638-day, "each day").
english(barrons.rule1649, "A pulley is used to raise the flag up the flagpole at your school each day").
pretty(barrons.rule1649, "PURPOSE(Pulley, raise_up(Pulley, Flag, Day, Flagpole, at(School))), Pulley = 'A pulley', Flag = 'the flag', Day = 'each day', Flagpole = 'the flagpole', School = 'your school'.").
barrons.rule1649:: isa(E6S638-raise, "raise"), agent(E6S638-raise, A2S638-pulley), isa(A2S638-pulley, "A pulley"), object(E6S638-raise, A8S638-flag), isa(A8S638-flag, "the flag"), up(E6S638-raise, A11S638-flagpole), isa(A11S638-flagpole, "the flagpole"), at(E6S638-raise, A14S638-school), isa(A14S638-school, "your school"), arg(E6S638-raise, A16S638-day), isa(A16S638-day, "each day") -> purpose(A2S638-pulley, E6S638-raise).
english(barrons.rule1650, "A wheel and axle involves a wheel turning on a straight bar or axle").
pretty(barrons.rule1650, "isa(involve, 'involves') -> involve(Wheel, Wheel).").
barrons.rule1650:: isa(E5S640-involve, "involve") -> agent(E5S640-involve, A2S640-wheel), isa(A2S640-wheel, "A wheel"), object(E5S640-involve, A7S640-wheel), isa(A7S640-wheel, "a wheel").
english(barrons.rule1651, "A wheel and axle involves a wheel turning on a straight bar or axle").
pretty(barrons.rule1651, "isa(Wheel, 'A wheel') -> involve(Wheel, Wheel).").
barrons.rule1651:: isa(A2S640-wheel, "A wheel") -> isa(E5S640-involve, "involve"), agent(E5S640-involve, A2S640-wheel), object(E5S640-involve, A7S640-wheel), isa(A7S640-wheel, "a wheel").
english(barrons.rule1652, "A wheel and axle involves a wheel turning on a straight bar or axle").
pretty(barrons.rule1652, "isa(Wheel, 'a wheel') -> involve(Wheel, Wheel).").
barrons.rule1652:: isa(A7S640-wheel, "a wheel") -> isa(E5S640-involve, "involve"), agent(E5S640-involve, A2S640-wheel), isa(A2S640-wheel, "A wheel"), object(E5S640-involve, A7S640-wheel).
english(barrons.rule1653, "A wheel and axle involves a wheel turning on a straight bar or axle").
pretty(barrons.rule1653, "isa(involve, 'involves') -> involve(Axle, Wheel).").
barrons.rule1653:: isa(E5S640-involve, "involve") -> agent(E5S640-involve, A4S640-axle), isa(A4S640-axle, "axle"), object(E5S640-involve, A7S640-wheel), isa(A7S640-wheel, "a wheel").
english(barrons.rule1654, "A wheel and axle involves a wheel turning on a straight bar or axle").
pretty(barrons.rule1654, "isa(Axle, 'axle') -> involve(Axle, Wheel).").
barrons.rule1654:: isa(A4S640-axle, "axle") -> isa(E5S640-involve, "involve"), agent(E5S640-involve, A4S640-axle), object(E5S640-involve, A7S640-wheel), isa(A7S640-wheel, "a wheel").
english(barrons.rule1655, "A wheel and axle involves a wheel turning on a straight bar or axle").
pretty(barrons.rule1655, "isa(Wheel, 'a wheel') -> involve(Axle, Wheel).").
barrons.rule1655:: isa(A7S640-wheel, "a wheel") -> isa(E5S640-involve, "involve"), agent(E5S640-involve, A4S640-axle), isa(A4S640-axle, "axle"), object(E5S640-involve, A7S640-wheel).
english(barrons.rule1656, "Examples of this type of machine are a door knob and the wheel on a wheelbarrow").
pretty(barrons.rule1656, "EXAMPLE(Door, Type), Door = 'a door knob and the wheel on a wheelbarrow', Type = 'this type of machine'.").
barrons.rule1656:: on(A9S641-door, A16S641-wheelbarrow), isa(A16S641-wheelbarrow, "a wheelbarrow"), isa(A9S641-door, "a door knob and the wheel") -> example(A9S641-door, A4S641-type), of(A4S641-type, A6S641-machine), isa(A6S641-machine, "machine"), isa(A4S641-type, "this type").
english(barrons.rule1657, "Examples of this type of machine are a door knob and the wheel on a wheelbarrow").
pretty(barrons.rule1657, "EXAMPLE(Door, Type), Door = 'a door knob and the wheel on a wheelbarrow', Type = 'this type of machine'.").
barrons.rule1657:: of(A4S641-type, A6S641-machine), isa(A6S641-machine, "machine"), isa(A4S641-type, "this type") -> example(A9S641-door, A4S641-type), on(A9S641-door, A16S641-wheelbarrow), isa(A16S641-wheelbarrow, "a wheelbarrow"), isa(A9S641-door, "a door knob and the wheel").
english(barrons.rule1658, "Examples of this type of machine are a door knob and the wheel on a wheelbarrow").
pretty(barrons.rule1658, "EXAMPLE(Example, Door), Example = 'Examples of this type of machine', Door = 'a door knob and the wheel on a wheelbarrow'.").
barrons.rule1658:: of(A4S641-type, A6S641-machine), isa(A6S641-machine, "machine"), of(A1S641-example, A4S641-type), isa(A4S641-type, "this type"), isa(A1S641-example, "Examples") -> example(A1S641-example, A9S641-door), on(A9S641-door, A16S641-wheelbarrow), isa(A16S641-wheelbarrow, "a wheelbarrow"), isa(A9S641-door, "a door knob and the wheel").
english(barrons.rule1659, "Examples of this type of machine are a door knob and the wheel on a wheelbarrow").
pretty(barrons.rule1659, "EXAMPLE(Example, Door), Example = 'Examples of this type of machine', Door = 'a door knob and the wheel on a wheelbarrow'.").
barrons.rule1659:: on(A9S641-door, A16S641-wheelbarrow), isa(A16S641-wheelbarrow, "a wheelbarrow"), isa(A9S641-door, "a door knob and the wheel") -> example(A1S641-example, A9S641-door), of(A4S641-type, A6S641-machine), isa(A6S641-machine, "machine"), of(A1S641-example, A4S641-type), isa(A4S641-type, "this type"), isa(A1S641-example, "Examples").
english(barrons.rule1660, "A wedge is a type of inclined plane that can be forced into another object").
pretty(barrons.rule1660, "EXAMPLE(Wedge, force_into(Wedge, Object)), Wedge = 'A wedge', Object = 'another object'.").
barrons.rule1660:: isa(A2S642-wedge, "A wedge") -> example(A2S642-wedge, E12S642-force), isa(E12S642-force, "force"), object(E12S642-force, A2S642-wedge), into(E12S642-force, A15S642-object), isa(A15S642-object, "another object").
english(barrons.rule1661, "A wedge is a type of inclined plane that can be forced into another object").
pretty(barrons.rule1661, "EXAMPLE(Wedge, force_into(Wedge, Object)), Wedge = 'A wedge', Object = 'another object'.").
barrons.rule1661:: isa(E12S642-force, "force"), object(E12S642-force, A2S642-wedge), isa(A2S642-wedge, "A wedge"), into(E12S642-force, A15S642-object), isa(A15S642-object, "another object") -> example(A2S642-wedge, E12S642-force).
english(barrons.rule1662, "A wedge is a type of inclined plane that can be forced into another object").
pretty(barrons.rule1662, "EXAMPLE(Wedge, force_into(Type, Object)), Wedge = 'A wedge', Type = 'a type of inclined plane', Object = 'another object'.").
barrons.rule1662:: isa(A2S642-wedge, "A wedge") -> example(A2S642-wedge, E12S642-force), of(A5S642-type, A8S642-plane), isa(A8S642-plane, "inclined plane"), isa(E12S642-force, "force"), object(E12S642-force, A5S642-type), isa(A5S642-type, "a type"), into(E12S642-force, A15S642-object), isa(A15S642-object, "another object").
english(barrons.rule1663, "A wedge is a type of inclined plane that can be forced into another object").
pretty(barrons.rule1663, "EXAMPLE(Wedge, force_into(Type, Object)), Wedge = 'A wedge', Type = 'a type of inclined plane', Object = 'another object'.").
barrons.rule1663:: of(A5S642-type, A8S642-plane), isa(A8S642-plane, "inclined plane"), isa(E12S642-force, "force"), object(E12S642-force, A5S642-type), isa(A5S642-type, "a type"), into(E12S642-force, A15S642-object), isa(A15S642-object, "another object") -> example(A2S642-wedge, E12S642-force), isa(A2S642-wedge, "A wedge").
english(barrons.rule1664, "A wedge is a type of inclined plane that can be forced into another object").
pretty(barrons.rule1664, "EXAMPLE(Wedge, Type), Wedge = 'A wedge', Type = 'a type of inclined plane'.").
barrons.rule1664:: isa(A2S642-wedge, "A wedge") -> example(A2S642-wedge, A5S642-type), of(A5S642-type, A8S642-plane), isa(A8S642-plane, "inclined plane"), isa(A5S642-type, "a type").
english(barrons.rule1665, "A wedge is a type of inclined plane that can be forced into another object").
pretty(barrons.rule1665, "EXAMPLE(Wedge, Type), Wedge = 'A wedge', Type = 'a type of inclined plane'.").
barrons.rule1665:: of(A5S642-type, A8S642-plane), isa(A8S642-plane, "inclined plane"), isa(A5S642-type, "a type") -> example(A2S642-wedge, A5S642-type), isa(A2S642-wedge, "A wedge").
english(barrons.rule1666, "A screw is another type of inclined plane that is wrapped around a cylinder").
pretty(barrons.rule1666, "EXAMPLE(Screw, wrap_around(Screw, Cylinder)), Screw = 'A screw', Cylinder = 'a cylinder'.").
barrons.rule1666:: isa(A2S644-screw, "A screw") -> example(A2S644-screw, E11S644-wrap), isa(E11S644-wrap, "wrap"), object(E11S644-wrap, A2S644-screw), around(E11S644-wrap, A14S644-cylinder), isa(A14S644-cylinder, "a cylinder").
english(barrons.rule1667, "A screw is another type of inclined plane that is wrapped around a cylinder").
pretty(barrons.rule1667, "EXAMPLE(Screw, wrap_around(Screw, Cylinder)), Screw = 'A screw', Cylinder = 'a cylinder'.").
barrons.rule1667:: isa(E11S644-wrap, "wrap"), object(E11S644-wrap, A2S644-screw), isa(A2S644-screw, "A screw"), around(E11S644-wrap, A14S644-cylinder), isa(A14S644-cylinder, "a cylinder") -> example(A2S644-screw, E11S644-wrap).
english(barrons.rule1668, "A screw is another type of inclined plane that is wrapped around a cylinder").
pretty(barrons.rule1668, "EXAMPLE(Screw, wrap_around(Type, Cylinder)), Screw = 'A screw', Type = 'another type of inclined plane', Cylinder = 'a cylinder'.").
barrons.rule1668:: isa(A2S644-screw, "A screw") -> example(A2S644-screw, E11S644-wrap), of(A5S644-type, A8S644-plane), isa(A8S644-plane, "inclined plane"), isa(E11S644-wrap, "wrap"), object(E11S644-wrap, A5S644-type), isa(A5S644-type, "another type"), around(E11S644-wrap, A14S644-cylinder), isa(A14S644-cylinder, "a cylinder").
english(barrons.rule1669, "A screw is another type of inclined plane that is wrapped around a cylinder").
pretty(barrons.rule1669, "EXAMPLE(Screw, wrap_around(Type, Cylinder)), Screw = 'A screw', Type = 'another type of inclined plane', Cylinder = 'a cylinder'.").
barrons.rule1669:: of(A5S644-type, A8S644-plane), isa(A8S644-plane, "inclined plane"), isa(E11S644-wrap, "wrap"), object(E11S644-wrap, A5S644-type), isa(A5S644-type, "another type"), around(E11S644-wrap, A14S644-cylinder), isa(A14S644-cylinder, "a cylinder") -> example(A2S644-screw, E11S644-wrap), isa(A2S644-screw, "A screw").
english(barrons.rule1670, "A screw is another type of inclined plane that is wrapped around a cylinder").
pretty(barrons.rule1670, "EXAMPLE(Screw, Type), Screw = 'A screw', Type = 'another type of inclined plane'.").
barrons.rule1670:: isa(A2S644-screw, "A screw") -> example(A2S644-screw, A5S644-type), of(A5S644-type, A8S644-plane), isa(A8S644-plane, "inclined plane"), isa(A5S644-type, "another type").
english(barrons.rule1671, "A screw is another type of inclined plane that is wrapped around a cylinder").
pretty(barrons.rule1671, "EXAMPLE(Screw, Type), Screw = 'A screw', Type = 'another type of inclined plane'.").
barrons.rule1671:: of(A5S644-type, A8S644-plane), isa(A8S644-plane, "inclined plane"), isa(A5S644-type, "another type") -> example(A2S644-screw, A5S644-type), isa(A2S644-screw, "A screw").
english(barrons.rule1672, "By turning the screw you insert it[A screw] into another object").
pretty(barrons.rule1672, "isa(insert, 'insert') -> insert_into(You, Screw, Object).").
barrons.rule1672:: isa(E6S645-insert, "insert") -> agent(E6S645-insert, A5S645-you), isa(A5S645-you, "you"), object(E6S645-insert, A2S644-screw), isa(A2S644-screw, "A screw"), into(E6S645-insert, A10S645-object), isa(A10S645-object, "another object").
english(barrons.rule1673, "By turning the screw you insert it[A screw] into another object").
pretty(barrons.rule1673, "isa(You, 'you') -> insert_into(You, Screw, Object).").
barrons.rule1673:: isa(A5S645-you, "you") -> isa(E6S645-insert, "insert"), agent(E6S645-insert, A5S645-you), object(E6S645-insert, A2S644-screw), isa(A2S644-screw, "A screw"), into(E6S645-insert, A10S645-object), isa(A10S645-object, "another object").
english(barrons.rule1674, "By turning the screw you insert it[A screw] into another object").
pretty(barrons.rule1674, "isa(Screw, 'A screw') -> insert_into(You, Screw, Object).").
barrons.rule1674:: isa(A2S644-screw, "A screw") -> isa(E6S645-insert, "insert"), agent(E6S645-insert, A5S645-you), isa(A5S645-you, "you"), object(E6S645-insert, A2S644-screw), into(E6S645-insert, A10S645-object), isa(A10S645-object, "another object").
english(barrons.rule1675, "By turning the screw you insert it[A screw] into another object").
pretty(barrons.rule1675, "isa(Object, 'another object') -> insert_into(You, Screw, Object).").
barrons.rule1675:: isa(A10S645-object, "another object") -> isa(E6S645-insert, "insert"), agent(E6S645-insert, A5S645-you), isa(A5S645-you, "you"), object(E6S645-insert, A2S644-screw), isa(A2S644-screw, "A screw"), into(E6S645-insert, A10S645-object).
english(barrons.rule1676, "By turning the screw you insert it[A screw] into another object").
pretty(barrons.rule1676, "ENABLE(turn(You, Screw), insert_into(You, Screw, Object)), You = 'you', Screw = 'the screw', Screw = 'A screw', Object = 'another object'.").
barrons.rule1676:: isa(E2S645-turn, "turn"), agent(E2S645-turn, A5S645-you), isa(A5S645-you, "you"), object(E2S645-turn, A4S645-screw), isa(A4S645-screw, "the screw") -> enable(E2S645-turn, E6S645-insert), isa(E6S645-insert, "insert"), agent(E6S645-insert, A5S645-you), object(E6S645-insert, A2S644-screw), isa(A2S644-screw, "A screw"), into(E6S645-insert, A10S645-object), isa(A10S645-object, "another object").
english(barrons.rule1677, "By turning the screw you insert it[A screw] into another object").
pretty(barrons.rule1677, "ENABLE(turn(You, Screw), insert_into(You, Screw, Object)), You = 'you', Screw = 'the screw', Screw = 'A screw', Object = 'another object'.").
barrons.rule1677:: isa(E6S645-insert, "insert"), agent(E6S645-insert, A5S645-you), isa(A5S645-you, "you"), object(E6S645-insert, A2S644-screw), isa(A2S644-screw, "A screw"), into(E6S645-insert, A10S645-object), isa(A10S645-object, "another object") -> enable(E2S645-turn, E6S645-insert), isa(E2S645-turn, "turn"), agent(E2S645-turn, A5S645-you), object(E2S645-turn, A4S645-screw), isa(A4S645-screw, "the screw").
english(barrons.rule1678, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1678, "EXAMPLE(Sun, Object), Sun = 'The sun', Object = 'all celestial objects'.").
barrons.rule1678:: isa(A2S647-sun, "The sun") -> example(A2S647-sun, A15S647-object), isa(A15S647-object, "all celestial objects").
english(barrons.rule1679, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1679, "EXAMPLE(Sun, Object), Sun = 'The sun', Object = 'all celestial objects'.").
barrons.rule1679:: isa(A15S647-object, "all celestial objects") -> example(A2S647-sun, A15S647-object), isa(A2S647-sun, "The sun").
english(barrons.rule1680, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1680, "EXAMPLE(Sun, Object), Sun = 'The sun', Object = 'all celestial objects'.").
barrons.rule1680:: isa(A2S647-sun, "The sun") -> example(A2S647-sun, A15S647-object), isa(A15S647-object, "all celestial objects").
english(barrons.rule1681, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1681, "EXAMPLE(Sun, Object), Sun = 'The sun', Object = 'all celestial objects'.").
barrons.rule1681:: isa(A15S647-object, "all celestial objects") -> example(A2S647-sun, A15S647-object), isa(A2S647-sun, "The sun").
english(barrons.rule1682, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1682, "EXAMPLE(Star, Object), Star = 'stars', Object = 'all celestial objects'.").
barrons.rule1682:: isa(A4S647-star, "stars") -> example(A4S647-star, A15S647-object), isa(A15S647-object, "all celestial objects").
english(barrons.rule1683, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1683, "EXAMPLE(Star, Object), Star = 'stars', Object = 'all celestial objects'.").
barrons.rule1683:: isa(A15S647-object, "all celestial objects") -> example(A4S647-star, A15S647-object), isa(A4S647-star, "stars").
english(barrons.rule1684, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1684, "EXAMPLE(Star, Object), Star = 'stars', Object = 'all celestial objects'.").
barrons.rule1684:: isa(A4S647-star, "stars") -> example(A4S647-star, A15S647-object), isa(A15S647-object, "all celestial objects").
english(barrons.rule1685, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1685, "EXAMPLE(Star, Object), Star = 'stars', Object = 'all celestial objects'.").
barrons.rule1685:: isa(A15S647-object, "all celestial objects") -> example(A4S647-star, A15S647-object), isa(A4S647-star, "stars").
english(barrons.rule1686, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1686, "EXAMPLE(Moon, Object), Moon = 'moon', Object = 'all celestial objects'.").
barrons.rule1686:: isa(A6S647-moon, "moon") -> example(A6S647-moon, A15S647-object), isa(A15S647-object, "all celestial objects").
english(barrons.rule1687, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1687, "EXAMPLE(Moon, Object), Moon = 'moon', Object = 'all celestial objects'.").
barrons.rule1687:: isa(A15S647-object, "all celestial objects") -> example(A6S647-moon, A15S647-object), isa(A6S647-moon, "moon").
english(barrons.rule1688, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1688, "EXAMPLE(Moon, Object), Moon = 'moon', Object = 'all celestial objects'.").
barrons.rule1688:: isa(A6S647-moon, "moon") -> example(A6S647-moon, A15S647-object), isa(A15S647-object, "all celestial objects").
english(barrons.rule1689, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1689, "EXAMPLE(Moon, Object), Moon = 'moon', Object = 'all celestial objects'.").
barrons.rule1689:: isa(A15S647-object, "all celestial objects") -> example(A6S647-moon, A15S647-object), isa(A6S647-moon, "moon").
english(barrons.rule1690, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1690, "EXAMPLE(Planet, Object), Planet = 'planets', Object = 'all celestial objects'.").
barrons.rule1690:: isa(A8S647-planet, "planets") -> example(A8S647-planet, A15S647-object), isa(A15S647-object, "all celestial objects").
english(barrons.rule1691, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1691, "EXAMPLE(Planet, Object), Planet = 'planets', Object = 'all celestial objects'.").
barrons.rule1691:: isa(A15S647-object, "all celestial objects") -> example(A8S647-planet, A15S647-object), isa(A8S647-planet, "planets").
english(barrons.rule1692, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1692, "EXAMPLE(Planet, Object), Planet = 'planets', Object = 'all celestial objects'.").
barrons.rule1692:: isa(A8S647-planet, "planets") -> example(A8S647-planet, A15S647-object), isa(A15S647-object, "all celestial objects").
english(barrons.rule1693, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1693, "EXAMPLE(Planet, Object), Planet = 'planets', Object = 'all celestial objects'.").
barrons.rule1693:: isa(A15S647-object, "all celestial objects") -> example(A8S647-planet, A15S647-object), isa(A8S647-planet, "planets").
english(barrons.rule1694, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1694, "EXAMPLE(Comet, Object), Comet = 'comets', Object = 'all celestial objects'.").
barrons.rule1694:: isa(A11S647-comet, "comets") -> example(A11S647-comet, A15S647-object), isa(A15S647-object, "all celestial objects").
english(barrons.rule1695, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1695, "EXAMPLE(Comet, Object), Comet = 'comets', Object = 'all celestial objects'.").
barrons.rule1695:: isa(A15S647-object, "all celestial objects") -> example(A11S647-comet, A15S647-object), isa(A11S647-comet, "comets").
english(barrons.rule1696, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1696, "EXAMPLE(Comet, Object), Comet = 'comets', Object = 'all celestial objects'.").
barrons.rule1696:: isa(A11S647-comet, "comets") -> example(A11S647-comet, A15S647-object), isa(A15S647-object, "all celestial objects").
english(barrons.rule1697, "The sun stars moon planets and comets are all celestial objects").
pretty(barrons.rule1697, "EXAMPLE(Comet, Object), Comet = 'comets', Object = 'all celestial objects'.").
barrons.rule1697:: isa(A15S647-object, "all celestial objects") -> example(A11S647-comet, A15S647-object), isa(A11S647-comet, "comets").
english(barrons.rule1698, "The apparent movement of these objects gives us an indication of the passage of time").
pretty(barrons.rule1698, "isa(Object, 'these objects') -> give(Movement, We, Indication).").
barrons.rule1698:: isa(A6S648-object, "these objects") -> of(A3S648-movement, A6S648-object), isa(E7S648-give, "give"), agent(E7S648-give, A3S648-movement), isa(A3S648-movement, "The apparent movement"), object(E7S648-give, A8S648-we), isa(A8S648-we, "us"), arg(E7S648-give, A10S648-indication), isa(A10S648-indication, "an indication of the passage of time").
english(barrons.rule1699, "The apparent movement of these objects gives us an indication of the passage of time").
pretty(barrons.rule1699, "isa(give, 'gives') -> give(Movement, We, Indication).").
barrons.rule1699:: isa(E7S648-give, "give") -> of(A3S648-movement, A6S648-object), isa(A6S648-object, "these objects"), agent(E7S648-give, A3S648-movement), isa(A3S648-movement, "The apparent movement"), object(E7S648-give, A8S648-we), isa(A8S648-we, "us"), arg(E7S648-give, A10S648-indication), isa(A10S648-indication, "an indication of the passage of time").
english(barrons.rule1700, "The apparent movement of these objects gives us an indication of the passage of time").
pretty(barrons.rule1700, "isa(Movement, 'The apparent movement of these objects') -> give(Movement, We, Indication).").
barrons.rule1700:: isa(A3S648-movement, "The apparent movement") -> of(A3S648-movement, A6S648-object), isa(A6S648-object, "these objects"), isa(E7S648-give, "give"), agent(E7S648-give, A3S648-movement), object(E7S648-give, A8S648-we), isa(A8S648-we, "us"), arg(E7S648-give, A10S648-indication), isa(A10S648-indication, "an indication of the passage of time").
english(barrons.rule1701, "The apparent movement of these objects gives us an indication of the passage of time").
pretty(barrons.rule1701, "isa(We, 'us') -> give(Movement, We, Indication).").
barrons.rule1701:: isa(A8S648-we, "us") -> of(A3S648-movement, A6S648-object), isa(A6S648-object, "these objects"), isa(E7S648-give, "give"), agent(E7S648-give, A3S648-movement), isa(A3S648-movement, "The apparent movement"), object(E7S648-give, A8S648-we), arg(E7S648-give, A10S648-indication), isa(A10S648-indication, "an indication of the passage of time").
english(barrons.rule1702, "The apparent movement of these objects gives us an indication of the passage of time").
pretty(barrons.rule1702, "isa(Indication, 'an indication of the passage of time') -> give(Movement, We, Indication).").
barrons.rule1702:: isa(A10S648-indication, "an indication of the passage of time") -> of(A3S648-movement, A6S648-object), isa(A6S648-object, "these objects"), isa(E7S648-give, "give"), agent(E7S648-give, A3S648-movement), isa(A3S648-movement, "The apparent movement"), object(E7S648-give, A8S648-we), isa(A8S648-we, "us"), arg(E7S648-give, A10S648-indication).
english(barrons.rule1703, "We[us] see different planets throughout the year because of the motion of the Earth and the movement of the planets around the sun").
pretty(barrons.rule1703, "CAUSE(Motion, see_throughout(We, Planet, Year, of(Motion), of(Movement))), Motion = 'the motion of the Earth', We = 'us', Planet = 'different planets', Year = 'the year', Motion = 'the motion of the Earth', Movement = 'the movement of the planets around the sun'.").
barrons.rule1703:: of(A11S650-motion, A14S650-Earth), isa(A14S650-Earth, "the Earth"), isa(A11S650-motion, "the motion") -> cause(A11S650-motion, E2S650-see), isa(E2S650-see, "see"), agent(E2S650-see, A8S648-we), isa(A8S648-we, "us"), object(E2S650-see, A4S650-planet), isa(A4S650-planet, "different planets"), throughout(E2S650-see, A7S650-year), isa(A7S650-year, "the year"), of(E2S650-see, A11S650-motion), isa(A11S650-motion, "the motion of the Earth"), of(E2S650-see, A17S650-movement), isa(A17S650-movement, "the movement of the planets around the sun").
english(barrons.rule1704, "We[us] see different planets throughout the year because of the motion of the Earth and the movement of the planets around the sun").
pretty(barrons.rule1704, "CAUSE(Motion, see_throughout(We, Planet, Year, of(Motion), of(Movement))), Motion = 'the motion of the Earth', We = 'us', Planet = 'different planets', Year = 'the year', Motion = 'the motion of the Earth', Movement = 'the movement of the planets around the sun'.").
barrons.rule1704:: isa(E2S650-see, "see"), agent(E2S650-see, A8S648-we), isa(A8S648-we, "us"), object(E2S650-see, A4S650-planet), isa(A4S650-planet, "different planets"), throughout(E2S650-see, A7S650-year), isa(A7S650-year, "the year"), of(E2S650-see, A11S650-motion), isa(A11S650-motion, "the motion of the Earth"), of(E2S650-see, A17S650-movement), isa(A17S650-movement, "the movement of the planets around the sun") -> cause(A11S650-motion, E2S650-see), of(A11S650-motion, A14S650-Earth), isa(A14S650-Earth, "the Earth"), isa(A11S650-motion, "the motion").
english(barrons.rule1705, "We[us] see different planets throughout the year because of the motion of the Earth and the movement of the planets around the sun").
pretty(barrons.rule1705, "CAUSE(Movement, see_throughout(We, Planet, Year, of(Motion), of(Movement))), Movement = 'the movement of the planets around the sun', We = 'us', Planet = 'different planets', Year = 'the year', Motion = 'the motion of the Earth', Movement = 'the movement of the planets around the sun'.").
barrons.rule1705:: around(A20S650-planet, A23S650-sun), isa(A23S650-sun, "the sun"), of(A17S650-movement, A20S650-planet), isa(A20S650-planet, "the planets"), isa(A17S650-movement, "the movement") -> cause(A17S650-movement, E2S650-see), isa(E2S650-see, "see"), agent(E2S650-see, A8S648-we), isa(A8S648-we, "us"), object(E2S650-see, A4S650-planet), isa(A4S650-planet, "different planets"), throughout(E2S650-see, A7S650-year), isa(A7S650-year, "the year"), of(E2S650-see, A11S650-motion), isa(A11S650-motion, "the motion of the Earth"), of(E2S650-see, A17S650-movement), isa(A17S650-movement, "the movement of the planets around the sun").
english(barrons.rule1706, "We[us] see different planets throughout the year because of the motion of the Earth and the movement of the planets around the sun").
pretty(barrons.rule1706, "CAUSE(Movement, see_throughout(We, Planet, Year, of(Motion), of(Movement))), Movement = 'the movement of the planets around the sun', We = 'us', Planet = 'different planets', Year = 'the year', Motion = 'the motion of the Earth', Movement = 'the movement of the planets around the sun'.").
barrons.rule1706:: isa(E2S650-see, "see"), agent(E2S650-see, A8S648-we), isa(A8S648-we, "us"), object(E2S650-see, A4S650-planet), isa(A4S650-planet, "different planets"), throughout(E2S650-see, A7S650-year), isa(A7S650-year, "the year"), of(E2S650-see, A11S650-motion), isa(A11S650-motion, "the motion of the Earth"), of(E2S650-see, A17S650-movement), isa(A17S650-movement, "the movement of the planets around the sun") -> cause(A17S650-movement, E2S650-see), around(A20S650-planet, A23S650-sun), isa(A23S650-sun, "the sun"), of(A17S650-movement, A20S650-planet), isa(A20S650-planet, "the planets"), isa(A17S650-movement, "the movement").
english(barrons.rule1707, "This is not because of the motion of the sun but rather the motion of the Earth").
pretty(barrons.rule1707, "CAUSE(Motion, be not_of(This, Motion, of(Motion))), Motion = 'the motion of the sun', This = 'This', Motion = 'the motion of the sun', Motion = 'the motion of the Earth'.").
barrons.rule1707:: of(A7S653-motion, A10S653-sun), isa(A10S653-sun, "the sun"), isa(A7S653-motion, "the motion") -> cause(A7S653-motion, E2S653-be), isa(E2S653-be, "be not"), agent(E2S653-be, A1S653-this), isa(A1S653-this, "This"), of(E2S653-be, A7S653-motion), isa(A7S653-motion, "the motion of the sun"), of(E2S653-be, A14S653-motion), isa(A14S653-motion, "the motion of the Earth").
english(barrons.rule1708, "This is not because of the motion of the sun but rather the motion of the Earth").
pretty(barrons.rule1708, "CAUSE(Motion, be not_of(This, Motion, of(Motion))), Motion = 'the motion of the sun', This = 'This', Motion = 'the motion of the sun', Motion = 'the motion of the Earth'.").
barrons.rule1708:: isa(E2S653-be, "be not"), agent(E2S653-be, A1S653-this), isa(A1S653-this, "This"), of(E2S653-be, A7S653-motion), isa(A7S653-motion, "the motion of the sun"), of(E2S653-be, A14S653-motion), isa(A14S653-motion, "the motion of the Earth") -> cause(A7S653-motion, E2S653-be), of(A7S653-motion, A10S653-sun), isa(A10S653-sun, "the sun"), isa(A7S653-motion, "the motion").
english(barrons.rule1709, "This is not because of the motion of the sun but rather the motion of the Earth").
pretty(barrons.rule1709, "CAUSE(Motion, be not_of(This, Motion, of(Motion))), Motion = 'the motion of the Earth', This = 'This', Motion = 'the motion of the sun', Motion = 'the motion of the Earth'.").
barrons.rule1709:: of(A14S653-motion, A17S653-Earth), isa(A17S653-Earth, "the Earth"), isa(A14S653-motion, "the motion") -> cause(A14S653-motion, E2S653-be), isa(E2S653-be, "be not"), agent(E2S653-be, A1S653-this), isa(A1S653-this, "This"), of(E2S653-be, A7S653-motion), isa(A7S653-motion, "the motion of the sun"), of(E2S653-be, A14S653-motion), isa(A14S653-motion, "the motion of the Earth").
english(barrons.rule1710, "This is not because of the motion of the sun but rather the motion of the Earth").
pretty(barrons.rule1710, "CAUSE(Motion, be not_of(This, Motion, of(Motion))), Motion = 'the motion of the Earth', This = 'This', Motion = 'the motion of the sun', Motion = 'the motion of the Earth'.").
barrons.rule1710:: isa(E2S653-be, "be not"), agent(E2S653-be, A1S653-this), isa(A1S653-this, "This"), of(E2S653-be, A7S653-motion), isa(A7S653-motion, "the motion of the sun"), of(E2S653-be, A14S653-motion), isa(A14S653-motion, "the motion of the Earth") -> cause(A14S653-motion, E2S653-be), of(A14S653-motion, A17S653-Earth), isa(A17S653-Earth, "the Earth"), isa(A14S653-motion, "the motion").
english(barrons.rule1711, "It[This rotation] is the rotation of the Earth that makes the sun appear to move through the sky during the day rising in the east and setting in the west").
pretty(barrons.rule1711, "EXAMPLE(It, Rotation), It = 'It[This rotation]', Rotation = 'the rotation of the Earth that makes the sun appear to move through the sky during the day rising in the east and setting in the west'.").
barrons.rule1711:: isa(A1S656-it, "It[This rotation]") -> example(A1S656-it, A4S656-rotation), of(A4S656-rotation, A7S656-Earth), isa(A7S656-Earth, "the Earth"), isa(A4S656-rotation, "the rotation").
english(barrons.rule1712, "It[This rotation] is the rotation of the Earth that makes the sun appear to move through the sky during the day rising in the east and setting in the west").
pretty(barrons.rule1712, "EXAMPLE(It, Rotation), It = 'It[This rotation]', Rotation = 'the rotation of the Earth that makes the sun appear to move through the sky during the day rising in the east and setting in the west'.").
barrons.rule1712:: of(A4S656-rotation, A7S656-Earth), isa(A7S656-Earth, "the Earth"), isa(A4S656-rotation, "the rotation") -> example(A1S656-it, A4S656-rotation), isa(A1S656-it, "It[This rotation]").
english(barrons.rule1713, "It[This rotation] is the rotation of the Earth that makes the sun appear to move through the sky during the day rising in the east and setting in the west").
pretty(barrons.rule1713, "EFFECT(move_through(Sun, Sky, during(Day)), rise_in(Sun, East, in(Setting))), Sun = 'the sun', Sky = 'the sky', Day = 'the day', East = 'the east in the west', Setting = 'setting'.").
barrons.rule1713:: isa(E14S656-move, "move"), agent(E14S656-move, A11S656-sun), isa(A11S656-sun, "the sun"), through(E14S656-move, A17S656-sky), isa(A17S656-sky, "the sky"), during(E14S656-move, A20S656-day), isa(A20S656-day, "the day") -> effect(E14S656-move, E22S656-rise), isa(E22S656-rise, "rise"), agent(E22S656-rise, A11S656-sun), in(E22S656-rise, A25S656-east), isa(A25S656-east, "the east in the west"), in(E22S656-rise, A27S656-setting), isa(A27S656-setting, "setting").
english(barrons.rule1714, "It[This rotation] is the rotation of the Earth that makes the sun appear to move through the sky during the day rising in the east and setting in the west").
pretty(barrons.rule1714, "EFFECT(move_through(Sun, Sky, during(Day)), rise_in(Sun, East, in(Setting))), Sun = 'the sun', Sky = 'the sky', Day = 'the day', East = 'the east in the west', Setting = 'setting'.").
barrons.rule1714:: isa(E22S656-rise, "rise"), agent(E22S656-rise, A11S656-sun), isa(A11S656-sun, "the sun"), in(E22S656-rise, A25S656-east), isa(A25S656-east, "the east in the west"), in(E22S656-rise, A27S656-setting), isa(A27S656-setting, "setting") -> effect(E14S656-move, E22S656-rise), isa(E14S656-move, "move"), agent(E14S656-move, A11S656-sun), through(E14S656-move, A17S656-sky), isa(A17S656-sky, "the sky"), during(E14S656-move, A20S656-day), isa(A20S656-day, "the day").
english(barrons.rule1715, "We measure time on Earth based on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun").
pretty(barrons.rule1715, "isa(Earth, 'Earth') -> measure_base(We, Time, On).").
barrons.rule1715:: isa(A5S657-Earth, "Earth") -> on(A3S657-time, A5S657-Earth), isa(E2S657-measure, "measure"), agent(E2S657-measure, A1S657-we), isa(A1S657-we, "We"), object(E2S657-measure, A3S657-time), isa(A3S657-time, "time"), base(E2S657-measure, A7S657-on), isa(A7S657-on, "on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun").
english(barrons.rule1716, "We measure time on Earth based on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun").
pretty(barrons.rule1716, "isa(measure, 'measure') -> measure_base(We, Time, On).").
barrons.rule1716:: isa(E2S657-measure, "measure") -> on(A3S657-time, A5S657-Earth), isa(A5S657-Earth, "Earth"), agent(E2S657-measure, A1S657-we), isa(A1S657-we, "We"), object(E2S657-measure, A3S657-time), isa(A3S657-time, "time"), base(E2S657-measure, A7S657-on), isa(A7S657-on, "on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun").
english(barrons.rule1717, "We measure time on Earth based on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun").
pretty(barrons.rule1717, "isa(We, 'We') -> measure_base(We, Time, On).").
barrons.rule1717:: isa(A1S657-we, "We") -> on(A3S657-time, A5S657-Earth), isa(A5S657-Earth, "Earth"), isa(E2S657-measure, "measure"), agent(E2S657-measure, A1S657-we), object(E2S657-measure, A3S657-time), isa(A3S657-time, "time"), base(E2S657-measure, A7S657-on), isa(A7S657-on, "on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun").
english(barrons.rule1718, "We measure time on Earth based on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun").
pretty(barrons.rule1718, "isa(Time, 'time on Earth') -> measure_base(We, Time, On).").
barrons.rule1718:: isa(A3S657-time, "time") -> on(A3S657-time, A5S657-Earth), isa(A5S657-Earth, "Earth"), isa(E2S657-measure, "measure"), agent(E2S657-measure, A1S657-we), isa(A1S657-we, "We"), object(E2S657-measure, A3S657-time), base(E2S657-measure, A7S657-on), isa(A7S657-on, "on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun").
english(barrons.rule1719, "We measure time on Earth based on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun").
pretty(barrons.rule1719, "isa(On, 'on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun') -> measure_base(We, Time, On).").
barrons.rule1719:: isa(A7S657-on, "on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun") -> on(A3S657-time, A5S657-Earth), isa(A5S657-Earth, "Earth"), isa(E2S657-measure, "measure"), agent(E2S657-measure, A1S657-we), isa(A1S657-we, "We"), object(E2S657-measure, A3S657-time), isa(A3S657-time, "time"), base(E2S657-measure, A7S657-on).
english(barrons.rule1720, "We measure time on Earth based on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun").
pretty(barrons.rule1720, "PURPOSE(We, measure_base(We, Time, On)), We = 'We', Time = 'time on Earth', On = 'on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun'.").
barrons.rule1720:: isa(A1S657-we, "We") -> purpose(A1S657-we, E2S657-measure), on(A3S657-time, A5S657-Earth), isa(A5S657-Earth, "Earth"), isa(E2S657-measure, "measure"), agent(E2S657-measure, A1S657-we), object(E2S657-measure, A3S657-time), isa(A3S657-time, "time"), base(E2S657-measure, A7S657-on), isa(A7S657-on, "on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun").
english(barrons.rule1721, "We measure time on Earth based on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun").
pretty(barrons.rule1721, "PURPOSE(We, measure_base(We, Time, On)), We = 'We', Time = 'time on Earth', On = 'on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun'.").
barrons.rule1721:: on(A3S657-time, A5S657-Earth), isa(A5S657-Earth, "Earth"), isa(E2S657-measure, "measure"), agent(E2S657-measure, A1S657-we), isa(A1S657-we, "We"), object(E2S657-measure, A3S657-time), isa(A3S657-time, "time"), base(E2S657-measure, A7S657-on), isa(A7S657-on, "on both the rotation of the Earth on its[time on Earth] axis and its[time on Earth] revolution around the sun") -> purpose(A1S657-we, E2S657-measure).
english(barrons.rule1722, "1 minute equals 60 seconds").
pretty(barrons.rule1722, "isa(equal, 'equals') -> equal(Minute, Seconds).").
barrons.rule1722:: isa(E3S659-equal, "equal") -> agent(E3S659-equal, A2S659-minute), isa(A2S659-minute, "1 minute"), object(E3S659-equal, A5S659-seconds), isa(A5S659-seconds, "60 seconds").
english(barrons.rule1723, "1 minute equals 60 seconds").
pretty(barrons.rule1723, "isa(Minute, '1 minute') -> equal(Minute, Seconds).").
barrons.rule1723:: isa(A2S659-minute, "1 minute") -> isa(E3S659-equal, "equal"), agent(E3S659-equal, A2S659-minute), object(E3S659-equal, A5S659-seconds), isa(A5S659-seconds, "60 seconds").
english(barrons.rule1724, "1 minute equals 60 seconds").
pretty(barrons.rule1724, "isa(Seconds, '60 seconds') -> equal(Minute, Seconds).").
barrons.rule1724:: isa(A5S659-seconds, "60 seconds") -> isa(E3S659-equal, "equal"), agent(E3S659-equal, A2S659-minute), isa(A2S659-minute, "1 minute"), object(E3S659-equal, A5S659-seconds).
english(barrons.rule1725, "1 hour equals 60 minutes").
pretty(barrons.rule1725, "isa(equal, 'equals') -> equal(Hour, Minute).").
barrons.rule1725:: isa(E3S660-equal, "equal") -> agent(E3S660-equal, A2S660-hour), isa(A2S660-hour, "1 hour"), object(E3S660-equal, A5S660-minute), isa(A5S660-minute, "60 minutes").
english(barrons.rule1726, "1 hour equals 60 minutes").
pretty(barrons.rule1726, "isa(Hour, '1 hour') -> equal(Hour, Minute).").
barrons.rule1726:: isa(A2S660-hour, "1 hour") -> isa(E3S660-equal, "equal"), agent(E3S660-equal, A2S660-hour), object(E3S660-equal, A5S660-minute), isa(A5S660-minute, "60 minutes").
english(barrons.rule1727, "1 hour equals 60 minutes").
pretty(barrons.rule1727, "isa(Minute, '60 minutes') -> equal(Hour, Minute).").
barrons.rule1727:: isa(A5S660-minute, "60 minutes") -> isa(E3S660-equal, "equal"), agent(E3S660-equal, A2S660-hour), isa(A2S660-hour, "1 hour"), object(E3S660-equal, A5S660-minute).
english(barrons.rule1728, "As the Earth revolves around the sun its[Earth] position changes and the amount of sunlight received by Earth also changes").
pretty(barrons.rule1728, "EFFECT(revolve(Earth, Sun), change(Change)), Earth = 'the Earth', Sun = 'around the sun', Change = 'its[Earth] position changes'.").
barrons.rule1728:: isa(E4S664-revolve, "revolve"), agent(E4S664-revolve, A3S664-Earth), isa(A3S664-Earth, "the Earth"), object(E4S664-revolve, A7S664-sun), isa(A7S664-sun, "around the sun") -> effect(E4S664-revolve, E21S664-change), isa(E21S664-change, "change"), agent(E21S664-change, A11S664-change), isa(A11S664-change, "its[Earth] position changes").
english(barrons.rule1729, "As the Earth revolves around the sun its[Earth] position changes and the amount of sunlight received by Earth also changes").
pretty(barrons.rule1729, "EFFECT(revolve(Earth, Sun), change(Change)), Earth = 'the Earth', Sun = 'around the sun', Change = 'its[Earth] position changes'.").
barrons.rule1729:: isa(E21S664-change, "change"), agent(E21S664-change, A11S664-change), isa(A11S664-change, "its[Earth] position changes") -> effect(E4S664-revolve, E21S664-change), isa(E4S664-revolve, "revolve"), agent(E4S664-revolve, A3S664-Earth), isa(A3S664-Earth, "the Earth"), object(E4S664-revolve, A7S664-sun), isa(A7S664-sun, "around the sun").
english(barrons.rule1730, "As the Earth revolves around the sun its[Earth] position changes and the amount of sunlight received by Earth also changes").
pretty(barrons.rule1730, "EFFECT(revolve(Earth, Sun), change(Amount)), Earth = 'the Earth', Sun = 'around the sun', Amount = 'the amount of sunlight'.").
barrons.rule1730:: isa(E4S664-revolve, "revolve"), agent(E4S664-revolve, A3S664-Earth), isa(A3S664-Earth, "the Earth"), object(E4S664-revolve, A7S664-sun), isa(A7S664-sun, "around the sun") -> effect(E4S664-revolve, E21S664-change), of(A14S664-amount, A16S664-sunlight), isa(A16S664-sunlight, "sunlight"), isa(E21S664-change, "change"), agent(E21S664-change, A14S664-amount), isa(A14S664-amount, "the amount").
english(barrons.rule1731, "As the Earth revolves around the sun its[Earth] position changes and the amount of sunlight received by Earth also changes").
pretty(barrons.rule1731, "EFFECT(revolve(Earth, Sun), change(Amount)), Earth = 'the Earth', Sun = 'around the sun', Amount = 'the amount of sunlight'.").
barrons.rule1731:: of(A14S664-amount, A16S664-sunlight), isa(A16S664-sunlight, "sunlight"), isa(E21S664-change, "change"), agent(E21S664-change, A14S664-amount), isa(A14S664-amount, "the amount") -> effect(E4S664-revolve, E21S664-change), isa(E4S664-revolve, "revolve"), agent(E4S664-revolve, A3S664-Earth), isa(A3S664-Earth, "the Earth"), object(E4S664-revolve, A7S664-sun), isa(A7S664-sun, "around the sun").
english(barrons.rule1732, "Each season has its[Each season] distinct weather conditions which will be discussed in the next chapter").
pretty(barrons.rule1732, "isa(have, 'has') -> have(Season, Condition).").
barrons.rule1732:: isa(E3S675-have, "have") -> agent(E3S675-have, A2S675-season), isa(A2S675-season, "Each season"), object(E3S675-have, A7S675-condition), isa(A7S675-condition, "its[Each season] distinct weather conditions").
english(barrons.rule1733, "Each season has its[Each season] distinct weather conditions which will be discussed in the next chapter").
pretty(barrons.rule1733, "isa(Season, 'Each season') -> have(Season, Condition).").
barrons.rule1733:: isa(A2S675-season, "Each season") -> isa(E3S675-have, "have"), agent(E3S675-have, A2S675-season), object(E3S675-have, A7S675-condition), isa(A7S675-condition, "its[Each season] distinct weather conditions").
english(barrons.rule1734, "Each season has its[Each season] distinct weather conditions which will be discussed in the next chapter").
pretty(barrons.rule1734, "isa(Condition, 'its[Each season] distinct weather conditions') -> have(Season, Condition).").
barrons.rule1734:: isa(A7S675-condition, "its[Each season] distinct weather conditions") -> isa(E3S675-have, "have"), agent(E3S675-have, A2S675-season), isa(A2S675-season, "Each season"), object(E3S675-have, A7S675-condition).
english(barrons.rule1735, "The moon is a satellite of the Earth").
pretty(barrons.rule1735, "EXAMPLE(Moon, Satellite), Moon = 'The moon', Satellite = 'a satellite of the Earth'.").
barrons.rule1735:: isa(A2S676-moon, "The moon") -> example(A2S676-moon, A5S676-satellite), of(A5S676-satellite, A8S676-Earth), isa(A8S676-Earth, "the Earth"), isa(A5S676-satellite, "a satellite").
english(barrons.rule1736, "The moon is a satellite of the Earth").
pretty(barrons.rule1736, "EXAMPLE(Moon, Satellite), Moon = 'The moon', Satellite = 'a satellite of the Earth'.").
barrons.rule1736:: of(A5S676-satellite, A8S676-Earth), isa(A8S676-Earth, "the Earth"), isa(A5S676-satellite, "a satellite") -> example(A2S676-moon, A5S676-satellite), isa(A2S676-moon, "The moon").
english(barrons.rule1737, "The moon does not give off its[the moon around the Earth] own light").
pretty(barrons.rule1737, "isa(not give off, 'not give off') -> not give off(Moon, Light).").
barrons.rule1737:: isa(E5S679-give, "not give off") -> agent(E5S679-give, A2S679-moon), isa(A2S679-moon, "The moon"), object(E5S679-give, A9S679-light), isa(A9S679-light, "its[the moon around the Earth] own light").
english(barrons.rule1738, "The moon does not give off its[the moon around the Earth] own light").
pretty(barrons.rule1738, "isa(Moon, 'The moon') -> not give off(Moon, Light).").
barrons.rule1738:: isa(A2S679-moon, "The moon") -> isa(E5S679-give, "not give off"), agent(E5S679-give, A2S679-moon), object(E5S679-give, A9S679-light), isa(A9S679-light, "its[the moon around the Earth] own light").
english(barrons.rule1739, "The moon does not give off its[the moon around the Earth] own light").
pretty(barrons.rule1739, "isa(Light, 'its[the moon around the Earth] own light') -> not give off(Moon, Light).").
barrons.rule1739:: isa(A9S679-light, "its[the moon around the Earth] own light") -> isa(E5S679-give, "not give off"), agent(E5S679-give, A2S679-moon), isa(A2S679-moon, "The moon"), object(E5S679-give, A9S679-light).
english(barrons.rule1740, "We see the moon in the sky because it[the moon around the Earth] reflects light from the sun").
pretty(barrons.rule1740, "EFFECT(reflect_from(Moon, Light, Sun), see(We)), Moon = 'the moon around the Earth', Light = 'light', Sun = 'the sun', We = 'We'.").
barrons.rule1740:: around(A5S678-moon, A8S678-Earth), isa(A8S678-Earth, "the Earth"), isa(E10S680-reflect, "reflect"), agent(E10S680-reflect, A5S678-moon), isa(A5S678-moon, "the moon"), object(E10S680-reflect, A11S680-light), isa(A11S680-light, "light"), from(E10S680-reflect, A14S680-sun), isa(A14S680-sun, "the sun") -> effect(E10S680-reflect, E2S680-see), isa(E2S680-see, "see"), agent(E2S680-see, A1S680-we), isa(A1S680-we, "We").
english(barrons.rule1741, "We see the moon in the sky because it[the moon around the Earth] reflects light from the sun").
pretty(barrons.rule1741, "EFFECT(reflect_from(Moon, Light, Sun), see(We)), Moon = 'the moon around the Earth', Light = 'light', Sun = 'the sun', We = 'We'.").
barrons.rule1741:: isa(E2S680-see, "see"), agent(E2S680-see, A1S680-we), isa(A1S680-we, "We") -> effect(E10S680-reflect, E2S680-see), around(A5S678-moon, A8S678-Earth), isa(A8S678-Earth, "the Earth"), isa(E10S680-reflect, "reflect"), agent(E10S680-reflect, A5S678-moon), isa(A5S678-moon, "the moon"), object(E10S680-reflect, A11S680-light), isa(A11S680-light, "light"), from(E10S680-reflect, A14S680-sun), isa(A14S680-sun, "the sun").
english(barrons.rule1742, "Because of the moon 's movement and the reflected light from the sun we see different portions of the moon at different times during the 29 1/2 days").
pretty(barrons.rule1742, "CAUSE(Movement, see_of(We, Portion, Movement, of(Light), at(Time))), Movement = 'the moon ’s movement from the sun', We = 'we', Portion = 'different portions of the moon', Movement = 'the moon ’s movement from the sun', Light = 'the reflected light', Time = 'different times during the 29 1/2 days'.").
barrons.rule1742:: from(A6S684-movement, A13S684-sun), isa(A13S684-sun, "the sun"), isa(A6S684-movement, "the moon 's movement") -> cause(A6S684-movement, E15S684-see), of(A17S684-portion, A20S684-moon), isa(A20S684-moon, "the moon"), isa(E15S684-see, "see"), agent(E15S684-see, A14S684-we), isa(A14S684-we, "we"), object(E15S684-see, A17S684-portion), isa(A17S684-portion, "different portions"), of(E15S684-see, A6S684-movement), isa(A6S684-movement, "the moon 's movement from the sun"), of(E15S684-see, A10S684-light), isa(A10S684-light, "the reflected light"), at(E15S684-see, A23S684-time), isa(A23S684-time, "different times during the 29 1/2 days").
english(barrons.rule1743, "Because of the moon 's movement and the reflected light from the sun we see different portions of the moon at different times during the 29 1/2 days").
pretty(barrons.rule1743, "CAUSE(Movement, see_of(We, Portion, Movement, of(Light), at(Time))), Movement = 'the moon ’s movement from the sun', We = 'we', Portion = 'different portions of the moon', Movement = 'the moon ’s movement from the sun', Light = 'the reflected light', Time = 'different times during the 29 1/2 days'.").
barrons.rule1743:: of(A17S684-portion, A20S684-moon), isa(A20S684-moon, "the moon"), isa(E15S684-see, "see"), agent(E15S684-see, A14S684-we), isa(A14S684-we, "we"), object(E15S684-see, A17S684-portion), isa(A17S684-portion, "different portions"), of(E15S684-see, A6S684-movement), isa(A6S684-movement, "the moon 's movement from the sun"), of(E15S684-see, A10S684-light), isa(A10S684-light, "the reflected light"), at(E15S684-see, A23S684-time), isa(A23S684-time, "different times during the 29 1/2 days") -> cause(A6S684-movement, E15S684-see), from(A6S684-movement, A13S684-sun), isa(A13S684-sun, "the sun"), isa(A6S684-movement, "the moon 's movement").
english(barrons.rule1744, "Because of the moon 's movement and the reflected light from the sun we see different portions of the moon at different times during the 29 1/2 days").
pretty(barrons.rule1744, "CAUSE(Light, see_of(We, Portion, Movement, of(Light), at(Time))), Light = 'the reflected light', We = 'we', Portion = 'different portions of the moon', Movement = 'the moon ’s movement from the sun', Light = 'the reflected light', Time = 'different times during the 29 1/2 days'.").
barrons.rule1744:: isa(A10S684-light, "the reflected light") -> cause(A10S684-light, E15S684-see), of(A17S684-portion, A20S684-moon), isa(A20S684-moon, "the moon"), isa(E15S684-see, "see"), agent(E15S684-see, A14S684-we), isa(A14S684-we, "we"), object(E15S684-see, A17S684-portion), isa(A17S684-portion, "different portions"), of(E15S684-see, A6S684-movement), isa(A6S684-movement, "the moon 's movement from the sun"), of(E15S684-see, A10S684-light), at(E15S684-see, A23S684-time), isa(A23S684-time, "different times during the 29 1/2 days").
english(barrons.rule1745, "Because of the moon 's movement and the reflected light from the sun we see different portions of the moon at different times during the 29 1/2 days").
pretty(barrons.rule1745, "CAUSE(Light, see_of(We, Portion, Movement, of(Light), at(Time))), Light = 'the reflected light', We = 'we', Portion = 'different portions of the moon', Movement = 'the moon ’s movement from the sun', Light = 'the reflected light', Time = 'different times during the 29 1/2 days'.").
barrons.rule1745:: of(A17S684-portion, A20S684-moon), isa(A20S684-moon, "the moon"), isa(E15S684-see, "see"), agent(E15S684-see, A14S684-we), isa(A14S684-we, "we"), object(E15S684-see, A17S684-portion), isa(A17S684-portion, "different portions"), of(E15S684-see, A6S684-movement), isa(A6S684-movement, "the moon 's movement from the sun"), of(E15S684-see, A10S684-light), isa(A10S684-light, "the reflected light"), at(E15S684-see, A23S684-time), isa(A23S684-time, "different times during the 29 1/2 days") -> cause(A10S684-light, E15S684-see).
english(barrons.rule1746, "The different portions of the moon that we[we] see are called phases").
pretty(barrons.rule1746, "EXAMPLE(Portion, Phase), Portion = 'The different portions of the moon', Phase = 'phases'.").
barrons.rule1746:: of(A3S685-portion, A6S685-moon), isa(A6S685-moon, "the moon"), isa(A3S685-portion, "The different portions") -> example(A3S685-portion, A12S685-phase), isa(A12S685-phase, "phases").
english(barrons.rule1747, "The different portions of the moon that we[we] see are called phases").
pretty(barrons.rule1747, "EXAMPLE(Portion, Phase), Portion = 'The different portions of the moon', Phase = 'phases'.").
barrons.rule1747:: isa(A12S685-phase, "phases") -> example(A3S685-portion, A12S685-phase), of(A3S685-portion, A6S685-moon), isa(A6S685-moon, "the moon"), isa(A3S685-portion, "The different portions").
english(barrons.rule1748, "Because the moon and Earth are constantly moving it is possible for each to move into the shadow created by the other").
pretty(barrons.rule1748, "EFFECT(move(Moon, Constantly), be(It, Possible)), Moon = 'the moon', Constantly = 'constantly', It = 'it', Possible = 'Because the moon and Earth are constantly moving possible for each to move into the shadow created by the other'.").
barrons.rule1748:: isa(E8S692-move, "move"), agent(E8S692-move, A3S692-moon), isa(A3S692-moon, "the moon"), arg(E8S692-move, A7S692-constantly), isa(A7S692-constantly, "constantly") -> effect(E8S692-move, E10S692-be), isa(E10S692-be, "be"), agent(E10S692-be, A9S692-it), isa(A9S692-it, "it"), object(E10S692-be, A11S692-possible), isa(A11S692-possible, "possible").
english(barrons.rule1749, "Because the moon and Earth are constantly moving it is possible for each to move into the shadow created by the other").
pretty(barrons.rule1749, "EFFECT(move(Moon, Constantly), be(It, Possible)), Moon = 'the moon', Constantly = 'constantly', It = 'it', Possible = 'Because the moon and Earth are constantly moving possible for each to move into the shadow created by the other'.").
barrons.rule1749:: isa(E10S692-be, "be"), agent(E10S692-be, A9S692-it), isa(A9S692-it, "it"), object(E10S692-be, A11S692-possible), isa(A11S692-possible, "possible") -> effect(E8S692-move, E10S692-be), isa(E8S692-move, "move"), agent(E8S692-move, A3S692-moon), isa(A3S692-moon, "the moon"), arg(E8S692-move, A7S692-constantly), isa(A7S692-constantly, "constantly").
english(barrons.rule1750, "Because the moon and Earth are constantly moving it is possible for each to move into the shadow created by the other").
pretty(barrons.rule1750, "EFFECT(move(Earth, Constantly), be(It, Possible)), Earth = 'Earth', Constantly = 'constantly', It = 'it', Possible = 'Because the moon and Earth are constantly moving possible for each to move into the shadow created by the other'.").
barrons.rule1750:: isa(E8S692-move, "move"), agent(E8S692-move, A5S692-Earth), isa(A5S692-Earth, "Earth"), arg(E8S692-move, A7S692-constantly), isa(A7S692-constantly, "constantly") -> effect(E8S692-move, E10S692-be), isa(E10S692-be, "be"), agent(E10S692-be, A9S692-it), isa(A9S692-it, "it"), object(E10S692-be, A11S692-possible), isa(A11S692-possible, "possible").
english(barrons.rule1751, "Because the moon and Earth are constantly moving it is possible for each to move into the shadow created by the other").
pretty(barrons.rule1751, "EFFECT(move(Earth, Constantly), be(It, Possible)), Earth = 'Earth', Constantly = 'constantly', It = 'it', Possible = 'Because the moon and Earth are constantly moving possible for each to move into the shadow created by the other'.").
barrons.rule1751:: isa(E10S692-be, "be"), agent(E10S692-be, A9S692-it), isa(A9S692-it, "it"), object(E10S692-be, A11S692-possible), isa(A11S692-possible, "possible") -> effect(E8S692-move, E10S692-be), isa(E8S692-move, "move"), agent(E8S692-move, A5S692-Earth), isa(A5S692-Earth, "Earth"), arg(E8S692-move, A7S692-constantly), isa(A7S692-constantly, "constantly").
english(barrons.rule1752, "When one celestial body moves into the shadow of another the event is known as an eclipse").
pretty(barrons.rule1752, "WHEN(know_as(Event, Eclipse), move_into(Shadow)), Event = 'the event', Eclipse = 'an eclipse', Shadow = 'the shadow of another'.").
barrons.rule1752:: isa(E14S693-know, "know"), object(E14S693-know, A12S693-event), isa(A12S693-event, "the event"), as(E14S693-know, A17S693-eclipse), isa(A17S693-eclipse, "an eclipse") -> when(E14S693-know, E5S693-move), isa(E5S693-move, "move"), into(E5S693-move, A8S693-shadow), isa(A8S693-shadow, "the shadow of another").
english(barrons.rule1753, "When one celestial body moves into the shadow of another the event is known as an eclipse").
pretty(barrons.rule1753, "WHEN(know_as(Event, Eclipse), move_into(Shadow)), Event = 'the event', Eclipse = 'an eclipse', Shadow = 'the shadow of another'.").
barrons.rule1753:: isa(E5S693-move, "move"), into(E5S693-move, A8S693-shadow), isa(A8S693-shadow, "the shadow of another") -> when(E14S693-know, E5S693-move), isa(E14S693-know, "know"), object(E14S693-know, A12S693-event), isa(A12S693-event, "the event"), as(E14S693-know, A17S693-eclipse), isa(A17S693-eclipse, "an eclipse").
english(barrons.rule1754, "A lunar eclipse occurs when the Earth comes between the sun and a full moon").
pretty(barrons.rule1754, "WHEN(occur(Eclipse), come_between(Earth, Sun, between(Moon))), Eclipse = 'A lunar eclipse', Earth = 'the Earth', Sun = 'the sun', Moon = 'a full moon'.").
barrons.rule1754:: isa(E4S695-occur, "occur"), agent(E4S695-occur, A3S695-eclipse), isa(A3S695-eclipse, "A lunar eclipse") -> when(E4S695-occur, E8S695-come), isa(E8S695-come, "come"), agent(E8S695-come, A7S695-Earth), isa(A7S695-Earth, "the Earth"), between(E8S695-come, A11S695-sun), isa(A11S695-sun, "the sun"), between(E8S695-come, A15S695-moon), isa(A15S695-moon, "a full moon").
english(barrons.rule1755, "A lunar eclipse occurs when the Earth comes between the sun and a full moon").
pretty(barrons.rule1755, "WHEN(occur(Eclipse), come_between(Earth, Sun, between(Moon))), Eclipse = 'A lunar eclipse', Earth = 'the Earth', Sun = 'the sun', Moon = 'a full moon'.").
barrons.rule1755:: isa(E8S695-come, "come"), agent(E8S695-come, A7S695-Earth), isa(A7S695-Earth, "the Earth"), between(E8S695-come, A11S695-sun), isa(A11S695-sun, "the sun"), between(E8S695-come, A15S695-moon), isa(A15S695-moon, "a full moon") -> when(E4S695-occur, E8S695-come), isa(E4S695-occur, "occur"), agent(E4S695-occur, A3S695-eclipse), isa(A3S695-eclipse, "A lunar eclipse").
english(barrons.rule1756, "During a lunar eclipse the moon appears to be a reddish-orange color when viewed from Earth").
pretty(barrons.rule1756, "WHEN(be(Moon, Color), view_from(Moon, Earth)), Moon = 'the moon', Color = 'a reddish-orange color when viewed from Earth', Earth = 'Earth'.").
barrons.rule1756:: isa(E10S696-be, "be"), agent(E10S696-be, A7S696-moon), isa(A7S696-moon, "the moon"), object(E10S696-be, A13S696-color), isa(A13S696-color, "a reddish-orange color") -> when(E10S696-be, E15S696-view), isa(E15S696-view, "view"), agent(E15S696-view, A7S696-moon), from(E15S696-view, A17S696-Earth), isa(A17S696-Earth, "Earth").
english(barrons.rule1757, "During a lunar eclipse the moon appears to be a reddish-orange color when viewed from Earth").
pretty(barrons.rule1757, "WHEN(be(Moon, Color), view_from(Moon, Earth)), Moon = 'the moon', Color = 'a reddish-orange color when viewed from Earth', Earth = 'Earth'.").
barrons.rule1757:: isa(E15S696-view, "view"), agent(E15S696-view, A7S696-moon), isa(A7S696-moon, "the moon"), from(E15S696-view, A17S696-Earth), isa(A17S696-Earth, "Earth") -> when(E10S696-be, E15S696-view), isa(E10S696-be, "be"), agent(E10S696-be, A7S696-moon), object(E10S696-be, A13S696-color), isa(A13S696-color, "a reddish-orange color").
english(barrons.rule1758, "A solar eclipse occurs when the moon comes between the sun and the Earth").
pretty(barrons.rule1758, "WHEN(occur(Eclipse), come_between(Moon, Sun, between(Earth))), Eclipse = 'A solar eclipse', Moon = 'the moon', Sun = 'the sun', Earth = 'the Earth'.").
barrons.rule1758:: isa(E4S697-occur, "occur"), agent(E4S697-occur, A3S697-eclipse), isa(A3S697-eclipse, "A solar eclipse") -> when(E4S697-occur, E8S697-come), isa(E8S697-come, "come"), agent(E8S697-come, A7S697-moon), isa(A7S697-moon, "the moon"), between(E8S697-come, A11S697-sun), isa(A11S697-sun, "the sun"), between(E8S697-come, A14S697-Earth), isa(A14S697-Earth, "the Earth").
english(barrons.rule1759, "A solar eclipse occurs when the moon comes between the sun and the Earth").
pretty(barrons.rule1759, "WHEN(occur(Eclipse), come_between(Moon, Sun, between(Earth))), Eclipse = 'A solar eclipse', Moon = 'the moon', Sun = 'the sun', Earth = 'the Earth'.").
barrons.rule1759:: isa(E8S697-come, "come"), agent(E8S697-come, A7S697-moon), isa(A7S697-moon, "the moon"), between(E8S697-come, A11S697-sun), isa(A11S697-sun, "the sun"), between(E8S697-come, A14S697-Earth), isa(A14S697-Earth, "the Earth") -> when(E4S697-occur, E8S697-come), isa(E4S697-occur, "occur"), agent(E4S697-occur, A3S697-eclipse), isa(A3S697-eclipse, "A solar eclipse").
english(barrons.rule1760, "The moon blocks the sun 's light from reaching Earth").
pretty(barrons.rule1760, "isa(block, 'blocks') -> block_from(Moon, Light, Reach).").
barrons.rule1760:: isa(E3S699-block, "block") -> agent(E3S699-block, A2S699-moon), isa(A2S699-moon, "The moon"), object(E3S699-block, A7S699-light), isa(A7S699-light, "the sun 's light"), from(E3S699-block, A9S699-reach), isa(A9S699-reach, "reaching Earth").
english(barrons.rule1761, "The moon blocks the sun 's light from reaching Earth").
pretty(barrons.rule1761, "isa(Moon, 'The moon') -> block_from(Moon, Light, Reach).").
barrons.rule1761:: isa(A2S699-moon, "The moon") -> isa(E3S699-block, "block"), agent(E3S699-block, A2S699-moon), object(E3S699-block, A7S699-light), isa(A7S699-light, "the sun 's light"), from(E3S699-block, A9S699-reach), isa(A9S699-reach, "reaching Earth").
english(barrons.rule1762, "The moon blocks the sun 's light from reaching Earth").
pretty(barrons.rule1762, "isa(Light, 'the sun ’s light') -> block_from(Moon, Light, Reach).").
barrons.rule1762:: isa(A7S699-light, "the sun 's light") -> isa(E3S699-block, "block"), agent(E3S699-block, A2S699-moon), isa(A2S699-moon, "The moon"), object(E3S699-block, A7S699-light), from(E3S699-block, A9S699-reach), isa(A9S699-reach, "reaching Earth").
english(barrons.rule1763, "The moon blocks the sun 's light from reaching Earth").
pretty(barrons.rule1763, "isa(Reach, 'reaching Earth') -> block_from(Moon, Light, Reach).").
barrons.rule1763:: isa(A9S699-reach, "reaching Earth") -> isa(E3S699-block, "block"), agent(E3S699-block, A2S699-moon), isa(A2S699-moon, "The moon"), object(E3S699-block, A7S699-light), isa(A7S699-light, "the sun 's light"), from(E3S699-block, A9S699-reach).
english(barrons.rule1764, "Weather describes the conditions in the sky on any particular day").
pretty(barrons.rule1764, "isa(Sky, 'the sky') -> describe_on(Weather, Condition, Day).").
barrons.rule1764:: isa(A7S701-sky, "the sky") -> in(A4S701-condition, A7S701-sky), isa(E2S701-describe, "describe"), agent(E2S701-describe, A1S701-weather), isa(A1S701-weather, "Weather"), object(E2S701-describe, A4S701-condition), isa(A4S701-condition, "the conditions"), on(E2S701-describe, A11S701-day), isa(A11S701-day, "any particular day").
english(barrons.rule1765, "Weather describes the conditions in the sky on any particular day").
pretty(barrons.rule1765, "isa(describe, 'describes') -> describe_on(Weather, Condition, Day).").
barrons.rule1765:: isa(E2S701-describe, "describe") -> in(A4S701-condition, A7S701-sky), isa(A7S701-sky, "the sky"), agent(E2S701-describe, A1S701-weather), isa(A1S701-weather, "Weather"), object(E2S701-describe, A4S701-condition), isa(A4S701-condition, "the conditions"), on(E2S701-describe, A11S701-day), isa(A11S701-day, "any particular day").
english(barrons.rule1766, "Weather describes the conditions in the sky on any particular day").
pretty(barrons.rule1766, "isa(Weather, 'Weather') -> describe_on(Weather, Condition, Day).").
barrons.rule1766:: isa(A1S701-weather, "Weather") -> in(A4S701-condition, A7S701-sky), isa(A7S701-sky, "the sky"), isa(E2S701-describe, "describe"), agent(E2S701-describe, A1S701-weather), object(E2S701-describe, A4S701-condition), isa(A4S701-condition, "the conditions"), on(E2S701-describe, A11S701-day), isa(A11S701-day, "any particular day").
english(barrons.rule1767, "Weather describes the conditions in the sky on any particular day").
pretty(barrons.rule1767, "isa(Condition, 'the conditions in the sky') -> describe_on(Weather, Condition, Day).").
barrons.rule1767:: isa(A4S701-condition, "the conditions") -> in(A4S701-condition, A7S701-sky), isa(A7S701-sky, "the sky"), isa(E2S701-describe, "describe"), agent(E2S701-describe, A1S701-weather), isa(A1S701-weather, "Weather"), object(E2S701-describe, A4S701-condition), on(E2S701-describe, A11S701-day), isa(A11S701-day, "any particular day").
english(barrons.rule1768, "Weather describes the conditions in the sky on any particular day").
pretty(barrons.rule1768, "isa(Day, 'any particular day') -> describe_on(Weather, Condition, Day).").
barrons.rule1768:: isa(A11S701-day, "any particular day") -> in(A4S701-condition, A7S701-sky), isa(A7S701-sky, "the sky"), isa(E2S701-describe, "describe"), agent(E2S701-describe, A1S701-weather), isa(A1S701-weather, "Weather"), object(E2S701-describe, A4S701-condition), isa(A4S701-condition, "the conditions"), on(E2S701-describe, A11S701-day).
english(barrons.rule1769, "Climate describes the weather conditions in an area over time").
pretty(barrons.rule1769, "isa(Area, 'an area') -> describe_over(Climate, Condition, Time).").
barrons.rule1769:: isa(A8S702-area, "an area") -> in(A5S702-condition, A8S702-area), isa(E2S702-describe, "describe"), agent(E2S702-describe, A1S702-climate), isa(A1S702-climate, "Climate"), object(E2S702-describe, A5S702-condition), isa(A5S702-condition, "the weather conditions"), over(E2S702-describe, A10S702-time), isa(A10S702-time, "time").
english(barrons.rule1770, "Climate describes the weather conditions in an area over time").
pretty(barrons.rule1770, "isa(describe, 'describes') -> describe_over(Climate, Condition, Time).").
barrons.rule1770:: isa(E2S702-describe, "describe") -> in(A5S702-condition, A8S702-area), isa(A8S702-area, "an area"), agent(E2S702-describe, A1S702-climate), isa(A1S702-climate, "Climate"), object(E2S702-describe, A5S702-condition), isa(A5S702-condition, "the weather conditions"), over(E2S702-describe, A10S702-time), isa(A10S702-time, "time").
english(barrons.rule1771, "Climate describes the weather conditions in an area over time").
pretty(barrons.rule1771, "isa(Climate, 'Climate') -> describe_over(Climate, Condition, Time).").
barrons.rule1771:: isa(A1S702-climate, "Climate") -> in(A5S702-condition, A8S702-area), isa(A8S702-area, "an area"), isa(E2S702-describe, "describe"), agent(E2S702-describe, A1S702-climate), object(E2S702-describe, A5S702-condition), isa(A5S702-condition, "the weather conditions"), over(E2S702-describe, A10S702-time), isa(A10S702-time, "time").
english(barrons.rule1772, "Climate describes the weather conditions in an area over time").
pretty(barrons.rule1772, "isa(Condition, 'the weather conditions in an area') -> describe_over(Climate, Condition, Time).").
barrons.rule1772:: isa(A5S702-condition, "the weather conditions") -> in(A5S702-condition, A8S702-area), isa(A8S702-area, "an area"), isa(E2S702-describe, "describe"), agent(E2S702-describe, A1S702-climate), isa(A1S702-climate, "Climate"), object(E2S702-describe, A5S702-condition), over(E2S702-describe, A10S702-time), isa(A10S702-time, "time").
english(barrons.rule1773, "Climate describes the weather conditions in an area over time").
pretty(barrons.rule1773, "isa(Time, 'time') -> describe_over(Climate, Condition, Time).").
barrons.rule1773:: isa(A10S702-time, "time") -> in(A5S702-condition, A8S702-area), isa(A8S702-area, "an area"), isa(E2S702-describe, "describe"), agent(E2S702-describe, A1S702-climate), isa(A1S702-climate, "Climate"), object(E2S702-describe, A5S702-condition), isa(A5S702-condition, "the weather conditions"), over(E2S702-describe, A10S702-time).
english(barrons.rule1774, "Weather observations are made using human senses as well a variety of instruments").
pretty(barrons.rule1774, "EFFECT(make(Observation), use(Sens)), Observation = 'Weather observations', Sens = 'human senses'.").
barrons.rule1774:: isa(E4S703-make, "make"), object(E4S703-make, A2S703-observation), isa(A2S703-observation, "Weather observations") -> effect(E4S703-make, E5S703-use), isa(E5S703-use, "use"), object(E5S703-use, A7S703-sens), isa(A7S703-sens, "human senses").
english(barrons.rule1775, "Weather observations are made using human senses as well a variety of instruments").
pretty(barrons.rule1775, "EFFECT(make(Observation), use(Sens)), Observation = 'Weather observations', Sens = 'human senses'.").
barrons.rule1775:: isa(E5S703-use, "use"), object(E5S703-use, A7S703-sens), isa(A7S703-sens, "human senses") -> effect(E4S703-make, E5S703-use), isa(E4S703-make, "make"), object(E4S703-make, A2S703-observation), isa(A2S703-observation, "Weather observations").
english(barrons.rule1776, "A barometer measures air pressure").
pretty(barrons.rule1776, "isa(measure, 'measures') -> measure(Barometer, Pressure).").
barrons.rule1776:: isa(E3S705-measure, "measure") -> agent(E3S705-measure, A2S705-barometer), isa(A2S705-barometer, "A barometer"), object(E3S705-measure, A5S705-pressure), isa(A5S705-pressure, "air pressure").
english(barrons.rule1777, "A barometer measures air pressure").
pretty(barrons.rule1777, "isa(Barometer, 'A barometer') -> measure(Barometer, Pressure).").
barrons.rule1777:: isa(A2S705-barometer, "A barometer") -> isa(E3S705-measure, "measure"), agent(E3S705-measure, A2S705-barometer), object(E3S705-measure, A5S705-pressure), isa(A5S705-pressure, "air pressure").
english(barrons.rule1778, "A barometer measures air pressure").
pretty(barrons.rule1778, "isa(Pressure, 'air pressure') -> measure(Barometer, Pressure).").
barrons.rule1778:: isa(A5S705-pressure, "air pressure") -> isa(E3S705-measure, "measure"), agent(E3S705-measure, A2S705-barometer), isa(A2S705-barometer, "A barometer"), object(E3S705-measure, A5S705-pressure).
english(barrons.rule1779, "A barometer measures air pressure").
pretty(barrons.rule1779, "PURPOSE(Barometer, measure(Barometer, Pressure)), Barometer = 'A barometer', Pressure = 'air pressure'.").
barrons.rule1779:: isa(A2S705-barometer, "A barometer") -> purpose(A2S705-barometer, E3S705-measure), isa(E3S705-measure, "measure"), agent(E3S705-measure, A2S705-barometer), object(E3S705-measure, A5S705-pressure), isa(A5S705-pressure, "air pressure").
english(barrons.rule1780, "A barometer measures air pressure").
pretty(barrons.rule1780, "PURPOSE(Barometer, measure(Barometer, Pressure)), Barometer = 'A barometer', Pressure = 'air pressure'.").
barrons.rule1780:: isa(E3S705-measure, "measure"), agent(E3S705-measure, A2S705-barometer), isa(A2S705-barometer, "A barometer"), object(E3S705-measure, A5S705-pressure), isa(A5S705-pressure, "air pressure") -> purpose(A2S705-barometer, E3S705-measure).
english(barrons.rule1781, "An anemometer measures wind speed").
pretty(barrons.rule1781, "isa(measure, 'measures') -> measure(Anemometer, Speed).").
barrons.rule1781:: isa(E3S706-measure, "measure") -> agent(E3S706-measure, A2S706-anemometer), isa(A2S706-anemometer, "An anemometer"), object(E3S706-measure, A5S706-speed), isa(A5S706-speed, "wind speed").
english(barrons.rule1782, "An anemometer measures wind speed").
pretty(barrons.rule1782, "isa(Anemometer, 'An anemometer') -> measure(Anemometer, Speed).").
barrons.rule1782:: isa(A2S706-anemometer, "An anemometer") -> isa(E3S706-measure, "measure"), agent(E3S706-measure, A2S706-anemometer), object(E3S706-measure, A5S706-speed), isa(A5S706-speed, "wind speed").
english(barrons.rule1783, "An anemometer measures wind speed").
pretty(barrons.rule1783, "isa(Speed, 'wind speed') -> measure(Anemometer, Speed).").
barrons.rule1783:: isa(A5S706-speed, "wind speed") -> isa(E3S706-measure, "measure"), agent(E3S706-measure, A2S706-anemometer), isa(A2S706-anemometer, "An anemometer"), object(E3S706-measure, A5S706-speed).
english(barrons.rule1784, "An anemometer measures wind speed").
pretty(barrons.rule1784, "PURPOSE(Anemometer, measure(Anemometer, Speed)), Anemometer = 'An anemometer', Speed = 'wind speed'.").
barrons.rule1784:: isa(A2S706-anemometer, "An anemometer") -> purpose(A2S706-anemometer, E3S706-measure), isa(E3S706-measure, "measure"), agent(E3S706-measure, A2S706-anemometer), object(E3S706-measure, A5S706-speed), isa(A5S706-speed, "wind speed").
english(barrons.rule1785, "An anemometer measures wind speed").
pretty(barrons.rule1785, "PURPOSE(Anemometer, measure(Anemometer, Speed)), Anemometer = 'An anemometer', Speed = 'wind speed'.").
barrons.rule1785:: isa(E3S706-measure, "measure"), agent(E3S706-measure, A2S706-anemometer), isa(A2S706-anemometer, "An anemometer"), object(E3S706-measure, A5S706-speed), isa(A5S706-speed, "wind speed") -> purpose(A2S706-anemometer, E3S706-measure).
english(barrons.rule1786, "A thermometer measures temperature").
pretty(barrons.rule1786, "isa(measure, 'measures') -> measure(Thermometer, Temperature).").
barrons.rule1786:: isa(E3S708-measure, "measure") -> agent(E3S708-measure, A2S708-thermometer), isa(A2S708-thermometer, "A thermometer"), object(E3S708-measure, A4S708-temperature), isa(A4S708-temperature, "temperature").
english(barrons.rule1787, "A thermometer measures temperature").
pretty(barrons.rule1787, "isa(Thermometer, 'A thermometer') -> measure(Thermometer, Temperature).").
barrons.rule1787:: isa(A2S708-thermometer, "A thermometer") -> isa(E3S708-measure, "measure"), agent(E3S708-measure, A2S708-thermometer), object(E3S708-measure, A4S708-temperature), isa(A4S708-temperature, "temperature").
english(barrons.rule1788, "A thermometer measures temperature").
pretty(barrons.rule1788, "isa(Temperature, 'temperature') -> measure(Thermometer, Temperature).").
barrons.rule1788:: isa(A4S708-temperature, "temperature") -> isa(E3S708-measure, "measure"), agent(E3S708-measure, A2S708-thermometer), isa(A2S708-thermometer, "A thermometer"), object(E3S708-measure, A4S708-temperature).
english(barrons.rule1789, "A thermometer measures temperature").
pretty(barrons.rule1789, "PURPOSE(Thermometer, measure(Thermometer, Temperature)), Thermometer = 'A thermometer', Temperature = 'temperature'.").
barrons.rule1789:: isa(A2S708-thermometer, "A thermometer") -> purpose(A2S708-thermometer, E3S708-measure), isa(E3S708-measure, "measure"), agent(E3S708-measure, A2S708-thermometer), object(E3S708-measure, A4S708-temperature), isa(A4S708-temperature, "temperature").
english(barrons.rule1790, "A thermometer measures temperature").
pretty(barrons.rule1790, "PURPOSE(Thermometer, measure(Thermometer, Temperature)), Thermometer = 'A thermometer', Temperature = 'temperature'.").
barrons.rule1790:: isa(E3S708-measure, "measure"), agent(E3S708-measure, A2S708-thermometer), isa(A2S708-thermometer, "A thermometer"), object(E3S708-measure, A4S708-temperature), isa(A4S708-temperature, "temperature") -> purpose(A2S708-thermometer, E3S708-measure).
english(barrons.rule1791, "Air pressure is the pressure against the surface of the Earth by the atmosphere").
pretty(barrons.rule1791, "EXAMPLE(Pressure, Pressure), Pressure = 'Air pressure', Pressure = 'the pressure against the surface of the Earth by the atmosphere'.").
barrons.rule1791:: isa(A2S709-pressure, "Air pressure") -> example(A2S709-pressure, A5S709-pressure), of(A8S709-surface, A11S709-Earth), isa(A11S709-Earth, "the Earth"), against(A5S709-pressure, A8S709-surface), isa(A8S709-surface, "the surface"), by(A5S709-pressure, A14S709-atmosphere), isa(A14S709-atmosphere, "the atmosphere"), isa(A5S709-pressure, "the pressure").
english(barrons.rule1792, "Air pressure is the pressure against the surface of the Earth by the atmosphere").
pretty(barrons.rule1792, "EXAMPLE(Pressure, Pressure), Pressure = 'Air pressure', Pressure = 'the pressure against the surface of the Earth by the atmosphere'.").
barrons.rule1792:: of(A8S709-surface, A11S709-Earth), isa(A11S709-Earth, "the Earth"), against(A5S709-pressure, A8S709-surface), isa(A8S709-surface, "the surface"), by(A5S709-pressure, A14S709-atmosphere), isa(A14S709-atmosphere, "the atmosphere"), isa(A5S709-pressure, "the pressure") -> example(A2S709-pressure, A5S709-pressure), isa(A2S709-pressure, "Air pressure").
english(barrons.rule1793, "Scientists use an anemometer to determine wind speed").
pretty(barrons.rule1793, "EFFECT(use(Scientist, Anemometer), determine(Scientist, Speed)), Scientist = 'Scientists', Anemometer = 'an anemometer', Speed = 'wind speed'.").
barrons.rule1793:: isa(E2S713-use, "use"), agent(E2S713-use, A1S713-scientist), isa(A1S713-scientist, "Scientists"), object(E2S713-use, A4S713-anemometer), isa(A4S713-anemometer, "an anemometer") -> effect(E2S713-use, E6S713-determine), isa(E6S713-determine, "determine"), agent(E6S713-determine, A1S713-scientist), object(E6S713-determine, A8S713-speed), isa(A8S713-speed, "wind speed").
english(barrons.rule1794, "Scientists use an anemometer to determine wind speed").
pretty(barrons.rule1794, "EFFECT(use(Scientist, Anemometer), determine(Scientist, Speed)), Scientist = 'Scientists', Anemometer = 'an anemometer', Speed = 'wind speed'.").
barrons.rule1794:: isa(E6S713-determine, "determine"), agent(E6S713-determine, A1S713-scientist), isa(A1S713-scientist, "Scientists"), object(E6S713-determine, A8S713-speed), isa(A8S713-speed, "wind speed") -> effect(E2S713-use, E6S713-determine), isa(E2S713-use, "use"), agent(E2S713-use, A1S713-scientist), object(E2S713-use, A4S713-anemometer), isa(A4S713-anemometer, "an anemometer").
english(barrons.rule1795, "Wind direction is also important because it[Wind direction] can indicate the temperature and moisture level of the wind").
pretty(barrons.rule1795, "EFFECT(indicate(Direction, Level), be(Direction, Important)), Direction = 'Wind direction', Level = 'the temperature and moisture level of the wind', Important = 'important because it[Wind direction] can indicate the temperature and moisture level of the wind'.").
barrons.rule1795:: isa(E9S716-indicate, "indicate"), agent(E9S716-indicate, A2S716-direction), isa(A2S716-direction, "Wind direction"), arg(E9S716-indicate, A14S716-level), isa(A14S716-level, "the temperature and moisture level of the wind") -> effect(E9S716-indicate, E3S716-be), isa(E3S716-be, "be"), agent(E3S716-be, A2S716-direction), object(E3S716-be, A5S716-important), isa(A5S716-important, "important").
english(barrons.rule1796, "Wind direction is also important because it[Wind direction] can indicate the temperature and moisture level of the wind").
pretty(barrons.rule1796, "EFFECT(indicate(Direction, Level), be(Direction, Important)), Direction = 'Wind direction', Level = 'the temperature and moisture level of the wind', Important = 'important because it[Wind direction] can indicate the temperature and moisture level of the wind'.").
barrons.rule1796:: isa(E3S716-be, "be"), agent(E3S716-be, A2S716-direction), isa(A2S716-direction, "Wind direction"), object(E3S716-be, A5S716-important), isa(A5S716-important, "important") -> effect(E9S716-indicate, E3S716-be), isa(E9S716-indicate, "indicate"), agent(E9S716-indicate, A2S716-direction), arg(E9S716-indicate, A14S716-level), isa(A14S716-level, "the temperature and moisture level of the wind").
english(barrons.rule1797, "A southwest wind would bring warm air to New York from the south but a northeast wind would most likely bring cold wet winds").
pretty(barrons.rule1797, "isa(bring, 'bring') -> bring_to(Wind, Air, York, from(South)).").
barrons.rule1797:: isa(E5S717-bring, "bring") -> agent(E5S717-bring, A3S717-wind), isa(A3S717-wind, "A southwest wind"), object(E5S717-bring, A7S717-air), isa(A7S717-air, "warm air"), to(E5S717-bring, A10S717-York), isa(A10S717-York, "New York"), from(E5S717-bring, A13S717-south), isa(A13S717-south, "the south").
english(barrons.rule1798, "A southwest wind would bring warm air to New York from the south but a northeast wind would most likely bring cold wet winds").
pretty(barrons.rule1798, "isa(Wind, 'A southwest wind') -> bring_to(Wind, Air, York, from(South)).").
barrons.rule1798:: isa(A3S717-wind, "A southwest wind") -> isa(E5S717-bring, "bring"), agent(E5S717-bring, A3S717-wind), object(E5S717-bring, A7S717-air), isa(A7S717-air, "warm air"), to(E5S717-bring, A10S717-York), isa(A10S717-York, "New York"), from(E5S717-bring, A13S717-south), isa(A13S717-south, "the south").
english(barrons.rule1799, "A southwest wind would bring warm air to New York from the south but a northeast wind would most likely bring cold wet winds").
pretty(barrons.rule1799, "isa(Air, 'warm air') -> bring_to(Wind, Air, York, from(South)).").
barrons.rule1799:: isa(A7S717-air, "warm air") -> isa(E5S717-bring, "bring"), agent(E5S717-bring, A3S717-wind), isa(A3S717-wind, "A southwest wind"), object(E5S717-bring, A7S717-air), to(E5S717-bring, A10S717-York), isa(A10S717-York, "New York"), from(E5S717-bring, A13S717-south), isa(A13S717-south, "the south").
english(barrons.rule1800, "A southwest wind would bring warm air to New York from the south but a northeast wind would most likely bring cold wet winds").
pretty(barrons.rule1800, "isa(York, 'New York') -> bring_to(Wind, Air, York, from(South)).").
barrons.rule1800:: isa(A10S717-York, "New York") -> isa(E5S717-bring, "bring"), agent(E5S717-bring, A3S717-wind), isa(A3S717-wind, "A southwest wind"), object(E5S717-bring, A7S717-air), isa(A7S717-air, "warm air"), to(E5S717-bring, A10S717-York), from(E5S717-bring, A13S717-south), isa(A13S717-south, "the south").
english(barrons.rule1801, "A southwest wind would bring warm air to New York from the south but a northeast wind would most likely bring cold wet winds").
pretty(barrons.rule1801, "isa(South, 'the south') -> bring_to(Wind, Air, York, from(South)).").
barrons.rule1801:: isa(A13S717-south, "the south") -> isa(E5S717-bring, "bring"), agent(E5S717-bring, A3S717-wind), isa(A3S717-wind, "A southwest wind"), object(E5S717-bring, A7S717-air), isa(A7S717-air, "warm air"), to(E5S717-bring, A10S717-York), isa(A10S717-York, "New York"), from(E5S717-bring, A13S717-south).
english(barrons.rule1802, "A rain gauge is used to measure rainfall").
pretty(barrons.rule1802, "PURPOSE(Gauge, measure(Gauge, Rainfall)), Gauge = 'A rain gauge', Rainfall = 'rainfall'.").
barrons.rule1802:: isa(A3S718-gauge, "A rain gauge") -> purpose(A3S718-gauge, E7S718-measure), isa(E7S718-measure, "measure"), agent(E7S718-measure, A3S718-gauge), object(E7S718-measure, A8S718-rainfall), isa(A8S718-rainfall, "rainfall").
english(barrons.rule1803, "A rain gauge is used to measure rainfall").
pretty(barrons.rule1803, "PURPOSE(Gauge, measure(Gauge, Rainfall)), Gauge = 'A rain gauge', Rainfall = 'rainfall'.").
barrons.rule1803:: isa(E7S718-measure, "measure"), agent(E7S718-measure, A3S718-gauge), isa(A3S718-gauge, "A rain gauge"), object(E7S718-measure, A8S718-rainfall), isa(A8S718-rainfall, "rainfall") -> purpose(A3S718-gauge, E7S718-measure).
english(barrons.rule1804, "The amount of rain that falls can be important in areas that need rainwater for everyday use especially farmers who need rainwater for their[too much rainfall] crops").
pretty(barrons.rule1804, "PURPOSE(need(Area, Rainwater), Use), Area = 'areas', Rainwater = 'rainwater for everyday use especially farmers who need rainwater for their[too much rainfall] crops', Use = 'everyday use'.").
barrons.rule1804:: for(A14S719-rainwater, A17S719-use), isa(A17S719-use, "everyday use"), isa(E13S719-need, "need"), agent(E13S719-need, A11S719-area), isa(A11S719-area, "areas"), object(E13S719-need, A14S719-rainwater), isa(A14S719-rainwater, "rainwater") -> purpose(E13S719-need, A17S719-use).
english(barrons.rule1805, "The amount of rain that falls can be important in areas that need rainwater for everyday use especially farmers who need rainwater for their[too much rainfall] crops").
pretty(barrons.rule1805, "PURPOSE(need(Area, Rainwater), Use), Area = 'areas', Rainwater = 'rainwater for everyday use especially farmers who need rainwater for their[too much rainfall] crops', Use = 'everyday use'.").
barrons.rule1805:: isa(A17S719-use, "everyday use") -> purpose(E13S719-need, A17S719-use), for(A14S719-rainwater, A17S719-use), isa(E13S719-need, "need"), agent(E13S719-need, A11S719-area), isa(A11S719-area, "areas"), object(E13S719-need, A14S719-rainwater), isa(A14S719-rainwater, "rainwater").
english(barrons.rule1806, "Temperature is a measure of how hot or cold the air is").
pretty(barrons.rule1806, "PURPOSE(Temperature, be_of(Temperature, Measure, Be)), Temperature = 'Temperature', Measure = 'a measure of how hot or cold the air is', Be = 'is'.").
barrons.rule1806:: isa(A1S722-temperature, "Temperature") -> purpose(A1S722-temperature, E2S722-be), isa(E2S722-be, "be"), agent(E2S722-be, A1S722-temperature), object(E2S722-be, A4S722-measure), isa(A4S722-measure, "a measure"), of(E2S722-be, A12S722-be), isa(A12S722-be, "how hot or cold the air is").
english(barrons.rule1807, "Temperature is a measure of how hot or cold the air is").
pretty(barrons.rule1807, "PURPOSE(Temperature, be_of(Temperature, Measure, Be)), Temperature = 'Temperature', Measure = 'a measure of how hot or cold the air is', Be = 'is'.").
barrons.rule1807:: isa(E2S722-be, "be"), agent(E2S722-be, A1S722-temperature), isa(A1S722-temperature, "Temperature"), object(E2S722-be, A4S722-measure), isa(A4S722-measure, "a measure"), of(E2S722-be, A12S722-be), isa(A12S722-be, "how hot or cold the air is") -> purpose(A1S722-temperature, E2S722-be).
english(barrons.rule1808, "Temperature is a measure of how hot or cold the air is").
pretty(barrons.rule1808, "EXAMPLE(Temperature, Measure), Temperature = 'Temperature', Measure = 'a measure of how hot or cold the air is'.").
barrons.rule1808:: isa(A1S722-temperature, "Temperature") -> example(A1S722-temperature, A4S722-measure), of(A4S722-measure, A12S722-be), isa(A12S722-be, "is"), isa(A4S722-measure, "a measure").
english(barrons.rule1809, "Temperature is a measure of how hot or cold the air is").
pretty(barrons.rule1809, "EXAMPLE(Temperature, Measure), Temperature = 'Temperature', Measure = 'a measure of how hot or cold the air is'.").
barrons.rule1809:: of(A4S722-measure, A12S722-be), isa(A12S722-be, "is"), isa(A4S722-measure, "a measure") -> example(A1S722-temperature, A4S722-measure), isa(A1S722-temperature, "Temperature").
english(barrons.rule1810, "A thermometer is the instrument used to measure temperature").
pretty(barrons.rule1810, "PURPOSE(Instrument, measure(Instrument, Temperature)), Instrument = 'the instrument', Temperature = 'temperature'.").
barrons.rule1810:: isa(A5S723-instrument, "the instrument") -> purpose(A5S723-instrument, E8S723-measure), isa(E8S723-measure, "measure"), agent(E8S723-measure, A5S723-instrument), object(E8S723-measure, A9S723-temperature), isa(A9S723-temperature, "temperature").
english(barrons.rule1811, "A thermometer is the instrument used to measure temperature").
pretty(barrons.rule1811, "PURPOSE(Instrument, measure(Instrument, Temperature)), Instrument = 'the instrument', Temperature = 'temperature'.").
barrons.rule1811:: isa(E8S723-measure, "measure"), agent(E8S723-measure, A5S723-instrument), isa(A5S723-instrument, "the instrument"), object(E8S723-measure, A9S723-temperature), isa(A9S723-temperature, "temperature") -> purpose(A5S723-instrument, E8S723-measure).
english(barrons.rule1812, "A thermometer is the instrument used to measure temperature").
pretty(barrons.rule1812, "PURPOSE(Thermometer, measure(Thermometer, Temperature)), Thermometer = 'A thermometer', Temperature = 'temperature'.").
barrons.rule1812:: isa(A2S723-thermometer, "A thermometer") -> purpose(A2S723-thermometer, E8S723-measure), isa(E8S723-measure, "measure"), agent(E8S723-measure, A2S723-thermometer), object(E8S723-measure, A9S723-temperature), isa(A9S723-temperature, "temperature").
english(barrons.rule1813, "A thermometer is the instrument used to measure temperature").
pretty(barrons.rule1813, "PURPOSE(Thermometer, measure(Thermometer, Temperature)), Thermometer = 'A thermometer', Temperature = 'temperature'.").
barrons.rule1813:: isa(E8S723-measure, "measure"), agent(E8S723-measure, A2S723-thermometer), isa(A2S723-thermometer, "A thermometer"), object(E8S723-measure, A9S723-temperature), isa(A9S723-temperature, "temperature") -> purpose(A2S723-thermometer, E8S723-measure).
english(barrons.rule1814, "A thermometer is the instrument used to measure temperature").
pretty(barrons.rule1814, "EXAMPLE(Thermometer, use(Instrument)), Thermometer = 'A thermometer', Instrument = 'the instrument'.").
barrons.rule1814:: isa(A2S723-thermometer, "A thermometer") -> example(A2S723-thermometer, E6S723-use), isa(E6S723-use, "use"), agent(E6S723-use, A5S723-instrument), isa(A5S723-instrument, "the instrument").
english(barrons.rule1815, "A thermometer is the instrument used to measure temperature").
pretty(barrons.rule1815, "EXAMPLE(Thermometer, use(Instrument)), Thermometer = 'A thermometer', Instrument = 'the instrument'.").
barrons.rule1815:: isa(E6S723-use, "use"), agent(E6S723-use, A5S723-instrument), isa(A5S723-instrument, "the instrument") -> example(A2S723-thermometer, E6S723-use), isa(A2S723-thermometer, "A thermometer").
english(barrons.rule1816, "A thermometer is the instrument used to measure temperature").
pretty(barrons.rule1816, "EXAMPLE(Thermometer, Instrument), Thermometer = 'A thermometer', Instrument = 'the instrument'.").
barrons.rule1816:: isa(A2S723-thermometer, "A thermometer") -> example(A2S723-thermometer, A5S723-instrument), isa(A5S723-instrument, "the instrument").
english(barrons.rule1817, "A thermometer is the instrument used to measure temperature").
pretty(barrons.rule1817, "EXAMPLE(Thermometer, Instrument), Thermometer = 'A thermometer', Instrument = 'the instrument'.").
barrons.rule1817:: isa(A5S723-instrument, "the instrument") -> example(A2S723-thermometer, A5S723-instrument), isa(A2S723-thermometer, "A thermometer").
english(barrons.rule1818, "The information provided by these weather instruments is very useful in determining current or future weather conditions").
pretty(barrons.rule1818, "EFFECT(be(Information, Useful), determine(Information, Current)), Information = 'The information', Useful = 'useful in determining current or future weather conditions', Current = 'current'.").
barrons.rule1818:: isa(E8S725-be, "be"), agent(E8S725-be, A2S725-information), isa(A2S725-information, "The information"), object(E8S725-be, A10S725-useful), isa(A10S725-useful, "useful") -> effect(E8S725-be, E12S725-determine), isa(E12S725-determine, "determine"), agent(E12S725-determine, A2S725-information), object(E12S725-determine, A13S725-current), isa(A13S725-current, "current").
english(barrons.rule1819, "The information provided by these weather instruments is very useful in determining current or future weather conditions").
pretty(barrons.rule1819, "EFFECT(be(Information, Useful), determine(Information, Current)), Information = 'The information', Useful = 'useful in determining current or future weather conditions', Current = 'current'.").
barrons.rule1819:: isa(E12S725-determine, "determine"), agent(E12S725-determine, A2S725-information), isa(A2S725-information, "The information"), object(E12S725-determine, A13S725-current), isa(A13S725-current, "current") -> effect(E8S725-be, E12S725-determine), isa(E8S725-be, "be"), agent(E8S725-be, A2S725-information), object(E8S725-be, A10S725-useful), isa(A10S725-useful, "useful").
english(barrons.rule1820, "The information provided by these weather instruments is very useful in determining current or future weather conditions").
pretty(barrons.rule1820, "EFFECT(be(Information, Useful), determine(Information, Condition)), Information = 'The information', Useful = 'useful in determining current or future weather conditions', Condition = 'future weather conditions'.").
barrons.rule1820:: isa(E8S725-be, "be"), agent(E8S725-be, A2S725-information), isa(A2S725-information, "The information"), object(E8S725-be, A10S725-useful), isa(A10S725-useful, "useful") -> effect(E8S725-be, E12S725-determine), isa(E12S725-determine, "determine"), agent(E12S725-determine, A2S725-information), object(E12S725-determine, A17S725-condition), isa(A17S725-condition, "future weather conditions").
english(barrons.rule1821, "The information provided by these weather instruments is very useful in determining current or future weather conditions").
pretty(barrons.rule1821, "EFFECT(be(Information, Useful), determine(Information, Condition)), Information = 'The information', Useful = 'useful in determining current or future weather conditions', Condition = 'future weather conditions'.").
barrons.rule1821:: isa(E12S725-determine, "determine"), agent(E12S725-determine, A2S725-information), isa(A2S725-information, "The information"), object(E12S725-determine, A17S725-condition), isa(A17S725-condition, "future weather conditions") -> effect(E8S725-be, E12S725-determine), isa(E8S725-be, "be"), agent(E8S725-be, A2S725-information), object(E8S725-be, A10S725-useful), isa(A10S725-useful, "useful").
english(barrons.rule1822, "Precipitation is the term used to describe water moisture that falls from the sky").
pretty(barrons.rule1822, "PURPOSE(Term, describe(Term, Water)), Term = 'the term', Water = 'water'.").
barrons.rule1822:: isa(A4S726-term, "the term") -> purpose(A4S726-term, E7S726-describe), isa(E7S726-describe, "describe"), agent(E7S726-describe, A4S726-term), object(E7S726-describe, A8S726-water), isa(A8S726-water, "water").
english(barrons.rule1823, "Precipitation is the term used to describe water moisture that falls from the sky").
pretty(barrons.rule1823, "PURPOSE(Term, describe(Term, Water)), Term = 'the term', Water = 'water'.").
barrons.rule1823:: isa(E7S726-describe, "describe"), agent(E7S726-describe, A4S726-term), isa(A4S726-term, "the term"), object(E7S726-describe, A8S726-water), isa(A8S726-water, "water") -> purpose(A4S726-term, E7S726-describe).
english(barrons.rule1824, "Precipitation is the term used to describe water moisture that falls from the sky").
pretty(barrons.rule1824, "PURPOSE(precipitate, describe(Water)), Water = 'water'.").
barrons.rule1824:: isa(E1S726-precipitation, "precipitate") -> purpose(E1S726-precipitation, E7S726-describe), isa(E7S726-describe, "describe"), object(E7S726-describe, A8S726-water), isa(A8S726-water, "water").
english(barrons.rule1825, "Precipitation is the term used to describe water moisture that falls from the sky").
pretty(barrons.rule1825, "PURPOSE(precipitate, describe(Water)), Water = 'water'.").
barrons.rule1825:: isa(E7S726-describe, "describe"), object(E7S726-describe, A8S726-water), isa(A8S726-water, "water") -> purpose(E1S726-precipitation, E7S726-describe), isa(E1S726-precipitation, "precipitate").
english(barrons.rule1826, "Precipitation is the term used to describe water moisture that falls from the sky").
pretty(barrons.rule1826, "EXAMPLE(Precipitation, use(Term)), Precipitation = 'Precipitation', Term = 'the term'.").
barrons.rule1826:: isa(A1S726-precipitation, "Precipitation") -> example(A1S726-precipitation, E5S726-use), isa(E5S726-use, "use"), agent(E5S726-use, A4S726-term), isa(A4S726-term, "the term").
english(barrons.rule1827, "Precipitation is the term used to describe water moisture that falls from the sky").
pretty(barrons.rule1827, "EXAMPLE(Precipitation, use(Term)), Precipitation = 'Precipitation', Term = 'the term'.").
barrons.rule1827:: isa(E5S726-use, "use"), agent(E5S726-use, A4S726-term), isa(A4S726-term, "the term") -> example(A1S726-precipitation, E5S726-use), isa(A1S726-precipitation, "Precipitation").
english(barrons.rule1828, "Precipitation is the term used to describe water moisture that falls from the sky").
pretty(barrons.rule1828, "EXAMPLE(Precipitation, Term), Precipitation = 'Precipitation', Term = 'the term'.").
barrons.rule1828:: isa(A1S726-precipitation, "Precipitation") -> example(A1S726-precipitation, A4S726-term), isa(A4S726-term, "the term").
english(barrons.rule1829, "Precipitation is the term used to describe water moisture that falls from the sky").
pretty(barrons.rule1829, "EXAMPLE(Precipitation, Term), Precipitation = 'Precipitation', Term = 'the term'.").
barrons.rule1829:: isa(A4S726-term, "the term") -> example(A1S726-precipitation, A4S726-term), isa(A1S726-precipitation, "Precipitation").
english(barrons.rule1830, "Hail is solid balls of water and dust falling from the sky").
pretty(barrons.rule1830, "EXAMPLE(Hail, Ball), Hail = 'Hail', Ball = 'solid balls of water'.").
barrons.rule1830:: isa(A1S731-hail, "Hail") -> example(A1S731-hail, A4S731-ball), of(A4S731-ball, A6S731-water), isa(A6S731-water, "water"), isa(A4S731-ball, "solid balls").
english(barrons.rule1831, "Hail is solid balls of water and dust falling from the sky").
pretty(barrons.rule1831, "EXAMPLE(Hail, Ball), Hail = 'Hail', Ball = 'solid balls of water'.").
barrons.rule1831:: of(A4S731-ball, A6S731-water), isa(A6S731-water, "water"), isa(A4S731-ball, "solid balls") -> example(A1S731-hail, A4S731-ball), isa(A1S731-hail, "Hail").
english(barrons.rule1832, "Rain can occur anytime during the year as long as the outside temperature is above the freezing point of water").
pretty(barrons.rule1832, "isa(occur, 'occur') -> occur_during(Rain, Anytime, Be, Year).").
barrons.rule1832:: isa(E3S734-occur, "occur") -> agent(E3S734-occur, A1S734-rain), isa(A1S734-rain, "Rain"), object(E3S734-occur, A4S734-anytime), isa(A4S734-anytime, "anytime"), during(E3S734-occur, A7S734-year), isa(A7S734-year, "the year"), arg(E3S734-occur, A14S734-be), isa(A14S734-be, "as long as the outside temperature is above the freezing point of water").
english(barrons.rule1833, "Rain can occur anytime during the year as long as the outside temperature is above the freezing point of water").
pretty(barrons.rule1833, "isa(Rain, 'Rain') -> occur_during(Rain, Anytime, Be, Year).").
barrons.rule1833:: isa(A1S734-rain, "Rain") -> isa(E3S734-occur, "occur"), agent(E3S734-occur, A1S734-rain), object(E3S734-occur, A4S734-anytime), isa(A4S734-anytime, "anytime"), during(E3S734-occur, A7S734-year), isa(A7S734-year, "the year"), arg(E3S734-occur, A14S734-be), isa(A14S734-be, "as long as the outside temperature is above the freezing point of water").
english(barrons.rule1834, "Rain can occur anytime during the year as long as the outside temperature is above the freezing point of water").
pretty(barrons.rule1834, "isa(Anytime, 'anytime') -> occur_during(Rain, Anytime, Be, Year).").
barrons.rule1834:: isa(A4S734-anytime, "anytime") -> isa(E3S734-occur, "occur"), agent(E3S734-occur, A1S734-rain), isa(A1S734-rain, "Rain"), object(E3S734-occur, A4S734-anytime), during(E3S734-occur, A7S734-year), isa(A7S734-year, "the year"), arg(E3S734-occur, A14S734-be), isa(A14S734-be, "as long as the outside temperature is above the freezing point of water").
english(barrons.rule1835, "Rain can occur anytime during the year as long as the outside temperature is above the freezing point of water").
pretty(barrons.rule1835, "isa(Year, 'the year') -> occur_during(Rain, Anytime, Be, Year).").
barrons.rule1835:: isa(A7S734-year, "the year") -> isa(E3S734-occur, "occur"), agent(E3S734-occur, A1S734-rain), isa(A1S734-rain, "Rain"), object(E3S734-occur, A4S734-anytime), isa(A4S734-anytime, "anytime"), during(E3S734-occur, A7S734-year), arg(E3S734-occur, A14S734-be), isa(A14S734-be, "as long as the outside temperature is above the freezing point of water").
english(barrons.rule1836, "Rain can occur anytime during the year as long as the outside temperature is above the freezing point of water").
pretty(barrons.rule1836, "isa(Be, 'as is above the freezing point of water') -> occur_during(Rain, Anytime, Be, Year).").
barrons.rule1836:: isa(A14S734-be, "as long as the outside temperature is above the freezing point of water") -> isa(E3S734-occur, "occur"), agent(E3S734-occur, A1S734-rain), isa(A1S734-rain, "Rain"), object(E3S734-occur, A4S734-anytime), isa(A4S734-anytime, "anytime"), during(E3S734-occur, A7S734-year), isa(A7S734-year, "the year"), arg(E3S734-occur, A14S734-be).
english(barrons.rule1837, "Other conditions used to describe the weather include humidity and cloud cover").
pretty(barrons.rule1837, "isa(include, 'include') -> include(Condition, Cover).").
barrons.rule1837:: isa(E8S736-include, "include") -> agent(E8S736-include, A2S736-condition), isa(A2S736-condition, "Other conditions"), object(E8S736-include, A12S736-cover), isa(A12S736-cover, "humidity and cloud cover").
english(barrons.rule1838, "Other conditions used to describe the weather include humidity and cloud cover").
pretty(barrons.rule1838, "isa(Condition, 'Other conditions') -> include(Condition, Cover).").
barrons.rule1838:: isa(A2S736-condition, "Other conditions") -> isa(E8S736-include, "include"), agent(E8S736-include, A2S736-condition), object(E8S736-include, A12S736-cover), isa(A12S736-cover, "humidity and cloud cover").
english(barrons.rule1839, "Other conditions used to describe the weather include humidity and cloud cover").
pretty(barrons.rule1839, "isa(Cover, 'humidity and cloud cover') -> include(Condition, Cover).").
barrons.rule1839:: isa(A12S736-cover, "humidity and cloud cover") -> isa(E8S736-include, "include"), agent(E8S736-include, A2S736-condition), isa(A2S736-condition, "Other conditions"), object(E8S736-include, A12S736-cover).
english(barrons.rule1840, "Other conditions used to describe the weather include humidity and cloud cover").
pretty(barrons.rule1840, "PURPOSE(Condition, describe(Condition, Weather)), Condition = 'Other conditions', Weather = 'the weather'.").
barrons.rule1840:: isa(A2S736-condition, "Other conditions") -> purpose(A2S736-condition, E5S736-describe), isa(E5S736-describe, "describe"), agent(E5S736-describe, A2S736-condition), object(E5S736-describe, A7S736-weather), isa(A7S736-weather, "the weather").
english(barrons.rule1841, "Other conditions used to describe the weather include humidity and cloud cover").
pretty(barrons.rule1841, "PURPOSE(Condition, describe(Condition, Weather)), Condition = 'Other conditions', Weather = 'the weather'.").
barrons.rule1841:: isa(E5S736-describe, "describe"), agent(E5S736-describe, A2S736-condition), isa(A2S736-condition, "Other conditions"), object(E5S736-describe, A7S736-weather), isa(A7S736-weather, "the weather") -> purpose(A2S736-condition, E5S736-describe).
english(barrons.rule1842, "Humidity is the amount of moisture in the atmosphere").
pretty(barrons.rule1842, "EXAMPLE(Humidity, Amount), Humidity = 'Humidity', Amount = 'the amount of moisture in the atmosphere'.").
barrons.rule1842:: isa(A1S737-humidity, "Humidity") -> example(A1S737-humidity, A4S737-amount), of(A4S737-amount, A6S737-moisture), isa(A6S737-moisture, "moisture"), in(A4S737-amount, A9S737-atmosphere), isa(A9S737-atmosphere, "the atmosphere"), isa(A4S737-amount, "the amount").
english(barrons.rule1843, "Humidity is the amount of moisture in the atmosphere").
pretty(barrons.rule1843, "EXAMPLE(Humidity, Amount), Humidity = 'Humidity', Amount = 'the amount of moisture in the atmosphere'.").
barrons.rule1843:: of(A4S737-amount, A6S737-moisture), isa(A6S737-moisture, "moisture"), in(A4S737-amount, A9S737-atmosphere), isa(A9S737-atmosphere, "the atmosphere"), isa(A4S737-amount, "the amount") -> example(A1S737-humidity, A4S737-amount), isa(A1S737-humidity, "Humidity").
english(barrons.rule1844, "When the humidity reaches 100 percent it is very likely that some form of precipitation will occur depending on the temperature").
pretty(barrons.rule1844, "WHEN(be(It, Likely, Occur), reach(Humidity, Percent)), It = 'it', Likely = 'When the humidity reaches 100 percent likely that some form of precipitation will occur depending on the temperature', Occur = 'that occur', Humidity = 'the humidity', Percent = '100 percent'.").
barrons.rule1844:: isa(E8S738-be, "be"), agent(E8S738-be, A7S738-it), isa(A7S738-it, "it"), object(E8S738-be, A10S738-likely), isa(A10S738-likely, "likely"), arg(E8S738-be, A17S738-occur), isa(A17S738-occur, "that some form of precipitation will occur") -> when(E8S738-be, E4S738-reach), isa(E4S738-reach, "reach"), agent(E4S738-reach, A3S738-humidity), isa(A3S738-humidity, "the humidity"), object(E4S738-reach, A6S738-percent), isa(A6S738-percent, "100 percent").
english(barrons.rule1845, "When the humidity reaches 100 percent it is very likely that some form of precipitation will occur depending on the temperature").
pretty(barrons.rule1845, "WHEN(be(It, Likely, Occur), reach(Humidity, Percent)), It = 'it', Likely = 'When the humidity reaches 100 percent likely that some form of precipitation will occur depending on the temperature', Occur = 'that occur', Humidity = 'the humidity', Percent = '100 percent'.").
barrons.rule1845:: isa(E4S738-reach, "reach"), agent(E4S738-reach, A3S738-humidity), isa(A3S738-humidity, "the humidity"), object(E4S738-reach, A6S738-percent), isa(A6S738-percent, "100 percent") -> when(E8S738-be, E4S738-reach), isa(E8S738-be, "be"), agent(E8S738-be, A7S738-it), isa(A7S738-it, "it"), object(E8S738-be, A10S738-likely), isa(A10S738-likely, "likely"), arg(E8S738-be, A17S738-occur), isa(A17S738-occur, "that some form of precipitation will occur").
english(barrons.rule1846, "When the humidity reaches 100 percent it is very likely that some form of precipitation will occur depending on the temperature").
pretty(barrons.rule1846, "EFFECT(occur(Form), depend_on(Form, Temperature)), Form = 'some form of precipitation', Temperature = 'the temperature'.").
barrons.rule1846:: of(A13S738-form, A15S738-precipitation), isa(A15S738-precipitation, "precipitation"), isa(E17S738-occur, "occur"), agent(E17S738-occur, A13S738-form), isa(A13S738-form, "some form") -> effect(E17S738-occur, E19S738-depend), isa(E19S738-depend, "depend"), agent(E19S738-depend, A13S738-form), on(E19S738-depend, A22S738-temperature), isa(A22S738-temperature, "the temperature").
english(barrons.rule1847, "When the humidity reaches 100 percent it is very likely that some form of precipitation will occur depending on the temperature").
pretty(barrons.rule1847, "EFFECT(occur(Form), depend_on(Form, Temperature)), Form = 'some form of precipitation', Temperature = 'the temperature'.").
barrons.rule1847:: of(A13S738-form, A15S738-precipitation), isa(A15S738-precipitation, "precipitation"), isa(E19S738-depend, "depend"), agent(E19S738-depend, A13S738-form), isa(A13S738-form, "some form"), on(E19S738-depend, A22S738-temperature), isa(A22S738-temperature, "the temperature") -> effect(E17S738-occur, E19S738-depend), isa(E17S738-occur, "occur"), agent(E17S738-occur, A13S738-form).
english(barrons.rule1848, "Clouds form when water in the atmosphere condenses on dust particles suspended in the air").
pretty(barrons.rule1848, "WHEN(form(Cloud), condense_in(Water, Atmosphere, on(Particle))), Cloud = 'Clouds', Water = 'water', Atmosphere = 'the atmosphere', Particle = 'dust particles'.").
barrons.rule1848:: isa(E2S739-form, "form"), agent(E2S739-form, A1S739-cloud), isa(A1S739-cloud, "Clouds") -> when(E2S739-form, E8S739-condense), isa(E8S739-condense, "condense"), agent(E8S739-condense, A4S739-water), isa(A4S739-water, "water"), in(E8S739-condense, A7S739-atmosphere), isa(A7S739-atmosphere, "the atmosphere"), on(E8S739-condense, A11S739-particle), isa(A11S739-particle, "dust particles suspended in the air").
english(barrons.rule1849, "Clouds form when water in the atmosphere condenses on dust particles suspended in the air").
pretty(barrons.rule1849, "WHEN(form(Cloud), condense_in(Water, Atmosphere, on(Particle))), Cloud = 'Clouds', Water = 'water', Atmosphere = 'the atmosphere', Particle = 'dust particles'.").
barrons.rule1849:: isa(E8S739-condense, "condense"), agent(E8S739-condense, A4S739-water), isa(A4S739-water, "water"), in(E8S739-condense, A7S739-atmosphere), isa(A7S739-atmosphere, "the atmosphere"), on(E8S739-condense, A11S739-particle), isa(A11S739-particle, "dust particles suspended in the air") -> when(E2S739-form, E8S739-condense), isa(E2S739-form, "form"), agent(E2S739-form, A1S739-cloud), isa(A1S739-cloud, "Clouds").
english(barrons.rule1850, "Clouds can block the Earth 's ability to absorb light and heat from the sun and therefore can affect temperature").
pretty(barrons.rule1850, "isa(block, 'block') -> block(Cloud, Ability).").
barrons.rule1850:: isa(E3S741-block, "block") -> agent(E3S741-block, A1S741-cloud), isa(A1S741-cloud, "Clouds"), object(E3S741-block, A7S741-ability), isa(A7S741-ability, "the Earth 's ability").
english(barrons.rule1851, "Clouds can block the Earth 's ability to absorb light and heat from the sun and therefore can affect temperature").
pretty(barrons.rule1851, "isa(Cloud, 'Clouds') -> block(Cloud, Ability).").
barrons.rule1851:: isa(A1S741-cloud, "Clouds") -> isa(E3S741-block, "block"), agent(E3S741-block, A1S741-cloud), object(E3S741-block, A7S741-ability), isa(A7S741-ability, "the Earth 's ability").
english(barrons.rule1852, "Clouds can block the Earth 's ability to absorb light and heat from the sun and therefore can affect temperature").
pretty(barrons.rule1852, "isa(Ability, 'the Earth ’s ability to absorb light and heat from the sun and therefore can affect temperature') -> block(Cloud, Ability).").
barrons.rule1852:: isa(A7S741-ability, "the Earth 's ability") -> isa(E3S741-block, "block"), agent(E3S741-block, A1S741-cloud), isa(A1S741-cloud, "Clouds"), object(E3S741-block, A7S741-ability).
english(barrons.rule1853, "A meteorologist is a scientist who uses the information from weather instruments to predict weather").
pretty(barrons.rule1853, "EXAMPLE(Meteorologist, use(Who, Information, Predict)), Meteorologist = 'A meteorologist', Who = 'who', Information = 'the information from weather instruments', Predict = 'predict weather'.").
barrons.rule1853:: isa(A2S742-meteorologist, "A meteorologist") -> example(A2S742-meteorologist, E7S742-use), from(A9S742-information, A12S742-instrument), isa(A12S742-instrument, "weather instruments"), isa(E7S742-use, "use"), agent(E7S742-use, A6S742-who), isa(A6S742-who, "who"), object(E7S742-use, A9S742-information), isa(A9S742-information, "the information"), arg(E7S742-use, A14S742-predict), isa(A14S742-predict, "to predict weather").
english(barrons.rule1854, "A meteorologist is a scientist who uses the information from weather instruments to predict weather").
pretty(barrons.rule1854, "EXAMPLE(Meteorologist, use(Who, Information, Predict)), Meteorologist = 'A meteorologist', Who = 'who', Information = 'the information from weather instruments', Predict = 'predict weather'.").
barrons.rule1854:: from(A9S742-information, A12S742-instrument), isa(A12S742-instrument, "weather instruments"), isa(E7S742-use, "use"), agent(E7S742-use, A6S742-who), isa(A6S742-who, "who"), object(E7S742-use, A9S742-information), isa(A9S742-information, "the information"), arg(E7S742-use, A14S742-predict), isa(A14S742-predict, "to predict weather") -> example(A2S742-meteorologist, E7S742-use), isa(A2S742-meteorologist, "A meteorologist").
english(barrons.rule1855, "A meteorologist is a scientist who uses the information from weather instruments to predict weather").
pretty(barrons.rule1855, "EXAMPLE(Meteorologist, Scientist), Meteorologist = 'A meteorologist', Scientist = 'a scientist'.").
barrons.rule1855:: isa(A2S742-meteorologist, "A meteorologist") -> example(A2S742-meteorologist, A5S742-scientist), isa(A5S742-scientist, "a scientist").
english(barrons.rule1856, "A meteorologist is a scientist who uses the information from weather instruments to predict weather").
pretty(barrons.rule1856, "EXAMPLE(Meteorologist, Scientist), Meteorologist = 'A meteorologist', Scientist = 'a scientist'.").
barrons.rule1856:: isa(A5S742-scientist, "a scientist") -> example(A2S742-meteorologist, A5S742-scientist), isa(A2S742-meteorologist, "A meteorologist").
english(barrons.rule1857, "He[you] or she usually gives the temperature sky conditions and precipitation").
pretty(barrons.rule1857, "isa(give, 'gives') -> give(You, Temperature, Usually).").
barrons.rule1857:: isa(E5S744-give, "give") -> agent(E5S744-give, A2S743-you), isa(A2S743-you, "you"), object(E5S744-give, A7S744-temperature), isa(A7S744-temperature, "the temperature"), arg(E5S744-give, A4S744-usually), isa(A4S744-usually, "usually").
english(barrons.rule1858, "He[you] or she usually gives the temperature sky conditions and precipitation").
pretty(barrons.rule1858, "isa(You, 'you') -> give(You, Temperature, Usually).").
barrons.rule1858:: isa(A2S743-you, "you") -> isa(E5S744-give, "give"), agent(E5S744-give, A2S743-you), object(E5S744-give, A7S744-temperature), isa(A7S744-temperature, "the temperature"), arg(E5S744-give, A4S744-usually), isa(A4S744-usually, "usually").
english(barrons.rule1859, "He[you] or she usually gives the temperature sky conditions and precipitation").
pretty(barrons.rule1859, "isa(Temperature, 'the temperature') -> give(You, Temperature, Usually).").
barrons.rule1859:: isa(A7S744-temperature, "the temperature") -> isa(E5S744-give, "give"), agent(E5S744-give, A2S743-you), isa(A2S743-you, "you"), object(E5S744-give, A7S744-temperature), arg(E5S744-give, A4S744-usually), isa(A4S744-usually, "usually").
english(barrons.rule1860, "He[you] or she usually gives the temperature sky conditions and precipitation").
pretty(barrons.rule1860, "isa(Usually, 'usually') -> give(You, Temperature, Usually).").
barrons.rule1860:: isa(A4S744-usually, "usually") -> isa(E5S744-give, "give"), agent(E5S744-give, A2S743-you), isa(A2S743-you, "you"), object(E5S744-give, A7S744-temperature), isa(A7S744-temperature, "the temperature"), arg(E5S744-give, A4S744-usually).
english(barrons.rule1861, "He[you] or she usually gives the temperature sky conditions and precipitation").
pretty(barrons.rule1861, "isa(give, 'gives') -> give(You, Condition, Usually).").
barrons.rule1861:: isa(E5S744-give, "give") -> agent(E5S744-give, A2S743-you), isa(A2S743-you, "you"), object(E5S744-give, A10S744-condition), isa(A10S744-condition, "sky conditions"), arg(E5S744-give, A4S744-usually), isa(A4S744-usually, "usually").
english(barrons.rule1862, "He[you] or she usually gives the temperature sky conditions and precipitation").
pretty(barrons.rule1862, "isa(You, 'you') -> give(You, Condition, Usually).").
barrons.rule1862:: isa(A2S743-you, "you") -> isa(E5S744-give, "give"), agent(E5S744-give, A2S743-you), object(E5S744-give, A10S744-condition), isa(A10S744-condition, "sky conditions"), arg(E5S744-give, A4S744-usually), isa(A4S744-usually, "usually").
english(barrons.rule1863, "He[you] or she usually gives the temperature sky conditions and precipitation").
pretty(barrons.rule1863, "isa(Condition, 'sky conditions') -> give(You, Condition, Usually).").
barrons.rule1863:: isa(A10S744-condition, "sky conditions") -> isa(E5S744-give, "give"), agent(E5S744-give, A2S743-you), isa(A2S743-you, "you"), object(E5S744-give, A10S744-condition), arg(E5S744-give, A4S744-usually), isa(A4S744-usually, "usually").
english(barrons.rule1864, "He[you] or she usually gives the temperature sky conditions and precipitation").
pretty(barrons.rule1864, "isa(Usually, 'usually') -> give(You, Condition, Usually).").
barrons.rule1864:: isa(A4S744-usually, "usually") -> isa(E5S744-give, "give"), agent(E5S744-give, A2S743-you), isa(A2S743-you, "you"), object(E5S744-give, A10S744-condition), isa(A10S744-condition, "sky conditions"), arg(E5S744-give, A4S744-usually).
english(barrons.rule1865, "He[you] or she usually gives the temperature sky conditions and precipitation").
pretty(barrons.rule1865, "isa(give, 'gives') -> give(You, Precipitation, Usually).").
barrons.rule1865:: isa(E5S744-give, "give") -> agent(E5S744-give, A2S743-you), isa(A2S743-you, "you"), object(E5S744-give, A13S744-precipitation), isa(A13S744-precipitation, "precipitation"), arg(E5S744-give, A4S744-usually), isa(A4S744-usually, "usually").
english(barrons.rule1866, "He[you] or she usually gives the temperature sky conditions and precipitation").
pretty(barrons.rule1866, "isa(You, 'you') -> give(You, Precipitation, Usually).").
barrons.rule1866:: isa(A2S743-you, "you") -> isa(E5S744-give, "give"), agent(E5S744-give, A2S743-you), object(E5S744-give, A13S744-precipitation), isa(A13S744-precipitation, "precipitation"), arg(E5S744-give, A4S744-usually), isa(A4S744-usually, "usually").
english(barrons.rule1867, "He[you] or she usually gives the temperature sky conditions and precipitation").
pretty(barrons.rule1867, "isa(Precipitation, 'precipitation') -> give(You, Precipitation, Usually).").
barrons.rule1867:: isa(A13S744-precipitation, "precipitation") -> isa(E5S744-give, "give"), agent(E5S744-give, A2S743-you), isa(A2S743-you, "you"), object(E5S744-give, A13S744-precipitation), arg(E5S744-give, A4S744-usually), isa(A4S744-usually, "usually").
english(barrons.rule1868, "He[you] or she usually gives the temperature sky conditions and precipitation").
pretty(barrons.rule1868, "isa(Usually, 'usually') -> give(You, Precipitation, Usually).").
barrons.rule1868:: isa(A4S744-usually, "usually") -> isa(E5S744-give, "give"), agent(E5S744-give, A2S743-you), isa(A2S743-you, "you"), object(E5S744-give, A13S744-precipitation), isa(A13S744-precipitation, "precipitation"), arg(E5S744-give, A4S744-usually).
english(barrons.rule1869, "He[the weatherperson] or she[she] can also make predictions as to what might happen the next day").
pretty(barrons.rule1869, "isa(make, 'make') -> make_as(Weatherperson, Prediction, To).").
barrons.rule1869:: isa(E6S745-make, "make") -> agent(E6S745-make, A10S743-weatherperson), isa(A10S743-weatherperson, "the weatherperson"), object(E6S745-make, A7S745-prediction), isa(A7S745-prediction, "predictions"), as(E6S745-make, A9S745-to), isa(A9S745-to, "to what might happen the next day").
english(barrons.rule1870, "He[the weatherperson] or she[she] can also make predictions as to what might happen the next day").
pretty(barrons.rule1870, "isa(Weatherperson, 'the weatherperson') -> make_as(Weatherperson, Prediction, To).").
barrons.rule1870:: isa(A10S743-weatherperson, "the weatherperson") -> isa(E6S745-make, "make"), agent(E6S745-make, A10S743-weatherperson), object(E6S745-make, A7S745-prediction), isa(A7S745-prediction, "predictions"), as(E6S745-make, A9S745-to), isa(A9S745-to, "to what might happen the next day").
english(barrons.rule1871, "He[the weatherperson] or she[she] can also make predictions as to what might happen the next day").
pretty(barrons.rule1871, "isa(Prediction, 'predictions') -> make_as(Weatherperson, Prediction, To).").
barrons.rule1871:: isa(A7S745-prediction, "predictions") -> isa(E6S745-make, "make"), agent(E6S745-make, A10S743-weatherperson), isa(A10S743-weatherperson, "the weatherperson"), object(E6S745-make, A7S745-prediction), as(E6S745-make, A9S745-to), isa(A9S745-to, "to what might happen the next day").
english(barrons.rule1872, "He[the weatherperson] or she[she] can also make predictions as to what might happen the next day").
pretty(barrons.rule1872, "isa(To, 'to what might happen the next day') -> make_as(Weatherperson, Prediction, To).").
barrons.rule1872:: isa(A9S745-to, "to what might happen the next day") -> isa(E6S745-make, "make"), agent(E6S745-make, A10S743-weatherperson), isa(A10S743-weatherperson, "the weatherperson"), object(E6S745-make, A7S745-prediction), isa(A7S745-prediction, "predictions"), as(E6S745-make, A9S745-to).
english(barrons.rule1873, "Weatherpersons use the simple instruments already discussed as well as information provided by satellites and computer models").
pretty(barrons.rule1873, "isa(use, 'use') -> use(Weatherperson, Instrument).").
barrons.rule1873:: isa(E2S746-use, "use") -> agent(E2S746-use, A1S746-weatherperson), isa(A1S746-weatherperson, "Weatherpersons"), object(E2S746-use, A5S746-instrument), isa(A5S746-instrument, "the simple instruments").
english(barrons.rule1874, "Weatherpersons use the simple instruments already discussed as well as information provided by satellites and computer models").
pretty(barrons.rule1874, "isa(Weatherperson, 'Weatherpersons') -> use(Weatherperson, Instrument).").
barrons.rule1874:: isa(A1S746-weatherperson, "Weatherpersons") -> isa(E2S746-use, "use"), agent(E2S746-use, A1S746-weatherperson), object(E2S746-use, A5S746-instrument), isa(A5S746-instrument, "the simple instruments").
english(barrons.rule1875, "Weatherpersons use the simple instruments already discussed as well as information provided by satellites and computer models").
pretty(barrons.rule1875, "isa(Instrument, 'the simple instruments') -> use(Weatherperson, Instrument).").
barrons.rule1875:: isa(A5S746-instrument, "the simple instruments") -> isa(E2S746-use, "use"), agent(E2S746-use, A1S746-weatherperson), isa(A1S746-weatherperson, "Weatherpersons"), object(E2S746-use, A5S746-instrument).
english(barrons.rule1876, "Hurricanes have very high winds over 74 miles per hour and rain").
pretty(barrons.rule1876, "isa(have, 'have') -> have(Hurricanes, Wind).").
barrons.rule1876:: isa(E2S750-have, "have") -> agent(E2S750-have, A1S750-Hurricanes), isa(A1S750-Hurricanes, "Hurricanes"), object(E2S750-have, A5S750-wind), isa(A5S750-wind, "very high winds").
english(barrons.rule1877, "Hurricanes have very high winds over 74 miles per hour and rain").
pretty(barrons.rule1877, "isa(Hurricanes, 'Hurricanes') -> have(Hurricanes, Wind).").
barrons.rule1877:: isa(A1S750-Hurricanes, "Hurricanes") -> isa(E2S750-have, "have"), agent(E2S750-have, A1S750-Hurricanes), object(E2S750-have, A5S750-wind), isa(A5S750-wind, "very high winds").
english(barrons.rule1878, "Hurricanes have very high winds over 74 miles per hour and rain").
pretty(barrons.rule1878, "isa(Wind, 'very high winds') -> have(Hurricanes, Wind).").
barrons.rule1878:: isa(A5S750-wind, "very high winds") -> isa(E2S750-have, "have"), agent(E2S750-have, A1S750-Hurricanes), isa(A1S750-Hurricanes, "Hurricanes"), object(E2S750-have, A5S750-wind).
english(barrons.rule1879, "Hurricanes have very high winds over 74 miles per hour and rain").
pretty(barrons.rule1879, "isa(have, 'have') -> have(Hurricanes, Rain).").
barrons.rule1879:: isa(E2S750-have, "have") -> agent(E2S750-have, A1S750-Hurricanes), isa(A1S750-Hurricanes, "Hurricanes"), object(E2S750-have, A14S750-rain), isa(A14S750-rain, "rain").
english(barrons.rule1880, "Hurricanes have very high winds over 74 miles per hour and rain").
pretty(barrons.rule1880, "isa(Hurricanes, 'Hurricanes') -> have(Hurricanes, Rain).").
barrons.rule1880:: isa(A1S750-Hurricanes, "Hurricanes") -> isa(E2S750-have, "have"), agent(E2S750-have, A1S750-Hurricanes), object(E2S750-have, A14S750-rain), isa(A14S750-rain, "rain").
english(barrons.rule1881, "Hurricanes have very high winds over 74 miles per hour and rain").
pretty(barrons.rule1881, "isa(Rain, 'rain') -> have(Hurricanes, Rain).").
barrons.rule1881:: isa(A14S750-rain, "rain") -> isa(E2S750-have, "have"), agent(E2S750-have, A1S750-Hurricanes), isa(A1S750-Hurricanes, "Hurricanes"), object(E2S750-have, A14S750-rain).
english(barrons.rule1882, "Hurricanes have very high winds over 74 miles per hour and rain").
pretty(barrons.rule1882, "isa(Hour, 'hour') -> have(Hurricanes, Mile).").
barrons.rule1882:: isa(A11S750-hour, "hour") -> per(A9S750-mile, A11S750-hour), isa(E2S750-have, "have"), agent(E2S750-have, A1S750-Hurricanes), isa(A1S750-Hurricanes, "Hurricanes"), object(E2S750-have, A9S750-mile), isa(A9S750-mile, "over 74 miles").
english(barrons.rule1883, "Hurricanes have very high winds over 74 miles per hour and rain").
pretty(barrons.rule1883, "isa(have, 'have') -> have(Hurricanes, Mile).").
barrons.rule1883:: isa(E2S750-have, "have") -> per(A9S750-mile, A11S750-hour), isa(A11S750-hour, "hour"), agent(E2S750-have, A1S750-Hurricanes), isa(A1S750-Hurricanes, "Hurricanes"), object(E2S750-have, A9S750-mile), isa(A9S750-mile, "over 74 miles").
english(barrons.rule1884, "Hurricanes have very high winds over 74 miles per hour and rain").
pretty(barrons.rule1884, "isa(Hurricanes, 'Hurricanes') -> have(Hurricanes, Mile).").
barrons.rule1884:: isa(A1S750-Hurricanes, "Hurricanes") -> per(A9S750-mile, A11S750-hour), isa(A11S750-hour, "hour"), isa(E2S750-have, "have"), agent(E2S750-have, A1S750-Hurricanes), object(E2S750-have, A9S750-mile), isa(A9S750-mile, "over 74 miles").
english(barrons.rule1885, "Hurricanes have very high winds over 74 miles per hour and rain").
pretty(barrons.rule1885, "isa(Mile, 'over 74 miles per hour') -> have(Hurricanes, Mile).").
barrons.rule1885:: isa(A9S750-mile, "over 74 miles") -> per(A9S750-mile, A11S750-hour), isa(A11S750-hour, "hour"), isa(E2S750-have, "have"), agent(E2S750-have, A1S750-Hurricanes), isa(A1S750-Hurricanes, "Hurricanes"), object(E2S750-have, A9S750-mile).
english(barrons.rule1886, "Hurricanes develop in the Atlantic Ocean").
pretty(barrons.rule1886, "isa(develop, 'develop') -> develop(Hurricanes, In).").
barrons.rule1886:: isa(E2S751-develop, "develop") -> agent(E2S751-develop, A1S751-Hurricanes), isa(A1S751-Hurricanes, "Hurricanes"), object(E2S751-develop, A3S751-in), isa(A3S751-in, "in the Atlantic Ocean").
english(barrons.rule1887, "Hurricanes develop in the Atlantic Ocean").
pretty(barrons.rule1887, "isa(Hurricanes, 'Hurricanes') -> develop(Hurricanes, In).").
barrons.rule1887:: isa(A1S751-Hurricanes, "Hurricanes") -> isa(E2S751-develop, "develop"), agent(E2S751-develop, A1S751-Hurricanes), object(E2S751-develop, A3S751-in), isa(A3S751-in, "in the Atlantic Ocean").
english(barrons.rule1888, "Hurricanes develop in the Atlantic Ocean").
pretty(barrons.rule1888, "isa(In, 'in the Atlantic Ocean') -> develop(Hurricanes, In).").
barrons.rule1888:: isa(A3S751-in, "in the Atlantic Ocean") -> isa(E2S751-develop, "develop"), agent(E2S751-develop, A1S751-Hurricanes), isa(A1S751-Hurricanes, "Hurricanes"), object(E2S751-develop, A3S751-in).
english(barrons.rule1889, "Tornados usually develop over land").
pretty(barrons.rule1889, "isa(develop, 'develop') -> develop(Tornados, Land, Usually).").
barrons.rule1889:: isa(E3S755-develop, "develop") -> agent(E3S755-develop, A1S755-Tornados), isa(A1S755-Tornados, "Tornados"), object(E3S755-develop, A5S755-land), isa(A5S755-land, "land"), arg(E3S755-develop, A2S755-usually), isa(A2S755-usually, "usually").
english(barrons.rule1890, "Tornados usually develop over land").
pretty(barrons.rule1890, "isa(Tornados, 'Tornados') -> develop(Tornados, Land, Usually).").
barrons.rule1890:: isa(A1S755-Tornados, "Tornados") -> isa(E3S755-develop, "develop"), agent(E3S755-develop, A1S755-Tornados), object(E3S755-develop, A5S755-land), isa(A5S755-land, "land"), arg(E3S755-develop, A2S755-usually), isa(A2S755-usually, "usually").
english(barrons.rule1891, "Tornados usually develop over land").
pretty(barrons.rule1891, "isa(Land, 'land') -> develop(Tornados, Land, Usually).").
barrons.rule1891:: isa(A5S755-land, "land") -> isa(E3S755-develop, "develop"), agent(E3S755-develop, A1S755-Tornados), isa(A1S755-Tornados, "Tornados"), object(E3S755-develop, A5S755-land), arg(E3S755-develop, A2S755-usually), isa(A2S755-usually, "usually").
english(barrons.rule1892, "Tornados usually develop over land").
pretty(barrons.rule1892, "isa(Usually, 'usually') -> develop(Tornados, Land, Usually).").
barrons.rule1892:: isa(A2S755-usually, "usually") -> isa(E3S755-develop, "develop"), agent(E3S755-develop, A1S755-Tornados), isa(A1S755-Tornados, "Tornados"), object(E3S755-develop, A5S755-land), isa(A5S755-land, "land"), arg(E3S755-develop, A2S755-usually).
english(barrons.rule1893, "Tornados have very short lives seconds to minutes").
pretty(barrons.rule1893, "isa(have, 'have') -> have(Tornados, Life).").
barrons.rule1893:: isa(E2S756-have, "have") -> agent(E2S756-have, A1S756-Tornados), isa(A1S756-Tornados, "Tornados"), object(E2S756-have, A5S756-life), isa(A5S756-life, "very short lives").
english(barrons.rule1894, "Tornados have very short lives seconds to minutes").
pretty(barrons.rule1894, "isa(Tornados, 'Tornados') -> have(Tornados, Life).").
barrons.rule1894:: isa(A1S756-Tornados, "Tornados") -> isa(E2S756-have, "have"), agent(E2S756-have, A1S756-Tornados), object(E2S756-have, A5S756-life), isa(A5S756-life, "very short lives").
english(barrons.rule1895, "Tornados have very short lives seconds to minutes").
pretty(barrons.rule1895, "isa(Life, 'very short lives') -> have(Tornados, Life).").
barrons.rule1895:: isa(A5S756-life, "very short lives") -> isa(E2S756-have, "have"), agent(E2S756-have, A1S756-Tornados), isa(A1S756-Tornados, "Tornados"), object(E2S756-have, A5S756-life).
english(barrons.rule1896, "Tornados have very short lives seconds to minutes").
pretty(barrons.rule1896, "isa(Minute, 'minutes') -> have(Tornados, Seconds).").
barrons.rule1896:: isa(A9S756-minute, "minutes") -> to(A7S756-seconds, A9S756-minute), isa(E2S756-have, "have"), agent(E2S756-have, A1S756-Tornados), isa(A1S756-Tornados, "Tornados"), object(E2S756-have, A7S756-seconds), isa(A7S756-seconds, "seconds").
english(barrons.rule1897, "Tornados have very short lives seconds to minutes").
pretty(barrons.rule1897, "isa(have, 'have') -> have(Tornados, Seconds).").
barrons.rule1897:: isa(E2S756-have, "have") -> to(A7S756-seconds, A9S756-minute), isa(A9S756-minute, "minutes"), agent(E2S756-have, A1S756-Tornados), isa(A1S756-Tornados, "Tornados"), object(E2S756-have, A7S756-seconds), isa(A7S756-seconds, "seconds").
english(barrons.rule1898, "Tornados have very short lives seconds to minutes").
pretty(barrons.rule1898, "isa(Tornados, 'Tornados') -> have(Tornados, Seconds).").
barrons.rule1898:: isa(A1S756-Tornados, "Tornados") -> to(A7S756-seconds, A9S756-minute), isa(A9S756-minute, "minutes"), isa(E2S756-have, "have"), agent(E2S756-have, A1S756-Tornados), object(E2S756-have, A7S756-seconds), isa(A7S756-seconds, "seconds").
english(barrons.rule1899, "Tornados have very short lives seconds to minutes").
pretty(barrons.rule1899, "isa(Seconds, 'seconds to minutes') -> have(Tornados, Seconds).").
barrons.rule1899:: isa(A7S756-seconds, "seconds") -> to(A7S756-seconds, A9S756-minute), isa(A9S756-minute, "minutes"), isa(E2S756-have, "have"), agent(E2S756-have, A1S756-Tornados), isa(A1S756-Tornados, "Tornados"), object(E2S756-have, A7S756-seconds).
english(barrons.rule1900, "Most severe thunderstorms occur in summer when air is hot and moist").
pretty(barrons.rule1900, "WHEN(occur_in(Thunderstorm, Moist, Summer), be(Air, Hot)), Thunderstorm = 'Most severe thunderstorms', Moist = 'moist', Summer = 'summer', Air = 'air', Hot = 'hot'.").
barrons.rule1900:: isa(E4S757-occur, "occur"), agent(E4S757-occur, A3S757-thunderstorm), isa(A3S757-thunderstorm, "Most severe thunderstorms"), in(E4S757-occur, A6S757-summer), isa(A6S757-summer, "summer"), arg(E4S757-occur, A12S757-moist), isa(A12S757-moist, "moist") -> when(E4S757-occur, E9S757-be), isa(E9S757-be, "be"), agent(E9S757-be, A8S757-air), isa(A8S757-air, "air"), object(E9S757-be, A10S757-hot), isa(A10S757-hot, "hot").
english(barrons.rule1901, "Most severe thunderstorms occur in summer when air is hot and moist").
pretty(barrons.rule1901, "WHEN(occur_in(Thunderstorm, Moist, Summer), be(Air, Hot)), Thunderstorm = 'Most severe thunderstorms', Moist = 'moist', Summer = 'summer', Air = 'air', Hot = 'hot'.").
barrons.rule1901:: isa(E9S757-be, "be"), agent(E9S757-be, A8S757-air), isa(A8S757-air, "air"), object(E9S757-be, A10S757-hot), isa(A10S757-hot, "hot") -> when(E4S757-occur, E9S757-be), isa(E4S757-occur, "occur"), agent(E4S757-occur, A3S757-thunderstorm), isa(A3S757-thunderstorm, "Most severe thunderstorms"), in(E4S757-occur, A6S757-summer), isa(A6S757-summer, "summer"), arg(E4S757-occur, A12S757-moist), isa(A12S757-moist, "moist").
english(barrons.rule1902, "If the ground is too hard or full of water or it[the ground] rains for a long period of time the ground can not soak up the water").
pretty(barrons.rule1902, "isa(not soak up, 'not soak up') -> not soak up(Ground, Water, Full, Rain).").
barrons.rule1902:: isa(E26S760-soak, "not soak up") -> agent(E26S760-soak, A23S760-ground), isa(A23S760-ground, "the ground"), object(E26S760-soak, A29S760-water), isa(A29S760-water, "the water"), arg(E26S760-soak, A8S760-full), isa(A8S760-full, "full"), arg(E26S760-soak, A14S760-rain), isa(A14S760-rain, "it[the ground] rains for a long period of time").
english(barrons.rule1903, "If the ground is too hard or full of water or it[the ground] rains for a long period of time the ground can not soak up the water").
pretty(barrons.rule1903, "isa(Ground, 'the ground') -> not soak up(Ground, Water, Full, Rain).").
barrons.rule1903:: isa(A23S760-ground, "the ground") -> isa(E26S760-soak, "not soak up"), agent(E26S760-soak, A23S760-ground), object(E26S760-soak, A29S760-water), isa(A29S760-water, "the water"), arg(E26S760-soak, A8S760-full), isa(A8S760-full, "full"), arg(E26S760-soak, A14S760-rain), isa(A14S760-rain, "it[the ground] rains for a long period of time").
english(barrons.rule1904, "If the ground is too hard or full of water or it[the ground] rains for a long period of time the ground can not soak up the water").
pretty(barrons.rule1904, "isa(Water, 'the water') -> not soak up(Ground, Water, Full, Rain).").
barrons.rule1904:: isa(A29S760-water, "the water") -> isa(E26S760-soak, "not soak up"), agent(E26S760-soak, A23S760-ground), isa(A23S760-ground, "the ground"), object(E26S760-soak, A29S760-water), arg(E26S760-soak, A8S760-full), isa(A8S760-full, "full"), arg(E26S760-soak, A14S760-rain), isa(A14S760-rain, "it[the ground] rains for a long period of time").
english(barrons.rule1905, "If the ground is too hard or full of water or it[the ground] rains for a long period of time the ground can not soak up the water").
pretty(barrons.rule1905, "isa(Full, 'full') -> not soak up(Ground, Water, Full, Rain).").
barrons.rule1905:: isa(A8S760-full, "full") -> isa(E26S760-soak, "not soak up"), agent(E26S760-soak, A23S760-ground), isa(A23S760-ground, "the ground"), object(E26S760-soak, A29S760-water), isa(A29S760-water, "the water"), arg(E26S760-soak, A8S760-full), arg(E26S760-soak, A14S760-rain), isa(A14S760-rain, "it[the ground] rains for a long period of time").
english(barrons.rule1906, "If the ground is too hard or full of water or it[the ground] rains for a long period of time the ground can not soak up the water").
pretty(barrons.rule1906, "isa(Rain, 'it[the ground] rains for a long period of time') -> not soak up(Ground, Water, Full, Rain).").
barrons.rule1906:: isa(A14S760-rain, "it[the ground] rains for a long period of time") -> isa(E26S760-soak, "not soak up"), agent(E26S760-soak, A23S760-ground), isa(A23S760-ground, "the ground"), object(E26S760-soak, A29S760-water), isa(A29S760-water, "the water"), arg(E26S760-soak, A8S760-full), isa(A8S760-full, "full"), arg(E26S760-soak, A14S760-rain).
english(barrons.rule1907, "If the ground is too hard or full of water or it[the ground] rains for a long period of time the ground can not soak up the water").
pretty(barrons.rule1907, "EFFECT(be_of(Ground, Hard, Too, Water), not soak up(Ground, Water, Full, Rain)), Ground = 'the ground', Hard = 'If hard of water', Too = 'too', Water = 'water', Ground = 'the ground', Water = 'the water', Full = 'full', Rain = 'rains for a long period of time'.").
barrons.rule1907:: isa(E4S760-be, "be"), agent(E4S760-be, A3S760-ground), isa(A3S760-ground, "the ground"), object(E4S760-be, A6S760-hard), isa(A6S760-hard, "hard"), of(E4S760-be, A10S760-water), isa(A10S760-water, "water"), arg(E4S760-be, A5S760-too), isa(A5S760-too, "too") -> effect(E4S760-be, E26S760-soak), isa(E26S760-soak, "not soak up"), agent(E26S760-soak, A23S760-ground), isa(A23S760-ground, "the ground"), object(E26S760-soak, A29S760-water), isa(A29S760-water, "the water"), arg(E26S760-soak, A8S760-full), isa(A8S760-full, "full"), arg(E26S760-soak, A14S760-rain), isa(A14S760-rain, "it[the ground] rains for a long period of time").
english(barrons.rule1908, "If the ground is too hard or full of water or it[the ground] rains for a long period of time the ground can not soak up the water").
pretty(barrons.rule1908, "EFFECT(be_of(Ground, Hard, Too, Water), not soak up(Ground, Water, Full, Rain)), Ground = 'the ground', Hard = 'If hard of water', Too = 'too', Water = 'water', Ground = 'the ground', Water = 'the water', Full = 'full', Rain = 'rains for a long period of time'.").
barrons.rule1908:: isa(E26S760-soak, "not soak up"), agent(E26S760-soak, A23S760-ground), isa(A23S760-ground, "the ground"), object(E26S760-soak, A29S760-water), isa(A29S760-water, "the water"), arg(E26S760-soak, A8S760-full), isa(A8S760-full, "full"), arg(E26S760-soak, A14S760-rain), isa(A14S760-rain, "it[the ground] rains for a long period of time") -> effect(E4S760-be, E26S760-soak), isa(E4S760-be, "be"), agent(E4S760-be, A3S760-ground), isa(A3S760-ground, "the ground"), object(E4S760-be, A6S760-hard), isa(A6S760-hard, "hard"), of(E4S760-be, A10S760-water), isa(A10S760-water, "water"), arg(E4S760-be, A5S760-too), isa(A5S760-too, "too").
english(barrons.rule1909, "These storms/conditions can have a harmful effect on the areas involved").
pretty(barrons.rule1909, "isa(Area, 'the areas') -> have(Storms/conditions, Effect).").
barrons.rule1909:: isa(A10S762-area, "the areas") -> on(A7S762-effect, A10S762-area), isa(E4S762-have, "have"), agent(E4S762-have, A2S762-storms/conditions), isa(A2S762-storms/conditions, "These storms/conditions"), object(E4S762-have, A7S762-effect), isa(A7S762-effect, "a harmful effect").
english(barrons.rule1910, "These storms/conditions can have a harmful effect on the areas involved").
pretty(barrons.rule1910, "isa(have, 'have') -> have(Storms/conditions, Effect).").
barrons.rule1910:: isa(E4S762-have, "have") -> on(A7S762-effect, A10S762-area), isa(A10S762-area, "the areas"), agent(E4S762-have, A2S762-storms/conditions), isa(A2S762-storms/conditions, "These storms/conditions"), object(E4S762-have, A7S762-effect), isa(A7S762-effect, "a harmful effect").
english(barrons.rule1911, "These storms/conditions can have a harmful effect on the areas involved").
pretty(barrons.rule1911, "isa(Storms/conditions, 'These storms/conditions') -> have(Storms/conditions, Effect).").
barrons.rule1911:: isa(A2S762-storms/conditions, "These storms/conditions") -> on(A7S762-effect, A10S762-area), isa(A10S762-area, "the areas"), isa(E4S762-have, "have"), agent(E4S762-have, A2S762-storms/conditions), object(E4S762-have, A7S762-effect), isa(A7S762-effect, "a harmful effect").
english(barrons.rule1912, "These storms/conditions can have a harmful effect on the areas involved").
pretty(barrons.rule1912, "isa(Effect, 'a harmful effect on the areas involved') -> have(Storms/conditions, Effect).").
barrons.rule1912:: isa(A7S762-effect, "a harmful effect") -> on(A7S762-effect, A10S762-area), isa(A10S762-area, "the areas"), isa(E4S762-have, "have"), agent(E4S762-have, A2S762-storms/conditions), isa(A2S762-storms/conditions, "These storms/conditions"), object(E4S762-have, A7S762-effect).
english(barrons.rule1913, "These storms/conditions can have a harmful effect on the areas involved").
pretty(barrons.rule1913, "EFFECT(Storms/conditions, harmful effect_on(Storms/conditions, Area)), Storms/conditions = 'These storms/conditions', Area = 'the areas'.").
barrons.rule1913:: isa(A2S762-storms/conditions, "These storms/conditions") -> effect(A2S762-storms/conditions, E7S762-effect), isa(E7S762-effect, "a harmful effect"), agent(E7S762-effect, A2S762-storms/conditions), on(E7S762-effect, A10S762-area), isa(A10S762-area, "the areas involved").
english(barrons.rule1914, "These storms/conditions can have a harmful effect on the areas involved").
pretty(barrons.rule1914, "EFFECT(Storms/conditions, harmful effect_on(Storms/conditions, Area)), Storms/conditions = 'These storms/conditions', Area = 'the areas'.").
barrons.rule1914:: isa(E7S762-effect, "a harmful effect"), agent(E7S762-effect, A2S762-storms/conditions), isa(A2S762-storms/conditions, "These storms/conditions"), on(E7S762-effect, A10S762-area), isa(A10S762-area, "the areas involved") -> effect(A2S762-storms/conditions, E7S762-effect).
english(barrons.rule1915, "Each season that occurs in New York state experiences specific climate conditions").
pretty(barrons.rule1915, "isa(experience, 'experiences') -> experience(Season, Condition).").
barrons.rule1915:: isa(E9S766-experience, "experience") -> agent(E9S766-experience, A2S766-season), isa(A2S766-season, "Each season"), object(E9S766-experience, A12S766-condition), isa(A12S766-condition, "specific climate conditions").
english(barrons.rule1916, "Each season that occurs in New York state experiences specific climate conditions").
pretty(barrons.rule1916, "isa(Season, 'Each season') -> experience(Season, Condition).").
barrons.rule1916:: isa(A2S766-season, "Each season") -> isa(E9S766-experience, "experience"), agent(E9S766-experience, A2S766-season), object(E9S766-experience, A12S766-condition), isa(A12S766-condition, "specific climate conditions").
english(barrons.rule1917, "Each season that occurs in New York state experiences specific climate conditions").
pretty(barrons.rule1917, "isa(Condition, 'specific climate conditions') -> experience(Season, Condition).").
barrons.rule1917:: isa(A12S766-condition, "specific climate conditions") -> isa(E9S766-experience, "experience"), agent(E9S766-experience, A2S766-season), isa(A2S766-season, "Each season"), object(E9S766-experience, A12S766-condition).
english(barrons.rule1918, "During Spring the temperature starts out cold and gradually warms").
pretty(barrons.rule1918, "isa(start out, 'starts out') -> start out_during(Temperature, Warm, Spring).").
barrons.rule1918:: isa(E6S768-start, "start out") -> agent(E6S768-start, A5S768-temperature), isa(A5S768-temperature, "the temperature"), object(E6S768-start, A11S768-warm), isa(A11S768-warm, "cold and gradually warms"), during(E6S768-start, A2S768-spring), isa(A2S768-spring, "Spring").
english(barrons.rule1919, "During Spring the temperature starts out cold and gradually warms").
pretty(barrons.rule1919, "isa(Temperature, 'the temperature') -> start out_during(Temperature, Warm, Spring).").
barrons.rule1919:: isa(A5S768-temperature, "the temperature") -> isa(E6S768-start, "start out"), agent(E6S768-start, A5S768-temperature), object(E6S768-start, A11S768-warm), isa(A11S768-warm, "cold and gradually warms"), during(E6S768-start, A2S768-spring), isa(A2S768-spring, "Spring").
english(barrons.rule1920, "During Spring the temperature starts out cold and gradually warms").
pretty(barrons.rule1920, "isa(Warm, 'cold and gradually warms') -> start out_during(Temperature, Warm, Spring).").
barrons.rule1920:: isa(A11S768-warm, "cold and gradually warms") -> isa(E6S768-start, "start out"), agent(E6S768-start, A5S768-temperature), isa(A5S768-temperature, "the temperature"), object(E6S768-start, A11S768-warm), during(E6S768-start, A2S768-spring), isa(A2S768-spring, "Spring").
english(barrons.rule1921, "During Spring the temperature starts out cold and gradually warms").
pretty(barrons.rule1921, "isa(Spring, 'Spring') -> start out_during(Temperature, Warm, Spring).").
barrons.rule1921:: isa(A2S768-spring, "Spring") -> isa(E6S768-start, "start out"), agent(E6S768-start, A5S768-temperature), isa(A5S768-temperature, "the temperature"), object(E6S768-start, A11S768-warm), isa(A11S768-warm, "cold and gradually warms"), during(E6S768-start, A2S768-spring).
english(barrons.rule1922, "Spring has high amounts of rainfall").
pretty(barrons.rule1922, "isa(Rainfall, 'rainfall') -> have(Spring, Amount).").
barrons.rule1922:: isa(A6S769-rainfall, "rainfall") -> of(A4S769-amount, A6S769-rainfall), isa(E2S769-have, "have"), agent(E2S769-have, A1S769-spring), isa(A1S769-spring, "Spring"), object(E2S769-have, A4S769-amount), isa(A4S769-amount, "high amounts").
english(barrons.rule1923, "Spring has high amounts of rainfall").
pretty(barrons.rule1923, "isa(have, 'has') -> have(Spring, Amount).").
barrons.rule1923:: isa(E2S769-have, "have") -> of(A4S769-amount, A6S769-rainfall), isa(A6S769-rainfall, "rainfall"), agent(E2S769-have, A1S769-spring), isa(A1S769-spring, "Spring"), object(E2S769-have, A4S769-amount), isa(A4S769-amount, "high amounts").
english(barrons.rule1924, "Spring has high amounts of rainfall").
pretty(barrons.rule1924, "isa(Spring, 'Spring') -> have(Spring, Amount).").
barrons.rule1924:: isa(A1S769-spring, "Spring") -> of(A4S769-amount, A6S769-rainfall), isa(A6S769-rainfall, "rainfall"), isa(E2S769-have, "have"), agent(E2S769-have, A1S769-spring), object(E2S769-have, A4S769-amount), isa(A4S769-amount, "high amounts").
english(barrons.rule1925, "Spring has high amounts of rainfall").
pretty(barrons.rule1925, "isa(Amount, 'high amounts of rainfall') -> have(Spring, Amount).").
barrons.rule1925:: isa(A4S769-amount, "high amounts") -> of(A4S769-amount, A6S769-rainfall), isa(A6S769-rainfall, "rainfall"), isa(E2S769-have, "have"), agent(E2S769-have, A1S769-spring), isa(A1S769-spring, "Spring"), object(E2S769-have, A4S769-amount).
english(barrons.rule1926, "Water is a substance that is found all over the Earth in the ground on the surface and in the air").
pretty(barrons.rule1926, "EXAMPLE(Water, find_over(Water, All, Earth)), Water = 'Water', All = 'all', Earth = 'the Earth in the ground on the surface and in the air'.").
barrons.rule1926:: isa(A1S778-water, "Water") -> example(A1S778-water, E7S778-find), isa(E7S778-find, "find"), object(E7S778-find, A1S778-water), over(E7S778-find, A11S778-Earth), isa(A11S778-Earth, "the Earth in the ground on the surface and in the air"), arg(E7S778-find, A8S778-all), isa(A8S778-all, "all").
english(barrons.rule1927, "Water is a substance that is found all over the Earth in the ground on the surface and in the air").
pretty(barrons.rule1927, "EXAMPLE(Water, find_over(Water, All, Earth)), Water = 'Water', All = 'all', Earth = 'the Earth in the ground on the surface and in the air'.").
barrons.rule1927:: isa(E7S778-find, "find"), object(E7S778-find, A1S778-water), isa(A1S778-water, "Water"), over(E7S778-find, A11S778-Earth), isa(A11S778-Earth, "the Earth in the ground on the surface and in the air"), arg(E7S778-find, A8S778-all), isa(A8S778-all, "all") -> example(A1S778-water, E7S778-find).
english(barrons.rule1928, "Water is a substance that is found all over the Earth in the ground on the surface and in the air").
pretty(barrons.rule1928, "EXAMPLE(Water, find_over(Substance, All, Earth)), Water = 'Water', Substance = 'a substance', All = 'all', Earth = 'the Earth in the ground on the surface and in the air'.").
barrons.rule1928:: isa(A1S778-water, "Water") -> example(A1S778-water, E7S778-find), isa(E7S778-find, "find"), object(E7S778-find, A4S778-substance), isa(A4S778-substance, "a substance"), over(E7S778-find, A11S778-Earth), isa(A11S778-Earth, "the Earth in the ground on the surface and in the air"), arg(E7S778-find, A8S778-all), isa(A8S778-all, "all").
english(barrons.rule1929, "Water is a substance that is found all over the Earth in the ground on the surface and in the air").
pretty(barrons.rule1929, "EXAMPLE(Water, find_over(Substance, All, Earth)), Water = 'Water', Substance = 'a substance', All = 'all', Earth = 'the Earth in the ground on the surface and in the air'.").
barrons.rule1929:: isa(E7S778-find, "find"), object(E7S778-find, A4S778-substance), isa(A4S778-substance, "a substance"), over(E7S778-find, A11S778-Earth), isa(A11S778-Earth, "the Earth in the ground on the surface and in the air"), arg(E7S778-find, A8S778-all), isa(A8S778-all, "all") -> example(A1S778-water, E7S778-find), isa(A1S778-water, "Water").
english(barrons.rule1930, "Water is a substance that is found all over the Earth in the ground on the surface and in the air").
pretty(barrons.rule1930, "EXAMPLE(Water, Substance), Water = 'Water', Substance = 'a substance'.").
barrons.rule1930:: isa(A1S778-water, "Water") -> example(A1S778-water, A4S778-substance), isa(A4S778-substance, "a substance").
english(barrons.rule1931, "Water is a substance that is found all over the Earth in the ground on the surface and in the air").
pretty(barrons.rule1931, "EXAMPLE(Water, Substance), Water = 'Water', Substance = 'a substance'.").
barrons.rule1931:: isa(A4S778-substance, "a substance") -> example(A1S778-water, A4S778-substance), isa(A1S778-water, "Water").
english(barrons.rule1932, "Water in the solid phase is often called ice").
pretty(barrons.rule1932, "EXAMPLE(Water, Ice), Water = 'Water', Ice = 'ice'.").
barrons.rule1932:: isa(A1S780-water, "Water") -> example(A1S780-water, A9S780-ice), isa(A9S780-ice, "ice").
english(barrons.rule1933, "Water in the solid phase is often called ice").
pretty(barrons.rule1933, "EXAMPLE(Water, Ice), Water = 'Water', Ice = 'ice'.").
barrons.rule1933:: isa(A9S780-ice, "ice") -> example(A1S780-water, A9S780-ice), isa(A1S780-water, "Water").
english(barrons.rule1934, "Water in the gaseous phase is often called water vapor or steam").
pretty(barrons.rule1934, "EXAMPLE(Water, Vapor), Water = 'Water', Vapor = 'water vapor'.").
barrons.rule1934:: isa(A1S782-water, "Water") -> example(A1S782-water, A10S782-vapor), isa(A10S782-vapor, "water vapor").
english(barrons.rule1935, "Water in the gaseous phase is often called water vapor or steam").
pretty(barrons.rule1935, "EXAMPLE(Water, Vapor), Water = 'Water', Vapor = 'water vapor'.").
barrons.rule1935:: isa(A10S782-vapor, "water vapor") -> example(A1S782-water, A10S782-vapor), isa(A1S782-water, "Water").
english(barrons.rule1936, "Water in the gaseous phase is often called water vapor or steam").
pretty(barrons.rule1936, "EXAMPLE(Water, Steam), Water = 'Water', Steam = 'steam'.").
barrons.rule1936:: isa(A1S782-water, "Water") -> example(A1S782-water, A12S782-steam), isa(A12S782-steam, "steam").
english(barrons.rule1937, "Water in the gaseous phase is often called water vapor or steam").
pretty(barrons.rule1937, "EXAMPLE(Water, Steam), Water = 'Water', Steam = 'steam'.").
barrons.rule1937:: isa(A12S782-steam, "steam") -> example(A1S782-water, A12S782-steam), isa(A1S782-water, "Water").
english(barrons.rule1938, "Water can easily be changed from one phase to another by the addition or removal of heat").
pretty(barrons.rule1938, "EFFECT(change_from(Water, Easily, Phase), another_by(Addition, by(Removal))), Water = 'Water', Easily = 'easily', Phase = 'one phase', Addition = 'the addition of heat', Removal = 'removal'.").
barrons.rule1938:: isa(E5S783-change, "change"), object(E5S783-change, A1S783-water), isa(A1S783-water, "Water"), from(E5S783-change, A8S783-phase), isa(A8S783-phase, "one phase"), arg(E5S783-change, A3S783-easily), isa(A3S783-easily, "easily") -> effect(E5S783-change, E10S783-another), isa(E10S783-another, "another"), by(E10S783-another, A13S783-addition), isa(A13S783-addition, "the addition of heat"), by(E10S783-another, A15S783-removal), isa(A15S783-removal, "removal").
english(barrons.rule1939, "Water can easily be changed from one phase to another by the addition or removal of heat").
pretty(barrons.rule1939, "EFFECT(change_from(Water, Easily, Phase), another_by(Addition, by(Removal))), Water = 'Water', Easily = 'easily', Phase = 'one phase', Addition = 'the addition of heat', Removal = 'removal'.").
barrons.rule1939:: isa(E10S783-another, "another"), by(E10S783-another, A13S783-addition), isa(A13S783-addition, "the addition of heat"), by(E10S783-another, A15S783-removal), isa(A15S783-removal, "removal") -> effect(E5S783-change, E10S783-another), isa(E5S783-change, "change"), object(E5S783-change, A1S783-water), isa(A1S783-water, "Water"), from(E5S783-change, A8S783-phase), isa(A8S783-phase, "one phase"), arg(E5S783-change, A3S783-easily), isa(A3S783-easily, "easily").
english(barrons.rule1940, "Each phase change that water goes through has a specific name").
pretty(barrons.rule1940, "isa(have, 'has') -> have(Change, Name).").
barrons.rule1940:: isa(E8S784-have, "have") -> agent(E8S784-have, A3S784-change), isa(A3S784-change, "Each phase change"), object(E8S784-have, A11S784-name), isa(A11S784-name, "a specific name").
english(barrons.rule1941, "Each phase change that water goes through has a specific name").
pretty(barrons.rule1941, "isa(Change, 'Each phase change') -> have(Change, Name).").
barrons.rule1941:: isa(A3S784-change, "Each phase change") -> isa(E8S784-have, "have"), agent(E8S784-have, A3S784-change), object(E8S784-have, A11S784-name), isa(A11S784-name, "a specific name").
english(barrons.rule1942, "Each phase change that water goes through has a specific name").
pretty(barrons.rule1942, "isa(Name, 'a specific name') -> have(Change, Name).").
barrons.rule1942:: isa(A11S784-name, "a specific name") -> isa(E8S784-have, "have"), agent(E8S784-have, A3S784-change), isa(A3S784-change, "Each phase change"), object(E8S784-have, A11S784-name).
english(barrons.rule1943, "Freezing involves changing water from its[Each phase change that water goes through] liquid state to its[its liquid state] solid state ice by the removal of heat").
pretty(barrons.rule1943, "ENABLE(remove(Freezing, Heat), change_from(Freezing, Water, State, to(State))), Freezing = 'Freezing', Heat = 'heat', Water = 'water', State = 'its[Each phase change that water goes through] liquid state', State = 'its[its liquid state] solid state'.").
barrons.rule1943:: isa(E18S785-removal, "remove"), agent(E18S785-removal, A1S785-freezing), isa(A1S785-freezing, "Freezing"), object(E18S785-removal, A20S785-heat), isa(A20S785-heat, "heat") -> enable(E18S785-removal, E3S785-change), isa(E3S785-change, "change"), agent(E3S785-change, A1S785-freezing), object(E3S785-change, A4S785-water), isa(A4S785-water, "water"), from(E3S785-change, A8S785-state), isa(A8S785-state, "its[Each phase change that water goes through] liquid state"), to(E3S785-change, A12S785-state), isa(A12S785-state, "its[its liquid state] solid state").
english(barrons.rule1944, "Freezing involves changing water from its[Each phase change that water goes through] liquid state to its[its liquid state] solid state ice by the removal of heat").
pretty(barrons.rule1944, "ENABLE(remove(Freezing, Heat), change_from(Freezing, Water, State, to(State))), Freezing = 'Freezing', Heat = 'heat', Water = 'water', State = 'its[Each phase change that water goes through] liquid state', State = 'its[its liquid state] solid state'.").
barrons.rule1944:: isa(E3S785-change, "change"), agent(E3S785-change, A1S785-freezing), isa(A1S785-freezing, "Freezing"), object(E3S785-change, A4S785-water), isa(A4S785-water, "water"), from(E3S785-change, A8S785-state), isa(A8S785-state, "its[Each phase change that water goes through] liquid state"), to(E3S785-change, A12S785-state), isa(A12S785-state, "its[its liquid state] solid state") -> enable(E18S785-removal, E3S785-change), isa(E18S785-removal, "remove"), agent(E18S785-removal, A1S785-freezing), object(E18S785-removal, A20S785-heat), isa(A20S785-heat, "heat").
english(barrons.rule1945, "Melting is the opposite of freezing and involves changing water from its[Melting] solid state ice to a liquid state by the addition of heat").
pretty(barrons.rule1945, "EXAMPLE(Melt, Opposite), Melt = 'Melting', Opposite = 'the opposite of freezing'.").
barrons.rule1945:: isa(A1S786-melt, "Melting") -> example(A1S786-melt, A4S786-opposite), of(A4S786-opposite, A6S786-freezing), isa(A6S786-freezing, "freezing"), isa(A4S786-opposite, "the opposite").
english(barrons.rule1946, "Melting is the opposite of freezing and involves changing water from its[Melting] solid state ice to a liquid state by the addition of heat").
pretty(barrons.rule1946, "EXAMPLE(Melt, Opposite), Melt = 'Melting', Opposite = 'the opposite of freezing'.").
barrons.rule1946:: of(A4S786-opposite, A6S786-freezing), isa(A6S786-freezing, "freezing"), isa(A4S786-opposite, "the opposite") -> example(A1S786-melt, A4S786-opposite), isa(A1S786-melt, "Melting").
english(barrons.rule1947, "Melting is the opposite of freezing and involves changing water from its[Melting] solid state ice to a liquid state by the addition of heat").
pretty(barrons.rule1947, "ENABLE(add(Melt, Heat), change_from(Melt, Water, State, to(State))), Melt = 'Melting', Heat = 'heat', Water = 'water', State = 'its[Melting] solid state', State = 'a liquid state'.").
barrons.rule1947:: isa(E24S786-addition, "add"), agent(E24S786-addition, A1S786-melt), isa(A1S786-melt, "Melting"), object(E24S786-addition, A26S786-heat), isa(A26S786-heat, "heat") -> enable(E24S786-addition, E9S786-change), isa(E9S786-change, "change"), agent(E9S786-change, A1S786-melt), object(E9S786-change, A10S786-water), isa(A10S786-water, "water"), from(E9S786-change, A14S786-state), isa(A14S786-state, "its[Melting] solid state"), to(E9S786-change, A21S786-state), isa(A21S786-state, "a liquid state").
english(barrons.rule1948, "Melting is the opposite of freezing and involves changing water from its[Melting] solid state ice to a liquid state by the addition of heat").
pretty(barrons.rule1948, "ENABLE(add(Melt, Heat), change_from(Melt, Water, State, to(State))), Melt = 'Melting', Heat = 'heat', Water = 'water', State = 'its[Melting] solid state', State = 'a liquid state'.").
barrons.rule1948:: isa(E9S786-change, "change"), agent(E9S786-change, A1S786-melt), isa(A1S786-melt, "Melting"), object(E9S786-change, A10S786-water), isa(A10S786-water, "water"), from(E9S786-change, A14S786-state), isa(A14S786-state, "its[Melting] solid state"), to(E9S786-change, A21S786-state), isa(A21S786-state, "a liquid state") -> enable(E24S786-addition, E9S786-change), isa(E24S786-addition, "add"), agent(E24S786-addition, A1S786-melt), object(E24S786-addition, A26S786-heat), isa(A26S786-heat, "heat").
english(barrons.rule1949, "The energy from the sun heated the water and caused it[energy which it needs to survive] to evaporate change from liquid water to water vapor").
pretty(barrons.rule1949, "isa(Sun, 'the sun') -> heat(Energy, Water).").
barrons.rule1949:: isa(A5S791-sun, "the sun") -> from(A2S791-energy, A5S791-sun), isa(E6S791-heat, "heat"), agent(E6S791-heat, A2S791-energy), isa(A2S791-energy, "The energy"), object(E6S791-heat, A8S791-water), isa(A8S791-water, "the water").
english(barrons.rule1950, "The energy from the sun heated the water and caused it[energy which it needs to survive] to evaporate change from liquid water to water vapor").
pretty(barrons.rule1950, "isa(heat, 'heated') -> heat(Energy, Water).").
barrons.rule1950:: isa(E6S791-heat, "heat") -> from(A2S791-energy, A5S791-sun), isa(A5S791-sun, "the sun"), agent(E6S791-heat, A2S791-energy), isa(A2S791-energy, "The energy"), object(E6S791-heat, A8S791-water), isa(A8S791-water, "the water").
english(barrons.rule1951, "The energy from the sun heated the water and caused it[energy which it needs to survive] to evaporate change from liquid water to water vapor").
pretty(barrons.rule1951, "isa(Energy, 'The energy from the sun') -> heat(Energy, Water).").
barrons.rule1951:: isa(A2S791-energy, "The energy") -> from(A2S791-energy, A5S791-sun), isa(A5S791-sun, "the sun"), isa(E6S791-heat, "heat"), agent(E6S791-heat, A2S791-energy), object(E6S791-heat, A8S791-water), isa(A8S791-water, "the water").
english(barrons.rule1952, "The energy from the sun heated the water and caused it[energy which it needs to survive] to evaporate change from liquid water to water vapor").
pretty(barrons.rule1952, "isa(Water, 'the water') -> heat(Energy, Water).").
barrons.rule1952:: isa(A8S791-water, "the water") -> from(A2S791-energy, A5S791-sun), isa(A5S791-sun, "the sun"), isa(E6S791-heat, "heat"), agent(E6S791-heat, A2S791-energy), isa(A2S791-energy, "The energy"), object(E6S791-heat, A8S791-water).
english(barrons.rule1953, "The energy from the sun heated the water and caused it[energy which it needs to survive] to evaporate change from liquid water to water vapor").
pretty(barrons.rule1953, "CAUSE(Energy, evaporate(Energy, Change)), Energy = 'The energy from the sun', Energy = 'energy', Change = 'change from liquid water to water vapor'.").
barrons.rule1953:: from(A2S791-energy, A5S791-sun), isa(A5S791-sun, "the sun"), isa(A2S791-energy, "The energy") -> cause(A2S791-energy, E13S791-evaporate), from(A15S791-change, A18S791-water), isa(A18S791-water, "liquid water"), to(A15S791-change, A21S791-vapor), isa(A21S791-vapor, "water vapor"), isa(E13S791-evaporate, "evaporate"), agent(E13S791-evaporate, A9S10-energy), isa(A9S10-energy, "energy"), object(E13S791-evaporate, A15S791-change), isa(A15S791-change, "change").
english(barrons.rule1954, "The energy from the sun heated the water and caused it[energy which it needs to survive] to evaporate change from liquid water to water vapor").
pretty(barrons.rule1954, "CAUSE(Energy, evaporate(Energy, Change)), Energy = 'The energy from the sun', Energy = 'energy', Change = 'change from liquid water to water vapor'.").
barrons.rule1954:: from(A15S791-change, A18S791-water), isa(A18S791-water, "liquid water"), to(A15S791-change, A21S791-vapor), isa(A21S791-vapor, "water vapor"), isa(E13S791-evaporate, "evaporate"), agent(E13S791-evaporate, A9S10-energy), isa(A9S10-energy, "energy"), object(E13S791-evaporate, A15S791-change), isa(A15S791-change, "change") -> cause(A2S791-energy, E13S791-evaporate), from(A2S791-energy, A5S791-sun), isa(A5S791-sun, "the sun"), isa(A2S791-energy, "The energy").
english(barrons.rule1955, "The water vapor then entered the air").
pretty(barrons.rule1955, "isa(enter, 'entered') -> enter(Vapor, Air, Then).").
barrons.rule1955:: isa(E5S792-enter, "enter") -> agent(E5S792-enter, A3S792-vapor), isa(A3S792-vapor, "The water vapor"), object(E5S792-enter, A7S792-air), isa(A7S792-air, "the air"), arg(E5S792-enter, A4S792-then), isa(A4S792-then, "then").
english(barrons.rule1956, "The water vapor then entered the air").
pretty(barrons.rule1956, "isa(Vapor, 'The water vapor') -> enter(Vapor, Air, Then).").
barrons.rule1956:: isa(A3S792-vapor, "The water vapor") -> isa(E5S792-enter, "enter"), agent(E5S792-enter, A3S792-vapor), object(E5S792-enter, A7S792-air), isa(A7S792-air, "the air"), arg(E5S792-enter, A4S792-then), isa(A4S792-then, "then").
english(barrons.rule1957, "The water vapor then entered the air").
pretty(barrons.rule1957, "isa(Air, 'the air') -> enter(Vapor, Air, Then).").
barrons.rule1957:: isa(A7S792-air, "the air") -> isa(E5S792-enter, "enter"), agent(E5S792-enter, A3S792-vapor), isa(A3S792-vapor, "The water vapor"), object(E5S792-enter, A7S792-air), arg(E5S792-enter, A4S792-then), isa(A4S792-then, "then").
english(barrons.rule1958, "The water vapor then entered the air").
pretty(barrons.rule1958, "isa(Then, 'then') -> enter(Vapor, Air, Then).").
barrons.rule1958:: isa(A4S792-then, "then") -> isa(E5S792-enter, "enter"), agent(E5S792-enter, A3S792-vapor), isa(A3S792-vapor, "The water vapor"), object(E5S792-enter, A7S792-air), isa(A7S792-air, "the air"), arg(E5S792-enter, A4S792-then).
english(barrons.rule1959, "This is because the water vapor in the air came in contact with the cool glass").
pretty(barrons.rule1959, "EFFECT(come_in(Vapor, Contact), be(This)), Vapor = 'the water vapor in the air', Contact = 'contact with the cool glass', This = 'This'.").
barrons.rule1959:: in(A6S796-vapor, A9S796-air), isa(A9S796-air, "the air"), isa(E10S796-come, "come"), agent(E10S796-come, A6S796-vapor), isa(A6S796-vapor, "the water vapor"), in(E10S796-come, A12S796-contact), isa(A12S796-contact, "contact with the cool glass") -> effect(E10S796-come, E2S796-be), isa(E2S796-be, "be"), agent(E2S796-be, A1S796-this), isa(A1S796-this, "This").
english(barrons.rule1960, "This is because the water vapor in the air came in contact with the cool glass").
pretty(barrons.rule1960, "EFFECT(come_in(Vapor, Contact), be(This)), Vapor = 'the water vapor in the air', Contact = 'contact with the cool glass', This = 'This'.").
barrons.rule1960:: isa(E2S796-be, "be"), agent(E2S796-be, A1S796-this), isa(A1S796-this, "This") -> effect(E10S796-come, E2S796-be), in(A6S796-vapor, A9S796-air), isa(A9S796-air, "the air"), isa(E10S796-come, "come"), agent(E10S796-come, A6S796-vapor), isa(A6S796-vapor, "the water vapor"), in(E10S796-come, A12S796-contact), isa(A12S796-contact, "contact with the cool glass").
english(barrons.rule1961, "The water that falls can be in liquid form such as rain or in solid form such as snow").
pretty(barrons.rule1961, "EXAMPLE(Rain, Form), Rain = 'rain', Form = 'liquid form such as rain'.").
barrons.rule1961:: isa(A13S799-rain, "rain") -> example(A13S799-rain, A9S799-form), such_as(A9S799-form, A13S799-rain), isa(A9S799-form, "liquid form").
english(barrons.rule1962, "The water that falls can be in liquid form such as rain or in solid form such as snow").
pretty(barrons.rule1962, "EXAMPLE(Rain, Form), Rain = 'rain', Form = 'liquid form such as rain'.").
barrons.rule1962:: such_as(A9S799-form, A13S799-rain), isa(A13S799-rain, "rain"), isa(A9S799-form, "liquid form") -> example(A13S799-rain, A9S799-form).
english(barrons.rule1963, "The water that falls can be in liquid form such as rain or in solid form such as snow").
pretty(barrons.rule1963, "EXAMPLE(Snow, In), Snow = 'snow', In = 'in solid form such as snow'.").
barrons.rule1963:: isa(A22S799-snow, "snow") -> example(A22S799-snow, A16S799-in), such_as(A16S799-in, A22S799-snow), isa(A16S799-in, "in solid form").
english(barrons.rule1964, "The water that falls can be in liquid form such as rain or in solid form such as snow").
pretty(barrons.rule1964, "EXAMPLE(Snow, In), Snow = 'snow', In = 'in solid form such as snow'.").
barrons.rule1964:: such_as(A16S799-in, A22S799-snow), isa(A22S799-snow, "snow"), isa(A16S799-in, "in solid form") -> example(A22S799-snow, A16S799-in).
english(barrons.rule1965, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1965, "isa(Precipitation, 'precipitation') -> include(Example, Rain).").
barrons.rule1965:: isa(A3S800-precipitation, "precipitation") -> of(A1S800-example, A3S800-precipitation), isa(E4S800-include, "include"), agent(E4S800-include, A1S800-example), isa(A1S800-example, "Examples"), object(E4S800-include, A5S800-rain), isa(A5S800-rain, "rain").
english(barrons.rule1966, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1966, "isa(include, 'include') -> include(Example, Rain).").
barrons.rule1966:: isa(E4S800-include, "include") -> of(A1S800-example, A3S800-precipitation), isa(A3S800-precipitation, "precipitation"), agent(E4S800-include, A1S800-example), isa(A1S800-example, "Examples"), object(E4S800-include, A5S800-rain), isa(A5S800-rain, "rain").
english(barrons.rule1967, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1967, "isa(Example, 'Examples of precipitation') -> include(Example, Rain).").
barrons.rule1967:: isa(A1S800-example, "Examples") -> of(A1S800-example, A3S800-precipitation), isa(A3S800-precipitation, "precipitation"), isa(E4S800-include, "include"), agent(E4S800-include, A1S800-example), object(E4S800-include, A5S800-rain), isa(A5S800-rain, "rain").
english(barrons.rule1968, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1968, "isa(Rain, 'rain') -> include(Example, Rain).").
barrons.rule1968:: isa(A5S800-rain, "rain") -> of(A1S800-example, A3S800-precipitation), isa(A3S800-precipitation, "precipitation"), isa(E4S800-include, "include"), agent(E4S800-include, A1S800-example), isa(A1S800-example, "Examples"), object(E4S800-include, A5S800-rain).
english(barrons.rule1969, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1969, "isa(Precipitation, 'precipitation') -> include(Example, Snow).").
barrons.rule1969:: isa(A3S800-precipitation, "precipitation") -> of(A1S800-example, A3S800-precipitation), isa(E4S800-include, "include"), agent(E4S800-include, A1S800-example), isa(A1S800-example, "Examples"), object(E4S800-include, A7S800-snow), isa(A7S800-snow, "snow").
english(barrons.rule1970, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1970, "isa(include, 'include') -> include(Example, Snow).").
barrons.rule1970:: isa(E4S800-include, "include") -> of(A1S800-example, A3S800-precipitation), isa(A3S800-precipitation, "precipitation"), agent(E4S800-include, A1S800-example), isa(A1S800-example, "Examples"), object(E4S800-include, A7S800-snow), isa(A7S800-snow, "snow").
english(barrons.rule1971, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1971, "isa(Example, 'Examples of precipitation') -> include(Example, Snow).").
barrons.rule1971:: isa(A1S800-example, "Examples") -> of(A1S800-example, A3S800-precipitation), isa(A3S800-precipitation, "precipitation"), isa(E4S800-include, "include"), agent(E4S800-include, A1S800-example), object(E4S800-include, A7S800-snow), isa(A7S800-snow, "snow").
english(barrons.rule1972, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1972, "isa(Snow, 'snow') -> include(Example, Snow).").
barrons.rule1972:: isa(A7S800-snow, "snow") -> of(A1S800-example, A3S800-precipitation), isa(A3S800-precipitation, "precipitation"), isa(E4S800-include, "include"), agent(E4S800-include, A1S800-example), isa(A1S800-example, "Examples"), object(E4S800-include, A7S800-snow).
english(barrons.rule1973, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1973, "isa(Precipitation, 'precipitation') -> include(Example, Sleet).").
barrons.rule1973:: isa(A3S800-precipitation, "precipitation") -> of(A1S800-example, A3S800-precipitation), isa(E4S800-include, "include"), agent(E4S800-include, A1S800-example), isa(A1S800-example, "Examples"), object(E4S800-include, A9S800-sleet), isa(A9S800-sleet, "sleet").
english(barrons.rule1974, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1974, "isa(include, 'include') -> include(Example, Sleet).").
barrons.rule1974:: isa(E4S800-include, "include") -> of(A1S800-example, A3S800-precipitation), isa(A3S800-precipitation, "precipitation"), agent(E4S800-include, A1S800-example), isa(A1S800-example, "Examples"), object(E4S800-include, A9S800-sleet), isa(A9S800-sleet, "sleet").
english(barrons.rule1975, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1975, "isa(Example, 'Examples of precipitation') -> include(Example, Sleet).").
barrons.rule1975:: isa(A1S800-example, "Examples") -> of(A1S800-example, A3S800-precipitation), isa(A3S800-precipitation, "precipitation"), isa(E4S800-include, "include"), agent(E4S800-include, A1S800-example), object(E4S800-include, A9S800-sleet), isa(A9S800-sleet, "sleet").
english(barrons.rule1976, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1976, "isa(Sleet, 'sleet') -> include(Example, Sleet).").
barrons.rule1976:: isa(A9S800-sleet, "sleet") -> of(A1S800-example, A3S800-precipitation), isa(A3S800-precipitation, "precipitation"), isa(E4S800-include, "include"), agent(E4S800-include, A1S800-example), isa(A1S800-example, "Examples"), object(E4S800-include, A9S800-sleet).
english(barrons.rule1977, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1977, "EXAMPLE(Rain, Precipitation), Rain = 'rain', Precipitation = 'precipitation'.").
barrons.rule1977:: isa(A5S800-rain, "rain") -> example(A5S800-rain, A3S800-precipitation), isa(A3S800-precipitation, "precipitation").
english(barrons.rule1978, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1978, "EXAMPLE(Rain, Precipitation), Rain = 'rain', Precipitation = 'precipitation'.").
barrons.rule1978:: isa(A3S800-precipitation, "precipitation") -> example(A5S800-rain, A3S800-precipitation), isa(A5S800-rain, "rain").
english(barrons.rule1979, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1979, "EXAMPLE(Snow, Precipitation), Snow = 'snow', Precipitation = 'precipitation'.").
barrons.rule1979:: isa(A7S800-snow, "snow") -> example(A7S800-snow, A3S800-precipitation), isa(A3S800-precipitation, "precipitation").
english(barrons.rule1980, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1980, "EXAMPLE(Snow, Precipitation), Snow = 'snow', Precipitation = 'precipitation'.").
barrons.rule1980:: isa(A3S800-precipitation, "precipitation") -> example(A7S800-snow, A3S800-precipitation), isa(A7S800-snow, "snow").
english(barrons.rule1981, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1981, "EXAMPLE(Sleet, Precipitation), Sleet = 'sleet', Precipitation = 'precipitation'.").
barrons.rule1981:: isa(A9S800-sleet, "sleet") -> example(A9S800-sleet, A3S800-precipitation), isa(A3S800-precipitation, "precipitation").
english(barrons.rule1982, "Examples of precipitation include rain snow sleet and hail").
pretty(barrons.rule1982, "EXAMPLE(Sleet, Precipitation), Sleet = 'sleet', Precipitation = 'precipitation'.").
barrons.rule1982:: isa(A3S800-precipitation, "precipitation") -> example(A9S800-sleet, A3S800-precipitation), isa(A9S800-sleet, "sleet").
english(barrons.rule1983, "When precipitation falls to the Earth the water is eventually absorbed taken in by the ground").
pretty(barrons.rule1983, "WHEN(absorb(Ground, Water, Eventually), fall_to(Precipitation, Earth)), Ground = 'the ground', Water = 'the water', Eventually = 'eventually', Precipitation = 'precipitation', Earth = 'the Earth'.").
barrons.rule1983:: isa(E11S804-absorb, "absorb"), agent(E11S804-absorb, A18S804-ground), isa(A18S804-ground, "the ground"), object(E11S804-absorb, A8S804-water), isa(A8S804-water, "the water"), arg(E11S804-absorb, A10S804-eventually), isa(A10S804-eventually, "eventually") -> when(E11S804-absorb, E3S804-fall), isa(E3S804-fall, "fall"), agent(E3S804-fall, A2S804-precipitation), isa(A2S804-precipitation, "precipitation"), to(E3S804-fall, A6S804-Earth), isa(A6S804-Earth, "the Earth").
english(barrons.rule1984, "When precipitation falls to the Earth the water is eventually absorbed taken in by the ground").
pretty(barrons.rule1984, "WHEN(absorb(Ground, Water, Eventually), fall_to(Precipitation, Earth)), Ground = 'the ground', Water = 'the water', Eventually = 'eventually', Precipitation = 'precipitation', Earth = 'the Earth'.").
barrons.rule1984:: isa(E3S804-fall, "fall"), agent(E3S804-fall, A2S804-precipitation), isa(A2S804-precipitation, "precipitation"), to(E3S804-fall, A6S804-Earth), isa(A6S804-Earth, "the Earth") -> when(E11S804-absorb, E3S804-fall), isa(E11S804-absorb, "absorb"), agent(E11S804-absorb, A18S804-ground), isa(A18S804-ground, "the ground"), object(E11S804-absorb, A8S804-water), isa(A8S804-water, "the water"), arg(E11S804-absorb, A10S804-eventually), isa(A10S804-eventually, "eventually").
english(barrons.rule1985, "When the ground absorbs the water and it[the ground surface and air] settles below the surface it is called groundwater").
pretty(barrons.rule1985, "EXAMPLE(absorb(Ground, Water), Groundwater), Ground = 'the ground', Water = 'the water', Groundwater = 'groundwater'.").
barrons.rule1985:: isa(E4S808-absorb, "absorb"), agent(E4S808-absorb, A3S808-ground), isa(A3S808-ground, "the ground"), object(E4S808-absorb, A6S808-water), isa(A6S808-water, "the water") -> example(E4S808-absorb, A16S808-groundwater), isa(A16S808-groundwater, "groundwater").
english(barrons.rule1986, "When the ground absorbs the water and it[the ground surface and air] settles below the surface it is called groundwater").
pretty(barrons.rule1986, "EXAMPLE(absorb(Ground, Water), Groundwater), Ground = 'the ground', Water = 'the water', Groundwater = 'groundwater'.").
barrons.rule1986:: isa(A16S808-groundwater, "groundwater") -> example(E4S808-absorb, A16S808-groundwater), isa(E4S808-absorb, "absorb"), agent(E4S808-absorb, A3S808-ground), isa(A3S808-ground, "the ground"), object(E4S808-absorb, A6S808-water), isa(A6S808-water, "the water").
english(barrons.rule1987, "When the ground absorbs the water and it[the ground surface and air] settles below the surface it is called groundwater").
pretty(barrons.rule1987, "EXAMPLE(settle_below(Ground, Surface), Groundwater), Ground = 'the ground', Surface = 'the surface', Groundwater = 'groundwater'.").
barrons.rule1987:: isa(E9S808-settle, "settle"), agent(E9S808-settle, A7S801-ground), isa(A7S801-ground, "the ground"), below(E9S808-settle, A12S808-surface), isa(A12S808-surface, "the surface") -> example(E9S808-settle, A16S808-groundwater), isa(A16S808-groundwater, "groundwater").
english(barrons.rule1988, "When the ground absorbs the water and it[the ground surface and air] settles below the surface it is called groundwater").
pretty(barrons.rule1988, "EXAMPLE(settle_below(Ground, Surface), Groundwater), Ground = 'the ground', Surface = 'the surface', Groundwater = 'groundwater'.").
barrons.rule1988:: isa(A16S808-groundwater, "groundwater") -> example(E9S808-settle, A16S808-groundwater), isa(E9S808-settle, "settle"), agent(E9S808-settle, A7S801-ground), isa(A7S801-ground, "the ground"), below(E9S808-settle, A12S808-surface), isa(A12S808-surface, "the surface").
english(barrons.rule1989, "When the ground absorbs the water and it[the ground surface and air] settles below the surface it is called groundwater").
pretty(barrons.rule1989, "EXAMPLE(settle_below(Surface, Surface), Groundwater), Surface = 'surface', Surface = 'the surface', Groundwater = 'groundwater'.").
barrons.rule1989:: isa(E9S808-settle, "settle"), agent(E9S808-settle, A9S801-surface), isa(A9S801-surface, "surface"), below(E9S808-settle, A12S808-surface), isa(A12S808-surface, "the surface") -> example(E9S808-settle, A16S808-groundwater), isa(A16S808-groundwater, "groundwater").
english(barrons.rule1990, "When the ground absorbs the water and it[the ground surface and air] settles below the surface it is called groundwater").
pretty(barrons.rule1990, "EXAMPLE(settle_below(Surface, Surface), Groundwater), Surface = 'surface', Surface = 'the surface', Groundwater = 'groundwater'.").
barrons.rule1990:: isa(A16S808-groundwater, "groundwater") -> example(E9S808-settle, A16S808-groundwater), isa(E9S808-settle, "settle"), agent(E9S808-settle, A9S801-surface), isa(A9S801-surface, "surface"), below(E9S808-settle, A12S808-surface), isa(A12S808-surface, "the surface").
english(barrons.rule1991, "When the ground absorbs the water and it[the ground surface and air] settles below the surface it is called groundwater").
pretty(barrons.rule1991, "EXAMPLE(settle_below(Air, Surface), Groundwater), Air = 'air', Surface = 'the surface', Groundwater = 'groundwater'.").
barrons.rule1991:: isa(E9S808-settle, "settle"), agent(E9S808-settle, A12S801-air), isa(A12S801-air, "air"), below(E9S808-settle, A12S808-surface), isa(A12S808-surface, "the surface") -> example(E9S808-settle, A16S808-groundwater), isa(A16S808-groundwater, "groundwater").
english(barrons.rule1992, "When the ground absorbs the water and it[the ground surface and air] settles below the surface it is called groundwater").
pretty(barrons.rule1992, "EXAMPLE(settle_below(Air, Surface), Groundwater), Air = 'air', Surface = 'the surface', Groundwater = 'groundwater'.").
barrons.rule1992:: isa(A16S808-groundwater, "groundwater") -> example(E9S808-settle, A16S808-groundwater), isa(E9S808-settle, "settle"), agent(E9S808-settle, A12S801-air), isa(A12S801-air, "air"), below(E9S808-settle, A12S808-surface), isa(A12S808-surface, "the surface").
english(barrons.rule1993, "Weathering is a process that breaks rocks and other surface materials into small pieces").
pretty(barrons.rule1993, "EXAMPLE(Weather, break_into(Process, Rock, Piece)), Weather = 'Weathering', Process = 'a process', Rock = 'rocks', Piece = 'small pieces'.").
barrons.rule1993:: isa(A1S811-weather, "Weathering") -> example(A1S811-weather, A4S811-process), isa(E6S811-break, "break"), agent(E6S811-break, A4S811-process), isa(A4S811-process, "a process"), object(E6S811-break, A7S811-rock), isa(A7S811-rock, "rocks"), into(E6S811-break, A14S811-piece), isa(A14S811-piece, "small pieces"), isa(A1S811-weather, A4S811-process).
english(barrons.rule1994, "Weathering is a process that breaks rocks and other surface materials into small pieces").
pretty(barrons.rule1994, "EXAMPLE(Weather, break_into(Process, Rock, Piece)), Weather = 'Weathering', Process = 'a process', Rock = 'rocks', Piece = 'small pieces'.").
barrons.rule1994:: isa(E6S811-break, "break"), agent(E6S811-break, A4S811-process), isa(A4S811-process, "a process"), object(E6S811-break, A7S811-rock), isa(A7S811-rock, "rocks"), into(E6S811-break, A14S811-piece), isa(A14S811-piece, "small pieces") -> example(A1S811-weather, A4S811-process), isa(A1S811-weather, "Weathering"), isa(A1S811-weather, A4S811-process).
english(barrons.rule1995, "Weathering is a process that breaks rocks and other surface materials into small pieces").
pretty(barrons.rule1995, "EXAMPLE(Weather, break_into(Process, Material, Piece)), Weather = 'Weathering', Process = 'a process', Material = 'other surface materials', Piece = 'small pieces'.").
barrons.rule1995:: isa(A1S811-weather, "Weathering") -> example(A1S811-weather, A4S811-process), isa(E6S811-break, "break"), agent(E6S811-break, A4S811-process), isa(A4S811-process, "a process"), object(E6S811-break, A11S811-material), isa(A11S811-material, "other surface materials"), into(E6S811-break, A14S811-piece), isa(A14S811-piece, "small pieces"), isa(A1S811-weather, A4S811-process).
english(barrons.rule1996, "Weathering is a process that breaks rocks and other surface materials into small pieces").
pretty(barrons.rule1996, "EXAMPLE(Weather, break_into(Process, Material, Piece)), Weather = 'Weathering', Process = 'a process', Material = 'other surface materials', Piece = 'small pieces'.").
barrons.rule1996:: isa(E6S811-break, "break"), agent(E6S811-break, A4S811-process), isa(A4S811-process, "a process"), object(E6S811-break, A11S811-material), isa(A11S811-material, "other surface materials"), into(E6S811-break, A14S811-piece), isa(A14S811-piece, "small pieces") -> example(A1S811-weather, A4S811-process), isa(A1S811-weather, "Weathering"), isa(A1S811-weather, A4S811-process).
english(barrons.rule1997, "Weathering is a process that breaks rocks and other surface materials into small pieces").
pretty(barrons.rule1997, "EXAMPLE(Weather, Process), Weather = 'Weathering', Process = 'a process'.").
barrons.rule1997:: isa(A1S811-weather, "Weathering") -> example(A1S811-weather, A4S811-process), isa(A4S811-process, "a process").
english(barrons.rule1998, "Weathering is a process that breaks rocks and other surface materials into small pieces").
pretty(barrons.rule1998, "EXAMPLE(Weather, Process), Weather = 'Weathering', Process = 'a process'.").
barrons.rule1998:: isa(A4S811-process, "a process") -> example(A1S811-weather, A4S811-process), isa(A1S811-weather, "Weathering").
english(barrons.rule1999, "When the water freezes it[Food] expands making the crack even larger and in some cases breaks the rock").
pretty(barrons.rule1999, "EFFECT(expand(Food), make(Food, Larger)), Food = 'Food', Larger = 'larger'.").
barrons.rule1999:: isa(E7S815-expand, "expand"), agent(E7S815-expand, A1S525-Food), isa(A1S525-Food, "Food") -> effect(E7S815-expand, E9S815-make), isa(E9S815-make, "make"), agent(E9S815-make, A1S525-Food), arg(E9S815-make, A13S815-larger), isa(A13S815-larger, "the crack even larger").
english(barrons.rule2000, "When the water freezes it[Food] expands making the crack even larger and in some cases breaks the rock").
pretty(barrons.rule2000, "EFFECT(expand(Food), make(Food, Larger)), Food = 'Food', Larger = 'larger'.").
barrons.rule2000:: isa(E9S815-make, "make"), agent(E9S815-make, A1S525-Food), isa(A1S525-Food, "Food"), arg(E9S815-make, A13S815-larger), isa(A13S815-larger, "the crack even larger") -> effect(E7S815-expand, E9S815-make), isa(E7S815-expand, "expand"), agent(E7S815-expand, A1S525-Food).
english(barrons.rule2001, "When the water freezes it[Food] expands making the crack even larger and in some cases breaks the rock").
pretty(barrons.rule2001, "WHEN(expand(Food), freeze(Water)), Food = 'Food', Water = 'the water'.").
barrons.rule2001:: isa(E7S815-expand, "expand"), agent(E7S815-expand, A1S525-Food), isa(A1S525-Food, "Food") -> when(E7S815-expand, E4S815-freeze), isa(E4S815-freeze, "freeze"), agent(E4S815-freeze, A3S815-water), isa(A3S815-water, "the water").
english(barrons.rule2002, "When the water freezes it[Food] expands making the crack even larger and in some cases breaks the rock").
pretty(barrons.rule2002, "WHEN(expand(Food), freeze(Water)), Food = 'Food', Water = 'the water'.").
barrons.rule2002:: isa(E4S815-freeze, "freeze"), agent(E4S815-freeze, A3S815-water), isa(A3S815-water, "the water") -> when(E7S815-expand, E4S815-freeze), isa(E7S815-expand, "expand"), agent(E7S815-expand, A1S525-Food), isa(A1S525-Food, "Food").
english(barrons.rule2003, "This process continues over long periods of time breaking down rocks").
pretty(barrons.rule2003, "isa(Time, 'time') -> continue break down rock(Process, Period, Long).").
barrons.rule2003:: isa(A8S816-time, "time") -> of(A6S816-period, A8S816-time), isa(E3S816-continue, "continue break down rock"), agent(E3S816-continue, A2S816-process), isa(A2S816-process, "This process"), object(E3S816-continue, A6S816-period), isa(A6S816-period, "periods"), arg(E3S816-continue, A5S816-long), isa(A5S816-long, "over long").
english(barrons.rule2004, "This process continues over long periods of time breaking down rocks").
pretty(barrons.rule2004, "isa(continue break down rock, 'continues breaking down rocks') -> continue break down rock(Process, Period, Long).").
barrons.rule2004:: isa(E3S816-continue, "continue break down rock") -> of(A6S816-period, A8S816-time), isa(A8S816-time, "time"), agent(E3S816-continue, A2S816-process), isa(A2S816-process, "This process"), object(E3S816-continue, A6S816-period), isa(A6S816-period, "periods"), arg(E3S816-continue, A5S816-long), isa(A5S816-long, "over long").
english(barrons.rule2005, "This process continues over long periods of time breaking down rocks").
pretty(barrons.rule2005, "isa(Process, 'This process') -> continue break down rock(Process, Period, Long).").
barrons.rule2005:: isa(A2S816-process, "This process") -> of(A6S816-period, A8S816-time), isa(A8S816-time, "time"), isa(E3S816-continue, "continue break down rock"), agent(E3S816-continue, A2S816-process), object(E3S816-continue, A6S816-period), isa(A6S816-period, "periods"), arg(E3S816-continue, A5S816-long), isa(A5S816-long, "over long").
english(barrons.rule2006, "This process continues over long periods of time breaking down rocks").
pretty(barrons.rule2006, "isa(Period, 'periods of time') -> continue break down rock(Process, Period, Long).").
barrons.rule2006:: isa(A6S816-period, "periods") -> of(A6S816-period, A8S816-time), isa(A8S816-time, "time"), isa(E3S816-continue, "continue break down rock"), agent(E3S816-continue, A2S816-process), isa(A2S816-process, "This process"), object(E3S816-continue, A6S816-period), arg(E3S816-continue, A5S816-long), isa(A5S816-long, "over long").
english(barrons.rule2007, "This process continues over long periods of time breaking down rocks").
pretty(barrons.rule2007, "isa(Long, 'over long') -> continue break down rock(Process, Period, Long).").
barrons.rule2007:: isa(A5S816-long, "over long") -> of(A6S816-period, A8S816-time), isa(A8S816-time, "time"), isa(E3S816-continue, "continue break down rock"), agent(E3S816-continue, A2S816-process), isa(A2S816-process, "This process"), object(E3S816-continue, A6S816-period), isa(A6S816-period, "periods"), arg(E3S816-continue, A5S816-long).
english(barrons.rule2008, "Plants can also break down rocks by the action of their[Plants are living organisms] roots which are constantly growing to secure the plant and seek water").
pretty(barrons.rule2008, "isa(break down, 'break down') -> break down_by(Plant, Rock, Action).").
barrons.rule2008:: isa(E4S817-break, "break down") -> agent(E4S817-break, A1S817-plant), isa(A1S817-plant, "Plants"), object(E4S817-break, A6S817-rock), isa(A6S817-rock, "rocks"), by(E4S817-break, A9S817-action), isa(A9S817-action, "the action of their[Plants are living organisms] roots which are constantly growing to secure the plant and seek water").
english(barrons.rule2009, "Plants can also break down rocks by the action of their[Plants are living organisms] roots which are constantly growing to secure the plant and seek water").
pretty(barrons.rule2009, "isa(Plant, 'Plants') -> break down_by(Plant, Rock, Action).").
barrons.rule2009:: isa(A1S817-plant, "Plants") -> isa(E4S817-break, "break down"), agent(E4S817-break, A1S817-plant), object(E4S817-break, A6S817-rock), isa(A6S817-rock, "rocks"), by(E4S817-break, A9S817-action), isa(A9S817-action, "the action of their[Plants are living organisms] roots which are constantly growing to secure the plant and seek water").
english(barrons.rule2010, "Plants can also break down rocks by the action of their[Plants are living organisms] roots which are constantly growing to secure the plant and seek water").
pretty(barrons.rule2010, "isa(Rock, 'rocks') -> break down_by(Plant, Rock, Action).").
barrons.rule2010:: isa(A6S817-rock, "rocks") -> isa(E4S817-break, "break down"), agent(E4S817-break, A1S817-plant), isa(A1S817-plant, "Plants"), object(E4S817-break, A6S817-rock), by(E4S817-break, A9S817-action), isa(A9S817-action, "the action of their[Plants are living organisms] roots which are constantly growing to secure the plant and seek water").
english(barrons.rule2011, "Plants can also break down rocks by the action of their[Plants are living organisms] roots which are constantly growing to secure the plant and seek water").
pretty(barrons.rule2011, "isa(Action, 'the action of their[Plants are living organisms] roots which are constantly growing to secure the plant and seek water') -> break down_by(Plant, Rock, Action).").
barrons.rule2011:: isa(A9S817-action, "the action of their[Plants are living organisms] roots which are constantly growing to secure the plant and seek water") -> isa(E4S817-break, "break down"), agent(E4S817-break, A1S817-plant), isa(A1S817-plant, "Plants"), object(E4S817-break, A6S817-rock), isa(A6S817-rock, "rocks"), by(E4S817-break, A9S817-action).
english(barrons.rule2012, "As the rocks break they[Plants are living organisms] can be further broken down through continued weathering eventually becoming very small pieces that combine with other Earth materials to create soil").
pretty(barrons.rule2012, "EFFECT(break down_as(Organism, Further, Break, through(Continue)), become), Organism = 'living organisms', Further = 'further', Break = 'the rocks break', Continue = 'continued weathering'.").
barrons.rule2012:: isa(E10S818-break, "break down"), object(E10S818-break, A4S74-organism), isa(A4S74-organism, "living organisms"), as(E10S818-break, A4S818-break), isa(A4S818-break, "the rocks break"), through(E10S818-break, A13S818-continue), isa(A13S818-continue, "continued weathering eventually"), arg(E10S818-break, A9S818-further), isa(A9S818-further, "further") -> effect(E10S818-break, E17S818-become), isa(E17S818-become, "become").
english(barrons.rule2013, "As the rocks break they[Plants are living organisms] can be further broken down through continued weathering eventually becoming very small pieces that combine with other Earth materials to create soil").
pretty(barrons.rule2013, "EFFECT(break down_as(Organism, Further, Break, through(Continue)), become), Organism = 'living organisms', Further = 'further', Break = 'the rocks break', Continue = 'continued weathering'.").
barrons.rule2013:: isa(E17S818-become, "become") -> effect(E10S818-break, E17S818-become), isa(E10S818-break, "break down"), object(E10S818-break, A4S74-organism), isa(A4S74-organism, "living organisms"), as(E10S818-break, A4S818-break), isa(A4S818-break, "the rocks break"), through(E10S818-break, A13S818-continue), isa(A13S818-continue, "continued weathering eventually"), arg(E10S818-break, A9S818-further), isa(A9S818-further, "further").
english(barrons.rule2014, "Weathering of rock and landforms can also take place through the action of running water and waves").
pretty(barrons.rule2014, "isa(Rock, 'rock') -> take_through(Weather, Place, Action).").
barrons.rule2014:: isa(A3S820-rock, "rock") -> of(A1S820-weather, A3S820-rock), of(A1S820-weather, A5S820-landform), isa(A5S820-landform, "landforms"), isa(E8S820-take, "take"), agent(E8S820-take, A1S820-weather), isa(A1S820-weather, "Weathering"), object(E8S820-take, A9S820-place), isa(A9S820-place, "place"), through(E8S820-take, A12S820-action), isa(A12S820-action, "the action of running water and waves").
english(barrons.rule2015, "Weathering of rock and landforms can also take place through the action of running water and waves").
pretty(barrons.rule2015, "isa(Landform, 'landforms') -> take_through(Weather, Place, Action).").
barrons.rule2015:: isa(A5S820-landform, "landforms") -> of(A1S820-weather, A3S820-rock), isa(A3S820-rock, "rock"), of(A1S820-weather, A5S820-landform), isa(E8S820-take, "take"), agent(E8S820-take, A1S820-weather), isa(A1S820-weather, "Weathering"), object(E8S820-take, A9S820-place), isa(A9S820-place, "place"), through(E8S820-take, A12S820-action), isa(A12S820-action, "the action of running water and waves").
english(barrons.rule2016, "Weathering of rock and landforms can also take place through the action of running water and waves").
pretty(barrons.rule2016, "isa(take, 'take') -> take_through(Weather, Place, Action).").
barrons.rule2016:: isa(E8S820-take, "take") -> of(A1S820-weather, A3S820-rock), isa(A3S820-rock, "rock"), of(A1S820-weather, A5S820-landform), isa(A5S820-landform, "landforms"), agent(E8S820-take, A1S820-weather), isa(A1S820-weather, "Weathering"), object(E8S820-take, A9S820-place), isa(A9S820-place, "place"), through(E8S820-take, A12S820-action), isa(A12S820-action, "the action of running water and waves").
english(barrons.rule2017, "Weathering of rock and landforms can also take place through the action of running water and waves").
pretty(barrons.rule2017, "isa(Weather, 'Weathering of rock and landforms') -> take_through(Weather, Place, Action).").
barrons.rule2017:: isa(A1S820-weather, "Weathering") -> of(A1S820-weather, A3S820-rock), isa(A3S820-rock, "rock"), of(A1S820-weather, A5S820-landform), isa(A5S820-landform, "landforms"), isa(E8S820-take, "take"), agent(E8S820-take, A1S820-weather), object(E8S820-take, A9S820-place), isa(A9S820-place, "place"), through(E8S820-take, A12S820-action), isa(A12S820-action, "the action of running water and waves").
english(barrons.rule2018, "Weathering of rock and landforms can also take place through the action of running water and waves").
pretty(barrons.rule2018, "isa(Place, 'place') -> take_through(Weather, Place, Action).").
barrons.rule2018:: isa(A9S820-place, "place") -> of(A1S820-weather, A3S820-rock), isa(A3S820-rock, "rock"), of(A1S820-weather, A5S820-landform), isa(A5S820-landform, "landforms"), isa(E8S820-take, "take"), agent(E8S820-take, A1S820-weather), isa(A1S820-weather, "Weathering"), object(E8S820-take, A9S820-place), through(E8S820-take, A12S820-action), isa(A12S820-action, "the action of running water and waves").
english(barrons.rule2019, "Weathering of rock and landforms can also take place through the action of running water and waves").
pretty(barrons.rule2019, "isa(Action, 'the action of running water and waves') -> take_through(Weather, Place, Action).").
barrons.rule2019:: isa(A12S820-action, "the action of running water and waves") -> of(A1S820-weather, A3S820-rock), isa(A3S820-rock, "rock"), of(A1S820-weather, A5S820-landform), isa(A5S820-landform, "landforms"), isa(E8S820-take, "take"), agent(E8S820-take, A1S820-weather), isa(A1S820-weather, "Weathering"), object(E8S820-take, A9S820-place), isa(A9S820-place, "place"), through(E8S820-take, A12S820-action).
english(barrons.rule2020, "The flow of water through a landform can create valleys in large rocks").
pretty(barrons.rule2020, "isa(Water, 'water') -> create_in(Flow, Valley, Rock).").
barrons.rule2020:: isa(A4S821-water, "water") -> of(A2S821-flow, A4S821-water), through(A2S821-flow, A7S821-landform), isa(A7S821-landform, "a landform"), isa(E9S821-create, "create"), agent(E9S821-create, A2S821-flow), isa(A2S821-flow, "The flow"), object(E9S821-create, A10S821-valley), isa(A10S821-valley, "valleys"), in(E9S821-create, A13S821-rock), isa(A13S821-rock, "large rocks").
english(barrons.rule2021, "The flow of water through a landform can create valleys in large rocks").
pretty(barrons.rule2021, "isa(Landform, 'a landform') -> create_in(Flow, Valley, Rock).").
barrons.rule2021:: isa(A7S821-landform, "a landform") -> of(A2S821-flow, A4S821-water), isa(A4S821-water, "water"), through(A2S821-flow, A7S821-landform), isa(E9S821-create, "create"), agent(E9S821-create, A2S821-flow), isa(A2S821-flow, "The flow"), object(E9S821-create, A10S821-valley), isa(A10S821-valley, "valleys"), in(E9S821-create, A13S821-rock), isa(A13S821-rock, "large rocks").
english(barrons.rule2022, "The flow of water through a landform can create valleys in large rocks").
pretty(barrons.rule2022, "isa(create, 'create') -> create_in(Flow, Valley, Rock).").
barrons.rule2022:: isa(E9S821-create, "create") -> of(A2S821-flow, A4S821-water), isa(A4S821-water, "water"), through(A2S821-flow, A7S821-landform), isa(A7S821-landform, "a landform"), agent(E9S821-create, A2S821-flow), isa(A2S821-flow, "The flow"), object(E9S821-create, A10S821-valley), isa(A10S821-valley, "valleys"), in(E9S821-create, A13S821-rock), isa(A13S821-rock, "large rocks").
english(barrons.rule2023, "The flow of water through a landform can create valleys in large rocks").
pretty(barrons.rule2023, "isa(Flow, 'The flow of water through a landform') -> create_in(Flow, Valley, Rock).").
barrons.rule2023:: isa(A2S821-flow, "The flow") -> of(A2S821-flow, A4S821-water), isa(A4S821-water, "water"), through(A2S821-flow, A7S821-landform), isa(A7S821-landform, "a landform"), isa(E9S821-create, "create"), agent(E9S821-create, A2S821-flow), object(E9S821-create, A10S821-valley), isa(A10S821-valley, "valleys"), in(E9S821-create, A13S821-rock), isa(A13S821-rock, "large rocks").
english(barrons.rule2024, "The flow of water through a landform can create valleys in large rocks").
pretty(barrons.rule2024, "isa(Valley, 'valleys') -> create_in(Flow, Valley, Rock).").
barrons.rule2024:: isa(A10S821-valley, "valleys") -> of(A2S821-flow, A4S821-water), isa(A4S821-water, "water"), through(A2S821-flow, A7S821-landform), isa(A7S821-landform, "a landform"), isa(E9S821-create, "create"), agent(E9S821-create, A2S821-flow), isa(A2S821-flow, "The flow"), object(E9S821-create, A10S821-valley), in(E9S821-create, A13S821-rock), isa(A13S821-rock, "large rocks").
english(barrons.rule2025, "The flow of water through a landform can create valleys in large rocks").
pretty(barrons.rule2025, "isa(Rock, 'large rocks') -> create_in(Flow, Valley, Rock).").
barrons.rule2025:: isa(A13S821-rock, "large rocks") -> of(A2S821-flow, A4S821-water), isa(A4S821-water, "water"), through(A2S821-flow, A7S821-landform), isa(A7S821-landform, "a landform"), isa(E9S821-create, "create"), agent(E9S821-create, A2S821-flow), isa(A2S821-flow, "The flow"), object(E9S821-create, A10S821-valley), isa(A10S821-valley, "valleys"), in(E9S821-create, A13S821-rock).
english(barrons.rule2026, "The force of waves breaking on beaches and cliffs can also change landforms").
pretty(barrons.rule2026, "isa(Wave, 'waves') -> change(Force, Landform).").
barrons.rule2026:: isa(A4S823-wave, "waves") -> of(A2S823-force, A4S823-wave), isa(E12S823-change, "change"), agent(E12S823-change, A2S823-force), isa(A2S823-force, "The force"), object(E12S823-change, A13S823-landform), isa(A13S823-landform, "landforms").
english(barrons.rule2027, "The force of waves breaking on beaches and cliffs can also change landforms").
pretty(barrons.rule2027, "isa(change, 'change') -> change(Force, Landform).").
barrons.rule2027:: isa(E12S823-change, "change") -> of(A2S823-force, A4S823-wave), isa(A4S823-wave, "waves"), agent(E12S823-change, A2S823-force), isa(A2S823-force, "The force"), object(E12S823-change, A13S823-landform), isa(A13S823-landform, "landforms").
english(barrons.rule2028, "The force of waves breaking on beaches and cliffs can also change landforms").
pretty(barrons.rule2028, "isa(Force, 'The force of waves breaking on beaches and cliffs') -> change(Force, Landform).").
barrons.rule2028:: isa(A2S823-force, "The force") -> of(A2S823-force, A4S823-wave), isa(A4S823-wave, "waves"), isa(E12S823-change, "change"), agent(E12S823-change, A2S823-force), object(E12S823-change, A13S823-landform), isa(A13S823-landform, "landforms").
english(barrons.rule2029, "The force of waves breaking on beaches and cliffs can also change landforms").
pretty(barrons.rule2029, "isa(Landform, 'landforms') -> change(Force, Landform).").
barrons.rule2029:: isa(A13S823-landform, "landforms") -> of(A2S823-force, A4S823-wave), isa(A4S823-wave, "waves"), isa(E12S823-change, "change"), agent(E12S823-change, A2S823-force), isa(A2S823-force, "The force"), object(E12S823-change, A13S823-landform).
english(barrons.rule2030, "Erosion is the process by which soil and or other Earth materials are moved from one place to another").
pretty(barrons.rule2030, "PURPOSE(erode, soil).").
barrons.rule2030:: isa(E1S824-erosion, "erode") -> purpose(E1S824-erosion, E7S824-soil), isa(E7S824-soil, "soil").
english(barrons.rule2031, "Erosion is the process by which soil and or other Earth materials are moved from one place to another").
pretty(barrons.rule2031, "PURPOSE(erode, soil).").
barrons.rule2031:: isa(E7S824-soil, "soil") -> purpose(E1S824-erosion, E7S824-soil), isa(E1S824-erosion, "erode").
english(barrons.rule2032, "Erosion is the process by which soil and or other Earth materials are moved from one place to another").
pretty(barrons.rule2032, "EXAMPLE(Erosion, soil), Erosion = 'Erosion'.").
barrons.rule2032:: isa(A1S824-erosion, "Erosion") -> example(A1S824-erosion, E7S824-soil), isa(E7S824-soil, "soil").
english(barrons.rule2033, "Erosion is the process by which soil and or other Earth materials are moved from one place to another").
pretty(barrons.rule2033, "EXAMPLE(Erosion, soil), Erosion = 'Erosion'.").
barrons.rule2033:: isa(E7S824-soil, "soil") -> example(A1S824-erosion, E7S824-soil), isa(A1S824-erosion, "Erosion").
english(barrons.rule2034, "Erosion is the process by which soil and or other Earth materials are moved from one place to another").
pretty(barrons.rule2034, "EXAMPLE(Erosion, move_from(Material, Place, to(Another))), Erosion = 'Erosion', Material = 'other Earth materials', Place = 'one place', Another = 'another'.").
barrons.rule2034:: isa(A1S824-erosion, "Erosion") -> example(A1S824-erosion, E14S824-move), isa(E14S824-move, "move"), object(E14S824-move, A12S824-material), isa(A12S824-material, "other Earth materials"), from(E14S824-move, A17S824-place), isa(A17S824-place, "one place"), to(E14S824-move, A19S824-another), isa(A19S824-another, "another").
english(barrons.rule2035, "Erosion is the process by which soil and or other Earth materials are moved from one place to another").
pretty(barrons.rule2035, "EXAMPLE(Erosion, move_from(Material, Place, to(Another))), Erosion = 'Erosion', Material = 'other Earth materials', Place = 'one place', Another = 'another'.").
barrons.rule2035:: isa(E14S824-move, "move"), object(E14S824-move, A12S824-material), isa(A12S824-material, "other Earth materials"), from(E14S824-move, A17S824-place), isa(A17S824-place, "one place"), to(E14S824-move, A19S824-another), isa(A19S824-another, "another") -> example(A1S824-erosion, E14S824-move), isa(A1S824-erosion, "Erosion").
english(barrons.rule2036, "Erosion is the process by which soil and or other Earth materials are moved from one place to another").
pretty(barrons.rule2036, "EXAMPLE(Erosion, Process), Erosion = 'Erosion', Process = 'the process'.").
barrons.rule2036:: isa(A1S824-erosion, "Erosion") -> example(A1S824-erosion, A4S824-process), isa(A4S824-process, "the process").
english(barrons.rule2037, "Erosion is the process by which soil and or other Earth materials are moved from one place to another").
pretty(barrons.rule2037, "EXAMPLE(Erosion, Process), Erosion = 'Erosion', Process = 'the process'.").
barrons.rule2037:: isa(A4S824-process, "the process") -> example(A1S824-erosion, A4S824-process), isa(A1S824-erosion, "Erosion").
english(barrons.rule2038, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2038, "EXAMPLE(Water, involve_in(Force, Erosion)), Water = 'Water', Force = 'all forces', Erosion = 'erosion'.").
barrons.rule2038:: isa(A1S825-water, "Water") -> example(A1S825-water, E10S825-involve), isa(E10S825-involve, "involve"), agent(E10S825-involve, A9S825-force), isa(A9S825-force, "all forces"), in(E10S825-involve, A12S825-erosion), isa(A12S825-erosion, "erosion").
english(barrons.rule2039, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2039, "EXAMPLE(Water, involve_in(Force, Erosion)), Water = 'Water', Force = 'all forces', Erosion = 'erosion'.").
barrons.rule2039:: isa(E10S825-involve, "involve"), agent(E10S825-involve, A9S825-force), isa(A9S825-force, "all forces"), in(E10S825-involve, A12S825-erosion), isa(A12S825-erosion, "erosion") -> example(A1S825-water, E10S825-involve), isa(A1S825-water, "Water").
english(barrons.rule2040, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2040, "EXAMPLE(Water, involve_in(Force, Erosion)), Water = 'Water', Force = 'all forces', Erosion = 'erosion'.").
barrons.rule2040:: isa(A1S825-water, "Water") -> example(A1S825-water, E10S825-involve), isa(E10S825-involve, "involve"), agent(E10S825-involve, A9S825-force), isa(A9S825-force, "all forces"), in(E10S825-involve, A12S825-erosion), isa(A12S825-erosion, "erosion").
english(barrons.rule2041, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2041, "EXAMPLE(Water, involve_in(Force, Erosion)), Water = 'Water', Force = 'all forces', Erosion = 'erosion'.").
barrons.rule2041:: isa(E10S825-involve, "involve"), agent(E10S825-involve, A9S825-force), isa(A9S825-force, "all forces"), in(E10S825-involve, A12S825-erosion), isa(A12S825-erosion, "erosion") -> example(A1S825-water, E10S825-involve), isa(A1S825-water, "Water").
english(barrons.rule2042, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2042, "EXAMPLE(Water, Force), Water = 'Water', Force = 'all forces'.").
barrons.rule2042:: isa(A1S825-water, "Water") -> example(A1S825-water, A9S825-force), isa(A9S825-force, "all forces").
english(barrons.rule2043, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2043, "EXAMPLE(Water, Force), Water = 'Water', Force = 'all forces'.").
barrons.rule2043:: isa(A9S825-force, "all forces") -> example(A1S825-water, A9S825-force), isa(A1S825-water, "Water").
english(barrons.rule2044, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2044, "EXAMPLE(Water, Force), Water = 'Water', Force = 'all forces'.").
barrons.rule2044:: isa(A1S825-water, "Water") -> example(A1S825-water, A9S825-force), isa(A9S825-force, "all forces").
english(barrons.rule2045, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2045, "EXAMPLE(Water, Force), Water = 'Water', Force = 'all forces'.").
barrons.rule2045:: isa(A9S825-force, "all forces") -> example(A1S825-water, A9S825-force), isa(A1S825-water, "Water").
english(barrons.rule2046, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2046, "EXAMPLE(Wind, involve_in(Force, Erosion)), Wind = 'wind', Force = 'all forces', Erosion = 'erosion'.").
barrons.rule2046:: isa(A3S825-wind, "wind") -> example(A3S825-wind, E10S825-involve), isa(E10S825-involve, "involve"), agent(E10S825-involve, A9S825-force), isa(A9S825-force, "all forces"), in(E10S825-involve, A12S825-erosion), isa(A12S825-erosion, "erosion").
english(barrons.rule2047, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2047, "EXAMPLE(Wind, involve_in(Force, Erosion)), Wind = 'wind', Force = 'all forces', Erosion = 'erosion'.").
barrons.rule2047:: isa(E10S825-involve, "involve"), agent(E10S825-involve, A9S825-force), isa(A9S825-force, "all forces"), in(E10S825-involve, A12S825-erosion), isa(A12S825-erosion, "erosion") -> example(A3S825-wind, E10S825-involve), isa(A3S825-wind, "wind").
english(barrons.rule2048, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2048, "EXAMPLE(Wind, involve_in(Force, Erosion)), Wind = 'wind', Force = 'all forces', Erosion = 'erosion'.").
barrons.rule2048:: isa(A3S825-wind, "wind") -> example(A3S825-wind, E10S825-involve), isa(E10S825-involve, "involve"), agent(E10S825-involve, A9S825-force), isa(A9S825-force, "all forces"), in(E10S825-involve, A12S825-erosion), isa(A12S825-erosion, "erosion").
english(barrons.rule2049, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2049, "EXAMPLE(Wind, involve_in(Force, Erosion)), Wind = 'wind', Force = 'all forces', Erosion = 'erosion'.").
barrons.rule2049:: isa(E10S825-involve, "involve"), agent(E10S825-involve, A9S825-force), isa(A9S825-force, "all forces"), in(E10S825-involve, A12S825-erosion), isa(A12S825-erosion, "erosion") -> example(A3S825-wind, E10S825-involve), isa(A3S825-wind, "wind").
english(barrons.rule2050, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2050, "EXAMPLE(Wind, Force), Wind = 'wind', Force = 'all forces'.").
barrons.rule2050:: isa(A3S825-wind, "wind") -> example(A3S825-wind, A9S825-force), isa(A9S825-force, "all forces").
english(barrons.rule2051, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2051, "EXAMPLE(Wind, Force), Wind = 'wind', Force = 'all forces'.").
barrons.rule2051:: isa(A9S825-force, "all forces") -> example(A3S825-wind, A9S825-force), isa(A3S825-wind, "wind").
english(barrons.rule2052, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2052, "EXAMPLE(Wind, Force), Wind = 'wind', Force = 'all forces'.").
barrons.rule2052:: isa(A3S825-wind, "wind") -> example(A3S825-wind, A9S825-force), isa(A9S825-force, "all forces").
english(barrons.rule2053, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2053, "EXAMPLE(Wind, Force), Wind = 'wind', Force = 'all forces'.").
barrons.rule2053:: isa(A9S825-force, "all forces") -> example(A3S825-wind, A9S825-force), isa(A3S825-wind, "wind").
english(barrons.rule2054, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2054, "EXAMPLE(Gravity, involve_in(Force, Erosion)), Gravity = 'gravity', Force = 'all forces', Erosion = 'erosion'.").
barrons.rule2054:: isa(A6S825-gravity, "gravity") -> example(A6S825-gravity, E10S825-involve), isa(E10S825-involve, "involve"), agent(E10S825-involve, A9S825-force), isa(A9S825-force, "all forces"), in(E10S825-involve, A12S825-erosion), isa(A12S825-erosion, "erosion").
english(barrons.rule2055, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2055, "EXAMPLE(Gravity, involve_in(Force, Erosion)), Gravity = 'gravity', Force = 'all forces', Erosion = 'erosion'.").
barrons.rule2055:: isa(E10S825-involve, "involve"), agent(E10S825-involve, A9S825-force), isa(A9S825-force, "all forces"), in(E10S825-involve, A12S825-erosion), isa(A12S825-erosion, "erosion") -> example(A6S825-gravity, E10S825-involve), isa(A6S825-gravity, "gravity").
english(barrons.rule2056, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2056, "EXAMPLE(Gravity, involve_in(Force, Erosion)), Gravity = 'gravity', Force = 'all forces', Erosion = 'erosion'.").
barrons.rule2056:: isa(A6S825-gravity, "gravity") -> example(A6S825-gravity, E10S825-involve), isa(E10S825-involve, "involve"), agent(E10S825-involve, A9S825-force), isa(A9S825-force, "all forces"), in(E10S825-involve, A12S825-erosion), isa(A12S825-erosion, "erosion").
english(barrons.rule2057, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2057, "EXAMPLE(Gravity, involve_in(Force, Erosion)), Gravity = 'gravity', Force = 'all forces', Erosion = 'erosion'.").
barrons.rule2057:: isa(E10S825-involve, "involve"), agent(E10S825-involve, A9S825-force), isa(A9S825-force, "all forces"), in(E10S825-involve, A12S825-erosion), isa(A12S825-erosion, "erosion") -> example(A6S825-gravity, E10S825-involve), isa(A6S825-gravity, "gravity").
english(barrons.rule2058, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2058, "EXAMPLE(Gravity, Force), Gravity = 'gravity', Force = 'all forces'.").
barrons.rule2058:: isa(A6S825-gravity, "gravity") -> example(A6S825-gravity, A9S825-force), isa(A9S825-force, "all forces").
english(barrons.rule2059, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2059, "EXAMPLE(Gravity, Force), Gravity = 'gravity', Force = 'all forces'.").
barrons.rule2059:: isa(A9S825-force, "all forces") -> example(A6S825-gravity, A9S825-force), isa(A6S825-gravity, "gravity").
english(barrons.rule2060, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2060, "EXAMPLE(Gravity, Force), Gravity = 'gravity', Force = 'all forces'.").
barrons.rule2060:: isa(A6S825-gravity, "gravity") -> example(A6S825-gravity, A9S825-force), isa(A9S825-force, "all forces").
english(barrons.rule2061, "Water wind and gravity are all forces involved in erosion").
pretty(barrons.rule2061, "EXAMPLE(Gravity, Force), Gravity = 'gravity', Force = 'all forces'.").
barrons.rule2061:: isa(A9S825-force, "all forces") -> example(A6S825-gravity, A9S825-force), isa(A6S825-gravity, "gravity").
english(barrons.rule2062, "Wave action can move sand along a beach").
pretty(barrons.rule2062, "isa(move, 'move') -> move_along(Action, Sand, Beach).").
barrons.rule2062:: isa(E4S828-move, "move") -> agent(E4S828-move, A2S828-action), isa(A2S828-action, "Wave action"), object(E4S828-move, A5S828-sand), isa(A5S828-sand, "sand"), along(E4S828-move, A8S828-beach), isa(A8S828-beach, "a beach").
english(barrons.rule2063, "Wave action can move sand along a beach").
pretty(barrons.rule2063, "isa(Action, 'Wave action') -> move_along(Action, Sand, Beach).").
barrons.rule2063:: isa(A2S828-action, "Wave action") -> isa(E4S828-move, "move"), agent(E4S828-move, A2S828-action), object(E4S828-move, A5S828-sand), isa(A5S828-sand, "sand"), along(E4S828-move, A8S828-beach), isa(A8S828-beach, "a beach").
english(barrons.rule2064, "Wave action can move sand along a beach").
pretty(barrons.rule2064, "isa(Sand, 'sand') -> move_along(Action, Sand, Beach).").
barrons.rule2064:: isa(A5S828-sand, "sand") -> isa(E4S828-move, "move"), agent(E4S828-move, A2S828-action), isa(A2S828-action, "Wave action"), object(E4S828-move, A5S828-sand), along(E4S828-move, A8S828-beach), isa(A8S828-beach, "a beach").
english(barrons.rule2065, "Wave action can move sand along a beach").
pretty(barrons.rule2065, "isa(Beach, 'a beach') -> move_along(Action, Sand, Beach).").
barrons.rule2065:: isa(A8S828-beach, "a beach") -> isa(E4S828-move, "move"), agent(E4S828-move, A2S828-action), isa(A2S828-action, "Wave action"), object(E4S828-move, A5S828-sand), isa(A5S828-sand, "sand"), along(E4S828-move, A8S828-beach).
english(barrons.rule2066, "Increased water flow can widen a riverbed").
pretty(barrons.rule2066, "isa(widen, 'widen') -> widen(Flow, Riverbed).").
barrons.rule2066:: isa(E5S830-widen, "widen") -> agent(E5S830-widen, A3S830-flow), isa(A3S830-flow, "Increased water flow"), object(E5S830-widen, A7S830-riverbed), isa(A7S830-riverbed, "a riverbed").
english(barrons.rule2067, "Increased water flow can widen a riverbed").
pretty(barrons.rule2067, "isa(Flow, 'Increased water flow') -> widen(Flow, Riverbed).").
barrons.rule2067:: isa(A3S830-flow, "Increased water flow") -> isa(E5S830-widen, "widen"), agent(E5S830-widen, A3S830-flow), object(E5S830-widen, A7S830-riverbed), isa(A7S830-riverbed, "a riverbed").
english(barrons.rule2068, "Increased water flow can widen a riverbed").
pretty(barrons.rule2068, "isa(Riverbed, 'a riverbed') -> widen(Flow, Riverbed).").
barrons.rule2068:: isa(A7S830-riverbed, "a riverbed") -> isa(E5S830-widen, "widen"), agent(E5S830-widen, A3S830-flow), isa(A3S830-flow, "Increased water flow"), object(E5S830-widen, A7S830-riverbed).
english(barrons.rule2069, "Eventually the particles that are being moved by water wind and/or gravity will stop moving").
pretty(barrons.rule2069, "EFFECT(stop(Particle, Eventually), move(Particle)), Particle = 'the particles', Eventually = 'Eventually'.").
barrons.rule2069:: isa(E17S833-stop, "stop"), agent(E17S833-stop, A4S833-particle), isa(A4S833-particle, "the particles"), arg(E17S833-stop, A1S833-eventually), isa(A1S833-eventually, "Eventually") -> effect(E17S833-stop, E18S833-move), isa(E18S833-move, "move"), agent(E18S833-move, A4S833-particle).
english(barrons.rule2070, "Eventually the particles that are being moved by water wind and/or gravity will stop moving").
pretty(barrons.rule2070, "EFFECT(stop(Particle, Eventually), move(Particle)), Particle = 'the particles', Eventually = 'Eventually'.").
barrons.rule2070:: isa(E18S833-move, "move"), agent(E18S833-move, A4S833-particle), isa(A4S833-particle, "the particles") -> effect(E17S833-stop, E18S833-move), isa(E17S833-stop, "stop"), agent(E17S833-stop, A4S833-particle), arg(E17S833-stop, A1S833-eventually), isa(A1S833-eventually, "Eventually").
english(barrons.rule2071, "Deposition occurs when the particles stop moving").
pretty(barrons.rule2071, "WHEN(occur(Deposition), stop(Particle)), Deposition = 'Deposition', Particle = 'the particles'.").
barrons.rule2071:: isa(E2S834-occur, "occur"), agent(E2S834-occur, A1S834-deposition), isa(A1S834-deposition, "Deposition") -> when(E2S834-occur, E6S834-stop), isa(E6S834-stop, "stop"), agent(E6S834-stop, A5S834-particle), isa(A5S834-particle, "the particles").
english(barrons.rule2072, "Deposition occurs when the particles stop moving").
pretty(barrons.rule2072, "WHEN(occur(Deposition), stop(Particle)), Deposition = 'Deposition', Particle = 'the particles'.").
barrons.rule2072:: isa(E6S834-stop, "stop"), agent(E6S834-stop, A5S834-particle), isa(A5S834-particle, "the particles") -> when(E2S834-occur, E6S834-stop), isa(E2S834-occur, "occur"), agent(E2S834-occur, A1S834-deposition), isa(A1S834-deposition, "Deposition").
english(barrons.rule2073, "Deposition occurs when the particles stop moving").
pretty(barrons.rule2073, "EFFECT(stop(Particle), move(Particle)), Particle = 'the particles'.").
barrons.rule2073:: isa(E6S834-stop, "stop"), agent(E6S834-stop, A5S834-particle), isa(A5S834-particle, "the particles") -> effect(E6S834-stop, E7S834-move), isa(E7S834-move, "move"), agent(E7S834-move, A5S834-particle).
english(barrons.rule2074, "Deposition occurs when the particles stop moving").
pretty(barrons.rule2074, "EFFECT(stop(Particle), move(Particle)), Particle = 'the particles'.").
barrons.rule2074:: isa(E7S834-move, "move"), agent(E7S834-move, A5S834-particle), isa(A5S834-particle, "the particles") -> effect(E6S834-stop, E7S834-move), isa(E6S834-stop, "stop"), agent(E6S834-stop, A5S834-particle).
english(barrons.rule2075, "Most of the time people do not feel the earthquakes").
pretty(barrons.rule2075, "isa(Time, 'the time people') -> not feel(Most, Earthquake).").
barrons.rule2075:: isa(A4S837-time, "the time") -> of(A1S837-most, A4S837-time), isa(E8S837-feel, "not feel"), agent(E8S837-feel, A1S837-most), isa(A1S837-most, "Most"), object(E8S837-feel, A10S837-earthquake), isa(A10S837-earthquake, "the earthquakes").
english(barrons.rule2076, "Most of the time people do not feel the earthquakes").
pretty(barrons.rule2076, "isa(not feel, 'not feel') -> not feel(Most, Earthquake).").
barrons.rule2076:: isa(E8S837-feel, "not feel") -> of(A1S837-most, A4S837-time), isa(A4S837-time, "the time"), agent(E8S837-feel, A1S837-most), isa(A1S837-most, "Most"), object(E8S837-feel, A10S837-earthquake), isa(A10S837-earthquake, "the earthquakes").
english(barrons.rule2077, "Most of the time people do not feel the earthquakes").
pretty(barrons.rule2077, "isa(Most, 'Most of the time people') -> not feel(Most, Earthquake).").
barrons.rule2077:: isa(A1S837-most, "Most") -> of(A1S837-most, A4S837-time), isa(A4S837-time, "the time"), isa(E8S837-feel, "not feel"), agent(E8S837-feel, A1S837-most), object(E8S837-feel, A10S837-earthquake), isa(A10S837-earthquake, "the earthquakes").
english(barrons.rule2078, "Most of the time people do not feel the earthquakes").
pretty(barrons.rule2078, "isa(Earthquake, 'the earthquakes') -> not feel(Most, Earthquake).").
barrons.rule2078:: isa(A10S837-earthquake, "the earthquakes") -> of(A1S837-most, A4S837-time), isa(A4S837-time, "the time"), isa(E8S837-feel, "not feel"), agent(E8S837-feel, A1S837-most), isa(A1S837-most, "Most"), object(E8S837-feel, A10S837-earthquake).
english(barrons.rule2079, "However powerful earthquakes can cause damage to landscapes and buildings").
pretty(barrons.rule2079, "isa(Landscape, 'landscapes') -> cause(Earthquake, Damage, However).").
barrons.rule2079:: isa(A9S838-landscape, "landscapes") -> to(A7S838-damage, A9S838-landscape), to(A7S838-damage, A11S838-building), isa(A11S838-building, "buildings"), isa(E6S838-cause, "cause"), agent(E6S838-cause, A4S838-earthquake), isa(A4S838-earthquake, "powerful earthquakes"), object(E6S838-cause, A7S838-damage), isa(A7S838-damage, "damage"), arg(E6S838-cause, A1S838-however), isa(A1S838-however, "However").
english(barrons.rule2080, "However powerful earthquakes can cause damage to landscapes and buildings").
pretty(barrons.rule2080, "isa(Building, 'buildings') -> cause(Earthquake, Damage, However).").
barrons.rule2080:: isa(A11S838-building, "buildings") -> to(A7S838-damage, A9S838-landscape), isa(A9S838-landscape, "landscapes"), to(A7S838-damage, A11S838-building), isa(E6S838-cause, "cause"), agent(E6S838-cause, A4S838-earthquake), isa(A4S838-earthquake, "powerful earthquakes"), object(E6S838-cause, A7S838-damage), isa(A7S838-damage, "damage"), arg(E6S838-cause, A1S838-however), isa(A1S838-however, "However").
english(barrons.rule2081, "However powerful earthquakes can cause damage to landscapes and buildings").
pretty(barrons.rule2081, "isa(cause, 'cause') -> cause(Earthquake, Damage, However).").
barrons.rule2081:: isa(E6S838-cause, "cause") -> to(A7S838-damage, A9S838-landscape), isa(A9S838-landscape, "landscapes"), to(A7S838-damage, A11S838-building), isa(A11S838-building, "buildings"), agent(E6S838-cause, A4S838-earthquake), isa(A4S838-earthquake, "powerful earthquakes"), object(E6S838-cause, A7S838-damage), isa(A7S838-damage, "damage"), arg(E6S838-cause, A1S838-however), isa(A1S838-however, "However").
english(barrons.rule2082, "However powerful earthquakes can cause damage to landscapes and buildings").
pretty(barrons.rule2082, "isa(Earthquake, 'powerful earthquakes') -> cause(Earthquake, Damage, However).").
barrons.rule2082:: isa(A4S838-earthquake, "powerful earthquakes") -> to(A7S838-damage, A9S838-landscape), isa(A9S838-landscape, "landscapes"), to(A7S838-damage, A11S838-building), isa(A11S838-building, "buildings"), isa(E6S838-cause, "cause"), agent(E6S838-cause, A4S838-earthquake), object(E6S838-cause, A7S838-damage), isa(A7S838-damage, "damage"), arg(E6S838-cause, A1S838-however), isa(A1S838-however, "However").
english(barrons.rule2083, "However powerful earthquakes can cause damage to landscapes and buildings").
pretty(barrons.rule2083, "isa(Damage, 'damage to landscapes and buildings') -> cause(Earthquake, Damage, However).").
barrons.rule2083:: isa(A7S838-damage, "damage") -> to(A7S838-damage, A9S838-landscape), isa(A9S838-landscape, "landscapes"), to(A7S838-damage, A11S838-building), isa(A11S838-building, "buildings"), isa(E6S838-cause, "cause"), agent(E6S838-cause, A4S838-earthquake), isa(A4S838-earthquake, "powerful earthquakes"), object(E6S838-cause, A7S838-damage), arg(E6S838-cause, A1S838-however), isa(A1S838-however, "However").
english(barrons.rule2084, "However powerful earthquakes can cause damage to landscapes and buildings").
pretty(barrons.rule2084, "isa(However, 'However') -> cause(Earthquake, Damage, However).").
barrons.rule2084:: isa(A1S838-however, "However") -> to(A7S838-damage, A9S838-landscape), isa(A9S838-landscape, "landscapes"), to(A7S838-damage, A11S838-building), isa(A11S838-building, "buildings"), isa(E6S838-cause, "cause"), agent(E6S838-cause, A4S838-earthquake), isa(A4S838-earthquake, "powerful earthquakes"), object(E6S838-cause, A7S838-damage), isa(A7S838-damage, "damage"), arg(E6S838-cause, A1S838-however).
english(barrons.rule2085, "A volcano is a mountain through which hot liquid material from inside the Earth can reach the surface").
pretty(barrons.rule2085, "EXAMPLE(Volcano, reach_through(Material, Surface, Which)), Volcano = 'A volcano', Material = 'hot liquid material from inside the Earth', Surface = 'the surface', Which = 'which'.").
barrons.rule2085:: isa(A2S839-volcano, "A volcano") -> example(A2S839-volcano, E16S839-reach), isa(E16S839-reach, "reach"), agent(E16S839-reach, A10S839-material), isa(A10S839-material, "hot liquid material"), object(E16S839-reach, A18S839-surface), isa(A18S839-surface, "the surface"), through(E16S839-reach, A7S839-which), isa(A7S839-which, "which").
english(barrons.rule2086, "A volcano is a mountain through which hot liquid material from inside the Earth can reach the surface").
pretty(barrons.rule2086, "EXAMPLE(Volcano, reach_through(Material, Surface, Which)), Volcano = 'A volcano', Material = 'hot liquid material from inside the Earth', Surface = 'the surface', Which = 'which'.").
barrons.rule2086:: isa(E16S839-reach, "reach"), agent(E16S839-reach, A10S839-material), isa(A10S839-material, "hot liquid material"), object(E16S839-reach, A18S839-surface), isa(A18S839-surface, "the surface"), through(E16S839-reach, A7S839-which), isa(A7S839-which, "which") -> example(A2S839-volcano, E16S839-reach), isa(A2S839-volcano, "A volcano").
english(barrons.rule2087, "A volcano is a mountain through which hot liquid material from inside the Earth can reach the surface").
pretty(barrons.rule2087, "EXAMPLE(Volcano, Mountain), Volcano = 'A volcano', Mountain = 'a mountain'.").
barrons.rule2087:: isa(A2S839-volcano, "A volcano") -> example(A2S839-volcano, A5S839-mountain), isa(A5S839-mountain, "a mountain").
english(barrons.rule2088, "A volcano is a mountain through which hot liquid material from inside the Earth can reach the surface").
pretty(barrons.rule2088, "EXAMPLE(Volcano, Mountain), Volcano = 'A volcano', Mountain = 'a mountain'.").
barrons.rule2088:: isa(A5S839-mountain, "a mountain") -> example(A2S839-volcano, A5S839-mountain), isa(A2S839-volcano, "A volcano").
english(barrons.rule2089, "The hot liquid rock on the surface is called lava").
pretty(barrons.rule2089, "EXAMPLE(Rock, Lava), Rock = 'The hot liquid rock on the surface', Lava = 'lava'.").
barrons.rule2089:: on(A4S840-rock, A7S840-surface), isa(A7S840-surface, "the surface"), isa(A4S840-rock, "The hot liquid rock") -> example(A4S840-rock, A10S840-lava), isa(A10S840-lava, "lava").
english(barrons.rule2090, "The hot liquid rock on the surface is called lava").
pretty(barrons.rule2090, "EXAMPLE(Rock, Lava), Rock = 'The hot liquid rock on the surface', Lava = 'lava'.").
barrons.rule2090:: isa(A10S840-lava, "lava") -> example(A4S840-rock, A10S840-lava), on(A4S840-rock, A7S840-surface), isa(A7S840-surface, "the surface"), isa(A4S840-rock, "The hot liquid rock").
english(barrons.rule2091, "One of the most useful tools that a scientist has is the power of observation").
pretty(barrons.rule2091, "EXAMPLE(One, Power), One = 'One of the most useful tools that a scientist has', Power = 'the power of observation'.").
barrons.rule2091:: of(A1S842-one, A6S842-tool), isa(A6S842-tool, "the most useful tools"), isa(A1S842-one, "One") -> example(A1S842-one, A13S842-power), of(A13S842-power, A15S842-observation), isa(A15S842-observation, "observation"), isa(A13S842-power, "the power").
english(barrons.rule2092, "One of the most useful tools that a scientist has is the power of observation").
pretty(barrons.rule2092, "EXAMPLE(One, Power), One = 'One of the most useful tools that a scientist has', Power = 'the power of observation'.").
barrons.rule2092:: of(A13S842-power, A15S842-observation), isa(A15S842-observation, "observation"), isa(A13S842-power, "the power") -> example(A1S842-one, A13S842-power), of(A1S842-one, A6S842-tool), isa(A6S842-tool, "the most useful tools"), isa(A1S842-one, "One").
english(barrons.rule2093, "Scientists often record their[mass scientists] observations in a journal or notebook in order to keep accurate records for future review").
pretty(barrons.rule2093, "EFFECT(record_in(Scientist, Observation, Journal, in(Notebook)), keep_for(Scientist, Record, Review)), Scientist = 'Scientists', Observation = 'their[mass scientists] observations', Journal = 'a journal', Notebook = 'notebook', Record = 'accurate records', Review = 'future review'.").
barrons.rule2093:: isa(E3S845-record, "record"), agent(E3S845-record, A1S845-scientist), isa(A1S845-scientist, "Scientists"), object(E3S845-record, A5S845-observation), isa(A5S845-observation, "their[mass scientists] observations"), in(E3S845-record, A8S845-journal), isa(A8S845-journal, "a journal"), in(E3S845-record, A10S845-notebook), isa(A10S845-notebook, "notebook") -> effect(E3S845-record, E14S845-keep), isa(E14S845-keep, "keep"), agent(E14S845-keep, A1S845-scientist), object(E14S845-keep, A16S845-record), isa(A16S845-record, "accurate records"), for(E14S845-keep, A19S845-review), isa(A19S845-review, "future review").
english(barrons.rule2094, "Scientists often record their[mass scientists] observations in a journal or notebook in order to keep accurate records for future review").
pretty(barrons.rule2094, "EFFECT(record_in(Scientist, Observation, Journal, in(Notebook)), keep_for(Scientist, Record, Review)), Scientist = 'Scientists', Observation = 'their[mass scientists] observations', Journal = 'a journal', Notebook = 'notebook', Record = 'accurate records', Review = 'future review'.").
barrons.rule2094:: isa(E14S845-keep, "keep"), agent(E14S845-keep, A1S845-scientist), isa(A1S845-scientist, "Scientists"), object(E14S845-keep, A16S845-record), isa(A16S845-record, "accurate records"), for(E14S845-keep, A19S845-review), isa(A19S845-review, "future review") -> effect(E3S845-record, E14S845-keep), isa(E3S845-record, "record"), agent(E3S845-record, A1S845-scientist), object(E3S845-record, A5S845-observation), isa(A5S845-observation, "their[mass scientists] observations"), in(E3S845-record, A8S845-journal), isa(A8S845-journal, "a journal"), in(E3S845-record, A10S845-notebook), isa(A10S845-notebook, "notebook").
english(barrons.rule2095, "To help make more detailed observations scientists often use tools").
pretty(barrons.rule2095, "EFFECT(use(Tool), make(Scientist)), Tool = 'tools', Scientist = 'more detailed observations scientists'.").
barrons.rule2095:: isa(E9S846-use, "use"), object(E9S846-use, A10S846-tool), isa(A10S846-tool, "tools") -> effect(E9S846-use, E3S846-make), isa(E3S846-make, "make"), object(E3S846-make, A7S846-scientist), isa(A7S846-scientist, "more detailed observations scientists").
english(barrons.rule2096, "To help make more detailed observations scientists often use tools").
pretty(barrons.rule2096, "EFFECT(use(Tool), make(Scientist)), Tool = 'tools', Scientist = 'more detailed observations scientists'.").
barrons.rule2096:: isa(E3S846-make, "make"), object(E3S846-make, A7S846-scientist), isa(A7S846-scientist, "more detailed observations scientists") -> effect(E9S846-use, E3S846-make), isa(E9S846-use, "use"), object(E9S846-use, A10S846-tool), isa(A10S846-tool, "tools").
english(barrons.rule2097, "A ruler measures length").
pretty(barrons.rule2097, "isa(measure, 'measures') -> measure(Ruler, Length).").
barrons.rule2097:: isa(E3S848-measure, "measure") -> agent(E3S848-measure, A2S848-ruler), isa(A2S848-ruler, "A ruler"), object(E3S848-measure, A4S848-length), isa(A4S848-length, "length").
english(barrons.rule2098, "A ruler measures length").
pretty(barrons.rule2098, "isa(Ruler, 'A ruler') -> measure(Ruler, Length).").
barrons.rule2098:: isa(A2S848-ruler, "A ruler") -> isa(E3S848-measure, "measure"), agent(E3S848-measure, A2S848-ruler), object(E3S848-measure, A4S848-length), isa(A4S848-length, "length").
english(barrons.rule2099, "A ruler measures length").
pretty(barrons.rule2099, "isa(Length, 'length') -> measure(Ruler, Length).").
barrons.rule2099:: isa(A4S848-length, "length") -> isa(E3S848-measure, "measure"), agent(E3S848-measure, A2S848-ruler), isa(A2S848-ruler, "A ruler"), object(E3S848-measure, A4S848-length).
english(barrons.rule2100, "A ruler measures length").
pretty(barrons.rule2100, "PURPOSE(Ruler, measure(Ruler, Length)), Ruler = 'A ruler', Length = 'length'.").
barrons.rule2100:: isa(A2S848-ruler, "A ruler") -> purpose(A2S848-ruler, E3S848-measure), isa(E3S848-measure, "measure"), agent(E3S848-measure, A2S848-ruler), object(E3S848-measure, A4S848-length), isa(A4S848-length, "length").
english(barrons.rule2101, "A ruler measures length").
pretty(barrons.rule2101, "PURPOSE(Ruler, measure(Ruler, Length)), Ruler = 'A ruler', Length = 'length'.").
barrons.rule2101:: isa(E3S848-measure, "measure"), agent(E3S848-measure, A2S848-ruler), isa(A2S848-ruler, "A ruler"), object(E3S848-measure, A4S848-length), isa(A4S848-length, "length") -> purpose(A2S848-ruler, E3S848-measure).
english(barrons.rule2102, "A balance measures mass").
pretty(barrons.rule2102, "PURPOSE(Balance, measure(Balance, Mass)), Balance = 'A balance', Mass = 'mass'.").
barrons.rule2102:: isa(A2S850-balance, "A balance") -> purpose(A2S850-balance, E3S850-measure), isa(E3S850-measure, "measure"), agent(E3S850-measure, A2S850-balance), arg(E3S850-measure, A4S850-mass), isa(A4S850-mass, "mass").
english(barrons.rule2103, "A balance measures mass").
pretty(barrons.rule2103, "PURPOSE(Balance, measure(Balance, Mass)), Balance = 'A balance', Mass = 'mass'.").
barrons.rule2103:: isa(E3S850-measure, "measure"), agent(E3S850-measure, A2S850-balance), isa(A2S850-balance, "A balance"), arg(E3S850-measure, A4S850-mass), isa(A4S850-mass, "mass") -> purpose(A2S850-balance, E3S850-measure).
english(barrons.rule2104, "A thermometer measures temperature").
pretty(barrons.rule2104, "isa(measure, 'measures') -> measure(Thermometer, Temperature).").
barrons.rule2104:: isa(E3S852-measure, "measure") -> agent(E3S852-measure, A2S852-thermometer), isa(A2S852-thermometer, "A thermometer"), object(E3S852-measure, A4S852-temperature), isa(A4S852-temperature, "temperature").
english(barrons.rule2105, "A thermometer measures temperature").
pretty(barrons.rule2105, "isa(Thermometer, 'A thermometer') -> measure(Thermometer, Temperature).").
barrons.rule2105:: isa(A2S852-thermometer, "A thermometer") -> isa(E3S852-measure, "measure"), agent(E3S852-measure, A2S852-thermometer), object(E3S852-measure, A4S852-temperature), isa(A4S852-temperature, "temperature").
english(barrons.rule2106, "A thermometer measures temperature").
pretty(barrons.rule2106, "isa(Temperature, 'temperature') -> measure(Thermometer, Temperature).").
barrons.rule2106:: isa(A4S852-temperature, "temperature") -> isa(E3S852-measure, "measure"), agent(E3S852-measure, A2S852-thermometer), isa(A2S852-thermometer, "A thermometer"), object(E3S852-measure, A4S852-temperature).
english(barrons.rule2107, "A thermometer measures temperature").
pretty(barrons.rule2107, "PURPOSE(Thermometer, measure(Thermometer, Temperature)), Thermometer = 'A thermometer', Temperature = 'temperature'.").
barrons.rule2107:: isa(A2S852-thermometer, "A thermometer") -> purpose(A2S852-thermometer, E3S852-measure), isa(E3S852-measure, "measure"), agent(E3S852-measure, A2S852-thermometer), object(E3S852-measure, A4S852-temperature), isa(A4S852-temperature, "temperature").
english(barrons.rule2108, "A thermometer measures temperature").
pretty(barrons.rule2108, "PURPOSE(Thermometer, measure(Thermometer, Temperature)), Thermometer = 'A thermometer', Temperature = 'temperature'.").
barrons.rule2108:: isa(E3S852-measure, "measure"), agent(E3S852-measure, A2S852-thermometer), isa(A2S852-thermometer, "A thermometer"), object(E3S852-measure, A4S852-temperature), isa(A4S852-temperature, "temperature") -> purpose(A2S852-thermometer, E3S852-measure).
english(barrons.rule2109, "A microscope is used to view small objects").
pretty(barrons.rule2109, "PURPOSE(Microscope, view(Microscope, Object)), Microscope = 'A microscope', Object = 'small objects'.").
barrons.rule2109:: isa(A2S853-microscope, "A microscope") -> purpose(A2S853-microscope, E6S853-view), isa(E6S853-view, "view"), agent(E6S853-view, A2S853-microscope), object(E6S853-view, A8S853-object), isa(A8S853-object, "small objects").
english(barrons.rule2110, "A microscope is used to view small objects").
pretty(barrons.rule2110, "PURPOSE(Microscope, view(Microscope, Object)), Microscope = 'A microscope', Object = 'small objects'.").
barrons.rule2110:: isa(E6S853-view, "view"), agent(E6S853-view, A2S853-microscope), isa(A2S853-microscope, "A microscope"), object(E6S853-view, A8S853-object), isa(A8S853-object, "small objects") -> purpose(A2S853-microscope, E6S853-view).
english(barrons.rule2111, "A magnet detects magnetic properties").
pretty(barrons.rule2111, "isa(detect, 'detects') -> detect(Magnet, Property).").
barrons.rule2111:: isa(E3S855-detect, "detect") -> agent(E3S855-detect, A2S855-magnet), isa(A2S855-magnet, "A magnet"), object(E3S855-detect, A5S855-property), isa(A5S855-property, "magnetic properties").
english(barrons.rule2112, "A magnet detects magnetic properties").
pretty(barrons.rule2112, "isa(Magnet, 'A magnet') -> detect(Magnet, Property).").
barrons.rule2112:: isa(A2S855-magnet, "A magnet") -> isa(E3S855-detect, "detect"), agent(E3S855-detect, A2S855-magnet), object(E3S855-detect, A5S855-property), isa(A5S855-property, "magnetic properties").
english(barrons.rule2113, "A magnet detects magnetic properties").
pretty(barrons.rule2113, "isa(Property, 'magnetic properties') -> detect(Magnet, Property).").
barrons.rule2113:: isa(A5S855-property, "magnetic properties") -> isa(E3S855-detect, "detect"), agent(E3S855-detect, A2S855-magnet), isa(A2S855-magnet, "A magnet"), object(E3S855-detect, A5S855-property).
english(barrons.rule2114, "Each tool has a specific use and should not be used without proper directions").
pretty(barrons.rule2114, "isa(have, 'has') -> have(Tool, Use).").
barrons.rule2114:: isa(E3S856-have, "have") -> agent(E3S856-have, A2S856-tool), isa(A2S856-tool, "Each tool"), object(E3S856-have, A6S856-use), isa(A6S856-use, "a specific use").
english(barrons.rule2115, "Each tool has a specific use and should not be used without proper directions").
pretty(barrons.rule2115, "isa(Tool, 'Each tool') -> have(Tool, Use).").
barrons.rule2115:: isa(A2S856-tool, "Each tool") -> isa(E3S856-have, "have"), agent(E3S856-have, A2S856-tool), object(E3S856-have, A6S856-use), isa(A6S856-use, "a specific use").
english(barrons.rule2116, "Each tool has a specific use and should not be used without proper directions").
pretty(barrons.rule2116, "isa(Use, 'a specific use') -> have(Tool, Use).").
barrons.rule2116:: isa(A6S856-use, "a specific use") -> isa(E3S856-have, "have"), agent(E3S856-have, A2S856-tool), isa(A2S856-tool, "Each tool"), object(E3S856-have, A6S856-use).
english(barrons.rule2117, "Although the scientific method can be simplified into a series of steps each step can involve a great deal of work").
pretty(barrons.rule2117, "isa(Work, 'work') -> involve(Step, Deal, Simplify).").
barrons.rule2117:: isa(A22S869-work, "work") -> of(A20S869-deal, A22S869-work), isa(E17S869-involve, "involve"), agent(E17S869-involve, A15S869-step), isa(A15S869-step, "each step"), object(E17S869-involve, A20S869-deal), isa(A20S869-deal, "a great deal"), arg(E17S869-involve, A7S869-simplify), isa(A7S869-simplify, "Although the scientific method can be simplified into a series of steps").
english(barrons.rule2118, "Although the scientific method can be simplified into a series of steps each step can involve a great deal of work").
pretty(barrons.rule2118, "isa(involve, 'involve') -> involve(Step, Deal, Simplify).").
barrons.rule2118:: isa(E17S869-involve, "involve") -> of(A20S869-deal, A22S869-work), isa(A22S869-work, "work"), agent(E17S869-involve, A15S869-step), isa(A15S869-step, "each step"), object(E17S869-involve, A20S869-deal), isa(A20S869-deal, "a great deal"), arg(E17S869-involve, A7S869-simplify), isa(A7S869-simplify, "Although the scientific method can be simplified into a series of steps").
english(barrons.rule2119, "Although the scientific method can be simplified into a series of steps each step can involve a great deal of work").
pretty(barrons.rule2119, "isa(Step, 'each step') -> involve(Step, Deal, Simplify).").
barrons.rule2119:: isa(A15S869-step, "each step") -> of(A20S869-deal, A22S869-work), isa(A22S869-work, "work"), isa(E17S869-involve, "involve"), agent(E17S869-involve, A15S869-step), object(E17S869-involve, A20S869-deal), isa(A20S869-deal, "a great deal"), arg(E17S869-involve, A7S869-simplify), isa(A7S869-simplify, "Although the scientific method can be simplified into a series of steps").
english(barrons.rule2120, "Although the scientific method can be simplified into a series of steps each step can involve a great deal of work").
pretty(barrons.rule2120, "isa(Deal, 'a great deal of work') -> involve(Step, Deal, Simplify).").
barrons.rule2120:: isa(A20S869-deal, "a great deal") -> of(A20S869-deal, A22S869-work), isa(A22S869-work, "work"), isa(E17S869-involve, "involve"), agent(E17S869-involve, A15S869-step), isa(A15S869-step, "each step"), object(E17S869-involve, A20S869-deal), arg(E17S869-involve, A7S869-simplify), isa(A7S869-simplify, "Although the scientific method can be simplified into a series of steps").
english(barrons.rule2121, "Although the scientific method can be simplified into a series of steps each step can involve a great deal of work").
pretty(barrons.rule2121, "isa(Simplify, 'Although the scientific method be simplified into a series of steps') -> involve(Step, Deal, Simplify).").
barrons.rule2121:: isa(A7S869-simplify, "Although the scientific method can be simplified into a series of steps") -> of(A20S869-deal, A22S869-work), isa(A22S869-work, "work"), isa(E17S869-involve, "involve"), agent(E17S869-involve, A15S869-step), isa(A15S869-step, "each step"), object(E17S869-involve, A20S869-deal), isa(A20S869-deal, "a great deal"), arg(E17S869-involve, A7S869-simplify).
english(barrons.rule2122, "Once the problem is defined it[a problem or situation] is important to research information before determining exactly what you wish to study").
pretty(barrons.rule2122, "EFFECT(wish(You, What), study(You)), You = 'you', What = 'what'.").
barrons.rule2122:: isa(E17S870-wish, "wish"), agent(E17S870-wish, A16S870-you), isa(A16S870-you, "you"), object(E17S870-wish, A15S870-what), isa(A15S870-what, "what") -> effect(E17S870-wish, E19S870-study), isa(E19S870-study, "study"), agent(E19S870-study, A16S870-you).
english(barrons.rule2123, "Once the problem is defined it[a problem or situation] is important to research information before determining exactly what you wish to study").
pretty(barrons.rule2123, "EFFECT(wish(You, What), study(You)), You = 'you', What = 'what'.").
barrons.rule2123:: isa(E19S870-study, "study"), agent(E19S870-study, A16S870-you), isa(A16S870-you, "you") -> effect(E17S870-wish, E19S870-study), isa(E17S870-wish, "wish"), agent(E17S870-wish, A16S870-you), object(E17S870-wish, A15S870-what), isa(A15S870-what, "what").
english(barrons.rule2124, "Once a hypothesis is decided upon you can conduct an experiment to prove the hypothesis").
pretty(barrons.rule2124, "EFFECT(conduct(You, Experiment), prove(You, Hypothesis)), You = 'you', Experiment = 'an experiment', Hypothesis = 'the hypothesis'.").
barrons.rule2124:: isa(E9S873-conduct, "conduct"), agent(E9S873-conduct, A7S873-you), isa(A7S873-you, "you"), object(E9S873-conduct, A11S873-experiment), isa(A11S873-experiment, "an experiment") -> effect(E9S873-conduct, E13S873-prove), isa(E13S873-prove, "prove"), agent(E13S873-prove, A7S873-you), object(E13S873-prove, A15S873-hypothesis), isa(A15S873-hypothesis, "the hypothesis").
english(barrons.rule2125, "Once a hypothesis is decided upon you can conduct an experiment to prove the hypothesis").
pretty(barrons.rule2125, "EFFECT(conduct(You, Experiment), prove(You, Hypothesis)), You = 'you', Experiment = 'an experiment', Hypothesis = 'the hypothesis'.").
barrons.rule2125:: isa(E13S873-prove, "prove"), agent(E13S873-prove, A7S873-you), isa(A7S873-you, "you"), object(E13S873-prove, A15S873-hypothesis), isa(A15S873-hypothesis, "the hypothesis") -> effect(E9S873-conduct, E13S873-prove), isa(E9S873-conduct, "conduct"), agent(E9S873-conduct, A7S873-you), object(E9S873-conduct, A11S873-experiment), isa(A11S873-experiment, "an experiment").
english(barrons.rule2126, "After experimentation it will become necessary to evaluate the results to determine whether your hypothesis was correct").
pretty(barrons.rule2126, "EFFECT(evaluate(Result), determine(Correct)), Result = 'the results', Correct = 'whether correct'.").
barrons.rule2126:: isa(E8S874-evaluate, "evaluate"), object(E8S874-evaluate, A10S874-result), isa(A10S874-result, "the results") -> effect(E8S874-evaluate, E12S874-determine), isa(E12S874-determine, "determine"), arg(E12S874-determine, A17S874-correct), isa(A17S874-correct, "whether your hypothesis was correct").
english(barrons.rule2127, "After experimentation it will become necessary to evaluate the results to determine whether your hypothesis was correct").
pretty(barrons.rule2127, "EFFECT(evaluate(Result), determine(Correct)), Result = 'the results', Correct = 'whether correct'.").
barrons.rule2127:: isa(E12S874-determine, "determine"), arg(E12S874-determine, A17S874-correct), isa(A17S874-correct, "whether your hypothesis was correct") -> effect(E8S874-evaluate, E12S874-determine), isa(E8S874-evaluate, "evaluate"), object(E8S874-evaluate, A10S874-result), isa(A10S874-result, "the results").
english(barrons.rule2128, "They[Students] researched information to find the best soil nutrients and light source needed in order to grow sunflowers").
pretty(barrons.rule2128, "EFFECT(research(Student, Information), find(Student, Soil)), Student = 'Students', Information = 'information', Soil = 'the best soil'.").
barrons.rule2128:: isa(E2S876-research, "research"), agent(E2S876-research, A1S875-student), isa(A1S875-student, "Students"), object(E2S876-research, A3S876-information), isa(A3S876-information, "information") -> effect(E2S876-research, E5S876-find), isa(E5S876-find, "find"), agent(E5S876-find, A1S875-student), object(E5S876-find, A8S876-soil), isa(A8S876-soil, "the best soil").
english(barrons.rule2129, "They[Students] researched information to find the best soil nutrients and light source needed in order to grow sunflowers").
pretty(barrons.rule2129, "EFFECT(research(Student, Information), find(Student, Soil)), Student = 'Students', Information = 'information', Soil = 'the best soil'.").
barrons.rule2129:: isa(E5S876-find, "find"), agent(E5S876-find, A1S875-student), isa(A1S875-student, "Students"), object(E5S876-find, A8S876-soil), isa(A8S876-soil, "the best soil") -> effect(E2S876-research, E5S876-find), isa(E2S876-research, "research"), agent(E2S876-research, A1S875-student), object(E2S876-research, A3S876-information), isa(A3S876-information, "information").
english(barrons.rule2130, "They[Students] researched information to find the best soil nutrients and light source needed in order to grow sunflowers").
pretty(barrons.rule2130, "EFFECT(research(Student, Information), find(Student, Nutrient)), Student = 'Students', Information = 'information', Nutrient = 'nutrients'.").
barrons.rule2130:: isa(E2S876-research, "research"), agent(E2S876-research, A1S875-student), isa(A1S875-student, "Students"), object(E2S876-research, A3S876-information), isa(A3S876-information, "information") -> effect(E2S876-research, E5S876-find), isa(E5S876-find, "find"), agent(E5S876-find, A1S875-student), object(E5S876-find, A10S876-nutrient), isa(A10S876-nutrient, "nutrients").
english(barrons.rule2131, "They[Students] researched information to find the best soil nutrients and light source needed in order to grow sunflowers").
pretty(barrons.rule2131, "EFFECT(research(Student, Information), find(Student, Nutrient)), Student = 'Students', Information = 'information', Nutrient = 'nutrients'.").
barrons.rule2131:: isa(E5S876-find, "find"), agent(E5S876-find, A1S875-student), isa(A1S875-student, "Students"), object(E5S876-find, A10S876-nutrient), isa(A10S876-nutrient, "nutrients") -> effect(E2S876-research, E5S876-find), isa(E2S876-research, "research"), agent(E2S876-research, A1S875-student), object(E2S876-research, A3S876-information), isa(A3S876-information, "information").
english(barrons.rule2132, "They[Students] researched information to find the best soil nutrients and light source needed in order to grow sunflowers").
pretty(barrons.rule2132, "EFFECT(research(Student, Information), find(Student, Source)), Student = 'Students', Information = 'information', Source = 'light source'.").
barrons.rule2132:: isa(E2S876-research, "research"), agent(E2S876-research, A1S875-student), isa(A1S875-student, "Students"), object(E2S876-research, A3S876-information), isa(A3S876-information, "information") -> effect(E2S876-research, E5S876-find), isa(E5S876-find, "find"), agent(E5S876-find, A1S875-student), object(E5S876-find, A14S876-source), isa(A14S876-source, "light source").
english(barrons.rule2133, "They[Students] researched information to find the best soil nutrients and light source needed in order to grow sunflowers").
pretty(barrons.rule2133, "EFFECT(research(Student, Information), find(Student, Source)), Student = 'Students', Information = 'information', Source = 'light source'.").
barrons.rule2133:: isa(E5S876-find, "find"), agent(E5S876-find, A1S875-student), isa(A1S875-student, "Students"), object(E5S876-find, A14S876-source), isa(A14S876-source, "light source") -> effect(E2S876-research, E5S876-find), isa(E2S876-research, "research"), agent(E2S876-research, A1S875-student), object(E2S876-research, A3S876-information), isa(A3S876-information, "information").
english(barrons.rule2134, "One hypothesis was that Rock music caused sunflowers to grow faster than no music").
pretty(barrons.rule2134, "CAUSE(Music, grow(Sunflower, Faster)), Music = 'Rock music', Sunflower = 'sunflowers', Faster = 'faster than no music'.").
barrons.rule2134:: isa(A7S877-music, "Rock music") -> cause(A7S877-music, E11S877-grow), isa(E11S877-grow, "grow"), agent(E11S877-grow, A9S877-sunflower), isa(A9S877-sunflower, "sunflowers"), arg(E11S877-grow, A12S877-faster), isa(A12S877-faster, "faster than no music").
english(barrons.rule2135, "One hypothesis was that Rock music caused sunflowers to grow faster than no music").
pretty(barrons.rule2135, "CAUSE(Music, grow(Sunflower, Faster)), Music = 'Rock music', Sunflower = 'sunflowers', Faster = 'faster than no music'.").
barrons.rule2135:: isa(E11S877-grow, "grow"), agent(E11S877-grow, A9S877-sunflower), isa(A9S877-sunflower, "sunflowers"), arg(E11S877-grow, A12S877-faster), isa(A12S877-faster, "faster than no music") -> cause(A7S877-music, E11S877-grow), isa(A7S877-music, "Rock music").
english(barrons.rule2136, "Students set up an experiment in which they[Students] exposed some sunflower seeds to rock music and some to no music").
pretty(barrons.rule2136, "isa(set up, 'set up') -> set up(Student, Experiment).").
barrons.rule2136:: isa(E2S878-set, "set up") -> agent(E2S878-set, A1S878-student), isa(A1S878-student, "Students"), object(E2S878-set, A5S878-experiment), isa(A5S878-experiment, "an experiment").
english(barrons.rule2137, "Students set up an experiment in which they[Students] exposed some sunflower seeds to rock music and some to no music").
pretty(barrons.rule2137, "isa(Student, 'Students') -> set up(Student, Experiment).").
barrons.rule2137:: isa(A1S878-student, "Students") -> isa(E2S878-set, "set up"), agent(E2S878-set, A1S878-student), object(E2S878-set, A5S878-experiment), isa(A5S878-experiment, "an experiment").
english(barrons.rule2138, "Students set up an experiment in which they[Students] exposed some sunflower seeds to rock music and some to no music").
pretty(barrons.rule2138, "isa(Experiment, 'an experiment') -> set up(Student, Experiment).").
barrons.rule2138:: isa(A5S878-experiment, "an experiment") -> isa(E2S878-set, "set up"), agent(E2S878-set, A1S878-student), isa(A1S878-student, "Students"), object(E2S878-set, A5S878-experiment).
english(barrons.rule2139, "Students set up an experiment in which they[Students] exposed some sunflower seeds to rock music and some to no music").
pretty(barrons.rule2139, "EFFECT(expose_in(Student, Seed, Which), rock_to(Student, Music, Music)), Student = 'Students', Seed = 'some sunflower seeds', Which = 'which', Music = 'music', Music = 'no music'.").
barrons.rule2139:: isa(E9S878-expose, "expose"), agent(E9S878-expose, A1S875-student), isa(A1S875-student, "Students"), object(E9S878-expose, A12S878-seed), isa(A12S878-seed, "some sunflower seeds"), in(E9S878-expose, A7S878-which), isa(A7S878-which, "which") -> effect(E9S878-expose, E14S878-rock), isa(E14S878-rock, "rock"), agent(E14S878-rock, A1S875-student), object(E14S878-rock, A15S878-music), isa(A15S878-music, "music"), to(E14S878-rock, A20S878-music), isa(A20S878-music, "no music").
english(barrons.rule2140, "Students set up an experiment in which they[Students] exposed some sunflower seeds to rock music and some to no music").
pretty(barrons.rule2140, "EFFECT(expose_in(Student, Seed, Which), rock_to(Student, Music, Music)), Student = 'Students', Seed = 'some sunflower seeds', Which = 'which', Music = 'music', Music = 'no music'.").
barrons.rule2140:: isa(E14S878-rock, "rock"), agent(E14S878-rock, A1S875-student), isa(A1S875-student, "Students"), object(E14S878-rock, A15S878-music), isa(A15S878-music, "music"), to(E14S878-rock, A20S878-music), isa(A20S878-music, "no music") -> effect(E9S878-expose, E14S878-rock), isa(E9S878-expose, "expose"), agent(E9S878-expose, A1S875-student), object(E9S878-expose, A12S878-seed), isa(A12S878-seed, "some sunflower seeds"), in(E9S878-expose, A7S878-which), isa(A7S878-which, "which").
english(barrons.rule2141, "Students set up an experiment in which they[Students] exposed some sunflower seeds to rock music and some to no music").
pretty(barrons.rule2141, "EFFECT(expose_in(Student, Seed, Which), rock_to(Student, Some, Music)), Student = 'Students', Seed = 'some sunflower seeds', Which = 'which', Some = 'some', Music = 'no music'.").
barrons.rule2141:: isa(E9S878-expose, "expose"), agent(E9S878-expose, A1S875-student), isa(A1S875-student, "Students"), object(E9S878-expose, A12S878-seed), isa(A12S878-seed, "some sunflower seeds"), in(E9S878-expose, A7S878-which), isa(A7S878-which, "which") -> effect(E9S878-expose, E14S878-rock), isa(E14S878-rock, "rock"), agent(E14S878-rock, A1S875-student), object(E14S878-rock, A17S878-some), isa(A17S878-some, "some"), to(E14S878-rock, A20S878-music), isa(A20S878-music, "no music").
english(barrons.rule2142, "Students set up an experiment in which they[Students] exposed some sunflower seeds to rock music and some to no music").
pretty(barrons.rule2142, "EFFECT(expose_in(Student, Seed, Which), rock_to(Student, Some, Music)), Student = 'Students', Seed = 'some sunflower seeds', Which = 'which', Some = 'some', Music = 'no music'.").
barrons.rule2142:: isa(E14S878-rock, "rock"), agent(E14S878-rock, A1S875-student), isa(A1S875-student, "Students"), object(E14S878-rock, A17S878-some), isa(A17S878-some, "some"), to(E14S878-rock, A20S878-music), isa(A20S878-music, "no music") -> effect(E9S878-expose, E14S878-rock), isa(E9S878-expose, "expose"), agent(E9S878-expose, A1S875-student), object(E9S878-expose, A12S878-seed), isa(A12S878-seed, "some sunflower seeds"), in(E9S878-expose, A7S878-which), isa(A7S878-which, "which").
english(barrons.rule2143, "Safety is a very important aspect in the study of science").
pretty(barrons.rule2143, "EXAMPLE(Safety, Aspect), Safety = 'Safety', Aspect = 'a very important aspect in the study of science'.").
barrons.rule2143:: isa(A1S881-safety, "Safety") -> example(A1S881-safety, A6S881-aspect), of(A9S881-study, A11S881-science), isa(A11S881-science, "science"), in(A6S881-aspect, A9S881-study), isa(A9S881-study, "the study"), isa(A6S881-aspect, "a very important aspect").
english(barrons.rule2144, "Safety is a very important aspect in the study of science").
pretty(barrons.rule2144, "EXAMPLE(Safety, Aspect), Safety = 'Safety', Aspect = 'a very important aspect in the study of science'.").
barrons.rule2144:: of(A9S881-study, A11S881-science), isa(A11S881-science, "science"), in(A6S881-aspect, A9S881-study), isa(A9S881-study, "the study"), isa(A6S881-aspect, "a very important aspect") -> example(A1S881-safety, A6S881-aspect), isa(A1S881-safety, "Safety").
english(barrons.rule2145, "Eye goggles protect eyes from chemicals and/or flying objects").
pretty(barrons.rule2145, "isa(protect, 'protect') -> protect_from(Goggles, Eye, Chemical, from(Object)).").
barrons.rule2145:: isa(E3S892-protect, "protect") -> agent(E3S892-protect, A2S892-goggles), isa(A2S892-goggles, "Eye goggles"), object(E3S892-protect, A4S892-eye), isa(A4S892-eye, "eyes"), from(E3S892-protect, A6S892-chemical), isa(A6S892-chemical, "chemicals"), from(E3S892-protect, A9S892-object), isa(A9S892-object, "flying objects").
english(barrons.rule2146, "Eye goggles protect eyes from chemicals and/or flying objects").
pretty(barrons.rule2146, "isa(Goggles, 'Eye goggles') -> protect_from(Goggles, Eye, Chemical, from(Object)).").
barrons.rule2146:: isa(A2S892-goggles, "Eye goggles") -> isa(E3S892-protect, "protect"), agent(E3S892-protect, A2S892-goggles), object(E3S892-protect, A4S892-eye), isa(A4S892-eye, "eyes"), from(E3S892-protect, A6S892-chemical), isa(A6S892-chemical, "chemicals"), from(E3S892-protect, A9S892-object), isa(A9S892-object, "flying objects").
english(barrons.rule2147, "Eye goggles protect eyes from chemicals and/or flying objects").
pretty(barrons.rule2147, "isa(Eye, 'eyes') -> protect_from(Goggles, Eye, Chemical, from(Object)).").
barrons.rule2147:: isa(A4S892-eye, "eyes") -> isa(E3S892-protect, "protect"), agent(E3S892-protect, A2S892-goggles), isa(A2S892-goggles, "Eye goggles"), object(E3S892-protect, A4S892-eye), from(E3S892-protect, A6S892-chemical), isa(A6S892-chemical, "chemicals"), from(E3S892-protect, A9S892-object), isa(A9S892-object, "flying objects").
english(barrons.rule2148, "Eye goggles protect eyes from chemicals and/or flying objects").
pretty(barrons.rule2148, "isa(Chemical, 'chemicals') -> protect_from(Goggles, Eye, Chemical, from(Object)).").
barrons.rule2148:: isa(A6S892-chemical, "chemicals") -> isa(E3S892-protect, "protect"), agent(E3S892-protect, A2S892-goggles), isa(A2S892-goggles, "Eye goggles"), object(E3S892-protect, A4S892-eye), isa(A4S892-eye, "eyes"), from(E3S892-protect, A6S892-chemical), from(E3S892-protect, A9S892-object), isa(A9S892-object, "flying objects").
english(barrons.rule2149, "Eye goggles protect eyes from chemicals and/or flying objects").
pretty(barrons.rule2149, "isa(Object, 'flying objects') -> protect_from(Goggles, Eye, Chemical, from(Object)).").
barrons.rule2149:: isa(A9S892-object, "flying objects") -> isa(E3S892-protect, "protect"), agent(E3S892-protect, A2S892-goggles), isa(A2S892-goggles, "Eye goggles"), object(E3S892-protect, A4S892-eye), isa(A4S892-eye, "eyes"), from(E3S892-protect, A6S892-chemical), isa(A6S892-chemical, "chemicals"), from(E3S892-protect, A9S892-object).
english(barrons.rule2150, "An apron protects clothing").
pretty(barrons.rule2150, "isa(protect, 'protects') -> protect(Apron, Clothing).").
barrons.rule2150:: isa(E3S893-protect, "protect") -> agent(E3S893-protect, A2S893-apron), isa(A2S893-apron, "An apron"), object(E3S893-protect, A4S893-clothing), isa(A4S893-clothing, "clothing").
english(barrons.rule2151, "An apron protects clothing").
pretty(barrons.rule2151, "isa(Apron, 'An apron') -> protect(Apron, Clothing).").
barrons.rule2151:: isa(A2S893-apron, "An apron") -> isa(E3S893-protect, "protect"), agent(E3S893-protect, A2S893-apron), object(E3S893-protect, A4S893-clothing), isa(A4S893-clothing, "clothing").
english(barrons.rule2152, "An apron protects clothing").
pretty(barrons.rule2152, "isa(Clothing, 'clothing') -> protect(Apron, Clothing).").
barrons.rule2152:: isa(A4S893-clothing, "clothing") -> isa(E3S893-protect, "protect"), agent(E3S893-protect, A2S893-apron), isa(A2S893-apron, "An apron"), object(E3S893-protect, A4S893-clothing).
english(barrons.rule2153, "Gloves protect hands/skin from harm").
pretty(barrons.rule2153, "isa(protect, 'protect') -> protect_from(Glove, Hands/skin, Harm).").
barrons.rule2153:: isa(E2S894-protect, "protect") -> agent(E2S894-protect, A1S894-glove), isa(A1S894-glove, "Gloves"), object(E2S894-protect, A3S894-hands/skin), isa(A3S894-hands/skin, "hands/skin"), from(E2S894-protect, A5S894-harm), isa(A5S894-harm, "harm").
english(barrons.rule2154, "Gloves protect hands/skin from harm").
pretty(barrons.rule2154, "isa(Glove, 'Gloves') -> protect_from(Glove, Hands/skin, Harm).").
barrons.rule2154:: isa(A1S894-glove, "Gloves") -> isa(E2S894-protect, "protect"), agent(E2S894-protect, A1S894-glove), object(E2S894-protect, A3S894-hands/skin), isa(A3S894-hands/skin, "hands/skin"), from(E2S894-protect, A5S894-harm), isa(A5S894-harm, "harm").
english(barrons.rule2155, "Gloves protect hands/skin from harm").
pretty(barrons.rule2155, "isa(Hands/skin, 'hands/skin') -> protect_from(Glove, Hands/skin, Harm).").
barrons.rule2155:: isa(A3S894-hands/skin, "hands/skin") -> isa(E2S894-protect, "protect"), agent(E2S894-protect, A1S894-glove), isa(A1S894-glove, "Gloves"), object(E2S894-protect, A3S894-hands/skin), from(E2S894-protect, A5S894-harm), isa(A5S894-harm, "harm").
english(barrons.rule2156, "Gloves protect hands/skin from harm").
pretty(barrons.rule2156, "isa(Harm, 'harm') -> protect_from(Glove, Hands/skin, Harm).").
barrons.rule2156:: isa(A5S894-harm, "harm") -> isa(E2S894-protect, "protect"), agent(E2S894-protect, A1S894-glove), isa(A1S894-glove, "Gloves"), object(E2S894-protect, A3S894-hands/skin), isa(A3S894-hands/skin, "hands/skin"), from(E2S894-protect, A5S894-harm).
english(barrons.rule2157, "The graph is a very useful method of displaying data obtained from a number of sources").
pretty(barrons.rule2157, "EXAMPLE(Graph, Method), Graph = 'The graph', Method = 'a very useful method of displaying data obtained from a number of sources'.").
barrons.rule2157:: isa(A2S899-graph, "The graph") -> example(A2S899-graph, A7S899-method), of(A7S899-method, A9S899-display), isa(A9S899-display, "displaying data obtained from a number of sources"), isa(A7S899-method, "a very useful method").
english(barrons.rule2158, "The graph is a very useful method of displaying data obtained from a number of sources").
pretty(barrons.rule2158, "EXAMPLE(Graph, Method), Graph = 'The graph', Method = 'a very useful method of displaying data obtained from a number of sources'.").
barrons.rule2158:: of(A7S899-method, A9S899-display), isa(A9S899-display, "displaying data obtained from a number of sources"), isa(A7S899-method, "a very useful method") -> example(A2S899-graph, A7S899-method), isa(A2S899-graph, "The graph").
english(barrons.rule2159, "A line graph shows the change in information between two variables").
pretty(barrons.rule2159, "isa(show, 'shows') -> show_in(Graph, Change, Information).").
barrons.rule2159:: isa(E4S901-show, "show") -> agent(E4S901-show, A3S901-graph), isa(A3S901-graph, "A line graph"), object(E4S901-show, A6S901-change), isa(A6S901-change, "the change"), in(E4S901-show, A8S901-information), isa(A8S901-information, "information between two variables").
english(barrons.rule2160, "A line graph shows the change in information between two variables").
pretty(barrons.rule2160, "isa(Graph, 'A line graph') -> show_in(Graph, Change, Information).").
barrons.rule2160:: isa(A3S901-graph, "A line graph") -> isa(E4S901-show, "show"), agent(E4S901-show, A3S901-graph), object(E4S901-show, A6S901-change), isa(A6S901-change, "the change"), in(E4S901-show, A8S901-information), isa(A8S901-information, "information between two variables").
english(barrons.rule2161, "A line graph shows the change in information between two variables").
pretty(barrons.rule2161, "isa(Change, 'the change') -> show_in(Graph, Change, Information).").
barrons.rule2161:: isa(A6S901-change, "the change") -> isa(E4S901-show, "show"), agent(E4S901-show, A3S901-graph), isa(A3S901-graph, "A line graph"), object(E4S901-show, A6S901-change), in(E4S901-show, A8S901-information), isa(A8S901-information, "information between two variables").
english(barrons.rule2162, "A line graph shows the change in information between two variables").
pretty(barrons.rule2162, "isa(Information, 'information between two variables') -> show_in(Graph, Change, Information).").
barrons.rule2162:: isa(A8S901-information, "information between two variables") -> isa(E4S901-show, "show"), agent(E4S901-show, A3S901-graph), isa(A3S901-graph, "A line graph"), object(E4S901-show, A6S901-change), isa(A6S901-change, "the change"), in(E4S901-show, A8S901-information).
english(barrons.rule2163, "The two axes of the line graph are labeled with a description of what they[The two axes of the line graph] measure and the unit of measure").
pretty(barrons.rule2163, "PURPOSE(They, measure(Axis, What)), They = 'they[The two axes of the line graph]', Axis = 'The two axes of the line graph', What = 'what'.").
barrons.rule2163:: isa(A15S903-they, "they[The two axes of the line graph]") -> purpose(A15S903-they, E16S903-measure), of(A3S903-axis, A7S903-graph), isa(A7S903-graph, "the line graph"), isa(E16S903-measure, "measure"), agent(E16S903-measure, A3S903-axis), isa(A3S903-axis, "The two axes"), object(E16S903-measure, A14S903-what), isa(A14S903-what, "what").
english(barrons.rule2164, "The two axes of the line graph are labeled with a description of what they[The two axes of the line graph] measure and the unit of measure").
pretty(barrons.rule2164, "PURPOSE(They, measure(Axis, What)), They = 'they[The two axes of the line graph]', Axis = 'The two axes of the line graph', What = 'what'.").
barrons.rule2164:: of(A3S903-axis, A7S903-graph), isa(A7S903-graph, "the line graph"), isa(E16S903-measure, "measure"), agent(E16S903-measure, A3S903-axis), isa(A3S903-axis, "The two axes"), object(E16S903-measure, A14S903-what), isa(A14S903-what, "what") -> purpose(A15S903-they, E16S903-measure), isa(A15S903-they, "they[The two axes of the line graph]").
english(barrons.rule2165, "A bar graph is another form of graph used to present information").
pretty(barrons.rule2165, "EXAMPLE(Graph, Form), Graph = 'A bar graph', Form = 'another form of graph used to present information'.").
barrons.rule2165:: isa(A3S904-graph, "A bar graph") -> example(A3S904-graph, A6S904-form), of(A6S904-form, A8S904-graph), isa(A8S904-graph, "graph"), isa(A6S904-form, "another form").
english(barrons.rule2166, "A bar graph is another form of graph used to present information").
pretty(barrons.rule2166, "EXAMPLE(Graph, Form), Graph = 'A bar graph', Form = 'another form of graph used to present information'.").
barrons.rule2166:: of(A6S904-form, A8S904-graph), isa(A8S904-graph, "graph"), isa(A6S904-form, "another form") -> example(A3S904-graph, A6S904-form), isa(A3S904-graph, "A bar graph").
english(barrons.rule2167, "A graph such as this might be used to show the number of students with different eye color for your entire class").
pretty(barrons.rule2167, "PURPOSE(Graph, show(Graph, Number)), Graph = 'A graph such as this', Number = 'the number of students with different eye color for your entire class'.").
barrons.rule2167:: such_as(A2S906-graph, A5S906-this), isa(A5S906-this, "this"), isa(A2S906-graph, "A graph") -> purpose(A2S906-graph, E10S906-show), of(A12S906-number, A14S906-student), isa(A14S906-student, "students"), for(A18S906-color, A22S906-class), isa(A22S906-class, "your entire class"), with(A12S906-number, A18S906-color), isa(A18S906-color, "different eye color"), isa(E10S906-show, "show"), agent(E10S906-show, A2S906-graph), object(E10S906-show, A12S906-number), isa(A12S906-number, "the number").
english(barrons.rule2168, "A graph such as this might be used to show the number of students with different eye color for your entire class").
pretty(barrons.rule2168, "PURPOSE(Graph, show(Graph, Number)), Graph = 'A graph such as this', Number = 'the number of students with different eye color for your entire class'.").
barrons.rule2168:: such_as(A2S906-graph, A5S906-this), isa(A5S906-this, "this"), of(A12S906-number, A14S906-student), isa(A14S906-student, "students"), for(A18S906-color, A22S906-class), isa(A22S906-class, "your entire class"), with(A12S906-number, A18S906-color), isa(A18S906-color, "different eye color"), isa(E10S906-show, "show"), agent(E10S906-show, A2S906-graph), isa(A2S906-graph, "A graph"), object(E10S906-show, A12S906-number), isa(A12S906-number, "the number") -> purpose(A2S906-graph, E10S906-show).
english(barrons.rule2169, "A graph such as this might be used to show the number of students with different eye color for your entire class").
pretty(barrons.rule2169, "EXAMPLE(This, Graph), This = 'this', Graph = 'A graph such as this'.").
barrons.rule2169:: isa(A5S906-this, "this") -> example(A5S906-this, A2S906-graph), such_as(A2S906-graph, A5S906-this), isa(A2S906-graph, "A graph").
english(barrons.rule2170, "A graph such as this might be used to show the number of students with different eye color for your entire class").
pretty(barrons.rule2170, "EXAMPLE(This, Graph), This = 'this', Graph = 'A graph such as this'.").
barrons.rule2170:: such_as(A2S906-graph, A5S906-this), isa(A5S906-this, "this"), isa(A2S906-graph, "A graph") -> example(A5S906-this, A2S906-graph).
english(barrons.rule2171, "A pie graph is often used to show percentages of variables that equal 100").
pretty(barrons.rule2171, "PURPOSE(Graph, show(Graph, Percentage)), Graph = 'A pie graph', Percentage = 'percentages of variables that equal 100'.").
barrons.rule2171:: isa(A3S907-graph, "A pie graph") -> purpose(A3S907-graph, E8S907-show), of(A9S907-percentage, A11S907-variable), isa(A11S907-variable, "variables"), isa(E8S907-show, "show"), agent(E8S907-show, A3S907-graph), object(E8S907-show, A9S907-percentage), isa(A9S907-percentage, "percentages").
english(barrons.rule2172, "A pie graph is often used to show percentages of variables that equal 100").
pretty(barrons.rule2172, "PURPOSE(Graph, show(Graph, Percentage)), Graph = 'A pie graph', Percentage = 'percentages of variables that equal 100'.").
barrons.rule2172:: of(A9S907-percentage, A11S907-variable), isa(A11S907-variable, "variables"), isa(E8S907-show, "show"), agent(E8S907-show, A3S907-graph), isa(A3S907-graph, "A pie graph"), object(E8S907-show, A9S907-percentage), isa(A9S907-percentage, "percentages") -> purpose(A3S907-graph, E8S907-show).
english(barrons.rule2173, "For example a pie graph can be used to show the percentage of students in each grade in a high school").
pretty(barrons.rule2173, "PURPOSE(Graph, show(Graph, Percentage)), Graph = 'a pie graph', Percentage = 'the percentage of students in each grade in a high school'.").
barrons.rule2173:: isa(A6S908-graph, "a pie graph") -> purpose(A6S908-graph, E11S908-show), of(A13S908-percentage, A15S908-student), isa(A15S908-student, "students"), in(A18S908-grade, A22S908-school), isa(A22S908-school, "a high school"), in(A13S908-percentage, A18S908-grade), isa(A18S908-grade, "each grade"), isa(E11S908-show, "show"), agent(E11S908-show, A6S908-graph), object(E11S908-show, A13S908-percentage), isa(A13S908-percentage, "the percentage").
english(barrons.rule2174, "For example a pie graph can be used to show the percentage of students in each grade in a high school").
pretty(barrons.rule2174, "PURPOSE(Graph, show(Graph, Percentage)), Graph = 'a pie graph', Percentage = 'the percentage of students in each grade in a high school'.").
barrons.rule2174:: of(A13S908-percentage, A15S908-student), isa(A15S908-student, "students"), in(A18S908-grade, A22S908-school), isa(A22S908-school, "a high school"), in(A13S908-percentage, A18S908-grade), isa(A18S908-grade, "each grade"), isa(E11S908-show, "show"), agent(E11S908-show, A6S908-graph), isa(A6S908-graph, "a pie graph"), object(E11S908-show, A13S908-percentage), isa(A13S908-percentage, "the percentage") -> purpose(A6S908-graph, E11S908-show).
english(barrons.rule2175, "In addition to the information that we can obtain from graphs data tables also provide us[we] with a great deal of information").
pretty(barrons.rule2175, "isa(provide, 'provide') -> provide_to(Table, We, Information, with(Deal)).").
barrons.rule2175:: isa(E16S909-provide, "provide") -> agent(E16S909-provide, A14S909-table), isa(A14S909-table, "data tables"), object(E16S909-provide, A7S909-we), isa(A7S909-we, "we"), to(E16S909-provide, A5S909-information), isa(A5S909-information, "the information"), with(E16S909-provide, A21S909-deal), isa(A21S909-deal, "a great deal of information").
english(barrons.rule2176, "In addition to the information that we can obtain from graphs data tables also provide us[we] with a great deal of information").
pretty(barrons.rule2176, "isa(Table, 'data tables') -> provide_to(Table, We, Information, with(Deal)).").
barrons.rule2176:: isa(A14S909-table, "data tables") -> isa(E16S909-provide, "provide"), agent(E16S909-provide, A14S909-table), object(E16S909-provide, A7S909-we), isa(A7S909-we, "we"), to(E16S909-provide, A5S909-information), isa(A5S909-information, "the information"), with(E16S909-provide, A21S909-deal), isa(A21S909-deal, "a great deal of information").
english(barrons.rule2177, "In addition to the information that we can obtain from graphs data tables also provide us[we] with a great deal of information").
pretty(barrons.rule2177, "isa(We, 'we') -> provide_to(Table, We, Information, with(Deal)).").
barrons.rule2177:: isa(A7S909-we, "we") -> isa(E16S909-provide, "provide"), agent(E16S909-provide, A14S909-table), isa(A14S909-table, "data tables"), object(E16S909-provide, A7S909-we), to(E16S909-provide, A5S909-information), isa(A5S909-information, "the information"), with(E16S909-provide, A21S909-deal), isa(A21S909-deal, "a great deal of information").
english(barrons.rule2178, "In addition to the information that we can obtain from graphs data tables also provide us[we] with a great deal of information").
pretty(barrons.rule2178, "isa(Information, 'the information') -> provide_to(Table, We, Information, with(Deal)).").
barrons.rule2178:: isa(A5S909-information, "the information") -> isa(E16S909-provide, "provide"), agent(E16S909-provide, A14S909-table), isa(A14S909-table, "data tables"), object(E16S909-provide, A7S909-we), isa(A7S909-we, "we"), to(E16S909-provide, A5S909-information), with(E16S909-provide, A21S909-deal), isa(A21S909-deal, "a great deal of information").
english(barrons.rule2179, "In addition to the information that we can obtain from graphs data tables also provide us[we] with a great deal of information").
pretty(barrons.rule2179, "isa(Deal, 'a great deal of information') -> provide_to(Table, We, Information, with(Deal)).").
barrons.rule2179:: isa(A21S909-deal, "a great deal of information") -> isa(E16S909-provide, "provide"), agent(E16S909-provide, A14S909-table), isa(A14S909-table, "data tables"), object(E16S909-provide, A7S909-we), isa(A7S909-we, "we"), to(E16S909-provide, A5S909-information), isa(A5S909-information, "the information"), with(E16S909-provide, A21S909-deal).
english(barrons.rule2180, "Examples of nonliving things are tire swing ropes drink and air").
pretty(barrons.rule2180, "EXAMPLE(Swing, Thing), Swing = 'tire swing', Thing = 'nonliving things'.").
barrons.rule2180:: isa(A7S911-swing, "tire swing") -> example(A7S911-swing, A4S911-thing), isa(A4S911-thing, "nonliving things").
english(barrons.rule2181, "Examples of nonliving things are tire swing ropes drink and air").
pretty(barrons.rule2181, "EXAMPLE(Swing, Thing), Swing = 'tire swing', Thing = 'nonliving things'.").
barrons.rule2181:: isa(A4S911-thing, "nonliving things") -> example(A7S911-swing, A4S911-thing), isa(A7S911-swing, "tire swing").
english(barrons.rule2182, "Examples of nonliving things are tire swing ropes drink and air").
pretty(barrons.rule2182, "EXAMPLE(Rope, Thing), Rope = 'ropes', Thing = 'nonliving things'.").
barrons.rule2182:: isa(A9S911-rope, "ropes") -> example(A9S911-rope, A4S911-thing), isa(A4S911-thing, "nonliving things").
english(barrons.rule2183, "Examples of nonliving things are tire swing ropes drink and air").
pretty(barrons.rule2183, "EXAMPLE(Rope, Thing), Rope = 'ropes', Thing = 'nonliving things'.").
barrons.rule2183:: isa(A4S911-thing, "nonliving things") -> example(A9S911-rope, A4S911-thing), isa(A9S911-rope, "ropes").
english(barrons.rule2184, "Examples of nonliving things are tire swing ropes drink and air").
pretty(barrons.rule2184, "EXAMPLE(Drink, Thing), Drink = 'drink', Thing = 'nonliving things'.").
barrons.rule2184:: isa(A11S911-drink, "drink") -> example(A11S911-drink, A4S911-thing), isa(A4S911-thing, "nonliving things").
english(barrons.rule2185, "Examples of nonliving things are tire swing ropes drink and air").
pretty(barrons.rule2185, "EXAMPLE(Drink, Thing), Drink = 'drink', Thing = 'nonliving things'.").
barrons.rule2185:: isa(A4S911-thing, "nonliving things") -> example(A11S911-drink, A4S911-thing), isa(A11S911-drink, "drink").
english(barrons.rule2186, "Examples of nonliving things are tire swing ropes drink and air").
pretty(barrons.rule2186, "EXAMPLE(Air, Thing), Air = 'air', Thing = 'nonliving things'.").
barrons.rule2186:: isa(A14S911-air, "air") -> example(A14S911-air, A4S911-thing), isa(A4S911-thing, "nonliving things").
english(barrons.rule2187, "Examples of nonliving things are tire swing ropes drink and air").
pretty(barrons.rule2187, "EXAMPLE(Air, Thing), Air = 'air', Thing = 'nonliving things'.").
barrons.rule2187:: isa(A4S911-thing, "nonliving things") -> example(A14S911-air, A4S911-thing), isa(A14S911-air, "air").
english(barrons.rule2188, "Examples of living things are children and plants").
pretty(barrons.rule2188, "EXAMPLE(Child, Thing), Child = 'children', Thing = 'living things'.").
barrons.rule2188:: isa(A6S912-child, "children") -> example(A6S912-child, A4S912-thing), isa(A4S912-thing, "living things").
english(barrons.rule2189, "Examples of living things are children and plants").
pretty(barrons.rule2189, "EXAMPLE(Child, Thing), Child = 'children', Thing = 'living things'.").
barrons.rule2189:: isa(A4S912-thing, "living things") -> example(A6S912-child, A4S912-thing), isa(A6S912-child, "children").
english(barrons.rule2190, "Examples of living things are children and plants").
pretty(barrons.rule2190, "EXAMPLE(Example, Child), Example = 'Examples of living things', Child = 'children'.").
barrons.rule2190:: of(A1S912-example, A4S912-thing), isa(A4S912-thing, "living things"), isa(A1S912-example, "Examples") -> example(A1S912-example, A6S912-child), isa(A6S912-child, "children").
english(barrons.rule2191, "Examples of living things are children and plants").
pretty(barrons.rule2191, "EXAMPLE(Example, Child), Example = 'Examples of living things', Child = 'children'.").
barrons.rule2191:: isa(A6S912-child, "children") -> example(A1S912-example, A6S912-child), of(A1S912-example, A4S912-thing), isa(A4S912-thing, "living things"), isa(A1S912-example, "Examples").
english(barrons.rule2192, "Examples of living things are children and plants").
pretty(barrons.rule2192, "EXAMPLE(Plant, Thing), Plant = 'plants', Thing = 'living things'.").
barrons.rule2192:: isa(A8S912-plant, "plants") -> example(A8S912-plant, A4S912-thing), isa(A4S912-thing, "living things").
english(barrons.rule2193, "Examples of living things are children and plants").
pretty(barrons.rule2193, "EXAMPLE(Plant, Thing), Plant = 'plants', Thing = 'living things'.").
barrons.rule2193:: isa(A4S912-thing, "living things") -> example(A8S912-plant, A4S912-thing), isa(A8S912-plant, "plants").
english(barrons.rule2194, "Water helps living things survive by moving materials").
pretty(barrons.rule2194, "PURPOSE(Water, survive_by(Thing, Material)), Water = 'Water', Thing = 'living things', Material = 'moving materials'.").
barrons.rule2194:: isa(A1S913-water, "Water") -> purpose(A1S913-water, E5S913-survive), isa(E5S913-survive, "survive"), agent(E5S913-survive, A4S913-thing), isa(A4S913-thing, "living things"), by(E5S913-survive, A8S913-material), isa(A8S913-material, "moving materials").
english(barrons.rule2195, "Water helps living things survive by moving materials").
pretty(barrons.rule2195, "PURPOSE(Water, survive_by(Thing, Material)), Water = 'Water', Thing = 'living things', Material = 'moving materials'.").
barrons.rule2195:: isa(E5S913-survive, "survive"), agent(E5S913-survive, A4S913-thing), isa(A4S913-thing, "living things"), by(E5S913-survive, A8S913-material), isa(A8S913-material, "moving materials") -> purpose(A1S913-water, E5S913-survive), isa(A1S913-water, "Water").
english(barrons.rule2196, "Air and water are necessary for both plants and animals to survive").
pretty(barrons.rule2196, "REQUIREMENT(Air, survive(Plant)), Air = 'Air', Plant = 'both plants'.").
barrons.rule2196:: isa(A1S914-Air, "Air") -> requirement(A1S914-Air, E12S914-survive), isa(E12S914-survive, "survive"), agent(E12S914-survive, A8S914-plant), isa(A8S914-plant, "both plants").
english(barrons.rule2197, "Air and water are necessary for both plants and animals to survive").
pretty(barrons.rule2197, "REQUIREMENT(Air, survive(Plant)), Air = 'Air', Plant = 'both plants'.").
barrons.rule2197:: isa(E12S914-survive, "survive"), agent(E12S914-survive, A8S914-plant), isa(A8S914-plant, "both plants") -> requirement(A1S914-Air, E12S914-survive), isa(A1S914-Air, "Air").
english(barrons.rule2198, "Air and water are necessary for both plants and animals to survive").
pretty(barrons.rule2198, "REQUIREMENT(Air, survive(Animal)), Air = 'Air', Animal = 'animals'.").
barrons.rule2198:: isa(A1S914-Air, "Air") -> requirement(A1S914-Air, E12S914-survive), isa(E12S914-survive, "survive"), agent(E12S914-survive, A10S914-animal), isa(A10S914-animal, "animals").
english(barrons.rule2199, "Air and water are necessary for both plants and animals to survive").
pretty(barrons.rule2199, "REQUIREMENT(Air, survive(Animal)), Air = 'Air', Animal = 'animals'.").
barrons.rule2199:: isa(E12S914-survive, "survive"), agent(E12S914-survive, A10S914-animal), isa(A10S914-animal, "animals") -> requirement(A1S914-Air, E12S914-survive), isa(A1S914-Air, "Air").
english(barrons.rule2200, "Air and water are necessary for both plants and animals to survive").
pretty(barrons.rule2200, "REQUIREMENT(Water, survive(Plant)), Water = 'water', Plant = 'both plants'.").
barrons.rule2200:: isa(A3S914-water, "water") -> requirement(A3S914-water, E12S914-survive), isa(E12S914-survive, "survive"), agent(E12S914-survive, A8S914-plant), isa(A8S914-plant, "both plants").
english(barrons.rule2201, "Air and water are necessary for both plants and animals to survive").
pretty(barrons.rule2201, "REQUIREMENT(Water, survive(Plant)), Water = 'water', Plant = 'both plants'.").
barrons.rule2201:: isa(E12S914-survive, "survive"), agent(E12S914-survive, A8S914-plant), isa(A8S914-plant, "both plants") -> requirement(A3S914-water, E12S914-survive), isa(A3S914-water, "water").
english(barrons.rule2202, "Air and water are necessary for both plants and animals to survive").
pretty(barrons.rule2202, "REQUIREMENT(Water, survive(Animal)), Water = 'water', Animal = 'animals'.").
barrons.rule2202:: isa(A3S914-water, "water") -> requirement(A3S914-water, E12S914-survive), isa(E12S914-survive, "survive"), agent(E12S914-survive, A10S914-animal), isa(A10S914-animal, "animals").
english(barrons.rule2203, "Air and water are necessary for both plants and animals to survive").
pretty(barrons.rule2203, "REQUIREMENT(Water, survive(Animal)), Water = 'water', Animal = 'animals'.").
barrons.rule2203:: isa(E12S914-survive, "survive"), agent(E12S914-survive, A10S914-animal), isa(A10S914-animal, "animals") -> requirement(A3S914-water, E12S914-survive), isa(A3S914-water, "water").
english(barrons.rule2204, "Air and water are two nonliving things that all living things need to survive").
pretty(barrons.rule2204, "EXAMPLE(Air, Thing), Air = 'Air', Thing = 'two nonliving things that all living things need to survive'.").
barrons.rule2204:: isa(A1S916-Air, "Air") -> example(A1S916-Air, A7S916-thing), isa(A7S916-thing, "two nonliving things that all living things need to survive").
english(barrons.rule2205, "Air and water are two nonliving things that all living things need to survive").
pretty(barrons.rule2205, "EXAMPLE(Air, Thing), Air = 'Air', Thing = 'two nonliving things that all living things need to survive'.").
barrons.rule2205:: isa(A7S916-thing, "two nonliving things that all living things need to survive") -> example(A1S916-Air, A7S916-thing), isa(A1S916-Air, "Air").
english(barrons.rule2206, "Air and water are two nonliving things that all living things need to survive").
pretty(barrons.rule2206, "EXAMPLE(Water, Thing), Water = 'water', Thing = 'two nonliving things that all living things need to survive'.").
barrons.rule2206:: isa(A3S916-water, "water") -> example(A3S916-water, A7S916-thing), isa(A7S916-thing, "two nonliving things that all living things need to survive").
english(barrons.rule2207, "Air and water are two nonliving things that all living things need to survive").
pretty(barrons.rule2207, "EXAMPLE(Water, Thing), Water = 'water', Thing = 'two nonliving things that all living things need to survive'.").
barrons.rule2207:: isa(A7S916-thing, "two nonliving things that all living things need to survive") -> example(A3S916-water, A7S916-thing), isa(A3S916-water, "water").
english(barrons.rule2208, "The changes frogs and butterflies go through are called metamorphosis").
pretty(barrons.rule2208, "EXAMPLE(Change, Metamorphosis), Change = 'The changes', Metamorphosis = 'metamorphosis'.").
barrons.rule2208:: isa(A2S918-change, "The changes") -> example(A2S918-change, A10S918-metamorphosis), isa(A10S918-metamorphosis, "metamorphosis").
english(barrons.rule2209, "The changes frogs and butterflies go through are called metamorphosis").
pretty(barrons.rule2209, "EXAMPLE(Change, Metamorphosis), Change = 'The changes', Metamorphosis = 'metamorphosis'.").
barrons.rule2209:: isa(A10S918-metamorphosis, "metamorphosis") -> example(A2S918-change, A10S918-metamorphosis), isa(A2S918-change, "The changes").
english(barrons.rule2210, "Living things need to take in nutrients so that they[their nutrients] can grow and create energy").
pretty(barrons.rule2210, "EFFECT(take in(Thing, Nutrient), grow(Nutrient)), Thing = 'Living things', Nutrient = 'nutrients', Nutrient = 'their[Plants] nutrients'.").
barrons.rule2210:: isa(E5S919-take, "take in"), agent(E5S919-take, A2S919-thing), isa(A2S919-thing, "Living things"), object(E5S919-take, A7S919-nutrient), isa(A7S919-nutrient, "nutrients") -> effect(E5S919-take, E12S919-grow), isa(E12S919-grow, "grow"), agent(E12S919-grow, A4S52-nutrient), isa(A4S52-nutrient, "their[Plants] nutrients").
english(barrons.rule2211, "Living things need to take in nutrients so that they[their nutrients] can grow and create energy").
pretty(barrons.rule2211, "EFFECT(take in(Thing, Nutrient), grow(Nutrient)), Thing = 'Living things', Nutrient = 'nutrients', Nutrient = 'their[Plants] nutrients'.").
barrons.rule2211:: isa(E12S919-grow, "grow"), agent(E12S919-grow, A4S52-nutrient), isa(A4S52-nutrient, "their[Plants] nutrients") -> effect(E5S919-take, E12S919-grow), isa(E5S919-take, "take in"), agent(E5S919-take, A2S919-thing), isa(A2S919-thing, "Living things"), object(E5S919-take, A7S919-nutrient), isa(A7S919-nutrient, "nutrients").
english(barrons.rule2212, "Living things need to take in nutrients so that they[their nutrients] can grow and create energy").
pretty(barrons.rule2212, "EFFECT(take in(Thing, Nutrient), create(Nutrient, Energy)), Thing = 'Living things', Nutrient = 'nutrients', Nutrient = 'their[Plants] nutrients', Energy = 'energy'.").
barrons.rule2212:: isa(E5S919-take, "take in"), agent(E5S919-take, A2S919-thing), isa(A2S919-thing, "Living things"), object(E5S919-take, A7S919-nutrient), isa(A7S919-nutrient, "nutrients") -> effect(E5S919-take, E14S919-create), isa(E14S919-create, "create"), agent(E14S919-create, A4S52-nutrient), isa(A4S52-nutrient, "their[Plants] nutrients"), object(E14S919-create, A15S919-energy), isa(A15S919-energy, "energy").
english(barrons.rule2213, "Living things need to take in nutrients so that they[their nutrients] can grow and create energy").
pretty(barrons.rule2213, "EFFECT(take in(Thing, Nutrient), create(Nutrient, Energy)), Thing = 'Living things', Nutrient = 'nutrients', Nutrient = 'their[Plants] nutrients', Energy = 'energy'.").
barrons.rule2213:: isa(E14S919-create, "create"), agent(E14S919-create, A4S52-nutrient), isa(A4S52-nutrient, "their[Plants] nutrients"), object(E14S919-create, A15S919-energy), isa(A15S919-energy, "energy") -> effect(E5S919-take, E14S919-create), isa(E5S919-take, "take in"), agent(E5S919-take, A2S919-thing), isa(A2S919-thing, "Living things"), object(E5S919-take, A7S919-nutrient), isa(A7S919-nutrient, "nutrients").
english(barrons.rule2214, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2214, "EFFECT(need(Plant, Air), grow(Plant)), Plant = 'Plants', Air = 'air'.").
barrons.rule2214:: isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), isa(A1S928-plant, "Plants"), object(E2S928-need, A3S928-air), isa(A3S928-air, "air") -> effect(E2S928-need, E12S928-grow), isa(E12S928-grow, "grow"), agent(E12S928-grow, A1S928-plant).
english(barrons.rule2215, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2215, "EFFECT(need(Plant, Air), grow(Plant)), Plant = 'Plants', Air = 'air'.").
barrons.rule2215:: isa(E12S928-grow, "grow"), agent(E12S928-grow, A1S928-plant), isa(A1S928-plant, "Plants") -> effect(E2S928-need, E12S928-grow), isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), object(E2S928-need, A3S928-air), isa(A3S928-air, "air").
english(barrons.rule2216, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2216, "EFFECT(need(Plant, Water), grow(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule2216:: isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), isa(A1S928-plant, "Plants"), object(E2S928-need, A5S928-water), isa(A5S928-water, "water") -> effect(E2S928-need, E12S928-grow), isa(E12S928-grow, "grow"), agent(E12S928-grow, A1S928-plant).
english(barrons.rule2217, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2217, "EFFECT(need(Plant, Water), grow(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule2217:: isa(E12S928-grow, "grow"), agent(E12S928-grow, A1S928-plant), isa(A1S928-plant, "Plants") -> effect(E2S928-need, E12S928-grow), isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), object(E2S928-need, A5S928-water), isa(A5S928-water, "water").
english(barrons.rule2218, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2218, "EFFECT(need(Plant, Nutrient), grow(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule2218:: isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), isa(A1S928-plant, "Plants"), object(E2S928-need, A7S928-nutrient), isa(A7S928-nutrient, "nutrients") -> effect(E2S928-need, E12S928-grow), isa(E12S928-grow, "grow"), agent(E12S928-grow, A1S928-plant).
english(barrons.rule2219, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2219, "EFFECT(need(Plant, Nutrient), grow(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule2219:: isa(E12S928-grow, "grow"), agent(E12S928-grow, A1S928-plant), isa(A1S928-plant, "Plants") -> effect(E2S928-need, E12S928-grow), isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), object(E2S928-need, A7S928-nutrient), isa(A7S928-nutrient, "nutrients").
english(barrons.rule2220, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2220, "EFFECT(need(Plant, Light), grow(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule2220:: isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), isa(A1S928-plant, "Plants"), object(E2S928-need, A10S928-light), isa(A10S928-light, "light") -> effect(E2S928-need, E12S928-grow), isa(E12S928-grow, "grow"), agent(E12S928-grow, A1S928-plant).
english(barrons.rule2221, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2221, "EFFECT(need(Plant, Light), grow(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule2221:: isa(E12S928-grow, "grow"), agent(E12S928-grow, A1S928-plant), isa(A1S928-plant, "Plants") -> effect(E2S928-need, E12S928-grow), isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), object(E2S928-need, A10S928-light), isa(A10S928-light, "light").
english(barrons.rule2222, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2222, "EFFECT(need(Plant, Air), survive(Plant)), Plant = 'Plants', Air = 'air'.").
barrons.rule2222:: isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), isa(A1S928-plant, "Plants"), object(E2S928-need, A3S928-air), isa(A3S928-air, "air") -> effect(E2S928-need, E14S928-survive), isa(E14S928-survive, "survive"), agent(E14S928-survive, A1S928-plant).
english(barrons.rule2223, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2223, "EFFECT(need(Plant, Air), survive(Plant)), Plant = 'Plants', Air = 'air'.").
barrons.rule2223:: isa(E14S928-survive, "survive"), agent(E14S928-survive, A1S928-plant), isa(A1S928-plant, "Plants") -> effect(E2S928-need, E14S928-survive), isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), object(E2S928-need, A3S928-air), isa(A3S928-air, "air").
english(barrons.rule2224, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2224, "EFFECT(need(Plant, Water), survive(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule2224:: isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), isa(A1S928-plant, "Plants"), object(E2S928-need, A5S928-water), isa(A5S928-water, "water") -> effect(E2S928-need, E14S928-survive), isa(E14S928-survive, "survive"), agent(E14S928-survive, A1S928-plant).
english(barrons.rule2225, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2225, "EFFECT(need(Plant, Water), survive(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule2225:: isa(E14S928-survive, "survive"), agent(E14S928-survive, A1S928-plant), isa(A1S928-plant, "Plants") -> effect(E2S928-need, E14S928-survive), isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), object(E2S928-need, A5S928-water), isa(A5S928-water, "water").
english(barrons.rule2226, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2226, "EFFECT(need(Plant, Nutrient), survive(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule2226:: isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), isa(A1S928-plant, "Plants"), object(E2S928-need, A7S928-nutrient), isa(A7S928-nutrient, "nutrients") -> effect(E2S928-need, E14S928-survive), isa(E14S928-survive, "survive"), agent(E14S928-survive, A1S928-plant).
english(barrons.rule2227, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2227, "EFFECT(need(Plant, Nutrient), survive(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule2227:: isa(E14S928-survive, "survive"), agent(E14S928-survive, A1S928-plant), isa(A1S928-plant, "Plants") -> effect(E2S928-need, E14S928-survive), isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), object(E2S928-need, A7S928-nutrient), isa(A7S928-nutrient, "nutrients").
english(barrons.rule2228, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2228, "EFFECT(need(Plant, Light), survive(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule2228:: isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), isa(A1S928-plant, "Plants"), object(E2S928-need, A10S928-light), isa(A10S928-light, "light") -> effect(E2S928-need, E14S928-survive), isa(E14S928-survive, "survive"), agent(E14S928-survive, A1S928-plant).
english(barrons.rule2229, "Plants need air water nutrients and light to grow and survive").
pretty(barrons.rule2229, "EFFECT(need(Plant, Light), survive(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule2229:: isa(E14S928-survive, "survive"), agent(E14S928-survive, A1S928-plant), isa(A1S928-plant, "Plants") -> effect(E2S928-need, E14S928-survive), isa(E2S928-need, "need"), agent(E2S928-need, A1S928-plant), object(E2S928-need, A10S928-light), isa(A10S928-light, "light").
english(barrons.rule2230, "Animals need air food and water to live and survive").
pretty(barrons.rule2230, "EFFECT(need(Animal, Air), live(Animal)), Animal = 'Animals', Air = 'air'.").
barrons.rule2230:: isa(E2S930-need, "need"), agent(E2S930-need, A1S930-animal), isa(A1S930-animal, "Animals"), object(E2S930-need, A3S930-air), isa(A3S930-air, "air") -> effect(E2S930-need, E10S930-live), isa(E10S930-live, "live"), agent(E10S930-live, A1S930-animal).
english(barrons.rule2231, "Animals need air food and water to live and survive").
pretty(barrons.rule2231, "EFFECT(need(Animal, Air), live(Animal)), Animal = 'Animals', Air = 'air'.").
barrons.rule2231:: isa(E10S930-live, "live"), agent(E10S930-live, A1S930-animal), isa(A1S930-animal, "Animals") -> effect(E2S930-need, E10S930-live), isa(E2S930-need, "need"), agent(E2S930-need, A1S930-animal), object(E2S930-need, A3S930-air), isa(A3S930-air, "air").
english(barrons.rule2232, "Animals need air food and water to live and survive").
pretty(barrons.rule2232, "EFFECT(need(Animal, Food), live(Animal)), Animal = 'Animals', Food = 'food'.").
barrons.rule2232:: isa(E2S930-need, "need"), agent(E2S930-need, A1S930-animal), isa(A1S930-animal, "Animals"), object(E2S930-need, A5S930-food), isa(A5S930-food, "food") -> effect(E2S930-need, E10S930-live), isa(E10S930-live, "live"), agent(E10S930-live, A1S930-animal).
english(barrons.rule2233, "Animals need air food and water to live and survive").
pretty(barrons.rule2233, "EFFECT(need(Animal, Food), live(Animal)), Animal = 'Animals', Food = 'food'.").
barrons.rule2233:: isa(E10S930-live, "live"), agent(E10S930-live, A1S930-animal), isa(A1S930-animal, "Animals") -> effect(E2S930-need, E10S930-live), isa(E2S930-need, "need"), agent(E2S930-need, A1S930-animal), object(E2S930-need, A5S930-food), isa(A5S930-food, "food").
english(barrons.rule2234, "Animals need air food and water to live and survive").
pretty(barrons.rule2234, "EFFECT(need(Animal, Water), live(Animal)), Animal = 'Animals', Water = 'water'.").
barrons.rule2234:: isa(E2S930-need, "need"), agent(E2S930-need, A1S930-animal), isa(A1S930-animal, "Animals"), object(E2S930-need, A8S930-water), isa(A8S930-water, "water") -> effect(E2S930-need, E10S930-live), isa(E10S930-live, "live"), agent(E10S930-live, A1S930-animal).
english(barrons.rule2235, "Animals need air food and water to live and survive").
pretty(barrons.rule2235, "EFFECT(need(Animal, Water), live(Animal)), Animal = 'Animals', Water = 'water'.").
barrons.rule2235:: isa(E10S930-live, "live"), agent(E10S930-live, A1S930-animal), isa(A1S930-animal, "Animals") -> effect(E2S930-need, E10S930-live), isa(E2S930-need, "need"), agent(E2S930-need, A1S930-animal), object(E2S930-need, A8S930-water), isa(A8S930-water, "water").
english(barrons.rule2236, "Animals need air food and water to live and survive").
pretty(barrons.rule2236, "EFFECT(need(Animal, Air), survive(Animal)), Animal = 'Animals', Air = 'air'.").
barrons.rule2236:: isa(E2S930-need, "need"), agent(E2S930-need, A1S930-animal), isa(A1S930-animal, "Animals"), object(E2S930-need, A3S930-air), isa(A3S930-air, "air") -> effect(E2S930-need, E12S930-survive), isa(E12S930-survive, "survive"), agent(E12S930-survive, A1S930-animal).
english(barrons.rule2237, "Animals need air food and water to live and survive").
pretty(barrons.rule2237, "EFFECT(need(Animal, Air), survive(Animal)), Animal = 'Animals', Air = 'air'.").
barrons.rule2237:: isa(E12S930-survive, "survive"), agent(E12S930-survive, A1S930-animal), isa(A1S930-animal, "Animals") -> effect(E2S930-need, E12S930-survive), isa(E2S930-need, "need"), agent(E2S930-need, A1S930-animal), object(E2S930-need, A3S930-air), isa(A3S930-air, "air").
english(barrons.rule2238, "Animals need air food and water to live and survive").
pretty(barrons.rule2238, "EFFECT(need(Animal, Food), survive(Animal)), Animal = 'Animals', Food = 'food'.").
barrons.rule2238:: isa(E2S930-need, "need"), agent(E2S930-need, A1S930-animal), isa(A1S930-animal, "Animals"), object(E2S930-need, A5S930-food), isa(A5S930-food, "food") -> effect(E2S930-need, E12S930-survive), isa(E12S930-survive, "survive"), agent(E12S930-survive, A1S930-animal).
english(barrons.rule2239, "Animals need air food and water to live and survive").
pretty(barrons.rule2239, "EFFECT(need(Animal, Food), survive(Animal)), Animal = 'Animals', Food = 'food'.").
barrons.rule2239:: isa(E12S930-survive, "survive"), agent(E12S930-survive, A1S930-animal), isa(A1S930-animal, "Animals") -> effect(E2S930-need, E12S930-survive), isa(E2S930-need, "need"), agent(E2S930-need, A1S930-animal), object(E2S930-need, A5S930-food), isa(A5S930-food, "food").
english(barrons.rule2240, "Animals need air food and water to live and survive").
pretty(barrons.rule2240, "EFFECT(need(Animal, Water), survive(Animal)), Animal = 'Animals', Water = 'water'.").
barrons.rule2240:: isa(E2S930-need, "need"), agent(E2S930-need, A1S930-animal), isa(A1S930-animal, "Animals"), object(E2S930-need, A8S930-water), isa(A8S930-water, "water") -> effect(E2S930-need, E12S930-survive), isa(E12S930-survive, "survive"), agent(E12S930-survive, A1S930-animal).
english(barrons.rule2241, "Animals need air food and water to live and survive").
pretty(barrons.rule2241, "EFFECT(need(Animal, Water), survive(Animal)), Animal = 'Animals', Water = 'water'.").
barrons.rule2241:: isa(E12S930-survive, "survive"), agent(E12S930-survive, A1S930-animal), isa(A1S930-animal, "Animals") -> effect(E2S930-need, E12S930-survive), isa(E2S930-need, "need"), agent(E2S930-need, A1S930-animal), object(E2S930-need, A8S930-water), isa(A8S930-water, "water").
english(barrons.rule2242, "A seed growing into a plant is a form of reproduction").
pretty(barrons.rule2242, "EXAMPLE(Seed, Form), Seed = 'A seed growing into a plant', Form = 'a form of reproduction'.").
barrons.rule2242:: isa(A2S932-seed, "A seed growing into a plant") -> example(A2S932-seed, A9S932-form), of(A9S932-form, A11S932-reproduction), isa(A11S932-reproduction, "reproduction"), isa(A9S932-form, "a form").
english(barrons.rule2243, "A seed growing into a plant is a form of reproduction").
pretty(barrons.rule2243, "EXAMPLE(Seed, Form), Seed = 'A seed growing into a plant', Form = 'a form of reproduction'.").
barrons.rule2243:: of(A9S932-form, A11S932-reproduction), isa(A11S932-reproduction, "reproduction"), isa(A9S932-form, "a form") -> example(A2S932-seed, A9S932-form), isa(A2S932-seed, "A seed growing into a plant").
english(barrons.rule2244, "All living things need air and water to survive").
pretty(barrons.rule2244, "EFFECT(need(Thing, Air), survive(Thing)), Thing = 'All living things', Air = 'air'.").
barrons.rule2244:: isa(E4S933-need, "need"), agent(E4S933-need, A3S933-thing), isa(A3S933-thing, "All living things"), object(E4S933-need, A5S933-air), isa(A5S933-air, "air") -> effect(E4S933-need, E9S933-survive), isa(E9S933-survive, "survive"), agent(E9S933-survive, A3S933-thing).
english(barrons.rule2245, "All living things need air and water to survive").
pretty(barrons.rule2245, "EFFECT(need(Thing, Air), survive(Thing)), Thing = 'All living things', Air = 'air'.").
barrons.rule2245:: isa(E9S933-survive, "survive"), agent(E9S933-survive, A3S933-thing), isa(A3S933-thing, "All living things") -> effect(E4S933-need, E9S933-survive), isa(E4S933-need, "need"), agent(E4S933-need, A3S933-thing), object(E4S933-need, A5S933-air), isa(A5S933-air, "air").
english(barrons.rule2246, "All living things need air and water to survive").
pretty(barrons.rule2246, "EFFECT(need(Thing, Water), survive(Thing)), Thing = 'All living things', Water = 'water'.").
barrons.rule2246:: isa(E4S933-need, "need"), agent(E4S933-need, A3S933-thing), isa(A3S933-thing, "All living things"), object(E4S933-need, A7S933-water), isa(A7S933-water, "water") -> effect(E4S933-need, E9S933-survive), isa(E9S933-survive, "survive"), agent(E9S933-survive, A3S933-thing).
english(barrons.rule2247, "All living things need air and water to survive").
pretty(barrons.rule2247, "EFFECT(need(Thing, Water), survive(Thing)), Thing = 'All living things', Water = 'water'.").
barrons.rule2247:: isa(E9S933-survive, "survive"), agent(E9S933-survive, A3S933-thing), isa(A3S933-thing, "All living things") -> effect(E4S933-need, E9S933-survive), isa(E4S933-need, "need"), agent(E4S933-need, A3S933-thing), object(E4S933-need, A7S933-water), isa(A7S933-water, "water").
english(barrons.rule2248, "Plants need light to survive").
pretty(barrons.rule2248, "EFFECT(need(Plant, Light), survive(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule2248:: isa(E2S935-need, "need"), agent(E2S935-need, A1S935-plant), isa(A1S935-plant, "Plants"), object(E2S935-need, A3S935-light), isa(A3S935-light, "light") -> effect(E2S935-need, E5S935-survive), isa(E5S935-survive, "survive"), agent(E5S935-survive, A1S935-plant).
english(barrons.rule2249, "Plants need light to survive").
pretty(barrons.rule2249, "EFFECT(need(Plant, Light), survive(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule2249:: isa(E5S935-survive, "survive"), agent(E5S935-survive, A1S935-plant), isa(A1S935-plant, "Plants") -> effect(E2S935-need, E5S935-survive), isa(E2S935-need, "need"), agent(E2S935-need, A1S935-plant), object(E2S935-need, A3S935-light), isa(A3S935-light, "light").
english(barrons.rule2250, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2250, "EFFECT(require(Plant, Air), live(Plant)), Plant = 'Plants', Air = 'air in order'.").
barrons.rule2250:: in(A3S938-air, A12S938-order), isa(A12S938-order, "order"), isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), isa(A1S938-plant, "Plants"), object(E2S938-require, A3S938-air), isa(A3S938-air, "air") -> effect(E2S938-require, E14S938-live), isa(E14S938-live, "live"), agent(E14S938-live, A1S938-plant).
english(barrons.rule2251, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2251, "EFFECT(require(Plant, Air), live(Plant)), Plant = 'Plants', Air = 'air in order'.").
barrons.rule2251:: isa(E14S938-live, "live"), agent(E14S938-live, A1S938-plant), isa(A1S938-plant, "Plants") -> effect(E2S938-require, E14S938-live), in(A3S938-air, A12S938-order), isa(A12S938-order, "order"), isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), object(E2S938-require, A3S938-air), isa(A3S938-air, "air").
english(barrons.rule2252, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2252, "EFFECT(require(Plant, Water), live(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule2252:: isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), isa(A1S938-plant, "Plants"), object(E2S938-require, A5S938-water), isa(A5S938-water, "water") -> effect(E2S938-require, E14S938-live), isa(E14S938-live, "live"), agent(E14S938-live, A1S938-plant).
english(barrons.rule2253, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2253, "EFFECT(require(Plant, Water), live(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule2253:: isa(E14S938-live, "live"), agent(E14S938-live, A1S938-plant), isa(A1S938-plant, "Plants") -> effect(E2S938-require, E14S938-live), isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), object(E2S938-require, A5S938-water), isa(A5S938-water, "water").
english(barrons.rule2254, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2254, "EFFECT(require(Plant, Light), live(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule2254:: isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), isa(A1S938-plant, "Plants"), object(E2S938-require, A7S938-light), isa(A7S938-light, "light") -> effect(E2S938-require, E14S938-live), isa(E14S938-live, "live"), agent(E14S938-live, A1S938-plant).
english(barrons.rule2255, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2255, "EFFECT(require(Plant, Light), live(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule2255:: isa(E14S938-live, "live"), agent(E14S938-live, A1S938-plant), isa(A1S938-plant, "Plants") -> effect(E2S938-require, E14S938-live), isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), object(E2S938-require, A7S938-light), isa(A7S938-light, "light").
english(barrons.rule2256, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2256, "EFFECT(require(Plant, Nutrient), live(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule2256:: isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), isa(A1S938-plant, "Plants"), object(E2S938-require, A10S938-nutrient), isa(A10S938-nutrient, "nutrients") -> effect(E2S938-require, E14S938-live), isa(E14S938-live, "live"), agent(E14S938-live, A1S938-plant).
english(barrons.rule2257, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2257, "EFFECT(require(Plant, Nutrient), live(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule2257:: isa(E14S938-live, "live"), agent(E14S938-live, A1S938-plant), isa(A1S938-plant, "Plants") -> effect(E2S938-require, E14S938-live), isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), object(E2S938-require, A10S938-nutrient), isa(A10S938-nutrient, "nutrients").
english(barrons.rule2258, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2258, "EFFECT(require(Plant, Air), survive(Plant)), Plant = 'Plants', Air = 'air in order'.").
barrons.rule2258:: in(A3S938-air, A12S938-order), isa(A12S938-order, "order"), isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), isa(A1S938-plant, "Plants"), object(E2S938-require, A3S938-air), isa(A3S938-air, "air") -> effect(E2S938-require, E16S938-survive), isa(E16S938-survive, "survive"), agent(E16S938-survive, A1S938-plant).
english(barrons.rule2259, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2259, "EFFECT(require(Plant, Air), survive(Plant)), Plant = 'Plants', Air = 'air in order'.").
barrons.rule2259:: isa(E16S938-survive, "survive"), agent(E16S938-survive, A1S938-plant), isa(A1S938-plant, "Plants") -> effect(E2S938-require, E16S938-survive), in(A3S938-air, A12S938-order), isa(A12S938-order, "order"), isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), object(E2S938-require, A3S938-air), isa(A3S938-air, "air").
english(barrons.rule2260, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2260, "EFFECT(require(Plant, Water), survive(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule2260:: isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), isa(A1S938-plant, "Plants"), object(E2S938-require, A5S938-water), isa(A5S938-water, "water") -> effect(E2S938-require, E16S938-survive), isa(E16S938-survive, "survive"), agent(E16S938-survive, A1S938-plant).
english(barrons.rule2261, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2261, "EFFECT(require(Plant, Water), survive(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule2261:: isa(E16S938-survive, "survive"), agent(E16S938-survive, A1S938-plant), isa(A1S938-plant, "Plants") -> effect(E2S938-require, E16S938-survive), isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), object(E2S938-require, A5S938-water), isa(A5S938-water, "water").
english(barrons.rule2262, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2262, "EFFECT(require(Plant, Light), survive(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule2262:: isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), isa(A1S938-plant, "Plants"), object(E2S938-require, A7S938-light), isa(A7S938-light, "light") -> effect(E2S938-require, E16S938-survive), isa(E16S938-survive, "survive"), agent(E16S938-survive, A1S938-plant).
english(barrons.rule2263, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2263, "EFFECT(require(Plant, Light), survive(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule2263:: isa(E16S938-survive, "survive"), agent(E16S938-survive, A1S938-plant), isa(A1S938-plant, "Plants") -> effect(E2S938-require, E16S938-survive), isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), object(E2S938-require, A7S938-light), isa(A7S938-light, "light").
english(barrons.rule2264, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2264, "EFFECT(require(Plant, Nutrient), survive(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule2264:: isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), isa(A1S938-plant, "Plants"), object(E2S938-require, A10S938-nutrient), isa(A10S938-nutrient, "nutrients") -> effect(E2S938-require, E16S938-survive), isa(E16S938-survive, "survive"), agent(E16S938-survive, A1S938-plant).
english(barrons.rule2265, "Plants require air water light and nutrients in order to live and survive").
pretty(barrons.rule2265, "EFFECT(require(Plant, Nutrient), survive(Plant)), Plant = 'Plants', Nutrient = 'nutrients'.").
barrons.rule2265:: isa(E16S938-survive, "survive"), agent(E16S938-survive, A1S938-plant), isa(A1S938-plant, "Plants") -> effect(E2S938-require, E16S938-survive), isa(E2S938-require, "require"), agent(E2S938-require, A1S938-plant), object(E2S938-require, A10S938-nutrient), isa(A10S938-nutrient, "nutrients").
english(barrons.rule2266, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2266, "isa(Plant, 'plants') -> include(Example, Lettuce).").
barrons.rule2266:: isa(A3S940-plant, "plants") -> of(A1S940-example, A3S940-plant), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A8S940-lettuce), isa(A8S940-lettuce, "lettuce").
english(barrons.rule2267, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2267, "isa(Product, 'plant products') -> include(Example, Lettuce).").
barrons.rule2267:: isa(A6S940-product, "plant products") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A8S940-lettuce), isa(A8S940-lettuce, "lettuce").
english(barrons.rule2268, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2268, "isa(include, 'include') -> include(Example, Lettuce).").
barrons.rule2268:: isa(E7S940-include, "include") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A8S940-lettuce), isa(A8S940-lettuce, "lettuce").
english(barrons.rule2269, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2269, "isa(Example, 'Examples of plants or plant products') -> include(Example, Lettuce).").
barrons.rule2269:: isa(A1S940-example, "Examples") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), object(E7S940-include, A8S940-lettuce), isa(A8S940-lettuce, "lettuce").
english(barrons.rule2270, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2270, "isa(Lettuce, 'lettuce') -> include(Example, Lettuce).").
barrons.rule2270:: isa(A8S940-lettuce, "lettuce") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A8S940-lettuce).
english(barrons.rule2271, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2271, "isa(Plant, 'plants') -> include(Example, Orange).").
barrons.rule2271:: isa(A3S940-plant, "plants") -> of(A1S940-example, A3S940-plant), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A10S940-orange), isa(A10S940-orange, "oranges").
english(barrons.rule2272, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2272, "isa(Product, 'plant products') -> include(Example, Orange).").
barrons.rule2272:: isa(A6S940-product, "plant products") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A10S940-orange), isa(A10S940-orange, "oranges").
english(barrons.rule2273, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2273, "isa(include, 'include') -> include(Example, Orange).").
barrons.rule2273:: isa(E7S940-include, "include") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A10S940-orange), isa(A10S940-orange, "oranges").
english(barrons.rule2274, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2274, "isa(Example, 'Examples of plants or plant products') -> include(Example, Orange).").
barrons.rule2274:: isa(A1S940-example, "Examples") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), object(E7S940-include, A10S940-orange), isa(A10S940-orange, "oranges").
english(barrons.rule2275, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2275, "isa(Orange, 'oranges') -> include(Example, Orange).").
barrons.rule2275:: isa(A10S940-orange, "oranges") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A10S940-orange).
english(barrons.rule2276, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2276, "isa(Plant, 'plants') -> include(Example, Celery).").
barrons.rule2276:: isa(A3S940-plant, "plants") -> of(A1S940-example, A3S940-plant), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A12S940-celery), isa(A12S940-celery, "celery").
english(barrons.rule2277, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2277, "isa(Product, 'plant products') -> include(Example, Celery).").
barrons.rule2277:: isa(A6S940-product, "plant products") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A12S940-celery), isa(A12S940-celery, "celery").
english(barrons.rule2278, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2278, "isa(include, 'include') -> include(Example, Celery).").
barrons.rule2278:: isa(E7S940-include, "include") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A12S940-celery), isa(A12S940-celery, "celery").
english(barrons.rule2279, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2279, "isa(Example, 'Examples of plants or plant products') -> include(Example, Celery).").
barrons.rule2279:: isa(A1S940-example, "Examples") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), object(E7S940-include, A12S940-celery), isa(A12S940-celery, "celery").
english(barrons.rule2280, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2280, "isa(Celery, 'celery') -> include(Example, Celery).").
barrons.rule2280:: isa(A12S940-celery, "celery") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A12S940-celery).
english(barrons.rule2281, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2281, "isa(Plant, 'plants') -> include(Example, Broccoli).").
barrons.rule2281:: isa(A3S940-plant, "plants") -> of(A1S940-example, A3S940-plant), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A14S940-broccoli), isa(A14S940-broccoli, "broccoli").
english(barrons.rule2282, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2282, "isa(Product, 'plant products') -> include(Example, Broccoli).").
barrons.rule2282:: isa(A6S940-product, "plant products") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A14S940-broccoli), isa(A14S940-broccoli, "broccoli").
english(barrons.rule2283, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2283, "isa(include, 'include') -> include(Example, Broccoli).").
barrons.rule2283:: isa(E7S940-include, "include") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A14S940-broccoli), isa(A14S940-broccoli, "broccoli").
english(barrons.rule2284, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2284, "isa(Example, 'Examples of plants or plant products') -> include(Example, Broccoli).").
barrons.rule2284:: isa(A1S940-example, "Examples") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), object(E7S940-include, A14S940-broccoli), isa(A14S940-broccoli, "broccoli").
english(barrons.rule2285, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2285, "isa(Broccoli, 'broccoli') -> include(Example, Broccoli).").
barrons.rule2285:: isa(A14S940-broccoli, "broccoli") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A14S940-broccoli).
english(barrons.rule2286, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2286, "isa(Plant, 'plants') -> include(Example, Carrot).").
barrons.rule2286:: isa(A3S940-plant, "plants") -> of(A1S940-example, A3S940-plant), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A16S940-carrot), isa(A16S940-carrot, "carrots").
english(barrons.rule2287, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2287, "isa(Product, 'plant products') -> include(Example, Carrot).").
barrons.rule2287:: isa(A6S940-product, "plant products") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A16S940-carrot), isa(A16S940-carrot, "carrots").
english(barrons.rule2288, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2288, "isa(include, 'include') -> include(Example, Carrot).").
barrons.rule2288:: isa(E7S940-include, "include") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A16S940-carrot), isa(A16S940-carrot, "carrots").
english(barrons.rule2289, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2289, "isa(Example, 'Examples of plants or plant products') -> include(Example, Carrot).").
barrons.rule2289:: isa(A1S940-example, "Examples") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), object(E7S940-include, A16S940-carrot), isa(A16S940-carrot, "carrots").
english(barrons.rule2290, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2290, "isa(Carrot, 'carrots') -> include(Example, Carrot).").
barrons.rule2290:: isa(A16S940-carrot, "carrots") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A16S940-carrot).
english(barrons.rule2291, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2291, "isa(Plant, 'plants') -> include(Example, Apple).").
barrons.rule2291:: isa(A3S940-plant, "plants") -> of(A1S940-example, A3S940-plant), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A18S940-apple), isa(A18S940-apple, "apples").
english(barrons.rule2292, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2292, "isa(Product, 'plant products') -> include(Example, Apple).").
barrons.rule2292:: isa(A6S940-product, "plant products") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A18S940-apple), isa(A18S940-apple, "apples").
english(barrons.rule2293, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2293, "isa(include, 'include') -> include(Example, Apple).").
barrons.rule2293:: isa(E7S940-include, "include") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A18S940-apple), isa(A18S940-apple, "apples").
english(barrons.rule2294, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2294, "isa(Example, 'Examples of plants or plant products') -> include(Example, Apple).").
barrons.rule2294:: isa(A1S940-example, "Examples") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), object(E7S940-include, A18S940-apple), isa(A18S940-apple, "apples").
english(barrons.rule2295, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2295, "isa(Apple, 'apples') -> include(Example, Apple).").
barrons.rule2295:: isa(A18S940-apple, "apples") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A18S940-apple).
english(barrons.rule2296, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2296, "isa(Plant, 'plants') -> include(Example, Potato).").
barrons.rule2296:: isa(A3S940-plant, "plants") -> of(A1S940-example, A3S940-plant), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A21S940-potato), isa(A21S940-potato, "potatoes").
english(barrons.rule2297, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2297, "isa(Product, 'plant products') -> include(Example, Potato).").
barrons.rule2297:: isa(A6S940-product, "plant products") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A21S940-potato), isa(A21S940-potato, "potatoes").
english(barrons.rule2298, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2298, "isa(include, 'include') -> include(Example, Potato).").
barrons.rule2298:: isa(E7S940-include, "include") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A21S940-potato), isa(A21S940-potato, "potatoes").
english(barrons.rule2299, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2299, "isa(Example, 'Examples of plants or plant products') -> include(Example, Potato).").
barrons.rule2299:: isa(A1S940-example, "Examples") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), object(E7S940-include, A21S940-potato), isa(A21S940-potato, "potatoes").
english(barrons.rule2300, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2300, "isa(Potato, 'potatoes') -> include(Example, Potato).").
barrons.rule2300:: isa(A21S940-potato, "potatoes") -> of(A1S940-example, A3S940-plant), isa(A3S940-plant, "plants"), of(A1S940-example, A6S940-product), isa(A6S940-product, "plant products"), isa(E7S940-include, "include"), agent(E7S940-include, A1S940-example), isa(A1S940-example, "Examples"), object(E7S940-include, A21S940-potato).
english(barrons.rule2301, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2301, "EXAMPLE(Lettuce, Plant), Lettuce = 'lettuce', Plant = 'plants'.").
barrons.rule2301:: isa(A8S940-lettuce, "lettuce") -> example(A8S940-lettuce, A3S940-plant), isa(A3S940-plant, "plants").
english(barrons.rule2302, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2302, "EXAMPLE(Lettuce, Plant), Lettuce = 'lettuce', Plant = 'plants'.").
barrons.rule2302:: isa(A3S940-plant, "plants") -> example(A8S940-lettuce, A3S940-plant), isa(A8S940-lettuce, "lettuce").
english(barrons.rule2303, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2303, "EXAMPLE(Lettuce, Product), Lettuce = 'lettuce', Product = 'plant products'.").
barrons.rule2303:: isa(A8S940-lettuce, "lettuce") -> example(A8S940-lettuce, A6S940-product), isa(A6S940-product, "plant products").
english(barrons.rule2304, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2304, "EXAMPLE(Lettuce, Product), Lettuce = 'lettuce', Product = 'plant products'.").
barrons.rule2304:: isa(A6S940-product, "plant products") -> example(A8S940-lettuce, A6S940-product), isa(A8S940-lettuce, "lettuce").
english(barrons.rule2305, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2305, "EXAMPLE(Orange, Plant), Orange = 'oranges', Plant = 'plants'.").
barrons.rule2305:: isa(A10S940-orange, "oranges") -> example(A10S940-orange, A3S940-plant), isa(A3S940-plant, "plants").
english(barrons.rule2306, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2306, "EXAMPLE(Orange, Plant), Orange = 'oranges', Plant = 'plants'.").
barrons.rule2306:: isa(A3S940-plant, "plants") -> example(A10S940-orange, A3S940-plant), isa(A10S940-orange, "oranges").
english(barrons.rule2307, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2307, "EXAMPLE(Orange, Product), Orange = 'oranges', Product = 'plant products'.").
barrons.rule2307:: isa(A10S940-orange, "oranges") -> example(A10S940-orange, A6S940-product), isa(A6S940-product, "plant products").
english(barrons.rule2308, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2308, "EXAMPLE(Orange, Product), Orange = 'oranges', Product = 'plant products'.").
barrons.rule2308:: isa(A6S940-product, "plant products") -> example(A10S940-orange, A6S940-product), isa(A10S940-orange, "oranges").
english(barrons.rule2309, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2309, "EXAMPLE(Celery, Plant), Celery = 'celery', Plant = 'plants'.").
barrons.rule2309:: isa(A12S940-celery, "celery") -> example(A12S940-celery, A3S940-plant), isa(A3S940-plant, "plants").
english(barrons.rule2310, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2310, "EXAMPLE(Celery, Plant), Celery = 'celery', Plant = 'plants'.").
barrons.rule2310:: isa(A3S940-plant, "plants") -> example(A12S940-celery, A3S940-plant), isa(A12S940-celery, "celery").
english(barrons.rule2311, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2311, "EXAMPLE(Celery, Product), Celery = 'celery', Product = 'plant products'.").
barrons.rule2311:: isa(A12S940-celery, "celery") -> example(A12S940-celery, A6S940-product), isa(A6S940-product, "plant products").
english(barrons.rule2312, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2312, "EXAMPLE(Celery, Product), Celery = 'celery', Product = 'plant products'.").
barrons.rule2312:: isa(A6S940-product, "plant products") -> example(A12S940-celery, A6S940-product), isa(A12S940-celery, "celery").
english(barrons.rule2313, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2313, "EXAMPLE(Broccoli, Plant), Broccoli = 'broccoli', Plant = 'plants'.").
barrons.rule2313:: isa(A14S940-broccoli, "broccoli") -> example(A14S940-broccoli, A3S940-plant), isa(A3S940-plant, "plants").
english(barrons.rule2314, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2314, "EXAMPLE(Broccoli, Plant), Broccoli = 'broccoli', Plant = 'plants'.").
barrons.rule2314:: isa(A3S940-plant, "plants") -> example(A14S940-broccoli, A3S940-plant), isa(A14S940-broccoli, "broccoli").
english(barrons.rule2315, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2315, "EXAMPLE(Broccoli, Product), Broccoli = 'broccoli', Product = 'plant products'.").
barrons.rule2315:: isa(A14S940-broccoli, "broccoli") -> example(A14S940-broccoli, A6S940-product), isa(A6S940-product, "plant products").
english(barrons.rule2316, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2316, "EXAMPLE(Broccoli, Product), Broccoli = 'broccoli', Product = 'plant products'.").
barrons.rule2316:: isa(A6S940-product, "plant products") -> example(A14S940-broccoli, A6S940-product), isa(A14S940-broccoli, "broccoli").
english(barrons.rule2317, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2317, "EXAMPLE(Carrot, Plant), Carrot = 'carrots', Plant = 'plants'.").
barrons.rule2317:: isa(A16S940-carrot, "carrots") -> example(A16S940-carrot, A3S940-plant), isa(A3S940-plant, "plants").
english(barrons.rule2318, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2318, "EXAMPLE(Carrot, Plant), Carrot = 'carrots', Plant = 'plants'.").
barrons.rule2318:: isa(A3S940-plant, "plants") -> example(A16S940-carrot, A3S940-plant), isa(A16S940-carrot, "carrots").
english(barrons.rule2319, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2319, "EXAMPLE(Carrot, Product), Carrot = 'carrots', Product = 'plant products'.").
barrons.rule2319:: isa(A16S940-carrot, "carrots") -> example(A16S940-carrot, A6S940-product), isa(A6S940-product, "plant products").
english(barrons.rule2320, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2320, "EXAMPLE(Carrot, Product), Carrot = 'carrots', Product = 'plant products'.").
barrons.rule2320:: isa(A6S940-product, "plant products") -> example(A16S940-carrot, A6S940-product), isa(A16S940-carrot, "carrots").
english(barrons.rule2321, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2321, "EXAMPLE(Apple, Plant), Apple = 'apples', Plant = 'plants'.").
barrons.rule2321:: isa(A18S940-apple, "apples") -> example(A18S940-apple, A3S940-plant), isa(A3S940-plant, "plants").
english(barrons.rule2322, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2322, "EXAMPLE(Apple, Plant), Apple = 'apples', Plant = 'plants'.").
barrons.rule2322:: isa(A3S940-plant, "plants") -> example(A18S940-apple, A3S940-plant), isa(A18S940-apple, "apples").
english(barrons.rule2323, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2323, "EXAMPLE(Apple, Product), Apple = 'apples', Product = 'plant products'.").
barrons.rule2323:: isa(A18S940-apple, "apples") -> example(A18S940-apple, A6S940-product), isa(A6S940-product, "plant products").
english(barrons.rule2324, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2324, "EXAMPLE(Apple, Product), Apple = 'apples', Product = 'plant products'.").
barrons.rule2324:: isa(A6S940-product, "plant products") -> example(A18S940-apple, A6S940-product), isa(A18S940-apple, "apples").
english(barrons.rule2325, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2325, "EXAMPLE(Potato, Plant), Potato = 'potatoes', Plant = 'plants'.").
barrons.rule2325:: isa(A21S940-potato, "potatoes") -> example(A21S940-potato, A3S940-plant), isa(A3S940-plant, "plants").
english(barrons.rule2326, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2326, "EXAMPLE(Potato, Plant), Potato = 'potatoes', Plant = 'plants'.").
barrons.rule2326:: isa(A3S940-plant, "plants") -> example(A21S940-potato, A3S940-plant), isa(A21S940-potato, "potatoes").
english(barrons.rule2327, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2327, "EXAMPLE(Potato, Product), Potato = 'potatoes', Product = 'plant products'.").
barrons.rule2327:: isa(A21S940-potato, "potatoes") -> example(A21S940-potato, A6S940-product), isa(A6S940-product, "plant products").
english(barrons.rule2328, "Examples of plants or plant products include lettuce oranges celery broccoli carrots apples and potatoes").
pretty(barrons.rule2328, "EXAMPLE(Potato, Product), Potato = 'potatoes', Product = 'plant products'.").
barrons.rule2328:: isa(A6S940-product, "plant products") -> example(A21S940-potato, A6S940-product), isa(A21S940-potato, "potatoes").
english(barrons.rule2329, "Animals can use plants for food").
pretty(barrons.rule2329, "isa(use, 'use') -> use_for(Animal, Plant, Food).").
barrons.rule2329:: isa(E3S941-use, "use") -> agent(E3S941-use, A1S941-animal), isa(A1S941-animal, "Animals"), object(E3S941-use, A4S941-plant), isa(A4S941-plant, "plants"), for(E3S941-use, A6S941-food), isa(A6S941-food, "food").
english(barrons.rule2330, "Animals can use plants for food").
pretty(barrons.rule2330, "isa(Animal, 'Animals') -> use_for(Animal, Plant, Food).").
barrons.rule2330:: isa(A1S941-animal, "Animals") -> isa(E3S941-use, "use"), agent(E3S941-use, A1S941-animal), object(E3S941-use, A4S941-plant), isa(A4S941-plant, "plants"), for(E3S941-use, A6S941-food), isa(A6S941-food, "food").
english(barrons.rule2331, "Animals can use plants for food").
pretty(barrons.rule2331, "isa(Plant, 'plants') -> use_for(Animal, Plant, Food).").
barrons.rule2331:: isa(A4S941-plant, "plants") -> isa(E3S941-use, "use"), agent(E3S941-use, A1S941-animal), isa(A1S941-animal, "Animals"), object(E3S941-use, A4S941-plant), for(E3S941-use, A6S941-food), isa(A6S941-food, "food").
english(barrons.rule2332, "Animals can use plants for food").
pretty(barrons.rule2332, "isa(Food, 'food') -> use_for(Animal, Plant, Food).").
barrons.rule2332:: isa(A6S941-food, "food") -> isa(E3S941-use, "use"), agent(E3S941-use, A1S941-animal), isa(A1S941-animal, "Animals"), object(E3S941-use, A4S941-plant), isa(A4S941-plant, "plants"), for(E3S941-use, A6S941-food).
english(barrons.rule2333, "Examples of an animal using plants for food are a cow eating grass and a horse eating hay").
pretty(barrons.rule2333, "EXAMPLE(Grass, use(Animal)), Grass = 'a cow eating grass', Animal = 'an animal'.").
barrons.rule2333:: isa(A13S942-grass, "a cow eating grass") -> example(A13S942-grass, E5S942-use), isa(E5S942-use, "use"), agent(E5S942-use, A4S942-animal), isa(A4S942-animal, "an animal").
english(barrons.rule2334, "Examples of an animal using plants for food are a cow eating grass and a horse eating hay").
pretty(barrons.rule2334, "EXAMPLE(Grass, use(Animal)), Grass = 'a cow eating grass', Animal = 'an animal'.").
barrons.rule2334:: isa(E5S942-use, "use"), agent(E5S942-use, A4S942-animal), isa(A4S942-animal, "an animal") -> example(A13S942-grass, E5S942-use), isa(A13S942-grass, "a cow eating grass").
english(barrons.rule2335, "Examples of an animal using plants for food are a cow eating grass and a horse eating hay").
pretty(barrons.rule2335, "EXAMPLE(Grass, Animal), Grass = 'a cow eating grass', Animal = 'an animal'.").
barrons.rule2335:: isa(A13S942-grass, "a cow eating grass") -> example(A13S942-grass, A4S942-animal), isa(A4S942-animal, "an animal").
english(barrons.rule2336, "Examples of an animal using plants for food are a cow eating grass and a horse eating hay").
pretty(barrons.rule2336, "EXAMPLE(Grass, Animal), Grass = 'a cow eating grass', Animal = 'an animal'.").
barrons.rule2336:: isa(A4S942-animal, "an animal") -> example(A13S942-grass, A4S942-animal), isa(A13S942-grass, "a cow eating grass").
english(barrons.rule2337, "Examples of an animal using plants for food are a cow eating grass and a horse eating hay").
pretty(barrons.rule2337, "EXAMPLE(Example, Grass), Example = 'Examples of an animal using plants for food', Grass = 'a cow eating grass'.").
barrons.rule2337:: of(A1S942-example, A4S942-animal), isa(A4S942-animal, "an animal"), isa(A1S942-example, "Examples") -> example(A1S942-example, A13S942-grass), isa(A13S942-grass, "a cow eating grass").
english(barrons.rule2338, "Examples of an animal using plants for food are a cow eating grass and a horse eating hay").
pretty(barrons.rule2338, "EXAMPLE(Example, Grass), Example = 'Examples of an animal using plants for food', Grass = 'a cow eating grass'.").
barrons.rule2338:: isa(A13S942-grass, "a cow eating grass") -> example(A1S942-example, A13S942-grass), of(A1S942-example, A4S942-animal), isa(A4S942-animal, "an animal"), isa(A1S942-example, "Examples").
english(barrons.rule2339, "Examples of an animal using plants for food are a cow eating grass and a horse eating hay").
pretty(barrons.rule2339, "EXAMPLE(Hay, use(Animal)), Hay = 'a horse eating hay', Animal = 'an animal'.").
barrons.rule2339:: isa(A18S942-hay, "a horse eating hay") -> example(A18S942-hay, E5S942-use), isa(E5S942-use, "use"), agent(E5S942-use, A4S942-animal), isa(A4S942-animal, "an animal").
english(barrons.rule2340, "Examples of an animal using plants for food are a cow eating grass and a horse eating hay").
pretty(barrons.rule2340, "EXAMPLE(Hay, use(Animal)), Hay = 'a horse eating hay', Animal = 'an animal'.").
barrons.rule2340:: isa(E5S942-use, "use"), agent(E5S942-use, A4S942-animal), isa(A4S942-animal, "an animal") -> example(A18S942-hay, E5S942-use), isa(A18S942-hay, "a horse eating hay").
english(barrons.rule2341, "Examples of an animal using plants for food are a cow eating grass and a horse eating hay").
pretty(barrons.rule2341, "EXAMPLE(Hay, Animal), Hay = 'a horse eating hay', Animal = 'an animal'.").
barrons.rule2341:: isa(A18S942-hay, "a horse eating hay") -> example(A18S942-hay, A4S942-animal), isa(A4S942-animal, "an animal").
english(barrons.rule2342, "Examples of an animal using plants for food are a cow eating grass and a horse eating hay").
pretty(barrons.rule2342, "EXAMPLE(Hay, Animal), Hay = 'a horse eating hay', Animal = 'an animal'.").
barrons.rule2342:: isa(A4S942-animal, "an animal") -> example(A18S942-hay, A4S942-animal), isa(A18S942-hay, "a horse eating hay").
english(barrons.rule2343, "Animals can use plants for shelter").
pretty(barrons.rule2343, "isa(use, 'use') -> use_for(Animal, Plant, Shelter).").
barrons.rule2343:: isa(E3S943-use, "use") -> agent(E3S943-use, A1S943-animal), isa(A1S943-animal, "Animals"), object(E3S943-use, A4S943-plant), isa(A4S943-plant, "plants"), for(E3S943-use, A6S943-shelter), isa(A6S943-shelter, "shelter").
english(barrons.rule2344, "Animals can use plants for shelter").
pretty(barrons.rule2344, "isa(Animal, 'Animals') -> use_for(Animal, Plant, Shelter).").
barrons.rule2344:: isa(A1S943-animal, "Animals") -> isa(E3S943-use, "use"), agent(E3S943-use, A1S943-animal), object(E3S943-use, A4S943-plant), isa(A4S943-plant, "plants"), for(E3S943-use, A6S943-shelter), isa(A6S943-shelter, "shelter").
english(barrons.rule2345, "Animals can use plants for shelter").
pretty(barrons.rule2345, "isa(Plant, 'plants') -> use_for(Animal, Plant, Shelter).").
barrons.rule2345:: isa(A4S943-plant, "plants") -> isa(E3S943-use, "use"), agent(E3S943-use, A1S943-animal), isa(A1S943-animal, "Animals"), object(E3S943-use, A4S943-plant), for(E3S943-use, A6S943-shelter), isa(A6S943-shelter, "shelter").
english(barrons.rule2346, "Animals can use plants for shelter").
pretty(barrons.rule2346, "isa(Shelter, 'shelter') -> use_for(Animal, Plant, Shelter).").
barrons.rule2346:: isa(A6S943-shelter, "shelter") -> isa(E3S943-use, "use"), agent(E3S943-use, A1S943-animal), isa(A1S943-animal, "Animals"), object(E3S943-use, A4S943-plant), isa(A4S943-plant, "plants"), for(E3S943-use, A6S943-shelter).
english(barrons.rule2347, "Examples of animals using plants for shelter are birds building a nest on tree branches and squirrels living inside a tree trunk").
pretty(barrons.rule2347, "EXAMPLE(Bird, use_for(Animal, Plant, Shelter)), Bird = 'birds', Animal = 'animals', Plant = 'plants', Shelter = 'shelter'.").
barrons.rule2347:: isa(A9S944-bird, "birds") -> example(A9S944-bird, E4S944-use), isa(E4S944-use, "use"), agent(E4S944-use, A3S944-animal), isa(A3S944-animal, "animals"), object(E4S944-use, A5S944-plant), isa(A5S944-plant, "plants"), for(E4S944-use, A7S944-shelter), isa(A7S944-shelter, "shelter").
english(barrons.rule2348, "Examples of animals using plants for shelter are birds building a nest on tree branches and squirrels living inside a tree trunk").
pretty(barrons.rule2348, "EXAMPLE(Bird, use_for(Animal, Plant, Shelter)), Bird = 'birds', Animal = 'animals', Plant = 'plants', Shelter = 'shelter'.").
barrons.rule2348:: isa(E4S944-use, "use"), agent(E4S944-use, A3S944-animal), isa(A3S944-animal, "animals"), object(E4S944-use, A5S944-plant), isa(A5S944-plant, "plants"), for(E4S944-use, A7S944-shelter), isa(A7S944-shelter, "shelter") -> example(A9S944-bird, E4S944-use), isa(A9S944-bird, "birds").
english(barrons.rule2349, "Examples of animals using plants for shelter are birds building a nest on tree branches and squirrels living inside a tree trunk").
pretty(barrons.rule2349, "EXAMPLE(Bird, Animal), Bird = 'birds', Animal = 'animals'.").
barrons.rule2349:: isa(A9S944-bird, "birds") -> example(A9S944-bird, A3S944-animal), isa(A3S944-animal, "animals").
english(barrons.rule2350, "Examples of animals using plants for shelter are birds building a nest on tree branches and squirrels living inside a tree trunk").
pretty(barrons.rule2350, "EXAMPLE(Bird, Animal), Bird = 'birds', Animal = 'animals'.").
barrons.rule2350:: isa(A3S944-animal, "animals") -> example(A9S944-bird, A3S944-animal), isa(A9S944-bird, "birds").
english(barrons.rule2351, "Examples of animals using plants for shelter are birds building a nest on tree branches and squirrels living inside a tree trunk").
pretty(barrons.rule2351, "EXAMPLE(Example, build(Bird, Nest)), Example = 'Examples of animals using plants for shelter', Bird = 'birds', Nest = 'a nest on tree branches and squirrels living inside a tree trunk'.").
barrons.rule2351:: of(A1S944-example, A3S944-animal), isa(A3S944-animal, "animals"), isa(A1S944-example, "Examples") -> example(A1S944-example, E10S944-build), inside(A18S944-live, A22S944-trunk), isa(A22S944-trunk, "a tree trunk"), on(A12S944-nest, A18S944-live), isa(A18S944-live, "living"), isa(E10S944-build, "build"), agent(E10S944-build, A9S944-bird), isa(A9S944-bird, "birds"), object(E10S944-build, A12S944-nest), isa(A12S944-nest, "a nest").
english(barrons.rule2352, "Examples of animals using plants for shelter are birds building a nest on tree branches and squirrels living inside a tree trunk").
pretty(barrons.rule2352, "EXAMPLE(Example, build(Bird, Nest)), Example = 'Examples of animals using plants for shelter', Bird = 'birds', Nest = 'a nest on tree branches and squirrels living inside a tree trunk'.").
barrons.rule2352:: inside(A18S944-live, A22S944-trunk), isa(A22S944-trunk, "a tree trunk"), on(A12S944-nest, A18S944-live), isa(A18S944-live, "living"), isa(E10S944-build, "build"), agent(E10S944-build, A9S944-bird), isa(A9S944-bird, "birds"), object(E10S944-build, A12S944-nest), isa(A12S944-nest, "a nest") -> example(A1S944-example, E10S944-build), of(A1S944-example, A3S944-animal), isa(A3S944-animal, "animals"), isa(A1S944-example, "Examples").
english(barrons.rule2353, "Examples of animals using plants for shelter are birds building a nest on tree branches and squirrels living inside a tree trunk").
pretty(barrons.rule2353, "EXAMPLE(Example, Bird), Example = 'Examples of animals using plants for shelter', Bird = 'birds'.").
barrons.rule2353:: of(A1S944-example, A3S944-animal), isa(A3S944-animal, "animals"), isa(A1S944-example, "Examples") -> example(A1S944-example, A9S944-bird), isa(A9S944-bird, "birds").
english(barrons.rule2354, "Examples of animals using plants for shelter are birds building a nest on tree branches and squirrels living inside a tree trunk").
pretty(barrons.rule2354, "EXAMPLE(Example, Bird), Example = 'Examples of animals using plants for shelter', Bird = 'birds'.").
barrons.rule2354:: isa(A9S944-bird, "birds") -> example(A1S944-example, A9S944-bird), of(A1S944-example, A3S944-animal), isa(A3S944-animal, "animals"), isa(A1S944-example, "Examples").
english(barrons.rule2355, "When plants make food they[Plants are living organisms] give off oxygen and water").
pretty(barrons.rule2355, "WHEN(give off(Organism, Oxygen), make(Plant, Food)), Organism = 'living organisms', Oxygen = 'oxygen', Plant = 'plants', Food = 'food'.").
barrons.rule2355:: isa(E7S946-give, "give off"), agent(E7S946-give, A4S74-organism), isa(A4S74-organism, "living organisms"), object(E7S946-give, A9S946-oxygen), isa(A9S946-oxygen, "oxygen") -> when(E7S946-give, E3S946-make), isa(E3S946-make, "make"), agent(E3S946-make, A2S946-plant), isa(A2S946-plant, "plants"), object(E3S946-make, A4S946-food), isa(A4S946-food, "food").
english(barrons.rule2356, "When plants make food they[Plants are living organisms] give off oxygen and water").
pretty(barrons.rule2356, "WHEN(give off(Organism, Oxygen), make(Plant, Food)), Organism = 'living organisms', Oxygen = 'oxygen', Plant = 'plants', Food = 'food'.").
barrons.rule2356:: isa(E3S946-make, "make"), agent(E3S946-make, A2S946-plant), isa(A2S946-plant, "plants"), object(E3S946-make, A4S946-food), isa(A4S946-food, "food") -> when(E7S946-give, E3S946-make), isa(E7S946-give, "give off"), agent(E7S946-give, A4S74-organism), isa(A4S74-organism, "living organisms"), object(E7S946-give, A9S946-oxygen), isa(A9S946-oxygen, "oxygen").
english(barrons.rule2357, "When plants make food they[Plants are living organisms] give off oxygen and water").
pretty(barrons.rule2357, "WHEN(give off(Organism, Water), make(Plant, Food)), Organism = 'living organisms', Water = 'water', Plant = 'plants', Food = 'food'.").
barrons.rule2357:: isa(E7S946-give, "give off"), agent(E7S946-give, A4S74-organism), isa(A4S74-organism, "living organisms"), object(E7S946-give, A11S946-water), isa(A11S946-water, "water") -> when(E7S946-give, E3S946-make), isa(E3S946-make, "make"), agent(E3S946-make, A2S946-plant), isa(A2S946-plant, "plants"), object(E3S946-make, A4S946-food), isa(A4S946-food, "food").
english(barrons.rule2358, "When plants make food they[Plants are living organisms] give off oxygen and water").
pretty(barrons.rule2358, "WHEN(give off(Organism, Water), make(Plant, Food)), Organism = 'living organisms', Water = 'water', Plant = 'plants', Food = 'food'.").
barrons.rule2358:: isa(E3S946-make, "make"), agent(E3S946-make, A2S946-plant), isa(A2S946-plant, "plants"), object(E3S946-make, A4S946-food), isa(A4S946-food, "food") -> when(E7S946-give, E3S946-make), isa(E7S946-give, "give off"), agent(E7S946-give, A4S74-organism), isa(A4S74-organism, "living organisms"), object(E7S946-give, A11S946-water), isa(A11S946-water, "water").
english(barrons.rule2359, "The plant gets the energy to go through photosynthesis from sunlight").
pretty(barrons.rule2359, "EFFECT(get(Plant, Energy), go_through(Plant, Photosynthesis, from(Sunlight))), Plant = 'The plant', Energy = 'the energy', Photosynthesis = 'photosynthesis', Sunlight = 'sunlight'.").
barrons.rule2359:: isa(E3S947-get, "get"), agent(E3S947-get, A2S947-plant), isa(A2S947-plant, "The plant"), object(E3S947-get, A5S947-energy), isa(A5S947-energy, "the energy") -> effect(E3S947-get, E7S947-go), isa(E7S947-go, "go"), agent(E7S947-go, A2S947-plant), through(E7S947-go, A9S947-photosynthesis), isa(A9S947-photosynthesis, "photosynthesis"), from(E7S947-go, A11S947-sunlight), isa(A11S947-sunlight, "sunlight").
english(barrons.rule2360, "The plant gets the energy to go through photosynthesis from sunlight").
pretty(barrons.rule2360, "EFFECT(get(Plant, Energy), go_through(Plant, Photosynthesis, from(Sunlight))), Plant = 'The plant', Energy = 'the energy', Photosynthesis = 'photosynthesis', Sunlight = 'sunlight'.").
barrons.rule2360:: isa(E7S947-go, "go"), agent(E7S947-go, A2S947-plant), isa(A2S947-plant, "The plant"), through(E7S947-go, A9S947-photosynthesis), isa(A9S947-photosynthesis, "photosynthesis"), from(E7S947-go, A11S947-sunlight), isa(A11S947-sunlight, "sunlight") -> effect(E3S947-get, E7S947-go), isa(E3S947-get, "get"), agent(E3S947-get, A2S947-plant), object(E3S947-get, A5S947-energy), isa(A5S947-energy, "the energy").
english(barrons.rule2361, "The leaves of the plant absorb sunlight").
pretty(barrons.rule2361, "isa(Plant, 'the plant') -> absorb(Leaf, Sunlight).").
barrons.rule2361:: isa(A5S950-plant, "the plant") -> of(A2S950-leaf, A5S950-plant), isa(E6S950-absorb, "absorb"), agent(E6S950-absorb, A2S950-leaf), isa(A2S950-leaf, "The leaves"), object(E6S950-absorb, A7S950-sunlight), isa(A7S950-sunlight, "sunlight").
english(barrons.rule2362, "The leaves of the plant absorb sunlight").
pretty(barrons.rule2362, "isa(absorb, 'absorb') -> absorb(Leaf, Sunlight).").
barrons.rule2362:: isa(E6S950-absorb, "absorb") -> of(A2S950-leaf, A5S950-plant), isa(A5S950-plant, "the plant"), agent(E6S950-absorb, A2S950-leaf), isa(A2S950-leaf, "The leaves"), object(E6S950-absorb, A7S950-sunlight), isa(A7S950-sunlight, "sunlight").
english(barrons.rule2363, "The leaves of the plant absorb sunlight").
pretty(barrons.rule2363, "isa(Leaf, 'The leaves of the plant') -> absorb(Leaf, Sunlight).").
barrons.rule2363:: isa(A2S950-leaf, "The leaves") -> of(A2S950-leaf, A5S950-plant), isa(A5S950-plant, "the plant"), isa(E6S950-absorb, "absorb"), agent(E6S950-absorb, A2S950-leaf), object(E6S950-absorb, A7S950-sunlight), isa(A7S950-sunlight, "sunlight").
english(barrons.rule2364, "The leaves of the plant absorb sunlight").
pretty(barrons.rule2364, "isa(Sunlight, 'sunlight') -> absorb(Leaf, Sunlight).").
barrons.rule2364:: isa(A7S950-sunlight, "sunlight") -> of(A2S950-leaf, A5S950-plant), isa(A5S950-plant, "the plant"), isa(E6S950-absorb, "absorb"), agent(E6S950-absorb, A2S950-leaf), isa(A2S950-leaf, "The leaves"), object(E6S950-absorb, A7S950-sunlight).
english(barrons.rule2365, "The two functions of the roots are to anchor and absorb").
pretty(barrons.rule2365, "PURPOSE(Root, be(Function, Anchor)), Root = 'the roots', Function = 'The two functions of the roots', Anchor = 'anchor'.").
barrons.rule2365:: isa(A6S951-root, "the roots") -> purpose(A6S951-root, E7S951-be), of(A3S951-function, A6S951-root), isa(E7S951-be, "be"), agent(E7S951-be, A3S951-function), isa(A3S951-function, "The two functions"), object(E7S951-be, A9S951-anchor), isa(A9S951-anchor, "anchor").
english(barrons.rule2366, "The two functions of the roots are to anchor and absorb").
pretty(barrons.rule2366, "PURPOSE(Root, be(Function, Anchor)), Root = 'the roots', Function = 'The two functions of the roots', Anchor = 'anchor'.").
barrons.rule2366:: of(A3S951-function, A6S951-root), isa(A6S951-root, "the roots"), isa(E7S951-be, "be"), agent(E7S951-be, A3S951-function), isa(A3S951-function, "The two functions"), object(E7S951-be, A9S951-anchor), isa(A9S951-anchor, "anchor") -> purpose(A6S951-root, E7S951-be).
english(barrons.rule2367, "The two functions of the roots are to anchor and absorb").
pretty(barrons.rule2367, "PURPOSE(Root, absorb(Function)), Root = 'the roots', Function = 'The two functions of the roots'.").
barrons.rule2367:: isa(A6S951-root, "the roots") -> purpose(A6S951-root, E11S951-absorb), of(A3S951-function, A6S951-root), isa(E11S951-absorb, "absorb"), agent(E11S951-absorb, A3S951-function), isa(A3S951-function, "The two functions").
english(barrons.rule2368, "The two functions of the roots are to anchor and absorb").
pretty(barrons.rule2368, "PURPOSE(Root, absorb(Function)), Root = 'the roots', Function = 'The two functions of the roots'.").
barrons.rule2368:: of(A3S951-function, A6S951-root), isa(A6S951-root, "the roots"), isa(E11S951-absorb, "absorb"), agent(E11S951-absorb, A3S951-function), isa(A3S951-function, "The two functions") -> purpose(A6S951-root, E11S951-absorb).
english(barrons.rule2369, "The stem is the pathway of water and nutrients from the roots to the leaves").
pretty(barrons.rule2369, "EXAMPLE(Stem, Pathway), Stem = 'The stem', Pathway = 'the pathway of water and nutrients from the roots to the leaves'.").
barrons.rule2369:: isa(A2S952-stem, "The stem") -> example(A2S952-stem, A5S952-pathway), of(A5S952-pathway, A7S952-water), isa(A7S952-water, "water"), of(A5S952-pathway, A9S952-nutrient), isa(A9S952-nutrient, "nutrients"), from(A5S952-pathway, A12S952-root), isa(A12S952-root, "the roots"), to(A5S952-pathway, A15S952-leaf), isa(A15S952-leaf, "the leaves"), isa(A5S952-pathway, "the pathway").
english(barrons.rule2370, "The stem is the pathway of water and nutrients from the roots to the leaves").
pretty(barrons.rule2370, "EXAMPLE(Stem, Pathway), Stem = 'The stem', Pathway = 'the pathway of water and nutrients from the roots to the leaves'.").
barrons.rule2370:: of(A5S952-pathway, A7S952-water), isa(A7S952-water, "water"), of(A5S952-pathway, A9S952-nutrient), isa(A9S952-nutrient, "nutrients"), from(A5S952-pathway, A12S952-root), isa(A12S952-root, "the roots"), to(A5S952-pathway, A15S952-leaf), isa(A15S952-leaf, "the leaves"), isa(A5S952-pathway, "the pathway") -> example(A2S952-stem, A5S952-pathway), isa(A2S952-stem, "The stem").
english(barrons.rule2371, "The stem also supports the plant").
pretty(barrons.rule2371, "isa(support, 'supports') -> support(Stem, Plant).").
barrons.rule2371:: isa(E4S953-support, "support") -> agent(E4S953-support, A2S953-stem), isa(A2S953-stem, "The stem"), object(E4S953-support, A6S953-plant), isa(A6S953-plant, "the plant").
english(barrons.rule2372, "The stem also supports the plant").
pretty(barrons.rule2372, "isa(Stem, 'The stem') -> support(Stem, Plant).").
barrons.rule2372:: isa(A2S953-stem, "The stem") -> isa(E4S953-support, "support"), agent(E4S953-support, A2S953-stem), object(E4S953-support, A6S953-plant), isa(A6S953-plant, "the plant").
english(barrons.rule2373, "The stem also supports the plant").
pretty(barrons.rule2373, "isa(Plant, 'the plant') -> support(Stem, Plant).").
barrons.rule2373:: isa(A6S953-plant, "the plant") -> isa(E4S953-support, "support"), agent(E4S953-support, A2S953-stem), isa(A2S953-stem, "The stem"), object(E4S953-support, A6S953-plant).
english(barrons.rule2374, "The leaves contain chlorophyll and are able to move toward the sun to collect light for the plant to perform photosynthesis").
pretty(barrons.rule2374, "isa(contain, 'contain') -> contain(Leaf, Chlorophyll).").
barrons.rule2374:: isa(E3S955-contain, "contain") -> agent(E3S955-contain, A2S955-leaf), isa(A2S955-leaf, "The leaves"), object(E3S955-contain, A4S955-chlorophyll), isa(A4S955-chlorophyll, "chlorophyll").
english(barrons.rule2375, "The leaves contain chlorophyll and are able to move toward the sun to collect light for the plant to perform photosynthesis").
pretty(barrons.rule2375, "isa(Leaf, 'The leaves') -> contain(Leaf, Chlorophyll).").
barrons.rule2375:: isa(A2S955-leaf, "The leaves") -> isa(E3S955-contain, "contain"), agent(E3S955-contain, A2S955-leaf), object(E3S955-contain, A4S955-chlorophyll), isa(A4S955-chlorophyll, "chlorophyll").
english(barrons.rule2376, "The leaves contain chlorophyll and are able to move toward the sun to collect light for the plant to perform photosynthesis").
pretty(barrons.rule2376, "isa(Chlorophyll, 'chlorophyll') -> contain(Leaf, Chlorophyll).").
barrons.rule2376:: isa(A4S955-chlorophyll, "chlorophyll") -> isa(E3S955-contain, "contain"), agent(E3S955-contain, A2S955-leaf), isa(A2S955-leaf, "The leaves"), object(E3S955-contain, A4S955-chlorophyll).
english(barrons.rule2377, "The leaves contain chlorophyll and are able to move toward the sun to collect light for the plant to perform photosynthesis").
pretty(barrons.rule2377, "EFFECT(move_toward(Sun), collect(Light)), Sun = 'the sun', Light = 'light'.").
barrons.rule2377:: isa(E9S955-move, "move"), toward(E9S955-move, A12S955-sun), isa(A12S955-sun, "the sun") -> effect(E9S955-move, E14S955-collect), isa(E14S955-collect, "collect"), object(E14S955-collect, A15S955-light), isa(A15S955-light, "light").
english(barrons.rule2378, "The leaves contain chlorophyll and are able to move toward the sun to collect light for the plant to perform photosynthesis").
pretty(barrons.rule2378, "EFFECT(move_toward(Sun), collect(Light)), Sun = 'the sun', Light = 'light'.").
barrons.rule2378:: isa(E14S955-collect, "collect"), object(E14S955-collect, A15S955-light), isa(A15S955-light, "light") -> effect(E9S955-move, E14S955-collect), isa(E9S955-move, "move"), toward(E9S955-move, A12S955-sun), isa(A12S955-sun, "the sun").
english(barrons.rule2379, "The leaves contain chlorophyll and are able to move toward the sun to collect light for the plant to perform photosynthesis").
pretty(barrons.rule2379, "EFFECT(collect(Plant, Light), perform(Plant, Photosynthesis)), Plant = 'the plant', Light = 'light', Photosynthesis = 'photosynthesis'.").
barrons.rule2379:: isa(E14S955-collect, "collect"), agent(E14S955-collect, A18S955-plant), isa(A18S955-plant, "the plant"), object(E14S955-collect, A15S955-light), isa(A15S955-light, "light") -> effect(E14S955-collect, E20S955-perform), isa(E20S955-perform, "perform"), agent(E20S955-perform, A18S955-plant), object(E20S955-perform, A21S955-photosynthesis), isa(A21S955-photosynthesis, "photosynthesis").
english(barrons.rule2380, "The leaves contain chlorophyll and are able to move toward the sun to collect light for the plant to perform photosynthesis").
pretty(barrons.rule2380, "EFFECT(collect(Plant, Light), perform(Plant, Photosynthesis)), Plant = 'the plant', Light = 'light', Photosynthesis = 'photosynthesis'.").
barrons.rule2380:: isa(E20S955-perform, "perform"), agent(E20S955-perform, A18S955-plant), isa(A18S955-plant, "the plant"), object(E20S955-perform, A21S955-photosynthesis), isa(A21S955-photosynthesis, "photosynthesis") -> effect(E14S955-collect, E20S955-perform), isa(E14S955-collect, "collect"), agent(E14S955-collect, A18S955-plant), object(E14S955-collect, A15S955-light), isa(A15S955-light, "light").
english(barrons.rule2381, "The flower helps the plant reproduce because it[the plant] contains the pollen and eggs").
pretty(barrons.rule2381, "PURPOSE(Flower, reproduce(Plant)), Flower = 'The flower', Plant = 'the plant'.").
barrons.rule2381:: isa(A2S956-flower, "The flower") -> purpose(A2S956-flower, E6S956-reproduce), isa(E6S956-reproduce, "reproduce"), agent(E6S956-reproduce, A5S956-plant), isa(A5S956-plant, "the plant").
english(barrons.rule2382, "The flower helps the plant reproduce because it[the plant] contains the pollen and eggs").
pretty(barrons.rule2382, "PURPOSE(Flower, reproduce(Plant)), Flower = 'The flower', Plant = 'the plant'.").
barrons.rule2382:: isa(E6S956-reproduce, "reproduce"), agent(E6S956-reproduce, A5S956-plant), isa(A5S956-plant, "the plant") -> purpose(A2S956-flower, E6S956-reproduce), isa(A2S956-flower, "The flower").
english(barrons.rule2383, "The flower helps the plant reproduce because it[the plant] contains the pollen and eggs").
pretty(barrons.rule2383, "EFFECT(contain(Plant, Pollen), reproduce(Plant)), Plant = 'the plant', Pollen = 'the pollen', Plant = 'the plant'.").
barrons.rule2383:: isa(E9S956-contain, "contain"), agent(E9S956-contain, A6S18-plant), isa(A6S18-plant, "the plant"), object(E9S956-contain, A11S956-pollen), isa(A11S956-pollen, "the pollen") -> effect(E9S956-contain, E6S956-reproduce), isa(E6S956-reproduce, "reproduce"), agent(E6S956-reproduce, A5S956-plant), isa(A5S956-plant, "the plant").
english(barrons.rule2384, "The flower helps the plant reproduce because it[the plant] contains the pollen and eggs").
pretty(barrons.rule2384, "EFFECT(contain(Plant, Pollen), reproduce(Plant)), Plant = 'the plant', Pollen = 'the pollen', Plant = 'the plant'.").
barrons.rule2384:: isa(E6S956-reproduce, "reproduce"), agent(E6S956-reproduce, A5S956-plant), isa(A5S956-plant, "the plant") -> effect(E9S956-contain, E6S956-reproduce), isa(E9S956-contain, "contain"), agent(E9S956-contain, A6S18-plant), isa(A6S18-plant, "the plant"), object(E9S956-contain, A11S956-pollen), isa(A11S956-pollen, "the pollen").
english(barrons.rule2385, "The flower helps the plant reproduce because it[the plant] contains the pollen and eggs").
pretty(barrons.rule2385, "EFFECT(contain(Plant, Egg), reproduce(Plant)), Plant = 'the plant', Egg = 'eggs', Plant = 'the plant'.").
barrons.rule2385:: isa(E9S956-contain, "contain"), agent(E9S956-contain, A6S18-plant), isa(A6S18-plant, "the plant"), object(E9S956-contain, A13S956-egg), isa(A13S956-egg, "eggs") -> effect(E9S956-contain, E6S956-reproduce), isa(E6S956-reproduce, "reproduce"), agent(E6S956-reproduce, A5S956-plant), isa(A5S956-plant, "the plant").
english(barrons.rule2386, "The flower helps the plant reproduce because it[the plant] contains the pollen and eggs").
pretty(barrons.rule2386, "EFFECT(contain(Plant, Egg), reproduce(Plant)), Plant = 'the plant', Egg = 'eggs', Plant = 'the plant'.").
barrons.rule2386:: isa(E6S956-reproduce, "reproduce"), agent(E6S956-reproduce, A5S956-plant), isa(A5S956-plant, "the plant") -> effect(E9S956-contain, E6S956-reproduce), isa(E9S956-contain, "contain"), agent(E9S956-contain, A6S18-plant), isa(A6S18-plant, "the plant"), object(E9S956-contain, A13S956-egg), isa(A13S956-egg, "eggs").
english(barrons.rule2387, "Examples of some common fruits are apples oranges peaches watermelon cantaloupe and grapefruit").
pretty(barrons.rule2387, "EXAMPLE(Apple, Fruit), Apple = 'apples', Fruit = 'some common fruits'.").
barrons.rule2387:: isa(A7S958-apple, "apples") -> example(A7S958-apple, A5S958-fruit), isa(A5S958-fruit, "some common fruits").
english(barrons.rule2388, "Examples of some common fruits are apples oranges peaches watermelon cantaloupe and grapefruit").
pretty(barrons.rule2388, "EXAMPLE(Apple, Fruit), Apple = 'apples', Fruit = 'some common fruits'.").
barrons.rule2388:: isa(A5S958-fruit, "some common fruits") -> example(A7S958-apple, A5S958-fruit), isa(A7S958-apple, "apples").
english(barrons.rule2389, "Examples of some common fruits are apples oranges peaches watermelon cantaloupe and grapefruit").
pretty(barrons.rule2389, "EXAMPLE(Example, Apple), Example = 'Examples of some common fruits', Apple = 'apples'.").
barrons.rule2389:: of(A1S958-example, A5S958-fruit), isa(A5S958-fruit, "some common fruits"), isa(A1S958-example, "Examples") -> example(A1S958-example, A7S958-apple), isa(A7S958-apple, "apples").
english(barrons.rule2390, "Examples of some common fruits are apples oranges peaches watermelon cantaloupe and grapefruit").
pretty(barrons.rule2390, "EXAMPLE(Example, Apple), Example = 'Examples of some common fruits', Apple = 'apples'.").
barrons.rule2390:: isa(A7S958-apple, "apples") -> example(A1S958-example, A7S958-apple), of(A1S958-example, A5S958-fruit), isa(A5S958-fruit, "some common fruits"), isa(A1S958-example, "Examples").
english(barrons.rule2391, "Examples of some common fruits are apples oranges peaches watermelon cantaloupe and grapefruit").
pretty(barrons.rule2391, "EXAMPLE(Orange, Fruit), Orange = 'oranges', Fruit = 'some common fruits'.").
barrons.rule2391:: isa(A9S958-orange, "oranges") -> example(A9S958-orange, A5S958-fruit), isa(A5S958-fruit, "some common fruits").
english(barrons.rule2392, "Examples of some common fruits are apples oranges peaches watermelon cantaloupe and grapefruit").
pretty(barrons.rule2392, "EXAMPLE(Orange, Fruit), Orange = 'oranges', Fruit = 'some common fruits'.").
barrons.rule2392:: isa(A5S958-fruit, "some common fruits") -> example(A9S958-orange, A5S958-fruit), isa(A9S958-orange, "oranges").
english(barrons.rule2393, "Examples of some common fruits are apples oranges peaches watermelon cantaloupe and grapefruit").
pretty(barrons.rule2393, "EXAMPLE(Peach, Fruit), Peach = 'peaches', Fruit = 'some common fruits'.").
barrons.rule2393:: isa(A11S958-peach, "peaches") -> example(A11S958-peach, A5S958-fruit), isa(A5S958-fruit, "some common fruits").
english(barrons.rule2394, "Examples of some common fruits are apples oranges peaches watermelon cantaloupe and grapefruit").
pretty(barrons.rule2394, "EXAMPLE(Peach, Fruit), Peach = 'peaches', Fruit = 'some common fruits'.").
barrons.rule2394:: isa(A5S958-fruit, "some common fruits") -> example(A11S958-peach, A5S958-fruit), isa(A11S958-peach, "peaches").
english(barrons.rule2395, "Examples of some common fruits are apples oranges peaches watermelon cantaloupe and grapefruit").
pretty(barrons.rule2395, "EXAMPLE(Watermelon, Fruit), Watermelon = 'watermelon', Fruit = 'some common fruits'.").
barrons.rule2395:: isa(A13S958-watermelon, "watermelon") -> example(A13S958-watermelon, A5S958-fruit), isa(A5S958-fruit, "some common fruits").
english(barrons.rule2396, "Examples of some common fruits are apples oranges peaches watermelon cantaloupe and grapefruit").
pretty(barrons.rule2396, "EXAMPLE(Watermelon, Fruit), Watermelon = 'watermelon', Fruit = 'some common fruits'.").
barrons.rule2396:: isa(A5S958-fruit, "some common fruits") -> example(A13S958-watermelon, A5S958-fruit), isa(A13S958-watermelon, "watermelon").
english(barrons.rule2397, "Examples of some common fruits are apples oranges peaches watermelon cantaloupe and grapefruit").
pretty(barrons.rule2397, "EXAMPLE(Cantaloupe, Fruit), Cantaloupe = 'cantaloupe', Fruit = 'some common fruits'.").
barrons.rule2397:: isa(A15S958-cantaloupe, "cantaloupe") -> example(A15S958-cantaloupe, A5S958-fruit), isa(A5S958-fruit, "some common fruits").
english(barrons.rule2398, "Examples of some common fruits are apples oranges peaches watermelon cantaloupe and grapefruit").
pretty(barrons.rule2398, "EXAMPLE(Cantaloupe, Fruit), Cantaloupe = 'cantaloupe', Fruit = 'some common fruits'.").
barrons.rule2398:: isa(A5S958-fruit, "some common fruits") -> example(A15S958-cantaloupe, A5S958-fruit), isa(A15S958-cantaloupe, "cantaloupe").
english(barrons.rule2399, "Examples of some common fruits are apples oranges peaches watermelon cantaloupe and grapefruit").
pretty(barrons.rule2399, "EXAMPLE(Grapefruit, Fruit), Grapefruit = 'grapefruit', Fruit = 'some common fruits'.").
barrons.rule2399:: isa(A18S958-grapefruit, "grapefruit") -> example(A18S958-grapefruit, A5S958-fruit), isa(A5S958-fruit, "some common fruits").
english(barrons.rule2400, "Examples of some common fruits are apples oranges peaches watermelon cantaloupe and grapefruit").
pretty(barrons.rule2400, "EXAMPLE(Grapefruit, Fruit), Grapefruit = 'grapefruit', Fruit = 'some common fruits'.").
barrons.rule2400:: isa(A5S958-fruit, "some common fruits") -> example(A18S958-grapefruit, A5S958-fruit), isa(A18S958-grapefruit, "grapefruit").
english(barrons.rule2401, "Fruit develops around the seed and comes from a flower").
pretty(barrons.rule2401, "isa(develop, 'develops') -> develop(Fruit, Seed, Around).").
barrons.rule2401:: isa(E2S959-develop, "develop") -> agent(E2S959-develop, A1S959-Fruit), isa(A1S959-Fruit, "Fruit"), object(E2S959-develop, A5S959-seed), isa(A5S959-seed, "the seed"), arg(E2S959-develop, A3S959-around), isa(A3S959-around, "around").
english(barrons.rule2402, "Fruit develops around the seed and comes from a flower").
pretty(barrons.rule2402, "isa(Fruit, 'Fruit') -> develop(Fruit, Seed, Around).").
barrons.rule2402:: isa(A1S959-Fruit, "Fruit") -> isa(E2S959-develop, "develop"), agent(E2S959-develop, A1S959-Fruit), object(E2S959-develop, A5S959-seed), isa(A5S959-seed, "the seed"), arg(E2S959-develop, A3S959-around), isa(A3S959-around, "around").
english(barrons.rule2403, "Fruit develops around the seed and comes from a flower").
pretty(barrons.rule2403, "isa(Seed, 'the seed') -> develop(Fruit, Seed, Around).").
barrons.rule2403:: isa(A5S959-seed, "the seed") -> isa(E2S959-develop, "develop"), agent(E2S959-develop, A1S959-Fruit), isa(A1S959-Fruit, "Fruit"), object(E2S959-develop, A5S959-seed), arg(E2S959-develop, A3S959-around), isa(A3S959-around, "around").
english(barrons.rule2404, "Fruit develops around the seed and comes from a flower").
pretty(barrons.rule2404, "isa(Around, 'around') -> develop(Fruit, Seed, Around).").
barrons.rule2404:: isa(A3S959-around, "around") -> isa(E2S959-develop, "develop"), agent(E2S959-develop, A1S959-Fruit), isa(A1S959-Fruit, "Fruit"), object(E2S959-develop, A5S959-seed), isa(A5S959-seed, "the seed"), arg(E2S959-develop, A3S959-around).
english(barrons.rule2405, "When a fruit is moved by an animal or falls to the ground and breaks open the seeds can fall out and grow into new plants").
pretty(barrons.rule2405, "WHEN(fall(Animal, Fall, Open, Out), move(Animal, Fruit)), Animal = 'an animal', Fall = 'falls to the ground', Open = 'open the seeds', Out = 'out', Fruit = 'a fruit'.").
barrons.rule2405:: isa(E20S961-fall, "fall"), agent(E20S961-fall, A8S961-animal), isa(A8S961-animal, "an animal"), arg(E20S961-fall, A10S961-fall), isa(A10S961-fall, "falls to the ground"), arg(E20S961-fall, A16S961-open), isa(A16S961-open, "breaks open the seeds"), arg(E20S961-fall, A21S961-out), isa(A21S961-out, "out") -> when(E20S961-fall, E5S961-move), isa(E5S961-move, "move"), agent(E5S961-move, A8S961-animal), object(E5S961-move, A3S961-fruit), isa(A3S961-fruit, "a fruit").
english(barrons.rule2406, "When a fruit is moved by an animal or falls to the ground and breaks open the seeds can fall out and grow into new plants").
pretty(barrons.rule2406, "WHEN(fall(Animal, Fall, Open, Out), move(Animal, Fruit)), Animal = 'an animal', Fall = 'falls to the ground', Open = 'open the seeds', Out = 'out', Fruit = 'a fruit'.").
barrons.rule2406:: isa(E5S961-move, "move"), agent(E5S961-move, A8S961-animal), isa(A8S961-animal, "an animal"), object(E5S961-move, A3S961-fruit), isa(A3S961-fruit, "a fruit") -> when(E20S961-fall, E5S961-move), isa(E20S961-fall, "fall"), agent(E20S961-fall, A8S961-animal), arg(E20S961-fall, A10S961-fall), isa(A10S961-fall, "falls to the ground"), arg(E20S961-fall, A16S961-open), isa(A16S961-open, "breaks open the seeds"), arg(E20S961-fall, A21S961-out), isa(A21S961-out, "out").
english(barrons.rule2407, "Adaptation examples can include roses have thorns for protection cactus hold water to survive in the desert and palm trees have wide leaves to absorb extra sunlight").
pretty(barrons.rule2407, "EXAMPLE(hold(Cactus, Water), Adaptation), Cactus = 'cactus', Water = 'water', Adaptation = 'Adaptation'.").
barrons.rule2407:: isa(E13S962-hold, "hold"), agent(E13S962-hold, A12S962-cactus), isa(A12S962-cactus, "cactus"), object(E13S962-hold, A14S962-water), isa(A14S962-water, "water") -> example(E13S962-hold, A1S962-adaptation), isa(A1S962-adaptation, "Adaptation").
english(barrons.rule2408, "Adaptation examples can include roses have thorns for protection cactus hold water to survive in the desert and palm trees have wide leaves to absorb extra sunlight").
pretty(barrons.rule2408, "EXAMPLE(hold(Cactus, Water), Adaptation), Cactus = 'cactus', Water = 'water', Adaptation = 'Adaptation'.").
barrons.rule2408:: isa(A1S962-adaptation, "Adaptation") -> example(E13S962-hold, A1S962-adaptation), isa(E13S962-hold, "hold"), agent(E13S962-hold, A12S962-cactus), isa(A12S962-cactus, "cactus"), object(E13S962-hold, A14S962-water), isa(A14S962-water, "water").
english(barrons.rule2409, "Adaptation examples can include roses have thorns for protection cactus hold water to survive in the desert and palm trees have wide leaves to absorb extra sunlight").
pretty(barrons.rule2409, "EXAMPLE(have_for(Rose, Thorn, Protection), Adaptation), Rose = 'roses', Thorn = 'thorns', Protection = 'protection', Adaptation = 'Adaptation'.").
barrons.rule2409:: isa(E7S962-have, "have"), agent(E7S962-have, A6S962-rose), isa(A6S962-rose, "roses"), object(E7S962-have, A8S962-thorn), isa(A8S962-thorn, "thorns"), for(E7S962-have, A10S962-protection), isa(A10S962-protection, "protection") -> example(E7S962-have, A1S962-adaptation), isa(A1S962-adaptation, "Adaptation").
english(barrons.rule2410, "Adaptation examples can include roses have thorns for protection cactus hold water to survive in the desert and palm trees have wide leaves to absorb extra sunlight").
pretty(barrons.rule2410, "EXAMPLE(have_for(Rose, Thorn, Protection), Adaptation), Rose = 'roses', Thorn = 'thorns', Protection = 'protection', Adaptation = 'Adaptation'.").
barrons.rule2410:: isa(A1S962-adaptation, "Adaptation") -> example(E7S962-have, A1S962-adaptation), isa(E7S962-have, "have"), agent(E7S962-have, A6S962-rose), isa(A6S962-rose, "roses"), object(E7S962-have, A8S962-thorn), isa(A8S962-thorn, "thorns"), for(E7S962-have, A10S962-protection), isa(A10S962-protection, "protection").
english(barrons.rule2411, "Adaptation examples can include roses have thorns for protection cactus hold water to survive in the desert and palm trees have wide leaves to absorb extra sunlight").
pretty(barrons.rule2411, "EXAMPLE(have(Tree, Leaf), Adaptation), Tree = 'palm trees', Leaf = 'wide leaves', Adaptation = 'Adaptation'.").
barrons.rule2411:: isa(E24S962-have, "have"), agent(E24S962-have, A23S962-tree), isa(A23S962-tree, "palm trees"), object(E24S962-have, A26S962-leaf), isa(A26S962-leaf, "wide leaves") -> example(E24S962-have, A1S962-adaptation), isa(A1S962-adaptation, "Adaptation").
english(barrons.rule2412, "Adaptation examples can include roses have thorns for protection cactus hold water to survive in the desert and palm trees have wide leaves to absorb extra sunlight").
pretty(barrons.rule2412, "EXAMPLE(have(Tree, Leaf), Adaptation), Tree = 'palm trees', Leaf = 'wide leaves', Adaptation = 'Adaptation'.").
barrons.rule2412:: isa(A1S962-adaptation, "Adaptation") -> example(E24S962-have, A1S962-adaptation), isa(E24S962-have, "have"), agent(E24S962-have, A23S962-tree), isa(A23S962-tree, "palm trees"), object(E24S962-have, A26S962-leaf), isa(A26S962-leaf, "wide leaves").
english(barrons.rule2413, "Adaptation examples can include roses have thorns for protection cactus hold water to survive in the desert and palm trees have wide leaves to absorb extra sunlight").
pretty(barrons.rule2413, "EFFECT(hold(Cactus, Water), survive_in(Cactus, Desert)), Cactus = 'cactus', Water = 'water', Desert = 'the desert'.").
barrons.rule2413:: isa(E13S962-hold, "hold"), agent(E13S962-hold, A12S962-cactus), isa(A12S962-cactus, "cactus"), object(E13S962-hold, A14S962-water), isa(A14S962-water, "water") -> effect(E13S962-hold, E16S962-survive), isa(E16S962-survive, "survive"), agent(E16S962-survive, A12S962-cactus), in(E16S962-survive, A19S962-desert), isa(A19S962-desert, "the desert").
english(barrons.rule2414, "Adaptation examples can include roses have thorns for protection cactus hold water to survive in the desert and palm trees have wide leaves to absorb extra sunlight").
pretty(barrons.rule2414, "EFFECT(hold(Cactus, Water), survive_in(Cactus, Desert)), Cactus = 'cactus', Water = 'water', Desert = 'the desert'.").
barrons.rule2414:: isa(E16S962-survive, "survive"), agent(E16S962-survive, A12S962-cactus), isa(A12S962-cactus, "cactus"), in(E16S962-survive, A19S962-desert), isa(A19S962-desert, "the desert") -> effect(E13S962-hold, E16S962-survive), isa(E13S962-hold, "hold"), agent(E13S962-hold, A12S962-cactus), object(E13S962-hold, A14S962-water), isa(A14S962-water, "water").
english(barrons.rule2415, "Adaptation examples can include roses have thorns for protection cactus hold water to survive in the desert and palm trees have wide leaves to absorb extra sunlight").
pretty(barrons.rule2415, "EFFECT(have(Tree, Leaf), absorb(Tree, Sunlight)), Tree = 'palm trees', Leaf = 'wide leaves', Sunlight = 'extra sunlight'.").
barrons.rule2415:: isa(E24S962-have, "have"), agent(E24S962-have, A23S962-tree), isa(A23S962-tree, "palm trees"), object(E24S962-have, A26S962-leaf), isa(A26S962-leaf, "wide leaves") -> effect(E24S962-have, E28S962-absorb), isa(E28S962-absorb, "absorb"), agent(E28S962-absorb, A23S962-tree), object(E28S962-absorb, A30S962-sunlight), isa(A30S962-sunlight, "extra sunlight").
english(barrons.rule2416, "Adaptation examples can include roses have thorns for protection cactus hold water to survive in the desert and palm trees have wide leaves to absorb extra sunlight").
pretty(barrons.rule2416, "EFFECT(have(Tree, Leaf), absorb(Tree, Sunlight)), Tree = 'palm trees', Leaf = 'wide leaves', Sunlight = 'extra sunlight'.").
barrons.rule2416:: isa(E28S962-absorb, "absorb"), agent(E28S962-absorb, A23S962-tree), isa(A23S962-tree, "palm trees"), object(E28S962-absorb, A30S962-sunlight), isa(A30S962-sunlight, "extra sunlight") -> effect(E24S962-have, E28S962-absorb), isa(E24S962-have, "have"), agent(E24S962-have, A23S962-tree), object(E24S962-have, A26S962-leaf), isa(A26S962-leaf, "wide leaves").
english(barrons.rule2417, "Plants need water light air and food to survive").
pretty(barrons.rule2417, "EFFECT(need(Plant, Water), survive(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule2417:: isa(E2S963-need, "need"), agent(E2S963-need, A1S963-plant), isa(A1S963-plant, "Plants"), object(E2S963-need, A3S963-water), isa(A3S963-water, "water") -> effect(E2S963-need, E12S963-survive), isa(E12S963-survive, "survive"), agent(E12S963-survive, A1S963-plant).
english(barrons.rule2418, "Plants need water light air and food to survive").
pretty(barrons.rule2418, "EFFECT(need(Plant, Water), survive(Plant)), Plant = 'Plants', Water = 'water'.").
barrons.rule2418:: isa(E12S963-survive, "survive"), agent(E12S963-survive, A1S963-plant), isa(A1S963-plant, "Plants") -> effect(E2S963-need, E12S963-survive), isa(E2S963-need, "need"), agent(E2S963-need, A1S963-plant), object(E2S963-need, A3S963-water), isa(A3S963-water, "water").
english(barrons.rule2419, "Plants need water light air and food to survive").
pretty(barrons.rule2419, "EFFECT(need(Plant, Light), survive(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule2419:: isa(E2S963-need, "need"), agent(E2S963-need, A1S963-plant), isa(A1S963-plant, "Plants"), object(E2S963-need, A5S963-light), isa(A5S963-light, "light") -> effect(E2S963-need, E12S963-survive), isa(E12S963-survive, "survive"), agent(E12S963-survive, A1S963-plant).
english(barrons.rule2420, "Plants need water light air and food to survive").
pretty(barrons.rule2420, "EFFECT(need(Plant, Light), survive(Plant)), Plant = 'Plants', Light = 'light'.").
barrons.rule2420:: isa(E12S963-survive, "survive"), agent(E12S963-survive, A1S963-plant), isa(A1S963-plant, "Plants") -> effect(E2S963-need, E12S963-survive), isa(E2S963-need, "need"), agent(E2S963-need, A1S963-plant), object(E2S963-need, A5S963-light), isa(A5S963-light, "light").
english(barrons.rule2421, "Plants need water light air and food to survive").
pretty(barrons.rule2421, "EFFECT(need(Plant, Air), survive(Plant)), Plant = 'Plants', Air = 'air'.").
barrons.rule2421:: isa(E2S963-need, "need"), agent(E2S963-need, A1S963-plant), isa(A1S963-plant, "Plants"), object(E2S963-need, A7S963-air), isa(A7S963-air, "air") -> effect(E2S963-need, E12S963-survive), isa(E12S963-survive, "survive"), agent(E12S963-survive, A1S963-plant).
english(barrons.rule2422, "Plants need water light air and food to survive").
pretty(barrons.rule2422, "EFFECT(need(Plant, Air), survive(Plant)), Plant = 'Plants', Air = 'air'.").
barrons.rule2422:: isa(E12S963-survive, "survive"), agent(E12S963-survive, A1S963-plant), isa(A1S963-plant, "Plants") -> effect(E2S963-need, E12S963-survive), isa(E2S963-need, "need"), agent(E2S963-need, A1S963-plant), object(E2S963-need, A7S963-air), isa(A7S963-air, "air").
english(barrons.rule2423, "Plants need water light air and food to survive").
pretty(barrons.rule2423, "EFFECT(need(Plant, Food), survive(Plant)), Plant = 'Plants', Food = 'food'.").
barrons.rule2423:: isa(E2S963-need, "need"), agent(E2S963-need, A1S963-plant), isa(A1S963-plant, "Plants"), object(E2S963-need, A10S963-food), isa(A10S963-food, "food") -> effect(E2S963-need, E12S963-survive), isa(E12S963-survive, "survive"), agent(E12S963-survive, A1S963-plant).
english(barrons.rule2424, "Plants need water light air and food to survive").
pretty(barrons.rule2424, "EFFECT(need(Plant, Food), survive(Plant)), Plant = 'Plants', Food = 'food'.").
barrons.rule2424:: isa(E12S963-survive, "survive"), agent(E12S963-survive, A1S963-plant), isa(A1S963-plant, "Plants") -> effect(E2S963-need, E12S963-survive), isa(E2S963-need, "need"), agent(E2S963-need, A1S963-plant), object(E2S963-need, A10S963-food), isa(A10S963-food, "food").
english(barrons.rule2425, "Plants reproduce by forming seeds from the male pollen and female eggs cells found in the flower").
pretty(barrons.rule2425, "ENABLE(form(Plant, Seed), reproduce(Plant)), Plant = 'Plants', Seed = 'seeds from the male pollen and female'.").
barrons.rule2425:: from(A5S964-seed, A8S964-male), isa(A8S964-male, "the male"), from(A5S964-seed, A13S964-female), isa(A13S964-female, "female"), isa(E4S964-form, "form"), agent(E4S964-form, A1S964-plant), isa(A1S964-plant, "Plants"), object(E4S964-form, A5S964-seed), isa(A5S964-seed, "seeds") -> enable(E4S964-form, E2S964-reproduce), isa(E2S964-reproduce, "reproduce"), agent(E2S964-reproduce, A1S964-plant).
english(barrons.rule2426, "Plants reproduce by forming seeds from the male pollen and female eggs cells found in the flower").
pretty(barrons.rule2426, "ENABLE(form(Plant, Seed), reproduce(Plant)), Plant = 'Plants', Seed = 'seeds from the male pollen and female'.").
barrons.rule2426:: isa(E2S964-reproduce, "reproduce"), agent(E2S964-reproduce, A1S964-plant), isa(A1S964-plant, "Plants") -> enable(E4S964-form, E2S964-reproduce), from(A5S964-seed, A8S964-male), isa(A8S964-male, "the male"), from(A5S964-seed, A13S964-female), isa(A13S964-female, "female"), isa(E4S964-form, "form"), agent(E4S964-form, A1S964-plant), object(E4S964-form, A5S964-seed), isa(A5S964-seed, "seeds").
english(barrons.rule2427, "Plants reproduce by forming seeds from the male pollen and female eggs cells found in the flower").
pretty(barrons.rule2427, "ENABLE(form(Plant, Egg), reproduce(Plant)), Plant = 'Plants', Egg = 'eggs'.").
barrons.rule2427:: isa(E4S964-form, "form"), agent(E4S964-form, A1S964-plant), isa(A1S964-plant, "Plants"), object(E4S964-form, A15S964-egg), isa(A15S964-egg, "eggs") -> enable(E4S964-form, E2S964-reproduce), isa(E2S964-reproduce, "reproduce"), agent(E2S964-reproduce, A1S964-plant).
english(barrons.rule2428, "Plants reproduce by forming seeds from the male pollen and female eggs cells found in the flower").
pretty(barrons.rule2428, "ENABLE(form(Plant, Egg), reproduce(Plant)), Plant = 'Plants', Egg = 'eggs'.").
barrons.rule2428:: isa(E2S964-reproduce, "reproduce"), agent(E2S964-reproduce, A1S964-plant), isa(A1S964-plant, "Plants") -> enable(E4S964-form, E2S964-reproduce), isa(E4S964-form, "form"), agent(E4S964-form, A1S964-plant), object(E4S964-form, A15S964-egg), isa(A15S964-egg, "eggs").
english(barrons.rule2429, "A plant that lives in the desert might have a large root system to find water deep within the ground").
pretty(barrons.rule2429, "EFFECT(have(Plant, System), find_within(Plant, Water, Deep, Ground)), Plant = 'A plant', System = 'a large root system', Water = 'water', Deep = 'deep', Ground = 'the ground'.").
barrons.rule2429:: isa(E9S966-have, "have"), agent(E9S966-have, A2S966-plant), isa(A2S966-plant, "A plant"), object(E9S966-have, A13S966-system), isa(A13S966-system, "a large root system") -> effect(E9S966-have, E15S966-find), isa(E15S966-find, "find"), agent(E15S966-find, A2S966-plant), object(E15S966-find, A16S966-water), isa(A16S966-water, "water"), within(E15S966-find, A20S966-ground), isa(A20S966-ground, "the ground"), arg(E15S966-find, A17S966-deep), isa(A17S966-deep, "deep").
english(barrons.rule2430, "A plant that lives in the desert might have a large root system to find water deep within the ground").
pretty(barrons.rule2430, "EFFECT(have(Plant, System), find_within(Plant, Water, Deep, Ground)), Plant = 'A plant', System = 'a large root system', Water = 'water', Deep = 'deep', Ground = 'the ground'.").
barrons.rule2430:: isa(E15S966-find, "find"), agent(E15S966-find, A2S966-plant), isa(A2S966-plant, "A plant"), object(E15S966-find, A16S966-water), isa(A16S966-water, "water"), within(E15S966-find, A20S966-ground), isa(A20S966-ground, "the ground"), arg(E15S966-find, A17S966-deep), isa(A17S966-deep, "deep") -> effect(E9S966-have, E15S966-find), isa(E9S966-have, "have"), agent(E9S966-have, A2S966-plant), object(E9S966-have, A13S966-system), isa(A13S966-system, "a large root system").
english(barrons.rule2431, "The stems might have a tough outer coating to prevent the loss of water and the leaves if they[The leaves of the plants] have any might be very large").
pretty(barrons.rule2431, "EFFECT(have(The, Coating), prevent(The, Loss)), The = 'The', Coating = 'a tough outer coating', Loss = 'the loss of water'.").
barrons.rule2431:: isa(E4S967-have, "have"), agent(E4S967-have, A1S967-the), isa(A1S967-the, "The"), object(E4S967-have, A8S967-coating), isa(A8S967-coating, "a tough outer coating") -> effect(E4S967-have, E10S967-prevent), of(A12S967-loss, A14S967-water), isa(A14S967-water, "water"), isa(E10S967-prevent, "prevent"), agent(E10S967-prevent, A1S967-the), object(E10S967-prevent, A12S967-loss), isa(A12S967-loss, "the loss").
english(barrons.rule2432, "The stems might have a tough outer coating to prevent the loss of water and the leaves if they[The leaves of the plants] have any might be very large").
pretty(barrons.rule2432, "EFFECT(have(The, Coating), prevent(The, Loss)), The = 'The', Coating = 'a tough outer coating', Loss = 'the loss of water'.").
barrons.rule2432:: of(A12S967-loss, A14S967-water), isa(A14S967-water, "water"), isa(E10S967-prevent, "prevent"), agent(E10S967-prevent, A1S967-the), isa(A1S967-the, "The"), object(E10S967-prevent, A12S967-loss), isa(A12S967-loss, "the loss") -> effect(E4S967-have, E10S967-prevent), isa(E4S967-have, "have"), agent(E4S967-have, A1S967-the), object(E4S967-have, A8S967-coating), isa(A8S967-coating, "a tough outer coating").
english(barrons.rule2433, "Roots secure the plant in the soil and bring in water and nutrients for survival").
pretty(barrons.rule2433, "isa(secure, 'secure') -> secure_in(Root, Plant, Soil).").
barrons.rule2433:: isa(E2S968-secure, "secure") -> agent(E2S968-secure, A1S968-root), isa(A1S968-root, "Roots"), object(E2S968-secure, A4S968-plant), isa(A4S968-plant, "the plant"), in(E2S968-secure, A7S968-soil), isa(A7S968-soil, "the soil").
english(barrons.rule2434, "Roots secure the plant in the soil and bring in water and nutrients for survival").
pretty(barrons.rule2434, "isa(Root, 'Roots') -> secure_in(Root, Plant, Soil).").
barrons.rule2434:: isa(A1S968-root, "Roots") -> isa(E2S968-secure, "secure"), agent(E2S968-secure, A1S968-root), object(E2S968-secure, A4S968-plant), isa(A4S968-plant, "the plant"), in(E2S968-secure, A7S968-soil), isa(A7S968-soil, "the soil").
english(barrons.rule2435, "Roots secure the plant in the soil and bring in water and nutrients for survival").
pretty(barrons.rule2435, "isa(Plant, 'the plant') -> secure_in(Root, Plant, Soil).").
barrons.rule2435:: isa(A4S968-plant, "the plant") -> isa(E2S968-secure, "secure"), agent(E2S968-secure, A1S968-root), isa(A1S968-root, "Roots"), object(E2S968-secure, A4S968-plant), in(E2S968-secure, A7S968-soil), isa(A7S968-soil, "the soil").
english(barrons.rule2436, "Roots secure the plant in the soil and bring in water and nutrients for survival").
pretty(barrons.rule2436, "isa(Soil, 'the soil') -> secure_in(Root, Plant, Soil).").
barrons.rule2436:: isa(A7S968-soil, "the soil") -> isa(E2S968-secure, "secure"), agent(E2S968-secure, A1S968-root), isa(A1S968-root, "Roots"), object(E2S968-secure, A4S968-plant), isa(A4S968-plant, "the plant"), in(E2S968-secure, A7S968-soil).
english(barrons.rule2437, "Airplanes are not a common method for the dispersal of seeds").
pretty(barrons.rule2437, "PURPOSE(be(Airplanes, Method), Dispersal), Airplanes = 'Airplanes', Method = 'not a common method for the dispersal of seeds', Dispersal = 'the dispersal of seeds'.").
barrons.rule2437:: isa(E2S969-be, "be"), agent(E2S969-be, A1S969-Airplanes), isa(A1S969-Airplanes, "Airplanes"), object(E2S969-be, A6S969-method), isa(A6S969-method, "not a common method") -> purpose(E2S969-be, A9S969-dispersal), of(A9S969-dispersal, A11S969-seed), isa(A11S969-seed, "seeds"), isa(A9S969-dispersal, "the dispersal").
english(barrons.rule2438, "Airplanes are not a common method for the dispersal of seeds").
pretty(barrons.rule2438, "PURPOSE(be(Airplanes, Method), Dispersal), Airplanes = 'Airplanes', Method = 'not a common method for the dispersal of seeds', Dispersal = 'the dispersal of seeds'.").
barrons.rule2438:: of(A9S969-dispersal, A11S969-seed), isa(A11S969-seed, "seeds"), isa(A9S969-dispersal, "the dispersal") -> purpose(E2S969-be, A9S969-dispersal), isa(E2S969-be, "be"), agent(E2S969-be, A1S969-Airplanes), isa(A1S969-Airplanes, "Airplanes"), object(E2S969-be, A6S969-method), isa(A6S969-method, "not a common method").
english(barrons.rule2439, "Airplanes are not a common method for the dispersal of seeds").
pretty(barrons.rule2439, "EXAMPLE(Airplanes, Method), Airplanes = 'Airplanes', Method = 'not a common method for the dispersal of seeds'.").
barrons.rule2439:: isa(A1S969-Airplanes, "Airplanes") -> example(A1S969-Airplanes, A6S969-method), of(A9S969-dispersal, A11S969-seed), isa(A11S969-seed, "seeds"), for(A6S969-method, A9S969-dispersal), isa(A9S969-dispersal, "the dispersal"), isa(A6S969-method, "not a common method").
english(barrons.rule2440, "Airplanes are not a common method for the dispersal of seeds").
pretty(barrons.rule2440, "EXAMPLE(Airplanes, Method), Airplanes = 'Airplanes', Method = 'not a common method for the dispersal of seeds'.").
barrons.rule2440:: of(A9S969-dispersal, A11S969-seed), isa(A11S969-seed, "seeds"), for(A6S969-method, A9S969-dispersal), isa(A9S969-dispersal, "the dispersal"), isa(A6S969-method, "not a common method") -> example(A1S969-Airplanes, A6S969-method), isa(A1S969-Airplanes, "Airplanes").
english(barrons.rule2441, "An example of a plant responding to a change in its[The typical life cycle of a plant] environment is leaves falling off trees in fall").
pretty(barrons.rule2441, "EFFECT(leave(Example), fall off_in(Example, Tree, Fall)), Example = 'An example of a plant responding to a change in its[The typical life cycle of a plant] environment', Tree = 'trees', Fall = 'fall'.").
barrons.rule2441:: of(A2S971-example, A5S971-plant), isa(A5S971-plant, "a plant"), isa(E14S971-leave, "leave"), agent(E14S971-leave, A2S971-example), isa(A2S971-example, "An example") -> effect(E14S971-leave, E15S971-fall), isa(E15S971-fall, "fall off"), agent(E15S971-fall, A2S971-example), object(E15S971-fall, A17S971-tree), isa(A17S971-tree, "trees"), in(E15S971-fall, A19S971-fall), isa(A19S971-fall, "fall").
english(barrons.rule2442, "An example of a plant responding to a change in its[The typical life cycle of a plant] environment is leaves falling off trees in fall").
pretty(barrons.rule2442, "EFFECT(leave(Example), fall off_in(Example, Tree, Fall)), Example = 'An example of a plant responding to a change in its[The typical life cycle of a plant] environment', Tree = 'trees', Fall = 'fall'.").
barrons.rule2442:: of(A2S971-example, A5S971-plant), isa(A5S971-plant, "a plant"), isa(E15S971-fall, "fall off"), agent(E15S971-fall, A2S971-example), isa(A2S971-example, "An example"), object(E15S971-fall, A17S971-tree), isa(A17S971-tree, "trees"), in(E15S971-fall, A19S971-fall), isa(A19S971-fall, "fall") -> effect(E14S971-leave, E15S971-fall), isa(E14S971-leave, "leave"), agent(E14S971-leave, A2S971-example).
english(barrons.rule2443, "The part of a plant that is responsible for reproduction is the flower").
pretty(barrons.rule2443, "EXAMPLE(Part, Flower), Part = 'The part of a plant', Flower = 'the flower'.").
barrons.rule2443:: of(A2S972-part, A5S972-plant), isa(A5S972-plant, "a plant"), isa(A2S972-part, "The part") -> example(A2S972-part, A13S972-flower), isa(A13S972-flower, "the flower").
english(barrons.rule2444, "The part of a plant that is responsible for reproduction is the flower").
pretty(barrons.rule2444, "EXAMPLE(Part, Flower), Part = 'The part of a plant', Flower = 'the flower'.").
barrons.rule2444:: isa(A13S972-flower, "the flower") -> example(A2S972-part, A13S972-flower), of(A2S972-part, A5S972-plant), isa(A5S972-plant, "a plant"), isa(A2S972-part, "The part").
english(barrons.rule2445, "The part of a plant that is responsible for reproduction is the flower").
pretty(barrons.rule2445, "PURPOSE(That, reproduce), That = 'that'.").
barrons.rule2445:: isa(A6S972-that, "that") -> purpose(A6S972-that, E10S972-reproduction), isa(E10S972-reproduction, "reproduce").
english(barrons.rule2446, "The part of a plant that is responsible for reproduction is the flower").
pretty(barrons.rule2446, "PURPOSE(That, reproduce), That = 'that'.").
barrons.rule2446:: isa(E10S972-reproduction, "reproduce") -> purpose(A6S972-that, E10S972-reproduction), isa(A6S972-that, "that").
english(barrons.rule2447, "The stem provides support for the plant").
pretty(barrons.rule2447, "isa(Plant, 'the plant') -> provide(Stem, Support).").
barrons.rule2447:: isa(A7S973-plant, "the plant") -> for(A4S973-support, A7S973-plant), isa(E3S973-provide, "provide"), agent(E3S973-provide, A2S973-stem), isa(A2S973-stem, "The stem"), object(E3S973-provide, A4S973-support), isa(A4S973-support, "support").
english(barrons.rule2448, "The stem provides support for the plant").
pretty(barrons.rule2448, "isa(provide, 'provides') -> provide(Stem, Support).").
barrons.rule2448:: isa(E3S973-provide, "provide") -> for(A4S973-support, A7S973-plant), isa(A7S973-plant, "the plant"), agent(E3S973-provide, A2S973-stem), isa(A2S973-stem, "The stem"), object(E3S973-provide, A4S973-support), isa(A4S973-support, "support").
english(barrons.rule2449, "The stem provides support for the plant").
pretty(barrons.rule2449, "isa(Stem, 'The stem') -> provide(Stem, Support).").
barrons.rule2449:: isa(A2S973-stem, "The stem") -> for(A4S973-support, A7S973-plant), isa(A7S973-plant, "the plant"), isa(E3S973-provide, "provide"), agent(E3S973-provide, A2S973-stem), object(E3S973-provide, A4S973-support), isa(A4S973-support, "support").
english(barrons.rule2450, "The stem provides support for the plant").
pretty(barrons.rule2450, "isa(Support, 'support for the plant') -> provide(Stem, Support).").
barrons.rule2450:: isa(A4S973-support, "support") -> for(A4S973-support, A7S973-plant), isa(A7S973-plant, "the plant"), isa(E3S973-provide, "provide"), agent(E3S973-provide, A2S973-stem), isa(A2S973-stem, "The stem"), object(E3S973-provide, A4S973-support).
english(barrons.rule2451, "The digestive system takes in nutrients").
pretty(barrons.rule2451, "isa(take, 'takes') -> take(System, In).").
barrons.rule2451:: isa(E4S975-take, "take") -> agent(E4S975-take, A3S975-system), isa(A3S975-system, "The digestive system"), object(E4S975-take, A5S975-in), isa(A5S975-in, "in nutrients").
english(barrons.rule2452, "The digestive system takes in nutrients").
pretty(barrons.rule2452, "isa(System, 'The digestive system') -> take(System, In).").
barrons.rule2452:: isa(A3S975-system, "The digestive system") -> isa(E4S975-take, "take"), agent(E4S975-take, A3S975-system), object(E4S975-take, A5S975-in), isa(A5S975-in, "in nutrients").
english(barrons.rule2453, "The digestive system takes in nutrients").
pretty(barrons.rule2453, "isa(In, 'in nutrients') -> take(System, In).").
barrons.rule2453:: isa(A5S975-in, "in nutrients") -> isa(E4S975-take, "take"), agent(E4S975-take, A3S975-system), isa(A3S975-system, "The digestive system"), object(E4S975-take, A5S975-in).
english(barrons.rule2454, "The respiratory system is responsible for breathing").
pretty(barrons.rule2454, "PURPOSE(systemize, breathe).").
barrons.rule2454:: isa(E3S976-system, "systemize") -> purpose(E3S976-system, E7S976-breathing), isa(E7S976-breathing, "breathe").
english(barrons.rule2455, "The respiratory system is responsible for breathing").
pretty(barrons.rule2455, "PURPOSE(systemize, breathe).").
barrons.rule2455:: isa(E7S976-breathing, "breathe") -> purpose(E3S976-system, E7S976-breathing), isa(E3S976-system, "systemize").
english(barrons.rule2456, "The Locomotion system is responsible for movement").
pretty(barrons.rule2456, "PURPOSE(systemize, move).").
barrons.rule2456:: isa(E3S978-system, "systemize") -> purpose(E3S978-system, E7S978-movement), isa(E7S978-movement, "move").
english(barrons.rule2457, "The Locomotion system is responsible for movement").
pretty(barrons.rule2457, "PURPOSE(systemize, move).").
barrons.rule2457:: isa(E7S978-movement, "move") -> purpose(E3S978-system, E7S978-movement), isa(E3S978-system, "systemize").
english(barrons.rule2458, "The urinary system eliminates chemical waste").
pretty(barrons.rule2458, "isa(eliminate, 'eliminates') -> eliminate(System, Waste).").
barrons.rule2458:: isa(E4S979-eliminate, "eliminate") -> agent(E4S979-eliminate, A3S979-system), isa(A3S979-system, "The urinary system"), object(E4S979-eliminate, A6S979-waste), isa(A6S979-waste, "chemical waste").
english(barrons.rule2459, "The urinary system eliminates chemical waste").
pretty(barrons.rule2459, "isa(System, 'The urinary system') -> eliminate(System, Waste).").
barrons.rule2459:: isa(A3S979-system, "The urinary system") -> isa(E4S979-eliminate, "eliminate"), agent(E4S979-eliminate, A3S979-system), object(E4S979-eliminate, A6S979-waste), isa(A6S979-waste, "chemical waste").
english(barrons.rule2460, "The urinary system eliminates chemical waste").
pretty(barrons.rule2460, "isa(Waste, 'chemical waste') -> eliminate(System, Waste).").
barrons.rule2460:: isa(A6S979-waste, "chemical waste") -> isa(E4S979-eliminate, "eliminate"), agent(E4S979-eliminate, A3S979-system), isa(A3S979-system, "The urinary system"), object(E4S979-eliminate, A6S979-waste).
english(barrons.rule2461, "Animals need air water and food to survive").
pretty(barrons.rule2461, "EFFECT(need(Animal, Air), survive(Animal)), Animal = 'Animals', Air = 'air'.").
barrons.rule2461:: isa(E2S981-need, "need"), agent(E2S981-need, A1S981-animal), isa(A1S981-animal, "Animals"), object(E2S981-need, A3S981-air), isa(A3S981-air, "air") -> effect(E2S981-need, E10S981-survive), isa(E10S981-survive, "survive"), agent(E10S981-survive, A1S981-animal).
english(barrons.rule2462, "Animals need air water and food to survive").
pretty(barrons.rule2462, "EFFECT(need(Animal, Air), survive(Animal)), Animal = 'Animals', Air = 'air'.").
barrons.rule2462:: isa(E10S981-survive, "survive"), agent(E10S981-survive, A1S981-animal), isa(A1S981-animal, "Animals") -> effect(E2S981-need, E10S981-survive), isa(E2S981-need, "need"), agent(E2S981-need, A1S981-animal), object(E2S981-need, A3S981-air), isa(A3S981-air, "air").
english(barrons.rule2463, "Animals need air water and food to survive").
pretty(barrons.rule2463, "EFFECT(need(Animal, Water), survive(Animal)), Animal = 'Animals', Water = 'water'.").
barrons.rule2463:: isa(E2S981-need, "need"), agent(E2S981-need, A1S981-animal), isa(A1S981-animal, "Animals"), object(E2S981-need, A5S981-water), isa(A5S981-water, "water") -> effect(E2S981-need, E10S981-survive), isa(E10S981-survive, "survive"), agent(E10S981-survive, A1S981-animal).
english(barrons.rule2464, "Animals need air water and food to survive").
pretty(barrons.rule2464, "EFFECT(need(Animal, Water), survive(Animal)), Animal = 'Animals', Water = 'water'.").
barrons.rule2464:: isa(E10S981-survive, "survive"), agent(E10S981-survive, A1S981-animal), isa(A1S981-animal, "Animals") -> effect(E2S981-need, E10S981-survive), isa(E2S981-need, "need"), agent(E2S981-need, A1S981-animal), object(E2S981-need, A5S981-water), isa(A5S981-water, "water").
english(barrons.rule2465, "Animals need air water and food to survive").
pretty(barrons.rule2465, "EFFECT(need(Animal, Food), survive(Animal)), Animal = 'Animals', Food = 'food'.").
barrons.rule2465:: isa(E2S981-need, "need"), agent(E2S981-need, A1S981-animal), isa(A1S981-animal, "Animals"), object(E2S981-need, A8S981-food), isa(A8S981-food, "food") -> effect(E2S981-need, E10S981-survive), isa(E10S981-survive, "survive"), agent(E10S981-survive, A1S981-animal).
english(barrons.rule2466, "Animals need air water and food to survive").
pretty(barrons.rule2466, "EFFECT(need(Animal, Food), survive(Animal)), Animal = 'Animals', Food = 'food'.").
barrons.rule2466:: isa(E10S981-survive, "survive"), agent(E10S981-survive, A1S981-animal), isa(A1S981-animal, "Animals") -> effect(E2S981-need, E10S981-survive), isa(E2S981-need, "need"), agent(E2S981-need, A1S981-animal), object(E2S981-need, A8S981-food), isa(A8S981-food, "food").
english(barrons.rule2467, "The urinary system is responsible for getting rid of chemical waste and water").
pretty(barrons.rule2467, "PURPOSE(systemize, rid_of(Waste, of(Water))), Waste = 'chemical waste', Water = 'water'.").
barrons.rule2467:: isa(E3S983-system, "systemize") -> purpose(E3S983-system, E8S983-rid), isa(E8S983-rid, "rid"), of(E8S983-rid, A11S983-waste), isa(A11S983-waste, "chemical waste"), of(E8S983-rid, A13S983-water), isa(A13S983-water, "water").
english(barrons.rule2468, "The urinary system is responsible for getting rid of chemical waste and water").
pretty(barrons.rule2468, "PURPOSE(systemize, rid_of(Waste, of(Water))), Waste = 'chemical waste', Water = 'water'.").
barrons.rule2468:: isa(E8S983-rid, "rid"), of(E8S983-rid, A11S983-waste), isa(A11S983-waste, "chemical waste"), of(E8S983-rid, A13S983-water), isa(A13S983-water, "water") -> purpose(E3S983-system, E8S983-rid), isa(E3S983-system, "systemize").
english(barrons.rule2469, "The locomotion system protects the organs and provides structure for the body").
pretty(barrons.rule2469, "isa(protect, 'protects') -> protect(System, Organ).").
barrons.rule2469:: isa(E4S984-protect, "protect") -> agent(E4S984-protect, A3S984-system), isa(A3S984-system, "The locomotion system"), object(E4S984-protect, A6S984-organ), isa(A6S984-organ, "the organs").
english(barrons.rule2470, "The locomotion system protects the organs and provides structure for the body").
pretty(barrons.rule2470, "isa(System, 'The locomotion system') -> protect(System, Organ).").
barrons.rule2470:: isa(A3S984-system, "The locomotion system") -> isa(E4S984-protect, "protect"), agent(E4S984-protect, A3S984-system), object(E4S984-protect, A6S984-organ), isa(A6S984-organ, "the organs").
english(barrons.rule2471, "The locomotion system protects the organs and provides structure for the body").
pretty(barrons.rule2471, "isa(Organ, 'the organs') -> protect(System, Organ).").
barrons.rule2471:: isa(A6S984-organ, "the organs") -> isa(E4S984-protect, "protect"), agent(E4S984-protect, A3S984-system), isa(A3S984-system, "The locomotion system"), object(E4S984-protect, A6S984-organ).
english(barrons.rule2472, "All animals have different structures that have different jobs or functions to help in growth survival and reproduction").
pretty(barrons.rule2472, "isa(have, 'have') -> have(Animal, Structure).").
barrons.rule2472:: isa(E3S985-have, "have") -> agent(E3S985-have, A2S985-animal), isa(A2S985-animal, "All animals"), object(E3S985-have, A5S985-structure), isa(A5S985-structure, "different structures").
english(barrons.rule2473, "All animals have different structures that have different jobs or functions to help in growth survival and reproduction").
pretty(barrons.rule2473, "isa(Animal, 'All animals') -> have(Animal, Structure).").
barrons.rule2473:: isa(A2S985-animal, "All animals") -> isa(E3S985-have, "have"), agent(E3S985-have, A2S985-animal), object(E3S985-have, A5S985-structure), isa(A5S985-structure, "different structures").
english(barrons.rule2474, "All animals have different structures that have different jobs or functions to help in growth survival and reproduction").
pretty(barrons.rule2474, "isa(Structure, 'different structures') -> have(Animal, Structure).").
barrons.rule2474:: isa(A5S985-structure, "different structures") -> isa(E3S985-have, "have"), agent(E3S985-have, A2S985-animal), isa(A2S985-animal, "All animals"), object(E3S985-have, A5S985-structure).
english(barrons.rule2475, "Ways that animals respond to changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes include hibernation migration growing thick fur or shivering").
pretty(barrons.rule2475, "isa(include, 'include') -> include(Ways, Hibernation).").
barrons.rule2475:: isa(E15S986-include, "include") -> agent(E15S986-include, A1S986-Ways), isa(A1S986-Ways, "Ways"), object(E15S986-include, A16S986-hibernation), isa(A16S986-hibernation, "hibernation").
english(barrons.rule2476, "Ways that animals respond to changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes include hibernation migration growing thick fur or shivering").
pretty(barrons.rule2476, "isa(Ways, 'Ways') -> include(Ways, Hibernation).").
barrons.rule2476:: isa(A1S986-Ways, "Ways") -> isa(E15S986-include, "include"), agent(E15S986-include, A1S986-Ways), object(E15S986-include, A16S986-hibernation), isa(A16S986-hibernation, "hibernation").
english(barrons.rule2477, "Ways that animals respond to changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes include hibernation migration growing thick fur or shivering").
pretty(barrons.rule2477, "isa(Hibernation, 'hibernation') -> include(Ways, Hibernation).").
barrons.rule2477:: isa(A16S986-hibernation, "hibernation") -> isa(E15S986-include, "include"), agent(E15S986-include, A1S986-Ways), isa(A1S986-Ways, "Ways"), object(E15S986-include, A16S986-hibernation).
english(barrons.rule2478, "Ways that animals respond to changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes include hibernation migration growing thick fur or shivering").
pretty(barrons.rule2478, "isa(include, 'include') -> include(Ways, Migration).").
barrons.rule2478:: isa(E15S986-include, "include") -> agent(E15S986-include, A1S986-Ways), isa(A1S986-Ways, "Ways"), object(E15S986-include, A18S986-migration), isa(A18S986-migration, "migration").
english(barrons.rule2479, "Ways that animals respond to changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes include hibernation migration growing thick fur or shivering").
pretty(barrons.rule2479, "isa(Ways, 'Ways') -> include(Ways, Migration).").
barrons.rule2479:: isa(A1S986-Ways, "Ways") -> isa(E15S986-include, "include"), agent(E15S986-include, A1S986-Ways), object(E15S986-include, A18S986-migration), isa(A18S986-migration, "migration").
english(barrons.rule2480, "Ways that animals respond to changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes include hibernation migration growing thick fur or shivering").
pretty(barrons.rule2480, "isa(Migration, 'migration') -> include(Ways, Migration).").
barrons.rule2480:: isa(A18S986-migration, "migration") -> isa(E15S986-include, "include"), agent(E15S986-include, A1S986-Ways), isa(A1S986-Ways, "Ways"), object(E15S986-include, A18S986-migration).
english(barrons.rule2481, "Ways that animals respond to changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes include hibernation migration growing thick fur or shivering").
pretty(barrons.rule2481, "isa(include, 'include') -> include(Ways, Fur).").
barrons.rule2481:: isa(E15S986-include, "include") -> agent(E15S986-include, A1S986-Ways), isa(A1S986-Ways, "Ways"), object(E15S986-include, A22S986-fur), isa(A22S986-fur, "growing thick fur").
english(barrons.rule2482, "Ways that animals respond to changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes include hibernation migration growing thick fur or shivering").
pretty(barrons.rule2482, "isa(Ways, 'Ways') -> include(Ways, Fur).").
barrons.rule2482:: isa(A1S986-Ways, "Ways") -> isa(E15S986-include, "include"), agent(E15S986-include, A1S986-Ways), object(E15S986-include, A22S986-fur), isa(A22S986-fur, "growing thick fur").
english(barrons.rule2483, "Ways that animals respond to changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes include hibernation migration growing thick fur or shivering").
pretty(barrons.rule2483, "isa(Fur, 'growing thick fur') -> include(Ways, Fur).").
barrons.rule2483:: isa(A22S986-fur, "growing thick fur") -> isa(E15S986-include, "include"), agent(E15S986-include, A1S986-Ways), isa(A1S986-Ways, "Ways"), object(E15S986-include, A22S986-fur).
english(barrons.rule2484, "Ways that animals respond to changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes include hibernation migration growing thick fur or shivering").
pretty(barrons.rule2484, "isa(include, 'include') -> include(Ways, Shiver).").
barrons.rule2484:: isa(E15S986-include, "include") -> agent(E15S986-include, A1S986-Ways), isa(A1S986-Ways, "Ways"), object(E15S986-include, A25S986-shiver), isa(A25S986-shiver, "shivering").
english(barrons.rule2485, "Ways that animals respond to changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes include hibernation migration growing thick fur or shivering").
pretty(barrons.rule2485, "isa(Ways, 'Ways') -> include(Ways, Shiver).").
barrons.rule2485:: isa(A1S986-Ways, "Ways") -> isa(E15S986-include, "include"), agent(E15S986-include, A1S986-Ways), object(E15S986-include, A25S986-shiver), isa(A25S986-shiver, "shivering").
english(barrons.rule2486, "Ways that animals respond to changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes include hibernation migration growing thick fur or shivering").
pretty(barrons.rule2486, "isa(Shiver, 'shivering') -> include(Ways, Shiver).").
barrons.rule2486:: isa(A25S986-shiver, "shivering") -> isa(E15S986-include, "include"), agent(E15S986-include, A1S986-Ways), isa(A1S986-Ways, "Ways"), object(E15S986-include, A25S986-shiver).
english(barrons.rule2487, "Ways that animals respond to changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes include hibernation migration growing thick fur or shivering").
pretty(barrons.rule2487, "EXAMPLE(Change, Change), Change = 'seasonal changes', Change = 'changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes'.").
barrons.rule2487:: isa(A14S986-change, "seasonal changes") -> example(A14S986-change, A6S986-change), in(A6S986-change, A9S986-environment), isa(A9S986-environment, "their[different structures that have different jobs or functions to help with growth survival and reproduction] environment"), such_as(A6S986-change, A14S986-change), isa(A6S986-change, "changes").
english(barrons.rule2488, "Ways that animals respond to changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes include hibernation migration growing thick fur or shivering").
pretty(barrons.rule2488, "EXAMPLE(Change, Change), Change = 'seasonal changes', Change = 'changes in their[different structures that have different jobs or functions to help with growth survival and reproduction] environment such as seasonal changes'.").
barrons.rule2488:: in(A6S986-change, A9S986-environment), isa(A9S986-environment, "their[different structures that have different jobs or functions to help with growth survival and reproduction] environment"), such_as(A6S986-change, A14S986-change), isa(A14S986-change, "seasonal changes"), isa(A6S986-change, "changes") -> example(A14S986-change, A6S986-change).
english(barrons.rule2489, "Some animals grow thick fur in winter to stay warm").
pretty(barrons.rule2489, "EFFECT(grow(Animal, Fur), stay(Animal, Warm)), Animal = 'Some animals', Fur = 'fur', Warm = 'warm'.").
barrons.rule2489:: in(A5S989-fur, A7S989-winter), isa(A7S989-winter, "winter"), isa(E3S989-grow, "grow"), agent(E3S989-grow, A2S989-animal), isa(A2S989-animal, "Some animals"), object(E3S989-grow, A5S989-fur), isa(A5S989-fur, "fur") -> effect(E3S989-grow, E9S989-stay), isa(E9S989-stay, "stay"), agent(E9S989-stay, A2S989-animal), object(E9S989-stay, A10S989-warm), isa(A10S989-warm, "warm").
english(barrons.rule2490, "Some animals grow thick fur in winter to stay warm").
pretty(barrons.rule2490, "EFFECT(grow(Animal, Fur), stay(Animal, Warm)), Animal = 'Some animals', Fur = 'fur', Warm = 'warm'.").
barrons.rule2490:: isa(E9S989-stay, "stay"), agent(E9S989-stay, A2S989-animal), isa(A2S989-animal, "Some animals"), object(E9S989-stay, A10S989-warm), isa(A10S989-warm, "warm") -> effect(E3S989-grow, E9S989-stay), in(A5S989-fur, A7S989-winter), isa(A7S989-winter, "winter"), isa(E3S989-grow, "grow"), agent(E3S989-grow, A2S989-animal), object(E3S989-grow, A5S989-fur), isa(A5S989-fur, "fur").
english(barrons.rule2491, "Some animals increase body fat in winter to stay warm").
pretty(barrons.rule2491, "EFFECT(increase(Animal, Fat), stay_in(Animal, Warm, Winter)), Animal = 'Some animals', Fat = 'body fat', Warm = 'in winter warm', Winter = 'winter'.").
barrons.rule2491:: isa(E3S990-increase, "increase"), agent(E3S990-increase, A2S990-animal), isa(A2S990-animal, "Some animals"), object(E3S990-increase, A5S990-fat), isa(A5S990-fat, "body fat") -> effect(E3S990-increase, E9S990-stay), isa(E9S990-stay, "stay"), agent(E9S990-stay, A2S990-animal), object(E9S990-stay, A10S990-warm), isa(A10S990-warm, "warm"), in(E9S990-stay, A7S990-winter), isa(A7S990-winter, "winter").
english(barrons.rule2492, "Some animals increase body fat in winter to stay warm").
pretty(barrons.rule2492, "EFFECT(increase(Animal, Fat), stay_in(Animal, Warm, Winter)), Animal = 'Some animals', Fat = 'body fat', Warm = 'in winter warm', Winter = 'winter'.").
barrons.rule2492:: isa(E9S990-stay, "stay"), agent(E9S990-stay, A2S990-animal), isa(A2S990-animal, "Some animals"), object(E9S990-stay, A10S990-warm), isa(A10S990-warm, "warm"), in(E9S990-stay, A7S990-winter), isa(A7S990-winter, "winter") -> effect(E3S990-increase, E9S990-stay), isa(E3S990-increase, "increase"), agent(E3S990-increase, A2S990-animal), object(E3S990-increase, A5S990-fat), isa(A5S990-fat, "body fat").
english(barrons.rule2493, "Shivering is shaking in order to keep the body warm").
pretty(barrons.rule2493, "EFFECT(shake(Shiver), keep(Shiver, Warm)), Shiver = 'Shivering', Warm = 'warm'.").
barrons.rule2493:: isa(E3S991-shake, "shake"), agent(E3S991-shake, A1S991-shiver), isa(A1S991-shiver, "Shivering") -> effect(E3S991-shake, E7S991-keep), isa(E7S991-keep, "keep"), agent(E7S991-keep, A1S991-shiver), arg(E7S991-keep, A10S991-warm), isa(A10S991-warm, "the body warm").
english(barrons.rule2494, "Shivering is shaking in order to keep the body warm").
pretty(barrons.rule2494, "EFFECT(shake(Shiver), keep(Shiver, Warm)), Shiver = 'Shivering', Warm = 'warm'.").
barrons.rule2494:: isa(E7S991-keep, "keep"), agent(E7S991-keep, A1S991-shiver), isa(A1S991-shiver, "Shivering"), arg(E7S991-keep, A10S991-warm), isa(A10S991-warm, "the body warm") -> effect(E3S991-shake, E7S991-keep), isa(E3S991-shake, "shake"), agent(E3S991-shake, A1S991-shiver).
english(barrons.rule2495, "When animals move to a warmer climate to avoid the change in seasons we call this migration").
pretty(barrons.rule2495, "WHEN(call(We, Migration), move_to(Animal, Climate)), We = 'we', Migration = 'this migration', Animal = 'animals', Climate = 'a warmer climate'.").
barrons.rule2495:: isa(E16S992-call, "call"), agent(E16S992-call, A15S992-we), isa(A15S992-we, "we"), object(E16S992-call, A18S992-migration), isa(A18S992-migration, "this migration") -> when(E16S992-call, E3S992-move), isa(E3S992-move, "move"), agent(E3S992-move, A2S992-animal), isa(A2S992-animal, "animals"), to(E3S992-move, A7S992-climate), isa(A7S992-climate, "a warmer climate").
english(barrons.rule2496, "When animals move to a warmer climate to avoid the change in seasons we call this migration").
pretty(barrons.rule2496, "WHEN(call(We, Migration), move_to(Animal, Climate)), We = 'we', Migration = 'this migration', Animal = 'animals', Climate = 'a warmer climate'.").
barrons.rule2496:: isa(E3S992-move, "move"), agent(E3S992-move, A2S992-animal), isa(A2S992-animal, "animals"), to(E3S992-move, A7S992-climate), isa(A7S992-climate, "a warmer climate") -> when(E16S992-call, E3S992-move), isa(E16S992-call, "call"), agent(E16S992-call, A15S992-we), isa(A15S992-we, "we"), object(E16S992-call, A18S992-migration), isa(A18S992-migration, "this migration").
english(barrons.rule2497, "When animals move to a warmer climate to avoid the change in seasons we call this migration").
pretty(barrons.rule2497, "EFFECT(move_to(Animal, Climate), avoid(Animal, Change)), Animal = 'animals', Climate = 'a warmer climate', Change = 'the change in seasons'.").
barrons.rule2497:: isa(E3S992-move, "move"), agent(E3S992-move, A2S992-animal), isa(A2S992-animal, "animals"), to(E3S992-move, A7S992-climate), isa(A7S992-climate, "a warmer climate") -> effect(E3S992-move, E9S992-avoid), in(A11S992-change, A13S992-season), isa(A13S992-season, "seasons"), isa(E9S992-avoid, "avoid"), agent(E9S992-avoid, A2S992-animal), object(E9S992-avoid, A11S992-change), isa(A11S992-change, "the change").
english(barrons.rule2498, "When animals move to a warmer climate to avoid the change in seasons we call this migration").
pretty(barrons.rule2498, "EFFECT(move_to(Animal, Climate), avoid(Animal, Change)), Animal = 'animals', Climate = 'a warmer climate', Change = 'the change in seasons'.").
barrons.rule2498:: in(A11S992-change, A13S992-season), isa(A13S992-season, "seasons"), isa(E9S992-avoid, "avoid"), agent(E9S992-avoid, A2S992-animal), isa(A2S992-animal, "animals"), object(E9S992-avoid, A11S992-change), isa(A11S992-change, "the change") -> effect(E3S992-move, E9S992-avoid), isa(E3S992-move, "move"), agent(E3S992-move, A2S992-animal), to(E3S992-move, A7S992-climate), isa(A7S992-climate, "a warmer climate").
english(barrons.rule2499, "Dogs have legs to help them[dogs] move").
pretty(barrons.rule2499, "EFFECT(have(Dog, Leg), move(Dog)), Dog = 'Dogs', Leg = 'legs', Dog = 'dogs'.").
barrons.rule2499:: isa(E2S994-have, "have"), agent(E2S994-have, A1S994-dog), isa(A1S994-dog, "Dogs"), object(E2S994-have, A3S994-leg), isa(A3S994-leg, "legs") -> effect(E2S994-have, E7S994-move), isa(E7S994-move, "move"), agent(E7S994-move, A7S252-dog), isa(A7S252-dog, "dogs").
english(barrons.rule2500, "Dogs have legs to help them[dogs] move").
pretty(barrons.rule2500, "EFFECT(have(Dog, Leg), move(Dog)), Dog = 'Dogs', Leg = 'legs', Dog = 'dogs'.").
barrons.rule2500:: isa(E7S994-move, "move"), agent(E7S994-move, A7S252-dog), isa(A7S252-dog, "dogs") -> effect(E2S994-have, E7S994-move), isa(E2S994-have, "have"), agent(E2S994-have, A1S994-dog), isa(A1S994-dog, "Dogs"), object(E2S994-have, A3S994-leg), isa(A3S994-leg, "legs").
english(barrons.rule2501, "Birds have wings to help them[birds] move").
pretty(barrons.rule2501, "EFFECT(have(Bird, Wing, Help), move(Bird)), Bird = 'Birds', Wing = 'wings', Help = 'help them[birds] move', Bird = 'birds'.").
barrons.rule2501:: isa(E2S995-have, "have"), agent(E2S995-have, A1S995-bird), isa(A1S995-bird, "Birds"), object(E2S995-have, A3S995-wing), isa(A3S995-wing, "wings"), arg(E2S995-have, A5S995-help), isa(A5S995-help, "to help them[birds] move") -> effect(E2S995-have, E7S995-move), isa(E7S995-move, "move"), agent(E7S995-move, A9S107-bird), isa(A9S107-bird, "birds").
english(barrons.rule2502, "Birds have wings to help them[birds] move").
pretty(barrons.rule2502, "EFFECT(have(Bird, Wing, Help), move(Bird)), Bird = 'Birds', Wing = 'wings', Help = 'help them[birds] move', Bird = 'birds'.").
barrons.rule2502:: isa(E7S995-move, "move"), agent(E7S995-move, A9S107-bird), isa(A9S107-bird, "birds") -> effect(E2S995-have, E7S995-move), isa(E2S995-have, "have"), agent(E2S995-have, A1S995-bird), isa(A1S995-bird, "Birds"), object(E2S995-have, A3S995-wing), isa(A3S995-wing, "wings"), arg(E2S995-have, A5S995-help), isa(A5S995-help, "to help them[birds] move").
english(barrons.rule2503, "Fish have fins to help them[their fins] move").
pretty(barrons.rule2503, "EFFECT(have(Fish, Fin, Help), move(Fin)), Fish = 'Fish', Fin = 'fins', Help = 'help them[their fins] move', Fin = 'their[birds] fins'.").
barrons.rule2503:: isa(E2S996-have, "have"), agent(E2S996-have, A1S996-fish), isa(A1S996-fish, "Fish"), object(E2S996-have, A3S996-fin), isa(A3S996-fin, "fins"), arg(E2S996-have, A5S996-help), isa(A5S996-help, "to help them[their fins] move") -> effect(E2S996-have, E7S996-move), isa(E7S996-move, "move"), agent(E7S996-move, A9S194-fin), isa(A9S194-fin, "their[birds] fins").
english(barrons.rule2504, "Fish have fins to help them[their fins] move").
pretty(barrons.rule2504, "EFFECT(have(Fish, Fin, Help), move(Fin)), Fish = 'Fish', Fin = 'fins', Help = 'help them[their fins] move', Fin = 'their[birds] fins'.").
barrons.rule2504:: isa(E7S996-move, "move"), agent(E7S996-move, A9S194-fin), isa(A9S194-fin, "their[birds] fins") -> effect(E2S996-have, E7S996-move), isa(E2S996-have, "have"), agent(E2S996-have, A1S996-fish), isa(A1S996-fish, "Fish"), object(E2S996-have, A3S996-fin), isa(A3S996-fin, "fins"), arg(E2S996-have, A5S996-help), isa(A5S996-help, "to help them[their fins] move").
english(barrons.rule2505, "Some animals have claws spines or shells as a defense mechanism").
pretty(barrons.rule2505, "isa(have, 'have') -> have_as(Animal, Claw, Mechanism).").
barrons.rule2505:: isa(E3S997-have, "have") -> agent(E3S997-have, A2S997-animal), isa(A2S997-animal, "Some animals"), object(E3S997-have, A4S997-claw), isa(A4S997-claw, "claws"), as(E3S997-have, A13S997-mechanism), isa(A13S997-mechanism, "a defense mechanism").
english(barrons.rule2506, "Some animals have claws spines or shells as a defense mechanism").
pretty(barrons.rule2506, "isa(Animal, 'Some animals') -> have_as(Animal, Claw, Mechanism).").
barrons.rule2506:: isa(A2S997-animal, "Some animals") -> isa(E3S997-have, "have"), agent(E3S997-have, A2S997-animal), object(E3S997-have, A4S997-claw), isa(A4S997-claw, "claws"), as(E3S997-have, A13S997-mechanism), isa(A13S997-mechanism, "a defense mechanism").
english(barrons.rule2507, "Some animals have claws spines or shells as a defense mechanism").
pretty(barrons.rule2507, "isa(Claw, 'claws') -> have_as(Animal, Claw, Mechanism).").
barrons.rule2507:: isa(A4S997-claw, "claws") -> isa(E3S997-have, "have"), agent(E3S997-have, A2S997-animal), isa(A2S997-animal, "Some animals"), object(E3S997-have, A4S997-claw), as(E3S997-have, A13S997-mechanism), isa(A13S997-mechanism, "a defense mechanism").
english(barrons.rule2508, "Some animals have claws spines or shells as a defense mechanism").
pretty(barrons.rule2508, "isa(Mechanism, 'a defense mechanism') -> have_as(Animal, Claw, Mechanism).").
barrons.rule2508:: isa(A13S997-mechanism, "a defense mechanism") -> isa(E3S997-have, "have"), agent(E3S997-have, A2S997-animal), isa(A2S997-animal, "Some animals"), object(E3S997-have, A4S997-claw), isa(A4S997-claw, "claws"), as(E3S997-have, A13S997-mechanism).
english(barrons.rule2509, "Some animals have claws spines or shells as a defense mechanism").
pretty(barrons.rule2509, "isa(have, 'have') -> have_as(Animal, Spine, Mechanism).").
barrons.rule2509:: isa(E3S997-have, "have") -> agent(E3S997-have, A2S997-animal), isa(A2S997-animal, "Some animals"), object(E3S997-have, A6S997-spine), isa(A6S997-spine, "spines"), as(E3S997-have, A13S997-mechanism), isa(A13S997-mechanism, "a defense mechanism").
english(barrons.rule2510, "Some animals have claws spines or shells as a defense mechanism").
pretty(barrons.rule2510, "isa(Animal, 'Some animals') -> have_as(Animal, Spine, Mechanism).").
barrons.rule2510:: isa(A2S997-animal, "Some animals") -> isa(E3S997-have, "have"), agent(E3S997-have, A2S997-animal), object(E3S997-have, A6S997-spine), isa(A6S997-spine, "spines"), as(E3S997-have, A13S997-mechanism), isa(A13S997-mechanism, "a defense mechanism").
english(barrons.rule2511, "Some animals have claws spines or shells as a defense mechanism").
pretty(barrons.rule2511, "isa(Spine, 'spines') -> have_as(Animal, Spine, Mechanism).").
barrons.rule2511:: isa(A6S997-spine, "spines") -> isa(E3S997-have, "have"), agent(E3S997-have, A2S997-animal), isa(A2S997-animal, "Some animals"), object(E3S997-have, A6S997-spine), as(E3S997-have, A13S997-mechanism), isa(A13S997-mechanism, "a defense mechanism").
english(barrons.rule2512, "Some animals have claws spines or shells as a defense mechanism").
pretty(barrons.rule2512, "isa(Mechanism, 'a defense mechanism') -> have_as(Animal, Spine, Mechanism).").
barrons.rule2512:: isa(A13S997-mechanism, "a defense mechanism") -> isa(E3S997-have, "have"), agent(E3S997-have, A2S997-animal), isa(A2S997-animal, "Some animals"), object(E3S997-have, A6S997-spine), isa(A6S997-spine, "spines"), as(E3S997-have, A13S997-mechanism).
english(barrons.rule2513, "Some animals have claws spines or shells as a defense mechanism").
pretty(barrons.rule2513, "isa(have, 'have') -> have_as(Animal, Shell, Mechanism).").
barrons.rule2513:: isa(E3S997-have, "have") -> agent(E3S997-have, A2S997-animal), isa(A2S997-animal, "Some animals"), object(E3S997-have, A9S997-shell), isa(A9S997-shell, "shells"), as(E3S997-have, A13S997-mechanism), isa(A13S997-mechanism, "a defense mechanism").
english(barrons.rule2514, "Some animals have claws spines or shells as a defense mechanism").
pretty(barrons.rule2514, "isa(Animal, 'Some animals') -> have_as(Animal, Shell, Mechanism).").
barrons.rule2514:: isa(A2S997-animal, "Some animals") -> isa(E3S997-have, "have"), agent(E3S997-have, A2S997-animal), object(E3S997-have, A9S997-shell), isa(A9S997-shell, "shells"), as(E3S997-have, A13S997-mechanism), isa(A13S997-mechanism, "a defense mechanism").
english(barrons.rule2515, "Some animals have claws spines or shells as a defense mechanism").
pretty(barrons.rule2515, "isa(Shell, 'shells') -> have_as(Animal, Shell, Mechanism).").
barrons.rule2515:: isa(A9S997-shell, "shells") -> isa(E3S997-have, "have"), agent(E3S997-have, A2S997-animal), isa(A2S997-animal, "Some animals"), object(E3S997-have, A9S997-shell), as(E3S997-have, A13S997-mechanism), isa(A13S997-mechanism, "a defense mechanism").
english(barrons.rule2516, "Some animals have claws spines or shells as a defense mechanism").
pretty(barrons.rule2516, "isa(Mechanism, 'a defense mechanism') -> have_as(Animal, Shell, Mechanism).").
barrons.rule2516:: isa(A13S997-mechanism, "a defense mechanism") -> isa(E3S997-have, "have"), agent(E3S997-have, A2S997-animal), isa(A2S997-animal, "Some animals"), object(E3S997-have, A9S997-shell), isa(A9S997-shell, "shells"), as(E3S997-have, A13S997-mechanism).
english(barrons.rule2517, "Some animals give off a smell as a defense mechanism").
pretty(barrons.rule2517, "isa(Mechanism, 'a defense mechanism') -> give off(Animal, Smell).").
barrons.rule2517:: isa(A10S998-mechanism, "a defense mechanism") -> as(A6S998-smell, A10S998-mechanism), isa(E3S998-give, "give off"), agent(E3S998-give, A2S998-animal), isa(A2S998-animal, "Some animals"), object(E3S998-give, A6S998-smell), isa(A6S998-smell, "a smell").
english(barrons.rule2518, "Some animals give off a smell as a defense mechanism").
pretty(barrons.rule2518, "isa(give off, 'give off') -> give off(Animal, Smell).").
barrons.rule2518:: isa(E3S998-give, "give off") -> as(A6S998-smell, A10S998-mechanism), isa(A10S998-mechanism, "a defense mechanism"), agent(E3S998-give, A2S998-animal), isa(A2S998-animal, "Some animals"), object(E3S998-give, A6S998-smell), isa(A6S998-smell, "a smell").
english(barrons.rule2519, "Some animals give off a smell as a defense mechanism").
pretty(barrons.rule2519, "isa(Animal, 'Some animals') -> give off(Animal, Smell).").
barrons.rule2519:: isa(A2S998-animal, "Some animals") -> as(A6S998-smell, A10S998-mechanism), isa(A10S998-mechanism, "a defense mechanism"), isa(E3S998-give, "give off"), agent(E3S998-give, A2S998-animal), object(E3S998-give, A6S998-smell), isa(A6S998-smell, "a smell").
english(barrons.rule2520, "Some animals give off a smell as a defense mechanism").
pretty(barrons.rule2520, "isa(Smell, 'a smell as a defense mechanism') -> give off(Animal, Smell).").
barrons.rule2520:: isa(A6S998-smell, "a smell") -> as(A6S998-smell, A10S998-mechanism), isa(A10S998-mechanism, "a defense mechanism"), isa(E3S998-give, "give off"), agent(E3S998-give, A2S998-animal), isa(A2S998-animal, "Some animals"), object(E3S998-give, A6S998-smell).
english(barrons.rule2521, "Animals that change color or are of a color similar to their[Some animals] environment can camouflage themselves so that they[themselves] can not be easily seen").
pretty(barrons.rule2521, "EFFECT(camouflage(Animal), not see(Themselves, Easily)), Animal = 'Animals', Themselves = 'themselves', Easily = 'easily'.").
barrons.rule2521:: isa(E15S999-camouflage, "camouflage"), agent(E15S999-camouflage, A1S999-animal), isa(A1S999-animal, "Animals") -> effect(E15S999-camouflage, E24S999-see), isa(E24S999-see, "not see"), object(E24S999-see, A16S999-themselves), isa(A16S999-themselves, "themselves"), arg(E24S999-see, A23S999-easily), isa(A23S999-easily, "easily").
english(barrons.rule2522, "Animals that change color or are of a color similar to their[Some animals] environment can camouflage themselves so that they[themselves] can not be easily seen").
pretty(barrons.rule2522, "EFFECT(camouflage(Animal), not see(Themselves, Easily)), Animal = 'Animals', Themselves = 'themselves', Easily = 'easily'.").
barrons.rule2522:: isa(E24S999-see, "not see"), object(E24S999-see, A16S999-themselves), isa(A16S999-themselves, "themselves"), arg(E24S999-see, A23S999-easily), isa(A23S999-easily, "easily") -> effect(E15S999-camouflage, E24S999-see), isa(E15S999-camouflage, "camouflage"), agent(E15S999-camouflage, A1S999-animal), isa(A1S999-animal, "Animals").
english(barrons.rule2523, "A giraffe 's long neck is a trait that can be considered an adaptation").
pretty(barrons.rule2523, "EXAMPLE(Neck, consider(Neck, Adaptation)), Neck = 'A giraffe ’s long neck', Adaptation = 'an adaptation'.").
barrons.rule2523:: isa(A5S1000-neck, "A giraffe 's long neck") -> example(A5S1000-neck, E12S1000-consider), isa(E12S1000-consider, "consider"), object(E12S1000-consider, A5S1000-neck), arg(E12S1000-consider, A14S1000-adaptation), isa(A14S1000-adaptation, "an adaptation").
english(barrons.rule2524, "A giraffe 's long neck is a trait that can be considered an adaptation").
pretty(barrons.rule2524, "EXAMPLE(Neck, consider(Neck, Adaptation)), Neck = 'A giraffe ’s long neck', Adaptation = 'an adaptation'.").
barrons.rule2524:: isa(E12S1000-consider, "consider"), object(E12S1000-consider, A5S1000-neck), isa(A5S1000-neck, "A giraffe 's long neck"), arg(E12S1000-consider, A14S1000-adaptation), isa(A14S1000-adaptation, "an adaptation") -> example(A5S1000-neck, E12S1000-consider).
english(barrons.rule2525, "A giraffe 's long neck is a trait that can be considered an adaptation").
pretty(barrons.rule2525, "EXAMPLE(Neck, consider(Trait, Adaptation)), Neck = 'A giraffe ’s long neck', Trait = 'a trait', Adaptation = 'an adaptation'.").
barrons.rule2525:: isa(A5S1000-neck, "A giraffe 's long neck") -> example(A5S1000-neck, E12S1000-consider), isa(E12S1000-consider, "consider"), object(E12S1000-consider, A8S1000-trait), isa(A8S1000-trait, "a trait"), arg(E12S1000-consider, A14S1000-adaptation), isa(A14S1000-adaptation, "an adaptation").
english(barrons.rule2526, "A giraffe 's long neck is a trait that can be considered an adaptation").
pretty(barrons.rule2526, "EXAMPLE(Neck, consider(Trait, Adaptation)), Neck = 'A giraffe ’s long neck', Trait = 'a trait', Adaptation = 'an adaptation'.").
barrons.rule2526:: isa(E12S1000-consider, "consider"), object(E12S1000-consider, A8S1000-trait), isa(A8S1000-trait, "a trait"), arg(E12S1000-consider, A14S1000-adaptation), isa(A14S1000-adaptation, "an adaptation") -> example(A5S1000-neck, E12S1000-consider), isa(A5S1000-neck, "A giraffe 's long neck").
english(barrons.rule2527, "A giraffe 's long neck is a trait that can be considered an adaptation").
pretty(barrons.rule2527, "EXAMPLE(Neck, Trait), Neck = 'A giraffe ’s long neck', Trait = 'a trait'.").
barrons.rule2527:: isa(A5S1000-neck, "A giraffe 's long neck") -> example(A5S1000-neck, A8S1000-trait), isa(A8S1000-trait, "a trait").
english(barrons.rule2528, "A giraffe 's long neck is a trait that can be considered an adaptation").
pretty(barrons.rule2528, "EXAMPLE(Neck, Trait), Neck = 'A giraffe ’s long neck', Trait = 'a trait'.").
barrons.rule2528:: isa(A8S1000-trait, "a trait") -> example(A5S1000-neck, A8S1000-trait), isa(A5S1000-neck, "A giraffe 's long neck").
english(barrons.rule2529, "A fish has a flipper or fin that helps them[animals with gills] swim").
pretty(barrons.rule2529, "EFFECT(have(Fish, Flipper), swim(Animal)), Fish = 'A fish', Flipper = 'a flipper', Animal = 'animals with gills'.").
barrons.rule2529:: isa(E3S1003-have, "have"), agent(E3S1003-have, A2S1003-fish), isa(A2S1003-fish, "A fish"), object(E3S1003-have, A5S1003-flipper), isa(A5S1003-flipper, "a flipper") -> effect(E3S1003-have, E11S1003-swim), with(A4S1002-animal, A6S1002-gill), isa(A6S1002-gill, "gills"), isa(E11S1003-swim, "swim"), agent(E11S1003-swim, A4S1002-animal), isa(A4S1002-animal, "animals").
english(barrons.rule2530, "A fish has a flipper or fin that helps them[animals with gills] swim").
pretty(barrons.rule2530, "EFFECT(have(Fish, Flipper), swim(Animal)), Fish = 'A fish', Flipper = 'a flipper', Animal = 'animals with gills'.").
barrons.rule2530:: with(A4S1002-animal, A6S1002-gill), isa(A6S1002-gill, "gills"), isa(E11S1003-swim, "swim"), agent(E11S1003-swim, A4S1002-animal), isa(A4S1002-animal, "animals") -> effect(E3S1003-have, E11S1003-swim), isa(E3S1003-have, "have"), agent(E3S1003-have, A2S1003-fish), isa(A2S1003-fish, "A fish"), object(E3S1003-have, A5S1003-flipper), isa(A5S1003-flipper, "a flipper").
english(barrons.rule2531, "A fish has a flipper or fin that helps them[animals with gills] swim").
pretty(barrons.rule2531, "EFFECT(have(Fish, Fin), swim(Animal)), Fish = 'A fish', Fin = 'fin', Animal = 'animals with gills'.").
barrons.rule2531:: isa(E3S1003-have, "have"), agent(E3S1003-have, A2S1003-fish), isa(A2S1003-fish, "A fish"), object(E3S1003-have, A7S1003-fin), isa(A7S1003-fin, "fin") -> effect(E3S1003-have, E11S1003-swim), with(A4S1002-animal, A6S1002-gill), isa(A6S1002-gill, "gills"), isa(E11S1003-swim, "swim"), agent(E11S1003-swim, A4S1002-animal), isa(A4S1002-animal, "animals").
english(barrons.rule2532, "A fish has a flipper or fin that helps them[animals with gills] swim").
pretty(barrons.rule2532, "EFFECT(have(Fish, Fin), swim(Animal)), Fish = 'A fish', Fin = 'fin', Animal = 'animals with gills'.").
barrons.rule2532:: with(A4S1002-animal, A6S1002-gill), isa(A6S1002-gill, "gills"), isa(E11S1003-swim, "swim"), agent(E11S1003-swim, A4S1002-animal), isa(A4S1002-animal, "animals") -> effect(E3S1003-have, E11S1003-swim), isa(E3S1003-have, "have"), agent(E3S1003-have, A2S1003-fish), isa(A2S1003-fish, "A fish"), object(E3S1003-have, A7S1003-fin), isa(A7S1003-fin, "fin").
english(barrons.rule2533, "A fish has a flipper or fin that helps them[animals with gills] swim").
pretty(barrons.rule2533, "PURPOSE(Flipper, swim(Animal)), Flipper = 'a flipper', Animal = 'animals with gills'.").
barrons.rule2533:: isa(A5S1003-flipper, "a flipper") -> purpose(A5S1003-flipper, E11S1003-swim), with(A4S1002-animal, A6S1002-gill), isa(A6S1002-gill, "gills"), isa(E11S1003-swim, "swim"), agent(E11S1003-swim, A4S1002-animal), isa(A4S1002-animal, "animals").
english(barrons.rule2534, "A fish has a flipper or fin that helps them[animals with gills] swim").
pretty(barrons.rule2534, "PURPOSE(Flipper, swim(Animal)), Flipper = 'a flipper', Animal = 'animals with gills'.").
barrons.rule2534:: with(A4S1002-animal, A6S1002-gill), isa(A6S1002-gill, "gills"), isa(E11S1003-swim, "swim"), agent(E11S1003-swim, A4S1002-animal), isa(A4S1002-animal, "animals") -> purpose(A5S1003-flipper, E11S1003-swim), isa(A5S1003-flipper, "a flipper").
english(barrons.rule2535, "Birds have wings that are long and angled to help them[birds] fly").
pretty(barrons.rule2535, "EFFECT(have(Bird, Wing), help(Bird, Fly)), Bird = 'Birds', Wing = 'wings', Fly = 'fly'.").
barrons.rule2535:: isa(E2S1004-have, "have"), agent(E2S1004-have, A1S1004-bird), isa(A1S1004-bird, "Birds"), object(E2S1004-have, A3S1004-wing), isa(A3S1004-wing, "wings") -> effect(E2S1004-have, E10S1004-help), isa(E10S1004-help, "help"), agent(E10S1004-help, A1S1004-bird), arg(E10S1004-help, A12S1004-fly), isa(A12S1004-fly, "them[birds] fly").
english(barrons.rule2536, "Birds have wings that are long and angled to help them[birds] fly").
pretty(barrons.rule2536, "EFFECT(have(Bird, Wing), help(Bird, Fly)), Bird = 'Birds', Wing = 'wings', Fly = 'fly'.").
barrons.rule2536:: isa(E10S1004-help, "help"), agent(E10S1004-help, A1S1004-bird), isa(A1S1004-bird, "Birds"), arg(E10S1004-help, A12S1004-fly), isa(A12S1004-fly, "them[birds] fly") -> effect(E2S1004-have, E10S1004-help), isa(E2S1004-have, "have"), agent(E2S1004-have, A1S1004-bird), object(E2S1004-have, A3S1004-wing), isa(A3S1004-wing, "wings").
english(barrons.rule2537, "Birds have wings that are long and angled to help them[birds] fly").
pretty(barrons.rule2537, "EFFECT(be(Wing, Long, Help), fly(Bird)), Wing = 'wings', Long = 'long', Help = 'help them[birds] fly', Bird = 'birds'.").
barrons.rule2537:: isa(E5S1004-be, "be"), agent(E5S1004-be, A3S1004-wing), isa(A3S1004-wing, "wings"), object(E5S1004-be, A6S1004-long), isa(A6S1004-long, "long"), arg(E5S1004-be, A10S1004-help), isa(A10S1004-help, "to help them[birds] fly") -> effect(E5S1004-be, E12S1004-fly), isa(E12S1004-fly, "fly"), agent(E12S1004-fly, A9S107-bird), isa(A9S107-bird, "birds").
english(barrons.rule2538, "Birds have wings that are long and angled to help them[birds] fly").
pretty(barrons.rule2538, "EFFECT(be(Wing, Long, Help), fly(Bird)), Wing = 'wings', Long = 'long', Help = 'help them[birds] fly', Bird = 'birds'.").
barrons.rule2538:: isa(E12S1004-fly, "fly"), agent(E12S1004-fly, A9S107-bird), isa(A9S107-bird, "birds") -> effect(E5S1004-be, E12S1004-fly), isa(E5S1004-be, "be"), agent(E5S1004-be, A3S1004-wing), isa(A3S1004-wing, "wings"), object(E5S1004-be, A6S1004-long), isa(A6S1004-long, "long"), arg(E5S1004-be, A10S1004-help), isa(A10S1004-help, "to help them[birds] fly").
english(barrons.rule2539, "Horses have strong legs and hooves that enable them[Horses] to run on many different landscapes").
pretty(barrons.rule2539, "EFFECT(have(Horse, Leg), run_on(Horse, Landscape)), Horse = 'Horses', Leg = 'strong legs', Landscape = 'many different landscapes'.").
barrons.rule2539:: isa(E2S1005-have, "have"), agent(E2S1005-have, A1S1005-horse), isa(A1S1005-horse, "Horses"), object(E2S1005-have, A4S1005-leg), isa(A4S1005-leg, "strong legs") -> effect(E2S1005-have, E11S1005-run), isa(E11S1005-run, "run"), agent(E11S1005-run, A1S1005-horse), on(E11S1005-run, A15S1005-landscape), isa(A15S1005-landscape, "many different landscapes").
english(barrons.rule2540, "Horses have strong legs and hooves that enable them[Horses] to run on many different landscapes").
pretty(barrons.rule2540, "EFFECT(have(Horse, Leg), run_on(Horse, Landscape)), Horse = 'Horses', Leg = 'strong legs', Landscape = 'many different landscapes'.").
barrons.rule2540:: isa(E11S1005-run, "run"), agent(E11S1005-run, A1S1005-horse), isa(A1S1005-horse, "Horses"), on(E11S1005-run, A15S1005-landscape), isa(A15S1005-landscape, "many different landscapes") -> effect(E2S1005-have, E11S1005-run), isa(E2S1005-have, "have"), agent(E2S1005-have, A1S1005-horse), object(E2S1005-have, A4S1005-leg), isa(A4S1005-leg, "strong legs").
english(barrons.rule2541, "Horses have strong legs and hooves that enable them[Horses] to run on many different landscapes").
pretty(barrons.rule2541, "EFFECT(have(Horse, Hoof), run_on(Horse, Landscape)), Horse = 'Horses', Hoof = 'hooves', Landscape = 'many different landscapes'.").
barrons.rule2541:: isa(E2S1005-have, "have"), agent(E2S1005-have, A1S1005-horse), isa(A1S1005-horse, "Horses"), object(E2S1005-have, A6S1005-hoof), isa(A6S1005-hoof, "hooves") -> effect(E2S1005-have, E11S1005-run), isa(E11S1005-run, "run"), agent(E11S1005-run, A1S1005-horse), on(E11S1005-run, A15S1005-landscape), isa(A15S1005-landscape, "many different landscapes").
english(barrons.rule2542, "Horses have strong legs and hooves that enable them[Horses] to run on many different landscapes").
pretty(barrons.rule2542, "EFFECT(have(Horse, Hoof), run_on(Horse, Landscape)), Horse = 'Horses', Hoof = 'hooves', Landscape = 'many different landscapes'.").
barrons.rule2542:: isa(E11S1005-run, "run"), agent(E11S1005-run, A1S1005-horse), isa(A1S1005-horse, "Horses"), on(E11S1005-run, A15S1005-landscape), isa(A15S1005-landscape, "many different landscapes") -> effect(E2S1005-have, E11S1005-run), isa(E2S1005-have, "have"), agent(E2S1005-have, A1S1005-horse), object(E2S1005-have, A6S1005-hoof), isa(A6S1005-hoof, "hooves").
english(barrons.rule2543, "Horses have strong legs and hooves that enable them[Horses] to run on many different landscapes").
pretty(barrons.rule2543, "PURPOSE(Leg, run_on(Horse, Landscape)), Leg = 'strong legs', Horse = 'Horses', Landscape = 'many different landscapes'.").
barrons.rule2543:: isa(A4S1005-leg, "strong legs") -> purpose(A4S1005-leg, E11S1005-run), isa(E11S1005-run, "run"), agent(E11S1005-run, A1S1005-horse), isa(A1S1005-horse, "Horses"), on(E11S1005-run, A15S1005-landscape), isa(A15S1005-landscape, "many different landscapes").
english(barrons.rule2544, "Horses have strong legs and hooves that enable them[Horses] to run on many different landscapes").
pretty(barrons.rule2544, "PURPOSE(Leg, run_on(Horse, Landscape)), Leg = 'strong legs', Horse = 'Horses', Landscape = 'many different landscapes'.").
barrons.rule2544:: isa(E11S1005-run, "run"), agent(E11S1005-run, A1S1005-horse), isa(A1S1005-horse, "Horses"), on(E11S1005-run, A15S1005-landscape), isa(A15S1005-landscape, "many different landscapes") -> purpose(A4S1005-leg, E11S1005-run), isa(A4S1005-leg, "strong legs").
english(barrons.rule2545, "Cats distinct colors and patterns are an example of diversity").
pretty(barrons.rule2545, "EXAMPLE(Color, Diversity), Color = 'Cats distinct colors', Diversity = 'diversity'.").
barrons.rule2545:: isa(A4S1006-color, "Cats distinct colors") -> example(A4S1006-color, A11S1006-diversity), isa(A11S1006-diversity, "diversity").
english(barrons.rule2546, "Cats distinct colors and patterns are an example of diversity").
pretty(barrons.rule2546, "EXAMPLE(Color, Diversity), Color = 'Cats distinct colors', Diversity = 'diversity'.").
barrons.rule2546:: isa(A11S1006-diversity, "diversity") -> example(A4S1006-color, A11S1006-diversity), isa(A4S1006-color, "Cats distinct colors").
english(barrons.rule2547, "Cats distinct colors and patterns are an example of diversity").
pretty(barrons.rule2547, "EXAMPLE(Pattern, Diversity), Pattern = 'patterns', Diversity = 'diversity'.").
barrons.rule2547:: isa(A6S1006-pattern, "patterns") -> example(A6S1006-pattern, A11S1006-diversity), isa(A11S1006-diversity, "diversity").
english(barrons.rule2548, "Cats distinct colors and patterns are an example of diversity").
pretty(barrons.rule2548, "EXAMPLE(Pattern, Diversity), Pattern = 'patterns', Diversity = 'diversity'.").
barrons.rule2548:: isa(A11S1006-diversity, "diversity") -> example(A6S1006-pattern, A11S1006-diversity), isa(A6S1006-pattern, "patterns").
english(barrons.rule2549, "The length of time from an animal 's birth until its[an animal 's] death is called its[The length of time from an animal 's birth to its death] life span").
pretty(barrons.rule2549, "EXAMPLE(Length, Span), Length = 'The length of time from an animal ’s birth until its[an animal 's] death', Span = 'its[The length of time from an animal ’s birth to its death] life span'.").
barrons.rule2549:: until(A9S1010-birth, A12S1010-death), isa(A12S1010-death, "its[an animal 's] death"), from(A4S1010-time, A9S1010-birth), isa(A9S1010-birth, "an animal 's birth"), of(A2S1010-length, A4S1010-time), isa(A4S1010-time, "time"), isa(A2S1010-length, "The length") -> example(A2S1010-length, A17S1010-span), isa(A17S1010-span, "its[The length of time from an animal 's birth to its death] life span").
english(barrons.rule2550, "The length of time from an animal 's birth until its[an animal 's] death is called its[The length of time from an animal 's birth to its death] life span").
pretty(barrons.rule2550, "EXAMPLE(Length, Span), Length = 'The length of time from an animal ’s birth until its[an animal 's] death', Span = 'its[The length of time from an animal ’s birth to its death] life span'.").
barrons.rule2550:: isa(A17S1010-span, "its[The length of time from an animal 's birth to its death] life span") -> example(A2S1010-length, A17S1010-span), until(A9S1010-birth, A12S1010-death), isa(A12S1010-death, "its[an animal 's] death"), from(A4S1010-time, A9S1010-birth), isa(A9S1010-birth, "an animal 's birth"), of(A2S1010-length, A4S1010-time), isa(A4S1010-time, "time"), isa(A2S1010-length, "The length").
english(barrons.rule2551, "A defense mechanism is a way in which animals protect themselves").
pretty(barrons.rule2551, "EXAMPLE(Mechanism, protect_in(Animal, Themselves, Which)), Mechanism = 'A defense mechanism', Animal = 'animals', Themselves = 'themselves', Which = 'which'.").
barrons.rule2551:: isa(A3S1014-mechanism, "A defense mechanism") -> example(A3S1014-mechanism, E10S1014-protect), isa(E10S1014-protect, "protect"), agent(E10S1014-protect, A9S1014-animal), isa(A9S1014-animal, "animals"), object(E10S1014-protect, A11S1014-themselves), isa(A11S1014-themselves, "themselves"), in(E10S1014-protect, A8S1014-which), isa(A8S1014-which, "which").
english(barrons.rule2552, "A defense mechanism is a way in which animals protect themselves").
pretty(barrons.rule2552, "EXAMPLE(Mechanism, protect_in(Animal, Themselves, Which)), Mechanism = 'A defense mechanism', Animal = 'animals', Themselves = 'themselves', Which = 'which'.").
barrons.rule2552:: isa(E10S1014-protect, "protect"), agent(E10S1014-protect, A9S1014-animal), isa(A9S1014-animal, "animals"), object(E10S1014-protect, A11S1014-themselves), isa(A11S1014-themselves, "themselves"), in(E10S1014-protect, A8S1014-which), isa(A8S1014-which, "which") -> example(A3S1014-mechanism, E10S1014-protect), isa(A3S1014-mechanism, "A defense mechanism").
english(barrons.rule2553, "They[rabbits] have bones that grow").
pretty(barrons.rule2553, "isa(have, 'have') -> have(Rabbit, Bone).").
barrons.rule2553:: isa(E2S1016-have, "have") -> agent(E2S1016-have, A1S331-rabbit), isa(A1S331-rabbit, "rabbits"), object(E2S1016-have, A3S1016-bone), isa(A3S1016-bone, "bones").
english(barrons.rule2554, "They[rabbits] have bones that grow").
pretty(barrons.rule2554, "isa(Rabbit, 'rabbits') -> have(Rabbit, Bone).").
barrons.rule2554:: isa(A1S331-rabbit, "rabbits") -> isa(E2S1016-have, "have"), agent(E2S1016-have, A1S331-rabbit), object(E2S1016-have, A3S1016-bone), isa(A3S1016-bone, "bones").
english(barrons.rule2555, "They[rabbits] have bones that grow").
pretty(barrons.rule2555, "isa(Bone, 'bones') -> have(Rabbit, Bone).").
barrons.rule2555:: isa(A3S1016-bone, "bones") -> isa(E2S1016-have, "have"), agent(E2S1016-have, A1S331-rabbit), isa(A1S331-rabbit, "rabbits"), object(E2S1016-have, A3S1016-bone).
english(barrons.rule2556, "Since the dolphin swims its[the dolphin] flipper has adapted so that it[the dolphin] can act as a paddle").
pretty(barrons.rule2556, "EFFECT(adapt(Dolphin), act_as(Dolphin, Paddle)), Dolphin = 'the dolphin', Paddle = 'a paddle'.").
barrons.rule2556:: isa(E8S1019-adapt, "adapt"), agent(E8S1019-adapt, A3S1019-dolphin), isa(A3S1019-dolphin, "the dolphin") -> effect(E8S1019-adapt, E13S1019-act), isa(E13S1019-act, "act"), agent(E13S1019-act, A3S1019-dolphin), as(E13S1019-act, A16S1019-paddle), isa(A16S1019-paddle, "a paddle").
english(barrons.rule2557, "Since the dolphin swims its[the dolphin] flipper has adapted so that it[the dolphin] can act as a paddle").
pretty(barrons.rule2557, "EFFECT(adapt(Dolphin), act_as(Dolphin, Paddle)), Dolphin = 'the dolphin', Paddle = 'a paddle'.").
barrons.rule2557:: isa(E13S1019-act, "act"), agent(E13S1019-act, A3S1019-dolphin), isa(A3S1019-dolphin, "the dolphin"), as(E13S1019-act, A16S1019-paddle), isa(A16S1019-paddle, "a paddle") -> effect(E8S1019-adapt, E13S1019-act), isa(E8S1019-adapt, "adapt"), agent(E8S1019-adapt, A3S1019-dolphin).
english(barrons.rule2558, "The human uses its[the dolphin] fingers and arms for many tasks").
pretty(barrons.rule2558, "isa(use, 'uses') -> use_for(Human, Finger, Task).").
barrons.rule2558:: isa(E3S1020-use, "use") -> agent(E3S1020-use, A2S1020-human), isa(A2S1020-human, "The human"), object(E3S1020-use, A5S1020-finger), isa(A5S1020-finger, "its[the dolphin] fingers"), for(E3S1020-use, A10S1020-task), isa(A10S1020-task, "many tasks").
english(barrons.rule2559, "The human uses its[the dolphin] fingers and arms for many tasks").
pretty(barrons.rule2559, "isa(Human, 'The human') -> use_for(Human, Finger, Task).").
barrons.rule2559:: isa(A2S1020-human, "The human") -> isa(E3S1020-use, "use"), agent(E3S1020-use, A2S1020-human), object(E3S1020-use, A5S1020-finger), isa(A5S1020-finger, "its[the dolphin] fingers"), for(E3S1020-use, A10S1020-task), isa(A10S1020-task, "many tasks").
english(barrons.rule2560, "The human uses its[the dolphin] fingers and arms for many tasks").
pretty(barrons.rule2560, "isa(Finger, 'its[the dolphin] fingers') -> use_for(Human, Finger, Task).").
barrons.rule2560:: isa(A5S1020-finger, "its[the dolphin] fingers") -> isa(E3S1020-use, "use"), agent(E3S1020-use, A2S1020-human), isa(A2S1020-human, "The human"), object(E3S1020-use, A5S1020-finger), for(E3S1020-use, A10S1020-task), isa(A10S1020-task, "many tasks").
english(barrons.rule2561, "The human uses its[the dolphin] fingers and arms for many tasks").
pretty(barrons.rule2561, "isa(Task, 'many tasks') -> use_for(Human, Finger, Task).").
barrons.rule2561:: isa(A10S1020-task, "many tasks") -> isa(E3S1020-use, "use"), agent(E3S1020-use, A2S1020-human), isa(A2S1020-human, "The human"), object(E3S1020-use, A5S1020-finger), isa(A5S1020-finger, "its[the dolphin] fingers"), for(E3S1020-use, A10S1020-task).
english(barrons.rule2562, "The human uses its[the dolphin] fingers and arms for many tasks").
pretty(barrons.rule2562, "isa(use, 'uses') -> use_for(Human, Arm, Task).").
barrons.rule2562:: isa(E3S1020-use, "use") -> agent(E3S1020-use, A2S1020-human), isa(A2S1020-human, "The human"), object(E3S1020-use, A7S1020-arm), isa(A7S1020-arm, "arms"), for(E3S1020-use, A10S1020-task), isa(A10S1020-task, "many tasks").
english(barrons.rule2563, "The human uses its[the dolphin] fingers and arms for many tasks").
pretty(barrons.rule2563, "isa(Human, 'The human') -> use_for(Human, Arm, Task).").
barrons.rule2563:: isa(A2S1020-human, "The human") -> isa(E3S1020-use, "use"), agent(E3S1020-use, A2S1020-human), object(E3S1020-use, A7S1020-arm), isa(A7S1020-arm, "arms"), for(E3S1020-use, A10S1020-task), isa(A10S1020-task, "many tasks").
english(barrons.rule2564, "The human uses its[the dolphin] fingers and arms for many tasks").
pretty(barrons.rule2564, "isa(Arm, 'arms') -> use_for(Human, Arm, Task).").
barrons.rule2564:: isa(A7S1020-arm, "arms") -> isa(E3S1020-use, "use"), agent(E3S1020-use, A2S1020-human), isa(A2S1020-human, "The human"), object(E3S1020-use, A7S1020-arm), for(E3S1020-use, A10S1020-task), isa(A10S1020-task, "many tasks").
english(barrons.rule2565, "The human uses its[the dolphin] fingers and arms for many tasks").
pretty(barrons.rule2565, "isa(Task, 'many tasks') -> use_for(Human, Arm, Task).").
barrons.rule2565:: isa(A10S1020-task, "many tasks") -> isa(E3S1020-use, "use"), agent(E3S1020-use, A2S1020-human), isa(A2S1020-human, "The human"), object(E3S1020-use, A7S1020-arm), isa(A7S1020-arm, "arms"), for(E3S1020-use, A10S1020-task).
english(barrons.rule2566, "When organisms pass on characteristics from parent to offspring it is called inheritance").
pretty(barrons.rule2566, "EXAMPLE(pass_on(Organism, Characteristic), Inheritance), Organism = 'organisms', Characteristic = 'characteristics from parent to offspring', Inheritance = 'inheritance'.").
barrons.rule2566:: isa(E3S1023-pass, "pass"), agent(E3S1023-pass, A2S1023-organism), isa(A2S1023-organism, "organisms"), on(E3S1023-pass, A5S1023-characteristic), isa(A5S1023-characteristic, "characteristics from parent to offspring") -> example(E3S1023-pass, A13S1023-inheritance), isa(A13S1023-inheritance, "inheritance").
english(barrons.rule2567, "When organisms pass on characteristics from parent to offspring it is called inheritance").
pretty(barrons.rule2567, "EXAMPLE(pass_on(Organism, Characteristic), Inheritance), Organism = 'organisms', Characteristic = 'characteristics from parent to offspring', Inheritance = 'inheritance'.").
barrons.rule2567:: isa(A13S1023-inheritance, "inheritance") -> example(E3S1023-pass, A13S1023-inheritance), isa(E3S1023-pass, "pass"), agent(E3S1023-pass, A2S1023-organism), isa(A2S1023-organism, "organisms"), on(E3S1023-pass, A5S1023-characteristic), isa(A5S1023-characteristic, "characteristics from parent to offspring").
english(barrons.rule2568, "Characteristics that are passed from a parent to child are called traits").
pretty(barrons.rule2568, "EXAMPLE(Characteristic, Trait), Characteristic = 'Characteristics that are passed from a parent to child', Trait = 'traits'.").
barrons.rule2568:: isa(A1S1024-characteristic, "Characteristics that are passed from a parent to child") -> example(A1S1024-characteristic, A12S1024-trait), isa(A12S1024-trait, "traits").
english(barrons.rule2569, "Characteristics that are passed from a parent to child are called traits").
pretty(barrons.rule2569, "EXAMPLE(Characteristic, Trait), Characteristic = 'Characteristics that are passed from a parent to child', Trait = 'traits'.").
barrons.rule2569:: isa(A12S1024-trait, "traits") -> example(A1S1024-characteristic, A12S1024-trait), isa(A1S1024-characteristic, "Characteristics that are passed from a parent to child").
english(barrons.rule2570, "Organisms reproduce DNA from the parents combined to form the genetic information for the new offspring").
pretty(barrons.rule2570, "isa(reproduce combine to form the genetic information for the new offspring, 'reproduce combined to form the genetic information for the new offspring') -> reproduce combine to form the genetic information for the new offspring_from(Organism, Dna, Parent).").
barrons.rule2570:: isa(E2S1029-reproduce, "reproduce combine to form the genetic information for the new offspring") -> agent(E2S1029-reproduce, A1S1029-organism), isa(A1S1029-organism, "Organisms"), object(E2S1029-reproduce, A3S1029-dna), isa(A3S1029-dna, "DNA"), from(E2S1029-reproduce, A6S1029-parent), isa(A6S1029-parent, "the parents").
english(barrons.rule2571, "Organisms reproduce DNA from the parents combined to form the genetic information for the new offspring").
pretty(barrons.rule2571, "isa(Organism, 'Organisms') -> reproduce combine to form the genetic information for the new offspring_from(Organism, Dna, Parent).").
barrons.rule2571:: isa(A1S1029-organism, "Organisms") -> isa(E2S1029-reproduce, "reproduce combine to form the genetic information for the new offspring"), agent(E2S1029-reproduce, A1S1029-organism), object(E2S1029-reproduce, A3S1029-dna), isa(A3S1029-dna, "DNA"), from(E2S1029-reproduce, A6S1029-parent), isa(A6S1029-parent, "the parents").
english(barrons.rule2572, "Organisms reproduce DNA from the parents combined to form the genetic information for the new offspring").
pretty(barrons.rule2572, "isa(Dna, 'DNA') -> reproduce combine to form the genetic information for the new offspring_from(Organism, Dna, Parent).").
barrons.rule2572:: isa(A3S1029-dna, "DNA") -> isa(E2S1029-reproduce, "reproduce combine to form the genetic information for the new offspring"), agent(E2S1029-reproduce, A1S1029-organism), isa(A1S1029-organism, "Organisms"), object(E2S1029-reproduce, A3S1029-dna), from(E2S1029-reproduce, A6S1029-parent), isa(A6S1029-parent, "the parents").
english(barrons.rule2573, "Organisms reproduce DNA from the parents combined to form the genetic information for the new offspring").
pretty(barrons.rule2573, "isa(Parent, 'the parents') -> reproduce combine to form the genetic information for the new offspring_from(Organism, Dna, Parent).").
barrons.rule2573:: isa(A6S1029-parent, "the parents") -> isa(E2S1029-reproduce, "reproduce combine to form the genetic information for the new offspring"), agent(E2S1029-reproduce, A1S1029-organism), isa(A1S1029-organism, "Organisms"), object(E2S1029-reproduce, A3S1029-dna), isa(A3S1029-dna, "DNA"), from(E2S1029-reproduce, A6S1029-parent).
english(barrons.rule2574, "Organisms reproduce DNA from the parents combined to form the genetic information for the new offspring").
pretty(barrons.rule2574, "EFFECT(combine(Reproduce), form(Reproduce, Information)), Reproduce = 'reproduce DNA from the parents', Information = 'the genetic information for the new offspring'.").
barrons.rule2574:: from(A2S1029-reproduce, A6S1029-parent), isa(A6S1029-parent, "the parents"), isa(E8S1029-combine, "combine"), agent(E8S1029-combine, A2S1029-reproduce), isa(A2S1029-reproduce, "reproduce DNA") -> effect(E8S1029-combine, E10S1029-form), for(A13S1029-information, A17S1029-offspring), isa(A17S1029-offspring, "the new offspring"), isa(E10S1029-form, "form"), agent(E10S1029-form, A2S1029-reproduce), object(E10S1029-form, A13S1029-information), isa(A13S1029-information, "the genetic information").
english(barrons.rule2575, "Organisms reproduce DNA from the parents combined to form the genetic information for the new offspring").
pretty(barrons.rule2575, "EFFECT(combine(Reproduce), form(Reproduce, Information)), Reproduce = 'reproduce DNA from the parents', Information = 'the genetic information for the new offspring'.").
barrons.rule2575:: from(A2S1029-reproduce, A6S1029-parent), isa(A6S1029-parent, "the parents"), for(A13S1029-information, A17S1029-offspring), isa(A17S1029-offspring, "the new offspring"), isa(E10S1029-form, "form"), agent(E10S1029-form, A2S1029-reproduce), isa(A2S1029-reproduce, "reproduce DNA"), object(E10S1029-form, A13S1029-information), isa(A13S1029-information, "the genetic information") -> effect(E8S1029-combine, E10S1029-form), isa(E8S1029-combine, "combine"), agent(E8S1029-combine, A2S1029-reproduce).
english(barrons.rule2576, "DNA is like a fingerprint because it[a fingerprint] is different from all others").
pretty(barrons.rule2576, "EFFECT(be_from(Fingerprint, Different, Other), be_like(Dna, Fingerprint)), Fingerprint = 'a fingerprint', Different = 'because different from all others', Other = 'all others', Dna = 'DNA', Fingerprint = 'a fingerprint'.").
barrons.rule2576:: isa(E8S1030-be, "be"), agent(E8S1030-be, A5S1030-fingerprint), isa(A5S1030-fingerprint, "a fingerprint"), object(E8S1030-be, A9S1030-different), isa(A9S1030-different, "different"), from(E8S1030-be, A12S1030-other), isa(A12S1030-other, "all others") -> effect(E8S1030-be, E2S1030-be), isa(E2S1030-be, "be"), agent(E2S1030-be, A1S1030-dna), isa(A1S1030-dna, "DNA"), like(E2S1030-be, A5S1030-fingerprint).
english(barrons.rule2577, "DNA is like a fingerprint because it[a fingerprint] is different from all others").
pretty(barrons.rule2577, "EFFECT(be_from(Fingerprint, Different, Other), be_like(Dna, Fingerprint)), Fingerprint = 'a fingerprint', Different = 'because different from all others', Other = 'all others', Dna = 'DNA', Fingerprint = 'a fingerprint'.").
barrons.rule2577:: isa(E2S1030-be, "be"), agent(E2S1030-be, A1S1030-dna), isa(A1S1030-dna, "DNA"), like(E2S1030-be, A5S1030-fingerprint), isa(A5S1030-fingerprint, "a fingerprint") -> effect(E8S1030-be, E2S1030-be), isa(E8S1030-be, "be"), agent(E8S1030-be, A5S1030-fingerprint), object(E8S1030-be, A9S1030-different), isa(A9S1030-different, "different"), from(E8S1030-be, A12S1030-other), isa(A12S1030-other, "all others").
english(barrons.rule2578, "Genes carry traits").
pretty(barrons.rule2578, "isa(carry, 'carry') -> carry(Gene, Trait).").
barrons.rule2578:: isa(E2S1033-carry, "carry") -> agent(E2S1033-carry, A1S1033-gene), isa(A1S1033-gene, "Genes"), object(E2S1033-carry, A3S1033-trait), isa(A3S1033-trait, "traits").
english(barrons.rule2579, "Genes carry traits").
pretty(barrons.rule2579, "isa(Gene, 'Genes') -> carry(Gene, Trait).").
barrons.rule2579:: isa(A1S1033-gene, "Genes") -> isa(E2S1033-carry, "carry"), agent(E2S1033-carry, A1S1033-gene), object(E2S1033-carry, A3S1033-trait), isa(A3S1033-trait, "traits").
english(barrons.rule2580, "Genes carry traits").
pretty(barrons.rule2580, "isa(Trait, 'traits') -> carry(Gene, Trait).").
barrons.rule2580:: isa(A3S1033-trait, "traits") -> isa(E2S1033-carry, "carry"), agent(E2S1033-carry, A1S1033-gene), isa(A1S1033-gene, "Genes"), object(E2S1033-carry, A3S1033-trait).
english(barrons.rule2581, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of DNA").
pretty(barrons.rule2581, "CAUSE(Dna, resemble_of(Plant, Parent, Closely, Dna)), Dna = 'DNA', Plant = 'Plants', Parent = 'their[plants and animals] parents because of DNA', Closely = 'closely', Dna = 'DNA'.").
barrons.rule2581:: isa(A16S1034-dna, "DNA") -> cause(A16S1034-dna, E5S1034-resemble), isa(E5S1034-resemble, "resemble"), agent(E5S1034-resemble, A1S1034-plant), isa(A1S1034-plant, "Plants"), object(E5S1034-resemble, A7S1034-parent), isa(A7S1034-parent, "they parent"), of(E5S1034-resemble, A16S1034-dna), arg(E5S1034-resemble, A4S1034-closely), isa(A4S1034-closely, "closely").
english(barrons.rule2582, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of DNA").
pretty(barrons.rule2582, "CAUSE(Dna, resemble_of(Plant, Parent, Closely, Dna)), Dna = 'DNA', Plant = 'Plants', Parent = 'their[plants and animals] parents because of DNA', Closely = 'closely', Dna = 'DNA'.").
barrons.rule2582:: isa(E5S1034-resemble, "resemble"), agent(E5S1034-resemble, A1S1034-plant), isa(A1S1034-plant, "Plants"), object(E5S1034-resemble, A7S1034-parent), isa(A7S1034-parent, "they parent"), of(E5S1034-resemble, A16S1034-dna), isa(A16S1034-dna, "DNA"), arg(E5S1034-resemble, A4S1034-closely), isa(A4S1034-closely, "closely") -> cause(A16S1034-dna, E5S1034-resemble).
english(barrons.rule2583, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of DNA").
pretty(barrons.rule2583, "CAUSE(Dna, resemble_of(Animal, Parent, Closely, Dna)), Dna = 'DNA', Animal = 'animals', Parent = 'their[plants and animals] parents because of DNA', Closely = 'closely', Dna = 'DNA'.").
barrons.rule2583:: isa(A16S1034-dna, "DNA") -> cause(A16S1034-dna, E5S1034-resemble), isa(E5S1034-resemble, "resemble"), agent(E5S1034-resemble, A3S1034-animal), isa(A3S1034-animal, "animals"), object(E5S1034-resemble, A7S1034-parent), isa(A7S1034-parent, "they parent"), of(E5S1034-resemble, A16S1034-dna), arg(E5S1034-resemble, A4S1034-closely), isa(A4S1034-closely, "closely").
english(barrons.rule2584, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of DNA").
pretty(barrons.rule2584, "CAUSE(Dna, resemble_of(Animal, Parent, Closely, Dna)), Dna = 'DNA', Animal = 'animals', Parent = 'their[plants and animals] parents because of DNA', Closely = 'closely', Dna = 'DNA'.").
barrons.rule2584:: isa(E5S1034-resemble, "resemble"), agent(E5S1034-resemble, A3S1034-animal), isa(A3S1034-animal, "animals"), object(E5S1034-resemble, A7S1034-parent), isa(A7S1034-parent, "they parent"), of(E5S1034-resemble, A16S1034-dna), isa(A16S1034-dna, "DNA"), arg(E5S1034-resemble, A4S1034-closely), isa(A4S1034-closely, "closely") -> cause(A16S1034-dna, E5S1034-resemble).
english(barrons.rule2585, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of DNA").
pretty(barrons.rule2585, "EXAMPLE(Plant, Parent), Plant = 'Plants', Parent = 'their[plants and animals] parents because of DNA'.").
barrons.rule2585:: isa(A1S1034-plant, "Plants") -> example(A1S1034-plant, A7S1034-parent), because_of(A7S1034-parent, A16S1034-dna), isa(A16S1034-dna, "DNA"), isa(A7S1034-parent, "their[plants and animals] parents").
english(barrons.rule2586, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of DNA").
pretty(barrons.rule2586, "EXAMPLE(Plant, Parent), Plant = 'Plants', Parent = 'their[plants and animals] parents because of DNA'.").
barrons.rule2586:: because_of(A7S1034-parent, A16S1034-dna), isa(A16S1034-dna, "DNA"), isa(A7S1034-parent, "their[plants and animals] parents") -> example(A1S1034-plant, A7S1034-parent), isa(A1S1034-plant, "Plants").
english(barrons.rule2587, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of DNA").
pretty(barrons.rule2587, "EXAMPLE(Animal, Parent), Animal = 'animals', Parent = 'their[plants and animals] parents because of DNA'.").
barrons.rule2587:: isa(A3S1034-animal, "animals") -> example(A3S1034-animal, A7S1034-parent), because_of(A7S1034-parent, A16S1034-dna), isa(A16S1034-dna, "DNA"), isa(A7S1034-parent, "their[plants and animals] parents").
english(barrons.rule2588, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of DNA").
pretty(barrons.rule2588, "EXAMPLE(Animal, Parent), Animal = 'animals', Parent = 'their[plants and animals] parents because of DNA'.").
barrons.rule2588:: because_of(A7S1034-parent, A16S1034-dna), isa(A16S1034-dna, "DNA"), isa(A7S1034-parent, "their[plants and animals] parents") -> example(A3S1034-animal, A7S1034-parent), isa(A3S1034-animal, "animals").
english(barrons.rule2589, "DNA is responsible for telling our[our] body what to look like or can give the body information").
pretty(barrons.rule2589, "PURPOSE(Dna, tell(Dna, Body)), Dna = 'DNA', Body = 'our[our] body'.").
barrons.rule2589:: isa(A1S1036-dna, "DNA") -> purpose(A1S1036-dna, E5S1036-tell), isa(E5S1036-tell, "tell"), agent(E5S1036-tell, A1S1036-dna), object(E5S1036-tell, A7S1036-body), isa(A7S1036-body, "our[our] body").
english(barrons.rule2590, "DNA is responsible for telling our[our] body what to look like or can give the body information").
pretty(barrons.rule2590, "PURPOSE(Dna, tell(Dna, Body)), Dna = 'DNA', Body = 'our[our] body'.").
barrons.rule2590:: isa(E5S1036-tell, "tell"), agent(E5S1036-tell, A1S1036-dna), isa(A1S1036-dna, "DNA"), object(E5S1036-tell, A7S1036-body), isa(A7S1036-body, "our[our] body") -> purpose(A1S1036-dna, E5S1036-tell).
english(barrons.rule2591, "DNA is responsible for telling our[our] body what to look like or can give the body information").
pretty(barrons.rule2591, "EFFECT(tell(What, Body), look(What)), What = 'what', Body = 'our[our] body'.").
barrons.rule2591:: isa(E5S1036-tell, "tell"), agent(E5S1036-tell, A8S1036-what), isa(A8S1036-what, "what"), object(E5S1036-tell, A7S1036-body), isa(A7S1036-body, "our[our] body") -> effect(E5S1036-tell, E10S1036-look), isa(E10S1036-look, "look"), agent(E10S1036-look, A8S1036-what).
english(barrons.rule2592, "DNA is responsible for telling our[our] body what to look like or can give the body information").
pretty(barrons.rule2592, "EFFECT(tell(What, Body), look(What)), What = 'what', Body = 'our[our] body'.").
barrons.rule2592:: isa(E10S1036-look, "look"), agent(E10S1036-look, A8S1036-what), isa(A8S1036-what, "what") -> effect(E5S1036-tell, E10S1036-look), isa(E5S1036-tell, "tell"), agent(E5S1036-tell, A8S1036-what), object(E5S1036-tell, A7S1036-body), isa(A7S1036-body, "our[our] body").
english(barrons.rule2593, "DNA is responsible for telling our[our] body what to look like or can give the body information").
pretty(barrons.rule2593, "EFFECT(tell(What, Body), give(What, Information)), What = 'what', Body = 'our[our] body', Information = 'the body information'.").
barrons.rule2593:: isa(E5S1036-tell, "tell"), agent(E5S1036-tell, A8S1036-what), isa(A8S1036-what, "what"), object(E5S1036-tell, A7S1036-body), isa(A7S1036-body, "our[our] body") -> effect(E5S1036-tell, E14S1036-give), isa(E14S1036-give, "give"), agent(E14S1036-give, A8S1036-what), object(E14S1036-give, A17S1036-information), isa(A17S1036-information, "the body information").
english(barrons.rule2594, "DNA is responsible for telling our[our] body what to look like or can give the body information").
pretty(barrons.rule2594, "EFFECT(tell(What, Body), give(What, Information)), What = 'what', Body = 'our[our] body', Information = 'the body information'.").
barrons.rule2594:: isa(E14S1036-give, "give"), agent(E14S1036-give, A8S1036-what), isa(A8S1036-what, "what"), object(E14S1036-give, A17S1036-information), isa(A17S1036-information, "the body information") -> effect(E5S1036-tell, E14S1036-give), isa(E5S1036-tell, "tell"), agent(E5S1036-tell, A8S1036-what), object(E5S1036-tell, A7S1036-body), isa(A7S1036-body, "our[our] body").
english(barrons.rule2595, "All living things have DNA").
pretty(barrons.rule2595, "isa(have, 'have') -> have(Thing, Dna).").
barrons.rule2595:: isa(E4S1037-have, "have") -> agent(E4S1037-have, A3S1037-thing), isa(A3S1037-thing, "All living things"), object(E4S1037-have, A5S1037-dna), isa(A5S1037-dna, "DNA").
english(barrons.rule2596, "All living things have DNA").
pretty(barrons.rule2596, "isa(Thing, 'All living things') -> have(Thing, Dna).").
barrons.rule2596:: isa(A3S1037-thing, "All living things") -> isa(E4S1037-have, "have"), agent(E4S1037-have, A3S1037-thing), object(E4S1037-have, A5S1037-dna), isa(A5S1037-dna, "DNA").
english(barrons.rule2597, "All living things have DNA").
pretty(barrons.rule2597, "isa(Dna, 'DNA') -> have(Thing, Dna).").
barrons.rule2597:: isa(A5S1037-dna, "DNA") -> isa(E4S1037-have, "have"), agent(E4S1037-have, A3S1037-thing), isa(A3S1037-thing, "All living things"), object(E4S1037-have, A5S1037-dna).
english(barrons.rule2598, "DNA are the bundles of chemicals in our body that control what we[our] look like").
pretty(barrons.rule2598, "EXAMPLE(Dna, Bundle), Dna = 'DNA', Bundle = 'the bundles of chemicals in our body that control what we[our] look like'.").
barrons.rule2598:: isa(A1S1040-dna, "DNA") -> example(A1S1040-dna, A4S1040-bundle), in(A6S1040-chemical, A9S1040-body), isa(A9S1040-body, "our body"), of(A4S1040-bundle, A6S1040-chemical), isa(A6S1040-chemical, "chemicals"), isa(A4S1040-bundle, "the bundles").
english(barrons.rule2599, "DNA are the bundles of chemicals in our body that control what we[our] look like").
pretty(barrons.rule2599, "EXAMPLE(Dna, Bundle), Dna = 'DNA', Bundle = 'the bundles of chemicals in our body that control what we[our] look like'.").
barrons.rule2599:: in(A6S1040-chemical, A9S1040-body), isa(A9S1040-body, "our body"), of(A4S1040-bundle, A6S1040-chemical), isa(A6S1040-chemical, "chemicals"), isa(A4S1040-bundle, "the bundles") -> example(A1S1040-dna, A4S1040-bundle), isa(A1S1040-dna, "DNA").
english(barrons.rule2600, "DNA are the bundles of chemicals in our body that control what we[our] look like").
pretty(barrons.rule2600, "EXAMPLE(Dna, Bundle), Dna = 'DNA', Bundle = 'the bundles of chemicals in our body that control what we[our] look like'.").
barrons.rule2600:: isa(A1S1040-dna, "DNA") -> example(A1S1040-dna, A4S1040-bundle), in(A6S1040-chemical, A9S1040-body), isa(A9S1040-body, "our body"), of(A4S1040-bundle, A6S1040-chemical), isa(A6S1040-chemical, "chemicals"), isa(A4S1040-bundle, "the bundles").
english(barrons.rule2601, "DNA are the bundles of chemicals in our body that control what we[our] look like").
pretty(barrons.rule2601, "EXAMPLE(Dna, Bundle), Dna = 'DNA', Bundle = 'the bundles of chemicals in our body that control what we[our] look like'.").
barrons.rule2601:: in(A6S1040-chemical, A9S1040-body), isa(A9S1040-body, "our body"), of(A4S1040-bundle, A6S1040-chemical), isa(A6S1040-chemical, "chemicals"), isa(A4S1040-bundle, "the bundles") -> example(A1S1040-dna, A4S1040-bundle), isa(A1S1040-dna, "DNA").
english(barrons.rule2602, "In order for humans to grow and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule2602, "EFFECT(eat(Human, Food), grow(Human)), Human = 'humans', Food = 'healthy foods', Human = 'humans'.").
barrons.rule2602:: isa(E13S1044-eat, "eat"), agent(E13S1044-eat, A11S27-human), isa(A11S27-human, "humans"), object(E13S1044-eat, A15S1044-food), isa(A15S1044-food, "healthy foods") -> effect(E13S1044-eat, E6S1044-grow), isa(E6S1044-grow, "grow"), agent(E6S1044-grow, A4S1044-human), isa(A4S1044-human, "humans").
english(barrons.rule2603, "In order for humans to grow and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule2603, "EFFECT(eat(Human, Food), grow(Human)), Human = 'humans', Food = 'healthy foods', Human = 'humans'.").
barrons.rule2603:: isa(E6S1044-grow, "grow"), agent(E6S1044-grow, A4S1044-human), isa(A4S1044-human, "humans") -> effect(E13S1044-eat, E6S1044-grow), isa(E13S1044-eat, "eat"), agent(E13S1044-eat, A11S27-human), isa(A11S27-human, "humans"), object(E13S1044-eat, A15S1044-food), isa(A15S1044-food, "healthy foods").
english(barrons.rule2604, "In order for humans to grow and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule2604, "EFFECT(eat(Human, Food), be(Human, Healthy)), Human = 'humans', Food = 'healthy foods', Human = 'humans', Healthy = 'healthy'.").
barrons.rule2604:: isa(E13S1044-eat, "eat"), agent(E13S1044-eat, A11S27-human), isa(A11S27-human, "humans"), object(E13S1044-eat, A15S1044-food), isa(A15S1044-food, "healthy foods") -> effect(E13S1044-eat, E8S1044-be), isa(E8S1044-be, "be"), agent(E8S1044-be, A4S1044-human), isa(A4S1044-human, "humans"), object(E8S1044-be, A9S1044-healthy), isa(A9S1044-healthy, "healthy").
english(barrons.rule2605, "In order for humans to grow and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule2605, "EFFECT(eat(Human, Food), be(Human, Healthy)), Human = 'humans', Food = 'healthy foods', Human = 'humans', Healthy = 'healthy'.").
barrons.rule2605:: isa(E8S1044-be, "be"), agent(E8S1044-be, A4S1044-human), isa(A4S1044-human, "humans"), object(E8S1044-be, A9S1044-healthy), isa(A9S1044-healthy, "healthy") -> effect(E13S1044-eat, E8S1044-be), isa(E13S1044-eat, "eat"), agent(E13S1044-eat, A11S27-human), isa(A11S27-human, "humans"), object(E13S1044-eat, A15S1044-food), isa(A15S1044-food, "healthy foods").
english(barrons.rule2606, "In order for humans to grow and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule2606, "EFFECT(exercise(Human), grow(Human)), Human = 'humans', Human = 'humans'.").
barrons.rule2606:: isa(E17S1044-exercise, "exercise"), agent(E17S1044-exercise, A11S27-human), isa(A11S27-human, "humans") -> effect(E17S1044-exercise, E6S1044-grow), isa(E6S1044-grow, "grow"), agent(E6S1044-grow, A4S1044-human), isa(A4S1044-human, "humans").
english(barrons.rule2607, "In order for humans to grow and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule2607, "EFFECT(exercise(Human), grow(Human)), Human = 'humans', Human = 'humans'.").
barrons.rule2607:: isa(E6S1044-grow, "grow"), agent(E6S1044-grow, A4S1044-human), isa(A4S1044-human, "humans") -> effect(E17S1044-exercise, E6S1044-grow), isa(E17S1044-exercise, "exercise"), agent(E17S1044-exercise, A11S27-human), isa(A11S27-human, "humans").
english(barrons.rule2608, "In order for humans to grow and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule2608, "EFFECT(exercise(Human), be(Human, Healthy)), Human = 'humans', Human = 'humans', Healthy = 'healthy'.").
barrons.rule2608:: isa(E17S1044-exercise, "exercise"), agent(E17S1044-exercise, A11S27-human), isa(A11S27-human, "humans") -> effect(E17S1044-exercise, E8S1044-be), isa(E8S1044-be, "be"), agent(E8S1044-be, A4S1044-human), isa(A4S1044-human, "humans"), object(E8S1044-be, A9S1044-healthy), isa(A9S1044-healthy, "healthy").
english(barrons.rule2609, "In order for humans to grow and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule2609, "EFFECT(exercise(Human), be(Human, Healthy)), Human = 'humans', Human = 'humans', Healthy = 'healthy'.").
barrons.rule2609:: isa(E8S1044-be, "be"), agent(E8S1044-be, A4S1044-human), isa(A4S1044-human, "humans"), object(E8S1044-be, A9S1044-healthy), isa(A9S1044-healthy, "healthy") -> effect(E17S1044-exercise, E8S1044-be), isa(E17S1044-exercise, "exercise"), agent(E17S1044-exercise, A11S27-human), isa(A11S27-human, "humans").
english(barrons.rule2610, "In order for humans to grow and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule2610, "EFFECT(get(Human, Rest), grow(Human)), Human = 'humans', Rest = 'regular rest', Human = 'humans'.").
barrons.rule2610:: isa(E20S1044-get, "get"), agent(E20S1044-get, A11S27-human), isa(A11S27-human, "humans"), object(E20S1044-get, A22S1044-rest), isa(A22S1044-rest, "regular rest") -> effect(E20S1044-get, E6S1044-grow), isa(E6S1044-grow, "grow"), agent(E6S1044-grow, A4S1044-human), isa(A4S1044-human, "humans").
english(barrons.rule2611, "In order for humans to grow and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule2611, "EFFECT(get(Human, Rest), grow(Human)), Human = 'humans', Rest = 'regular rest', Human = 'humans'.").
barrons.rule2611:: isa(E6S1044-grow, "grow"), agent(E6S1044-grow, A4S1044-human), isa(A4S1044-human, "humans") -> effect(E20S1044-get, E6S1044-grow), isa(E20S1044-get, "get"), agent(E20S1044-get, A11S27-human), isa(A11S27-human, "humans"), object(E20S1044-get, A22S1044-rest), isa(A22S1044-rest, "regular rest").
english(barrons.rule2612, "In order for humans to grow and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule2612, "EFFECT(get(Human, Rest), be(Human, Healthy)), Human = 'humans', Rest = 'regular rest', Human = 'humans', Healthy = 'healthy'.").
barrons.rule2612:: isa(E20S1044-get, "get"), agent(E20S1044-get, A11S27-human), isa(A11S27-human, "humans"), object(E20S1044-get, A22S1044-rest), isa(A22S1044-rest, "regular rest") -> effect(E20S1044-get, E8S1044-be), isa(E8S1044-be, "be"), agent(E8S1044-be, A4S1044-human), isa(A4S1044-human, "humans"), object(E8S1044-be, A9S1044-healthy), isa(A9S1044-healthy, "healthy").
english(barrons.rule2613, "In order for humans to grow and be healthy they[humans] need to eat healthy foods exercise and get regular rest").
pretty(barrons.rule2613, "EFFECT(get(Human, Rest), be(Human, Healthy)), Human = 'humans', Rest = 'regular rest', Human = 'humans', Healthy = 'healthy'.").
barrons.rule2613:: isa(E8S1044-be, "be"), agent(E8S1044-be, A4S1044-human), isa(A4S1044-human, "humans"), object(E8S1044-be, A9S1044-healthy), isa(A9S1044-healthy, "healthy") -> effect(E20S1044-get, E8S1044-be), isa(E20S1044-get, "get"), agent(E20S1044-get, A11S27-human), isa(A11S27-human, "humans"), object(E20S1044-get, A22S1044-rest), isa(A22S1044-rest, "regular rest").
english(barrons.rule2614, "To avoid getting germs and illnesses from other people you should wash your hands frequently").
pretty(barrons.rule2614, "isa(wash, 'wash') -> wash(You, Hand, Frequently).").
barrons.rule2614:: isa(E12S1045-wash, "wash") -> agent(E12S1045-wash, A10S1045-you), isa(A10S1045-you, "you"), object(E12S1045-wash, A14S1045-hand), isa(A14S1045-hand, "your hands"), arg(E12S1045-wash, A15S1045-frequently), isa(A15S1045-frequently, "frequently").
english(barrons.rule2615, "To avoid getting germs and illnesses from other people you should wash your hands frequently").
pretty(barrons.rule2615, "isa(You, 'you') -> wash(You, Hand, Frequently).").
barrons.rule2615:: isa(A10S1045-you, "you") -> isa(E12S1045-wash, "wash"), agent(E12S1045-wash, A10S1045-you), object(E12S1045-wash, A14S1045-hand), isa(A14S1045-hand, "your hands"), arg(E12S1045-wash, A15S1045-frequently), isa(A15S1045-frequently, "frequently").
english(barrons.rule2616, "To avoid getting germs and illnesses from other people you should wash your hands frequently").
pretty(barrons.rule2616, "isa(Hand, 'your hands') -> wash(You, Hand, Frequently).").
barrons.rule2616:: isa(A14S1045-hand, "your hands") -> isa(E12S1045-wash, "wash"), agent(E12S1045-wash, A10S1045-you), isa(A10S1045-you, "you"), object(E12S1045-wash, A14S1045-hand), arg(E12S1045-wash, A15S1045-frequently), isa(A15S1045-frequently, "frequently").
english(barrons.rule2617, "To avoid getting germs and illnesses from other people you should wash your hands frequently").
pretty(barrons.rule2617, "isa(Frequently, 'frequently') -> wash(You, Hand, Frequently).").
barrons.rule2617:: isa(A15S1045-frequently, "frequently") -> isa(E12S1045-wash, "wash"), agent(E12S1045-wash, A10S1045-you), isa(A10S1045-you, "you"), object(E12S1045-wash, A14S1045-hand), isa(A14S1045-hand, "your hands"), arg(E12S1045-wash, A15S1045-frequently).
english(barrons.rule2618, "A cigarette is a harmful substance").
pretty(barrons.rule2618, "EXAMPLE(Cigarette, Substance), Cigarette = 'A cigarette', Substance = 'a harmful substance'.").
barrons.rule2618:: isa(A2S1046-cigarette, "A cigarette") -> example(A2S1046-cigarette, A6S1046-substance), isa(A6S1046-substance, "a harmful substance").
english(barrons.rule2619, "A cigarette is a harmful substance").
pretty(barrons.rule2619, "EXAMPLE(Cigarette, Substance), Cigarette = 'A cigarette', Substance = 'a harmful substance'.").
barrons.rule2619:: isa(A6S1046-substance, "a harmful substance") -> example(A2S1046-cigarette, A6S1046-substance), isa(A2S1046-cigarette, "A cigarette").
english(barrons.rule2620, "The food pyramid shows us which foods make a balanced diet").
pretty(barrons.rule2620, "isa(show, 'shows') -> show(Pyramid, We).").
barrons.rule2620:: isa(E4S1047-show, "show") -> agent(E4S1047-show, A3S1047-pyramid), isa(A3S1047-pyramid, "The food pyramid"), object(E4S1047-show, A5S1047-we), isa(A5S1047-we, "us").
english(barrons.rule2621, "The food pyramid shows us which foods make a balanced diet").
pretty(barrons.rule2621, "isa(Pyramid, 'The food pyramid') -> show(Pyramid, We).").
barrons.rule2621:: isa(A3S1047-pyramid, "The food pyramid") -> isa(E4S1047-show, "show"), agent(E4S1047-show, A3S1047-pyramid), object(E4S1047-show, A5S1047-we), isa(A5S1047-we, "us").
english(barrons.rule2622, "The food pyramid shows us which foods make a balanced diet").
pretty(barrons.rule2622, "isa(We, 'us') -> show(Pyramid, We).").
barrons.rule2622:: isa(A5S1047-we, "us") -> isa(E4S1047-show, "show"), agent(E4S1047-show, A3S1047-pyramid), isa(A3S1047-pyramid, "The food pyramid"), object(E4S1047-show, A5S1047-we).
english(barrons.rule2623, "The sun is the ultimate source of energy for all life and physical cycles on Earth").
pretty(barrons.rule2623, "EXAMPLE(Sun, Source), Sun = 'The sun', Source = 'the ultimate source of energy for all life and physical cycles on Earth'.").
barrons.rule2623:: isa(A2S1049-sun, "The sun") -> example(A2S1049-sun, A6S1049-source), of(A6S1049-source, A8S1049-energy), isa(A8S1049-energy, "energy"), on(A14S1049-cycle, A16S1049-Earth), isa(A16S1049-Earth, "Earth"), for(A6S1049-source, A14S1049-cycle), isa(A14S1049-cycle, "all life and physical cycles"), isa(A6S1049-source, "the ultimate source").
english(barrons.rule2624, "The sun is the ultimate source of energy for all life and physical cycles on Earth").
pretty(barrons.rule2624, "EXAMPLE(Sun, Source), Sun = 'The sun', Source = 'the ultimate source of energy for all life and physical cycles on Earth'.").
barrons.rule2624:: of(A6S1049-source, A8S1049-energy), isa(A8S1049-energy, "energy"), on(A14S1049-cycle, A16S1049-Earth), isa(A16S1049-Earth, "Earth"), for(A6S1049-source, A14S1049-cycle), isa(A14S1049-cycle, "all life and physical cycles"), isa(A6S1049-source, "the ultimate source") -> example(A2S1049-sun, A6S1049-source), isa(A2S1049-sun, "The sun").
english(barrons.rule2625, "The cactus is a producer").
pretty(barrons.rule2625, "EXAMPLE(Cactus, Producer), Cactus = 'The cactus', Producer = 'a producer'.").
barrons.rule2625:: isa(A2S1050-cactus, "The cactus") -> example(A2S1050-cactus, A5S1050-producer), isa(A5S1050-producer, "a producer").
english(barrons.rule2626, "The cactus is a producer").
pretty(barrons.rule2626, "EXAMPLE(Cactus, Producer), Cactus = 'The cactus', Producer = 'a producer'.").
barrons.rule2626:: isa(A5S1050-producer, "a producer") -> example(A2S1050-cactus, A5S1050-producer), isa(A2S1050-cactus, "The cactus").
english(barrons.rule2627, "The butterfly is a consumer").
pretty(barrons.rule2627, "EXAMPLE(Butterfly, Consumer), Butterfly = 'The butterfly', Consumer = 'a consumer'.").
barrons.rule2627:: isa(A2S1051-butterfly, "The butterfly") -> example(A2S1051-butterfly, A5S1051-consumer), isa(A5S1051-consumer, "a consumer").
english(barrons.rule2628, "The butterfly is a consumer").
pretty(barrons.rule2628, "EXAMPLE(Butterfly, Consumer), Butterfly = 'The butterfly', Consumer = 'a consumer'.").
barrons.rule2628:: isa(A5S1051-consumer, "a consumer") -> example(A2S1051-butterfly, A5S1051-consumer), isa(A2S1051-butterfly, "The butterfly").
english(barrons.rule2629, "The snake is a predator").
pretty(barrons.rule2629, "EXAMPLE(Snake, Predator), Snake = 'The snake', Predator = 'a predator'.").
barrons.rule2629:: isa(A2S1052-snake, "The snake") -> example(A2S1052-snake, A5S1052-predator), isa(A5S1052-predator, "a predator").
english(barrons.rule2630, "The snake is a predator").
pretty(barrons.rule2630, "EXAMPLE(Snake, Predator), Snake = 'The snake', Predator = 'a predator'.").
barrons.rule2630:: isa(A5S1052-predator, "a predator") -> example(A2S1052-snake, A5S1052-predator), isa(A2S1052-snake, "The snake").
english(barrons.rule2631, "Plants depend on the sun for energy and on the water and soil for nutrients to survive and perform photosynthesis").
pretty(barrons.rule2631, "PURPOSE(depend_on(Plant, Sun, on(Water)), Energy), Plant = 'Plants', Sun = 'the sun for energy', Water = 'the water for nutrients', Energy = 'energy'.").
barrons.rule2631:: isa(E2S1053-depend, "depend"), agent(E2S1053-depend, A1S1053-plant), isa(A1S1053-plant, "Plants"), on(E2S1053-depend, A5S1053-sun), isa(A5S1053-sun, "the sun for energy"), on(E2S1053-depend, A12S1053-water), isa(A12S1053-water, "the water for nutrients") -> purpose(E2S1053-depend, A7S1053-energy), isa(A7S1053-energy, "energy").
english(barrons.rule2632, "Plants depend on the sun for energy and on the water and soil for nutrients to survive and perform photosynthesis").
pretty(barrons.rule2632, "PURPOSE(depend_on(Plant, Sun, on(Water)), Energy), Plant = 'Plants', Sun = 'the sun for energy', Water = 'the water for nutrients', Energy = 'energy'.").
barrons.rule2632:: isa(A7S1053-energy, "energy") -> purpose(E2S1053-depend, A7S1053-energy), isa(E2S1053-depend, "depend"), agent(E2S1053-depend, A1S1053-plant), isa(A1S1053-plant, "Plants"), on(E2S1053-depend, A5S1053-sun), isa(A5S1053-sun, "the sun for energy"), on(E2S1053-depend, A12S1053-water), isa(A12S1053-water, "the water for nutrients").
english(barrons.rule2633, "Animals need plants for food and energy").
pretty(barrons.rule2633, "PURPOSE(need(Animal, Plant), Food), Animal = 'Animals', Plant = 'plants for food and energy', Food = 'food'.").
barrons.rule2633:: for(A3S1054-plant, A5S1054-food), isa(A5S1054-food, "food"), for(A3S1054-plant, A7S1054-energy), isa(A7S1054-energy, "energy"), isa(E2S1054-need, "need"), agent(E2S1054-need, A1S1054-animal), isa(A1S1054-animal, "Animals"), object(E2S1054-need, A3S1054-plant), isa(A3S1054-plant, "plants") -> purpose(E2S1054-need, A5S1054-food).
english(barrons.rule2634, "Animals need plants for food and energy").
pretty(barrons.rule2634, "PURPOSE(need(Animal, Plant), Food), Animal = 'Animals', Plant = 'plants for food and energy', Food = 'food'.").
barrons.rule2634:: isa(A5S1054-food, "food") -> purpose(E2S1054-need, A5S1054-food), for(A3S1054-plant, A5S1054-food), for(A3S1054-plant, A7S1054-energy), isa(A7S1054-energy, "energy"), isa(E2S1054-need, "need"), agent(E2S1054-need, A1S1054-animal), isa(A1S1054-animal, "Animals"), object(E2S1054-need, A3S1054-plant), isa(A3S1054-plant, "plants").
english(barrons.rule2635, "Animals need plants for food and energy").
pretty(barrons.rule2635, "PURPOSE(need(Animal, Plant), Energy), Animal = 'Animals', Plant = 'plants for food and energy', Energy = 'energy'.").
barrons.rule2635:: for(A3S1054-plant, A5S1054-food), isa(A5S1054-food, "food"), for(A3S1054-plant, A7S1054-energy), isa(A7S1054-energy, "energy"), isa(E2S1054-need, "need"), agent(E2S1054-need, A1S1054-animal), isa(A1S1054-animal, "Animals"), object(E2S1054-need, A3S1054-plant), isa(A3S1054-plant, "plants") -> purpose(E2S1054-need, A7S1054-energy).
english(barrons.rule2636, "Animals need plants for food and energy").
pretty(barrons.rule2636, "PURPOSE(need(Animal, Plant), Energy), Animal = 'Animals', Plant = 'plants for food and energy', Energy = 'energy'.").
barrons.rule2636:: isa(A7S1054-energy, "energy") -> purpose(E2S1054-need, A7S1054-energy), for(A3S1054-plant, A5S1054-food), isa(A5S1054-food, "food"), for(A3S1054-plant, A7S1054-energy), isa(E2S1054-need, "need"), agent(E2S1054-need, A1S1054-animal), isa(A1S1054-animal, "Animals"), object(E2S1054-need, A3S1054-plant), isa(A3S1054-plant, "plants").
english(barrons.rule2637, "Plants give off oxygen for animals to breathe in").
pretty(barrons.rule2637, "EFFECT(give off(Plant, Oxygen), breathe(Animal)), Plant = 'Plants', Oxygen = 'oxygen', Animal = 'animals'.").
barrons.rule2637:: isa(E2S1055-give, "give off"), agent(E2S1055-give, A1S1055-plant), isa(A1S1055-plant, "Plants"), object(E2S1055-give, A4S1055-oxygen), isa(A4S1055-oxygen, "oxygen") -> effect(E2S1055-give, E8S1055-breathe), isa(E8S1055-breathe, "breathe"), agent(E8S1055-breathe, A6S1055-animal), isa(A6S1055-animal, "animals").
english(barrons.rule2638, "Plants give off oxygen for animals to breathe in").
pretty(barrons.rule2638, "EFFECT(give off(Plant, Oxygen), breathe(Animal)), Plant = 'Plants', Oxygen = 'oxygen', Animal = 'animals'.").
barrons.rule2638:: isa(E8S1055-breathe, "breathe"), agent(E8S1055-breathe, A6S1055-animal), isa(A6S1055-animal, "animals") -> effect(E2S1055-give, E8S1055-breathe), isa(E2S1055-give, "give off"), agent(E2S1055-give, A1S1055-plant), isa(A1S1055-plant, "Plants"), object(E2S1055-give, A4S1055-oxygen), isa(A4S1055-oxygen, "oxygen").
english(barrons.rule2639, "Animals give off carbon dioxide for plants to take in").
pretty(barrons.rule2639, "EFFECT(give off(Animal, Dioxide), take in(Plant)), Animal = 'Animals', Dioxide = 'carbon dioxide', Plant = 'plants'.").
barrons.rule2639:: isa(E2S1056-give, "give off"), agent(E2S1056-give, A1S1056-animal), isa(A1S1056-animal, "Animals"), object(E2S1056-give, A5S1056-dioxide), isa(A5S1056-dioxide, "carbon dioxide") -> effect(E2S1056-give, E9S1056-take), isa(E9S1056-take, "take in"), agent(E9S1056-take, A7S1056-plant), isa(A7S1056-plant, "plants").
english(barrons.rule2640, "Animals give off carbon dioxide for plants to take in").
pretty(barrons.rule2640, "EFFECT(give off(Animal, Dioxide), take in(Plant)), Animal = 'Animals', Dioxide = 'carbon dioxide', Plant = 'plants'.").
barrons.rule2640:: isa(E9S1056-take, "take in"), agent(E9S1056-take, A7S1056-plant), isa(A7S1056-plant, "plants") -> effect(E2S1056-give, E9S1056-take), isa(E2S1056-give, "give off"), agent(E2S1056-give, A1S1056-animal), isa(A1S1056-animal, "Animals"), object(E2S1056-give, A5S1056-dioxide), isa(A5S1056-dioxide, "carbon dioxide").
english(barrons.rule2641, "Humans need plant and animals for nutrition").
pretty(barrons.rule2641, "PURPOSE(need(Human, Plant), Nutrition), Human = 'Humans', Plant = 'plant for nutrition', Nutrition = 'nutrition'.").
barrons.rule2641:: for(A3S1057-plant, A7S1057-nutrition), isa(A7S1057-nutrition, "nutrition"), isa(E2S1057-need, "need"), agent(E2S1057-need, A1S1057-human), isa(A1S1057-human, "Humans"), object(E2S1057-need, A3S1057-plant), isa(A3S1057-plant, "plant") -> purpose(E2S1057-need, A7S1057-nutrition).
english(barrons.rule2642, "Humans need plant and animals for nutrition").
pretty(barrons.rule2642, "PURPOSE(need(Human, Plant), Nutrition), Human = 'Humans', Plant = 'plant for nutrition', Nutrition = 'nutrition'.").
barrons.rule2642:: isa(A7S1057-nutrition, "nutrition") -> purpose(E2S1057-need, A7S1057-nutrition), for(A3S1057-plant, A7S1057-nutrition), isa(E2S1057-need, "need"), agent(E2S1057-need, A1S1057-human), isa(A1S1057-human, "Humans"), object(E2S1057-need, A3S1057-plant), isa(A3S1057-plant, "plant").
english(barrons.rule2643, "Humans need plant and animals for nutrition").
pretty(barrons.rule2643, "PURPOSE(need(Human, Animal), Nutrition), Human = 'Humans', Animal = 'animals', Nutrition = 'nutrition'.").
barrons.rule2643:: isa(E2S1057-need, "need"), agent(E2S1057-need, A1S1057-human), isa(A1S1057-human, "Humans"), object(E2S1057-need, A5S1057-animal), isa(A5S1057-animal, "animals") -> purpose(E2S1057-need, A7S1057-nutrition), isa(A7S1057-nutrition, "nutrition").
english(barrons.rule2644, "Humans need plant and animals for nutrition").
pretty(barrons.rule2644, "PURPOSE(need(Human, Animal), Nutrition), Human = 'Humans', Animal = 'animals', Nutrition = 'nutrition'.").
barrons.rule2644:: isa(A7S1057-nutrition, "nutrition") -> purpose(E2S1057-need, A7S1057-nutrition), isa(E2S1057-need, "need"), agent(E2S1057-need, A1S1057-human), isa(A1S1057-human, "Humans"), object(E2S1057-need, A5S1057-animal), isa(A5S1057-animal, "animals").
english(barrons.rule2645, "Some animals use nonliving materials for shelter").
pretty(barrons.rule2645, "isa(use, 'use') -> use_for(Animal, Material, Shelter).").
barrons.rule2645:: isa(E3S1058-use, "use") -> agent(E3S1058-use, A2S1058-animal), isa(A2S1058-animal, "Some animals"), object(E3S1058-use, A5S1058-material), isa(A5S1058-material, "nonliving materials"), for(E3S1058-use, A7S1058-shelter), isa(A7S1058-shelter, "shelter").
english(barrons.rule2646, "Some animals use nonliving materials for shelter").
pretty(barrons.rule2646, "isa(Animal, 'Some animals') -> use_for(Animal, Material, Shelter).").
barrons.rule2646:: isa(A2S1058-animal, "Some animals") -> isa(E3S1058-use, "use"), agent(E3S1058-use, A2S1058-animal), object(E3S1058-use, A5S1058-material), isa(A5S1058-material, "nonliving materials"), for(E3S1058-use, A7S1058-shelter), isa(A7S1058-shelter, "shelter").
english(barrons.rule2647, "Some animals use nonliving materials for shelter").
pretty(barrons.rule2647, "isa(Material, 'nonliving materials') -> use_for(Animal, Material, Shelter).").
barrons.rule2647:: isa(A5S1058-material, "nonliving materials") -> isa(E3S1058-use, "use"), agent(E3S1058-use, A2S1058-animal), isa(A2S1058-animal, "Some animals"), object(E3S1058-use, A5S1058-material), for(E3S1058-use, A7S1058-shelter), isa(A7S1058-shelter, "shelter").
english(barrons.rule2648, "Some animals use nonliving materials for shelter").
pretty(barrons.rule2648, "isa(Shelter, 'shelter') -> use_for(Animal, Material, Shelter).").
barrons.rule2648:: isa(A7S1058-shelter, "shelter") -> isa(E3S1058-use, "use"), agent(E3S1058-use, A2S1058-animal), isa(A2S1058-animal, "Some animals"), object(E3S1058-use, A5S1058-material), isa(A5S1058-material, "nonliving materials"), for(E3S1058-use, A7S1058-shelter).
english(barrons.rule2649, "A bird or snake is a predator").
pretty(barrons.rule2649, "EXAMPLE(Bird, Predator), Bird = 'A bird', Predator = 'a predator'.").
barrons.rule2649:: isa(A2S1059-bird, "A bird") -> example(A2S1059-bird, A7S1059-predator), isa(A7S1059-predator, "a predator").
english(barrons.rule2650, "A bird or snake is a predator").
pretty(barrons.rule2650, "EXAMPLE(Bird, Predator), Bird = 'A bird', Predator = 'a predator'.").
barrons.rule2650:: isa(A7S1059-predator, "a predator") -> example(A2S1059-bird, A7S1059-predator), isa(A2S1059-bird, "A bird").
english(barrons.rule2651, "A bird or snake is a predator").
pretty(barrons.rule2651, "EXAMPLE(Snake, Predator), Snake = 'snake', Predator = 'a predator'.").
barrons.rule2651:: isa(A4S1059-snake, "snake") -> example(A4S1059-snake, A7S1059-predator), isa(A7S1059-predator, "a predator").
english(barrons.rule2652, "A bird or snake is a predator").
pretty(barrons.rule2652, "EXAMPLE(Snake, Predator), Snake = 'snake', Predator = 'a predator'.").
barrons.rule2652:: isa(A7S1059-predator, "a predator") -> example(A4S1059-snake, A7S1059-predator), isa(A4S1059-snake, "snake").
english(barrons.rule2653, "A rabbit frog or fish is a prey").
pretty(barrons.rule2653, "EXAMPLE(Rabbit, Prey), Rabbit = 'A rabbit', Prey = 'a prey'.").
barrons.rule2653:: isa(A2S1060-rabbit, "A rabbit") -> example(A2S1060-rabbit, A10S1060-prey), isa(A10S1060-prey, "a prey").
english(barrons.rule2654, "A rabbit frog or fish is a prey").
pretty(barrons.rule2654, "EXAMPLE(Rabbit, Prey), Rabbit = 'A rabbit', Prey = 'a prey'.").
barrons.rule2654:: isa(A10S1060-prey, "a prey") -> example(A2S1060-rabbit, A10S1060-prey), isa(A2S1060-rabbit, "A rabbit").
english(barrons.rule2655, "A rabbit frog or fish is a prey").
pretty(barrons.rule2655, "EXAMPLE(Frog, Prey), Frog = 'frog', Prey = 'a prey'.").
barrons.rule2655:: isa(A4S1060-frog, "frog") -> example(A4S1060-frog, A10S1060-prey), isa(A10S1060-prey, "a prey").
english(barrons.rule2656, "A rabbit frog or fish is a prey").
pretty(barrons.rule2656, "EXAMPLE(Frog, Prey), Frog = 'frog', Prey = 'a prey'.").
barrons.rule2656:: isa(A10S1060-prey, "a prey") -> example(A4S1060-frog, A10S1060-prey), isa(A4S1060-frog, "frog").
english(barrons.rule2657, "A rabbit frog or fish is a prey").
pretty(barrons.rule2657, "EXAMPLE(Fish, Prey), Fish = 'fish', Prey = 'a prey'.").
barrons.rule2657:: isa(A7S1060-fish, "fish") -> example(A7S1060-fish, A10S1060-prey), isa(A10S1060-prey, "a prey").
english(barrons.rule2658, "A rabbit frog or fish is a prey").
pretty(barrons.rule2658, "EXAMPLE(Fish, Prey), Fish = 'fish', Prey = 'a prey'.").
barrons.rule2658:: isa(A10S1060-prey, "a prey") -> example(A7S1060-fish, A10S1060-prey), isa(A7S1060-fish, "fish").
english(barrons.rule2659, "Water animals produce very large numbers of eggs because there are very few young that survive").
pretty(barrons.rule2659, "isa(Egg, 'eggs') -> produce(Animal, Number).").
barrons.rule2659:: isa(A8S1062-egg, "eggs") -> of(A6S1062-number, A8S1062-egg), isa(E3S1062-produce, "produce"), agent(E3S1062-produce, A2S1062-animal), isa(A2S1062-animal, "Water animals"), object(E3S1062-produce, A6S1062-number), isa(A6S1062-number, "very large numbers").
english(barrons.rule2660, "Water animals produce very large numbers of eggs because there are very few young that survive").
pretty(barrons.rule2660, "isa(produce, 'produce') -> produce(Animal, Number).").
barrons.rule2660:: isa(E3S1062-produce, "produce") -> of(A6S1062-number, A8S1062-egg), isa(A8S1062-egg, "eggs"), agent(E3S1062-produce, A2S1062-animal), isa(A2S1062-animal, "Water animals"), object(E3S1062-produce, A6S1062-number), isa(A6S1062-number, "very large numbers").
english(barrons.rule2661, "Water animals produce very large numbers of eggs because there are very few young that survive").
pretty(barrons.rule2661, "isa(Animal, 'Water animals') -> produce(Animal, Number).").
barrons.rule2661:: isa(A2S1062-animal, "Water animals") -> of(A6S1062-number, A8S1062-egg), isa(A8S1062-egg, "eggs"), isa(E3S1062-produce, "produce"), agent(E3S1062-produce, A2S1062-animal), object(E3S1062-produce, A6S1062-number), isa(A6S1062-number, "very large numbers").
english(barrons.rule2662, "Water animals produce very large numbers of eggs because there are very few young that survive").
pretty(barrons.rule2662, "isa(Number, 'very large numbers of eggs') -> produce(Animal, Number).").
barrons.rule2662:: isa(A6S1062-number, "very large numbers") -> of(A6S1062-number, A8S1062-egg), isa(A8S1062-egg, "eggs"), isa(E3S1062-produce, "produce"), agent(E3S1062-produce, A2S1062-animal), isa(A2S1062-animal, "Water animals"), object(E3S1062-produce, A6S1062-number).
english(barrons.rule2663, "Animals that do not have parental care have less success in survival").
pretty(barrons.rule2663, "isa(have, 'have') -> have_in(Animal, Success, Survival).").
barrons.rule2663:: isa(E8S1063-have, "have") -> agent(E8S1063-have, A1S1063-animal), isa(A1S1063-animal, "Animals"), object(E8S1063-have, A10S1063-success), isa(A10S1063-success, "less success"), in(E8S1063-have, A12S1063-survival), isa(A12S1063-survival, "survival").
english(barrons.rule2664, "Animals that do not have parental care have less success in survival").
pretty(barrons.rule2664, "isa(Animal, 'Animals') -> have_in(Animal, Success, Survival).").
barrons.rule2664:: isa(A1S1063-animal, "Animals") -> isa(E8S1063-have, "have"), agent(E8S1063-have, A1S1063-animal), object(E8S1063-have, A10S1063-success), isa(A10S1063-success, "less success"), in(E8S1063-have, A12S1063-survival), isa(A12S1063-survival, "survival").
english(barrons.rule2665, "Animals that do not have parental care have less success in survival").
pretty(barrons.rule2665, "isa(Success, 'less success') -> have_in(Animal, Success, Survival).").
barrons.rule2665:: isa(A10S1063-success, "less success") -> isa(E8S1063-have, "have"), agent(E8S1063-have, A1S1063-animal), isa(A1S1063-animal, "Animals"), object(E8S1063-have, A10S1063-success), in(E8S1063-have, A12S1063-survival), isa(A12S1063-survival, "survival").
english(barrons.rule2666, "Animals that do not have parental care have less success in survival").
pretty(barrons.rule2666, "isa(Survival, 'survival') -> have_in(Animal, Success, Survival).").
barrons.rule2666:: isa(A12S1063-survival, "survival") -> isa(E8S1063-have, "have"), agent(E8S1063-have, A1S1063-animal), isa(A1S1063-animal, "Animals"), object(E8S1063-have, A10S1063-success), isa(A10S1063-success, "less success"), in(E8S1063-have, A12S1063-survival).
english(barrons.rule2667, "Humans are dependent upon their[humans] environment for food shelter and energy").
pretty(barrons.rule2667, "PURPOSE(be_upon(Human, Dependent, Environment), Food), Human = 'Humans', Dependent = 'dependent upon their[humans] environment for food shelter and energy', Environment = 'their[humans] environment for food shelter and energy', Food = 'food'.").
barrons.rule2667:: isa(E2S1064-be, "be"), agent(E2S1064-be, A1S1064-human), isa(A1S1064-human, "Humans"), object(E2S1064-be, A3S1064-dependent), isa(A3S1064-dependent, "dependent"), upon(E2S1064-be, A6S1064-environment), isa(A6S1064-environment, "their[humans] environment for food shelter and energy") -> purpose(E2S1064-be, A8S1064-food), isa(A8S1064-food, "food").
english(barrons.rule2668, "Humans are dependent upon their[humans] environment for food shelter and energy").
pretty(barrons.rule2668, "PURPOSE(be_upon(Human, Dependent, Environment), Food), Human = 'Humans', Dependent = 'dependent upon their[humans] environment for food shelter and energy', Environment = 'their[humans] environment for food shelter and energy', Food = 'food'.").
barrons.rule2668:: isa(A8S1064-food, "food") -> purpose(E2S1064-be, A8S1064-food), isa(E2S1064-be, "be"), agent(E2S1064-be, A1S1064-human), isa(A1S1064-human, "Humans"), object(E2S1064-be, A3S1064-dependent), isa(A3S1064-dependent, "dependent"), upon(E2S1064-be, A6S1064-environment), isa(A6S1064-environment, "their[humans] environment for food shelter and energy").
english(barrons.rule2669, "Humans are dependent upon their[humans] environment for food shelter and energy").
pretty(barrons.rule2669, "PURPOSE(be_upon(Human, Dependent, Environment), Shelter), Human = 'Humans', Dependent = 'dependent upon their[humans] environment for food shelter and energy', Environment = 'their[humans] environment for food shelter and energy', Shelter = 'shelter'.").
barrons.rule2669:: isa(E2S1064-be, "be"), agent(E2S1064-be, A1S1064-human), isa(A1S1064-human, "Humans"), object(E2S1064-be, A3S1064-dependent), isa(A3S1064-dependent, "dependent"), upon(E2S1064-be, A6S1064-environment), isa(A6S1064-environment, "their[humans] environment for food shelter and energy") -> purpose(E2S1064-be, A10S1064-shelter), isa(A10S1064-shelter, "shelter").
english(barrons.rule2670, "Humans are dependent upon their[humans] environment for food shelter and energy").
pretty(barrons.rule2670, "PURPOSE(be_upon(Human, Dependent, Environment), Shelter), Human = 'Humans', Dependent = 'dependent upon their[humans] environment for food shelter and energy', Environment = 'their[humans] environment for food shelter and energy', Shelter = 'shelter'.").
barrons.rule2670:: isa(A10S1064-shelter, "shelter") -> purpose(E2S1064-be, A10S1064-shelter), isa(E2S1064-be, "be"), agent(E2S1064-be, A1S1064-human), isa(A1S1064-human, "Humans"), object(E2S1064-be, A3S1064-dependent), isa(A3S1064-dependent, "dependent"), upon(E2S1064-be, A6S1064-environment), isa(A6S1064-environment, "their[humans] environment for food shelter and energy").
english(barrons.rule2671, "Humans are dependent upon their[humans] environment for food shelter and energy").
pretty(barrons.rule2671, "PURPOSE(be_upon(Human, Dependent, Environment), Energy), Human = 'Humans', Dependent = 'dependent upon their[humans] environment for food shelter and energy', Environment = 'their[humans] environment for food shelter and energy', Energy = 'energy'.").
barrons.rule2671:: isa(E2S1064-be, "be"), agent(E2S1064-be, A1S1064-human), isa(A1S1064-human, "Humans"), object(E2S1064-be, A3S1064-dependent), isa(A3S1064-dependent, "dependent"), upon(E2S1064-be, A6S1064-environment), isa(A6S1064-environment, "their[humans] environment for food shelter and energy") -> purpose(E2S1064-be, A13S1064-energy), isa(A13S1064-energy, "energy").
english(barrons.rule2672, "Humans are dependent upon their[humans] environment for food shelter and energy").
pretty(barrons.rule2672, "PURPOSE(be_upon(Human, Dependent, Environment), Energy), Human = 'Humans', Dependent = 'dependent upon their[humans] environment for food shelter and energy', Environment = 'their[humans] environment for food shelter and energy', Energy = 'energy'.").
barrons.rule2672:: isa(A13S1064-energy, "energy") -> purpose(E2S1064-be, A13S1064-energy), isa(E2S1064-be, "be"), agent(E2S1064-be, A1S1064-human), isa(A1S1064-human, "Humans"), object(E2S1064-be, A3S1064-dependent), isa(A3S1064-dependent, "dependent"), upon(E2S1064-be, A6S1064-environment), isa(A6S1064-environment, "their[humans] environment for food shelter and energy").
english(barrons.rule2673, "Humans can help save their[humans] environment by recycling planting trees preventing litter limiting use of cars creating new forms of energy and conserving energy").
pretty(barrons.rule2673, "PURPOSE(Human, save(Human, Environment)), Human = 'Humans', Environment = 'their[humans] environment'.").
barrons.rule2673:: isa(A1S1066-human, "Humans") -> purpose(A1S1066-human, E4S1066-save), isa(E4S1066-save, "save"), agent(E4S1066-save, A1S1066-human), object(E4S1066-save, A6S1066-environment), isa(A6S1066-environment, "their[humans] environment").
english(barrons.rule2674, "Humans can help save their[humans] environment by recycling planting trees preventing litter limiting use of cars creating new forms of energy and conserving energy").
pretty(barrons.rule2674, "PURPOSE(Human, save(Human, Environment)), Human = 'Humans', Environment = 'their[humans] environment'.").
barrons.rule2674:: isa(E4S1066-save, "save"), agent(E4S1066-save, A1S1066-human), isa(A1S1066-human, "Humans"), object(E4S1066-save, A6S1066-environment), isa(A6S1066-environment, "their[humans] environment") -> purpose(A1S1066-human, E4S1066-save).
english(barrons.rule2675, "Humans can help save their[humans] environment by recycling planting trees preventing litter limiting use of cars creating new forms of energy and conserving energy").
pretty(barrons.rule2675, "ENABLE(recycle(Human), save(Human, Environment)), Human = 'Humans', Environment = 'their[humans] environment'.").
barrons.rule2675:: isa(E8S1066-recycle, "recycle"), agent(E8S1066-recycle, A1S1066-human), isa(A1S1066-human, "Humans") -> enable(E8S1066-recycle, E4S1066-save), isa(E4S1066-save, "save"), agent(E4S1066-save, A1S1066-human), object(E4S1066-save, A6S1066-environment), isa(A6S1066-environment, "their[humans] environment").
english(barrons.rule2676, "Humans can help save their[humans] environment by recycling planting trees preventing litter limiting use of cars creating new forms of energy and conserving energy").
pretty(barrons.rule2676, "ENABLE(recycle(Human), save(Human, Environment)), Human = 'Humans', Environment = 'their[humans] environment'.").
barrons.rule2676:: isa(E4S1066-save, "save"), agent(E4S1066-save, A1S1066-human), isa(A1S1066-human, "Humans"), object(E4S1066-save, A6S1066-environment), isa(A6S1066-environment, "their[humans] environment") -> enable(E8S1066-recycle, E4S1066-save), isa(E8S1066-recycle, "recycle"), agent(E8S1066-recycle, A1S1066-human).
english(barrons.rule2677, "Humans can help save their[humans] environment by recycling planting trees preventing litter limiting use of cars creating new forms of energy and conserving energy").
pretty(barrons.rule2677, "ENABLE(plant(Human, Tree), save(Human, Environment)), Human = 'Humans', Tree = 'trees', Environment = 'their[humans] environment'.").
barrons.rule2677:: isa(E10S1066-plant, "plant"), agent(E10S1066-plant, A1S1066-human), isa(A1S1066-human, "Humans"), object(E10S1066-plant, A11S1066-tree), isa(A11S1066-tree, "trees") -> enable(E10S1066-plant, E4S1066-save), isa(E4S1066-save, "save"), agent(E4S1066-save, A1S1066-human), object(E4S1066-save, A6S1066-environment), isa(A6S1066-environment, "their[humans] environment").
english(barrons.rule2678, "Humans can help save their[humans] environment by recycling planting trees preventing litter limiting use of cars creating new forms of energy and conserving energy").
pretty(barrons.rule2678, "ENABLE(plant(Human, Tree), save(Human, Environment)), Human = 'Humans', Tree = 'trees', Environment = 'their[humans] environment'.").
barrons.rule2678:: isa(E4S1066-save, "save"), agent(E4S1066-save, A1S1066-human), isa(A1S1066-human, "Humans"), object(E4S1066-save, A6S1066-environment), isa(A6S1066-environment, "their[humans] environment") -> enable(E10S1066-plant, E4S1066-save), isa(E10S1066-plant, "plant"), agent(E10S1066-plant, A1S1066-human), object(E10S1066-plant, A11S1066-tree), isa(A11S1066-tree, "trees").
english(barrons.rule2679, "Humans can help save their[humans] environment by recycling planting trees preventing litter limiting use of cars creating new forms of energy and conserving energy").
pretty(barrons.rule2679, "ENABLE(prevent(Human, Litter), save(Human, Environment)), Human = 'Humans', Litter = 'litter', Environment = 'their[humans] environment'.").
barrons.rule2679:: isa(E13S1066-prevent, "prevent"), agent(E13S1066-prevent, A1S1066-human), isa(A1S1066-human, "Humans"), object(E13S1066-prevent, A14S1066-litter), isa(A14S1066-litter, "litter") -> enable(E13S1066-prevent, E4S1066-save), isa(E4S1066-save, "save"), agent(E4S1066-save, A1S1066-human), object(E4S1066-save, A6S1066-environment), isa(A6S1066-environment, "their[humans] environment").
english(barrons.rule2680, "Humans can help save their[humans] environment by recycling planting trees preventing litter limiting use of cars creating new forms of energy and conserving energy").
pretty(barrons.rule2680, "ENABLE(prevent(Human, Litter), save(Human, Environment)), Human = 'Humans', Litter = 'litter', Environment = 'their[humans] environment'.").
barrons.rule2680:: isa(E4S1066-save, "save"), agent(E4S1066-save, A1S1066-human), isa(A1S1066-human, "Humans"), object(E4S1066-save, A6S1066-environment), isa(A6S1066-environment, "their[humans] environment") -> enable(E13S1066-prevent, E4S1066-save), isa(E13S1066-prevent, "prevent"), agent(E13S1066-prevent, A1S1066-human), object(E13S1066-prevent, A14S1066-litter), isa(A14S1066-litter, "litter").
english(barrons.rule2681, "Humans can help save their[humans] environment by recycling planting trees preventing litter limiting use of cars creating new forms of energy and conserving energy").
pretty(barrons.rule2681, "ENABLE(limit(Human, Use), save(Human, Environment)), Human = 'Humans', Use = 'use of cars', Environment = 'their[humans] environment'.").
barrons.rule2681:: of(A17S1066-use, A19S1066-car), isa(A19S1066-car, "cars"), isa(E16S1066-limit, "limit"), agent(E16S1066-limit, A1S1066-human), isa(A1S1066-human, "Humans"), object(E16S1066-limit, A17S1066-use), isa(A17S1066-use, "use") -> enable(E16S1066-limit, E4S1066-save), isa(E4S1066-save, "save"), agent(E4S1066-save, A1S1066-human), object(E4S1066-save, A6S1066-environment), isa(A6S1066-environment, "their[humans] environment").
english(barrons.rule2682, "Humans can help save their[humans] environment by recycling planting trees preventing litter limiting use of cars creating new forms of energy and conserving energy").
pretty(barrons.rule2682, "ENABLE(limit(Human, Use), save(Human, Environment)), Human = 'Humans', Use = 'use of cars', Environment = 'their[humans] environment'.").
barrons.rule2682:: isa(E4S1066-save, "save"), agent(E4S1066-save, A1S1066-human), isa(A1S1066-human, "Humans"), object(E4S1066-save, A6S1066-environment), isa(A6S1066-environment, "their[humans] environment") -> enable(E16S1066-limit, E4S1066-save), of(A17S1066-use, A19S1066-car), isa(A19S1066-car, "cars"), isa(E16S1066-limit, "limit"), agent(E16S1066-limit, A1S1066-human), object(E16S1066-limit, A17S1066-use), isa(A17S1066-use, "use").
english(barrons.rule2683, "Humans can help save their[humans] environment by recycling planting trees preventing litter limiting use of cars creating new forms of energy and conserving energy").
pretty(barrons.rule2683, "ENABLE(create(Human, Form), save(Human, Environment)), Human = 'Humans', Form = 'new forms of energy', Environment = 'their[humans] environment'.").
barrons.rule2683:: of(A23S1066-form, A25S1066-energy), isa(A25S1066-energy, "energy"), isa(E21S1066-create, "create"), agent(E21S1066-create, A1S1066-human), isa(A1S1066-human, "Humans"), object(E21S1066-create, A23S1066-form), isa(A23S1066-form, "new forms") -> enable(E21S1066-create, E4S1066-save), isa(E4S1066-save, "save"), agent(E4S1066-save, A1S1066-human), object(E4S1066-save, A6S1066-environment), isa(A6S1066-environment, "their[humans] environment").
english(barrons.rule2684, "Humans can help save their[humans] environment by recycling planting trees preventing litter limiting use of cars creating new forms of energy and conserving energy").
pretty(barrons.rule2684, "ENABLE(create(Human, Form), save(Human, Environment)), Human = 'Humans', Form = 'new forms of energy', Environment = 'their[humans] environment'.").
barrons.rule2684:: isa(E4S1066-save, "save"), agent(E4S1066-save, A1S1066-human), isa(A1S1066-human, "Humans"), object(E4S1066-save, A6S1066-environment), isa(A6S1066-environment, "their[humans] environment") -> enable(E21S1066-create, E4S1066-save), of(A23S1066-form, A25S1066-energy), isa(A25S1066-energy, "energy"), isa(E21S1066-create, "create"), agent(E21S1066-create, A1S1066-human), object(E21S1066-create, A23S1066-form), isa(A23S1066-form, "new forms").
english(barrons.rule2685, "Humans can help save their[humans] environment by recycling planting trees preventing litter limiting use of cars creating new forms of energy and conserving energy").
pretty(barrons.rule2685, "ENABLE(conserve(Human, Energy), save(Human, Environment)), Human = 'Humans', Energy = 'energy', Environment = 'their[humans] environment'.").
barrons.rule2685:: isa(E28S1066-conserve, "conserve"), agent(E28S1066-conserve, A1S1066-human), isa(A1S1066-human, "Humans"), object(E28S1066-conserve, A29S1066-energy), isa(A29S1066-energy, "energy") -> enable(E28S1066-conserve, E4S1066-save), isa(E4S1066-save, "save"), agent(E4S1066-save, A1S1066-human), object(E4S1066-save, A6S1066-environment), isa(A6S1066-environment, "their[humans] environment").
english(barrons.rule2686, "Humans can help save their[humans] environment by recycling planting trees preventing litter limiting use of cars creating new forms of energy and conserving energy").
pretty(barrons.rule2686, "ENABLE(conserve(Human, Energy), save(Human, Environment)), Human = 'Humans', Energy = 'energy', Environment = 'their[humans] environment'.").
barrons.rule2686:: isa(E4S1066-save, "save"), agent(E4S1066-save, A1S1066-human), isa(A1S1066-human, "Humans"), object(E4S1066-save, A6S1066-environment), isa(A6S1066-environment, "their[humans] environment") -> enable(E28S1066-conserve, E4S1066-save), isa(E28S1066-conserve, "conserve"), agent(E28S1066-conserve, A1S1066-human), object(E28S1066-conserve, A29S1066-energy), isa(A29S1066-energy, "energy").
english(barrons.rule2687, "In a glass of water that contains ice cubes we find two phases of matter liquid and solid").
pretty(barrons.rule2687, "isa(Matter, 'matter') -> find_in(We, Phase, Glass).").
barrons.rule2687:: isa(A15S1069-matter, "matter") -> of(A13S1069-phase, A15S1069-matter), isa(E11S1069-find, "find"), agent(E11S1069-find, A10S1069-we), isa(A10S1069-we, "we"), object(E11S1069-find, A13S1069-phase), isa(A13S1069-phase, "two phases liquid and solid"), in(E11S1069-find, A3S1069-glass), isa(A3S1069-glass, "a glass of water").
english(barrons.rule2688, "In a glass of water that contains ice cubes we find two phases of matter liquid and solid").
pretty(barrons.rule2688, "isa(find, 'find') -> find_in(We, Phase, Glass).").
barrons.rule2688:: isa(E11S1069-find, "find") -> of(A13S1069-phase, A15S1069-matter), isa(A15S1069-matter, "matter"), agent(E11S1069-find, A10S1069-we), isa(A10S1069-we, "we"), object(E11S1069-find, A13S1069-phase), isa(A13S1069-phase, "two phases liquid and solid"), in(E11S1069-find, A3S1069-glass), isa(A3S1069-glass, "a glass of water").
english(barrons.rule2689, "In a glass of water that contains ice cubes we find two phases of matter liquid and solid").
pretty(barrons.rule2689, "isa(We, 'we') -> find_in(We, Phase, Glass).").
barrons.rule2689:: isa(A10S1069-we, "we") -> of(A13S1069-phase, A15S1069-matter), isa(A15S1069-matter, "matter"), isa(E11S1069-find, "find"), agent(E11S1069-find, A10S1069-we), object(E11S1069-find, A13S1069-phase), isa(A13S1069-phase, "two phases liquid and solid"), in(E11S1069-find, A3S1069-glass), isa(A3S1069-glass, "a glass of water").
english(barrons.rule2690, "In a glass of water that contains ice cubes we find two phases of matter liquid and solid").
pretty(barrons.rule2690, "isa(Phase, 'two phases of matter liquid and solid') -> find_in(We, Phase, Glass).").
barrons.rule2690:: isa(A13S1069-phase, "two phases liquid and solid") -> of(A13S1069-phase, A15S1069-matter), isa(A15S1069-matter, "matter"), isa(E11S1069-find, "find"), agent(E11S1069-find, A10S1069-we), isa(A10S1069-we, "we"), object(E11S1069-find, A13S1069-phase), in(E11S1069-find, A3S1069-glass), isa(A3S1069-glass, "a glass of water").
english(barrons.rule2691, "In a glass of water that contains ice cubes we find two phases of matter liquid and solid").
pretty(barrons.rule2691, "isa(Glass, 'a glass of water') -> find_in(We, Phase, Glass).").
barrons.rule2691:: isa(A3S1069-glass, "a glass of water") -> of(A13S1069-phase, A15S1069-matter), isa(A15S1069-matter, "matter"), isa(E11S1069-find, "find"), agent(E11S1069-find, A10S1069-we), isa(A10S1069-we, "we"), object(E11S1069-find, A13S1069-phase), isa(A13S1069-phase, "two phases liquid and solid"), in(E11S1069-find, A3S1069-glass).
english(barrons.rule2692, "Examples of chemical properties include the souring of milk and the ability to burn in the presence of oxygen").
pretty(barrons.rule2692, "isa(Property, 'chemical properties') -> include(Example, Souring).").
barrons.rule2692:: isa(A4S1074-property, "chemical properties") -> of(A1S1074-example, A4S1074-property), of(A7S1074-souring, A9S1074-milk), isa(A9S1074-milk, "milk"), isa(E5S1074-include, "include"), agent(E5S1074-include, A1S1074-example), isa(A1S1074-example, "Examples"), object(E5S1074-include, A7S1074-souring), isa(A7S1074-souring, "the souring").
english(barrons.rule2693, "Examples of chemical properties include the souring of milk and the ability to burn in the presence of oxygen").
pretty(barrons.rule2693, "isa(Milk, 'milk') -> include(Example, Souring).").
barrons.rule2693:: isa(A9S1074-milk, "milk") -> of(A1S1074-example, A4S1074-property), isa(A4S1074-property, "chemical properties"), of(A7S1074-souring, A9S1074-milk), isa(E5S1074-include, "include"), agent(E5S1074-include, A1S1074-example), isa(A1S1074-example, "Examples"), object(E5S1074-include, A7S1074-souring), isa(A7S1074-souring, "the souring").
english(barrons.rule2694, "Examples of chemical properties include the souring of milk and the ability to burn in the presence of oxygen").
pretty(barrons.rule2694, "isa(include, 'include') -> include(Example, Souring).").
barrons.rule2694:: isa(E5S1074-include, "include") -> of(A1S1074-example, A4S1074-property), isa(A4S1074-property, "chemical properties"), of(A7S1074-souring, A9S1074-milk), isa(A9S1074-milk, "milk"), agent(E5S1074-include, A1S1074-example), isa(A1S1074-example, "Examples"), object(E5S1074-include, A7S1074-souring), isa(A7S1074-souring, "the souring").
english(barrons.rule2695, "Examples of chemical properties include the souring of milk and the ability to burn in the presence of oxygen").
pretty(barrons.rule2695, "isa(Example, 'Examples of chemical properties') -> include(Example, Souring).").
barrons.rule2695:: isa(A1S1074-example, "Examples") -> of(A1S1074-example, A4S1074-property), isa(A4S1074-property, "chemical properties"), of(A7S1074-souring, A9S1074-milk), isa(A9S1074-milk, "milk"), isa(E5S1074-include, "include"), agent(E5S1074-include, A1S1074-example), object(E5S1074-include, A7S1074-souring), isa(A7S1074-souring, "the souring").
english(barrons.rule2696, "Examples of chemical properties include the souring of milk and the ability to burn in the presence of oxygen").
pretty(barrons.rule2696, "isa(Souring, 'the souring of milk') -> include(Example, Souring).").
barrons.rule2696:: isa(A7S1074-souring, "the souring") -> of(A1S1074-example, A4S1074-property), isa(A4S1074-property, "chemical properties"), of(A7S1074-souring, A9S1074-milk), isa(A9S1074-milk, "milk"), isa(E5S1074-include, "include"), agent(E5S1074-include, A1S1074-example), isa(A1S1074-example, "Examples"), object(E5S1074-include, A7S1074-souring).
english(barrons.rule2697, "Examples of chemical properties include the souring of milk and the ability to burn in the presence of oxygen").
pretty(barrons.rule2697, "isa(Property, 'chemical properties') -> include(Example, Ability).").
barrons.rule2697:: isa(A4S1074-property, "chemical properties") -> of(A1S1074-example, A4S1074-property), isa(E5S1074-include, "include"), agent(E5S1074-include, A1S1074-example), isa(A1S1074-example, "Examples"), object(E5S1074-include, A12S1074-ability), isa(A12S1074-ability, "the ability").
english(barrons.rule2698, "Examples of chemical properties include the souring of milk and the ability to burn in the presence of oxygen").
pretty(barrons.rule2698, "isa(include, 'include') -> include(Example, Ability).").
barrons.rule2698:: isa(E5S1074-include, "include") -> of(A1S1074-example, A4S1074-property), isa(A4S1074-property, "chemical properties"), agent(E5S1074-include, A1S1074-example), isa(A1S1074-example, "Examples"), object(E5S1074-include, A12S1074-ability), isa(A12S1074-ability, "the ability").
english(barrons.rule2699, "Examples of chemical properties include the souring of milk and the ability to burn in the presence of oxygen").
pretty(barrons.rule2699, "isa(Example, 'Examples of chemical properties') -> include(Example, Ability).").
barrons.rule2699:: isa(A1S1074-example, "Examples") -> of(A1S1074-example, A4S1074-property), isa(A4S1074-property, "chemical properties"), isa(E5S1074-include, "include"), agent(E5S1074-include, A1S1074-example), object(E5S1074-include, A12S1074-ability), isa(A12S1074-ability, "the ability").
english(barrons.rule2700, "Examples of chemical properties include the souring of milk and the ability to burn in the presence of oxygen").
pretty(barrons.rule2700, "isa(Ability, 'the ability to burn in the presence of oxygen') -> include(Example, Ability).").
barrons.rule2700:: isa(A12S1074-ability, "the ability") -> of(A1S1074-example, A4S1074-property), isa(A4S1074-property, "chemical properties"), isa(E5S1074-include, "include"), agent(E5S1074-include, A1S1074-example), isa(A1S1074-example, "Examples"), object(E5S1074-include, A12S1074-ability).
english(barrons.rule2701, "Examples of chemical properties include the souring of milk and the ability to burn in the presence of oxygen").
pretty(barrons.rule2701, "EXAMPLE(Souring, Property), Souring = 'the souring of milk', Property = 'chemical properties'.").
barrons.rule2701:: of(A7S1074-souring, A9S1074-milk), isa(A9S1074-milk, "milk"), isa(A7S1074-souring, "the souring") -> example(A7S1074-souring, A4S1074-property), isa(A4S1074-property, "chemical properties").
english(barrons.rule2702, "Examples of chemical properties include the souring of milk and the ability to burn in the presence of oxygen").
pretty(barrons.rule2702, "EXAMPLE(Souring, Property), Souring = 'the souring of milk', Property = 'chemical properties'.").
barrons.rule2702:: isa(A4S1074-property, "chemical properties") -> example(A7S1074-souring, A4S1074-property), of(A7S1074-souring, A9S1074-milk), isa(A9S1074-milk, "milk"), isa(A7S1074-souring, "the souring").
english(barrons.rule2703, "Examples of chemical properties include the souring of milk and the ability to burn in the presence of oxygen").
pretty(barrons.rule2703, "EXAMPLE(Ability, Property), Ability = 'the ability', Property = 'chemical properties'.").
barrons.rule2703:: isa(A12S1074-ability, "the ability") -> example(A12S1074-ability, A4S1074-property), isa(A4S1074-property, "chemical properties").
english(barrons.rule2704, "Examples of chemical properties include the souring of milk and the ability to burn in the presence of oxygen").
pretty(barrons.rule2704, "EXAMPLE(Ability, Property), Ability = 'the ability', Property = 'chemical properties'.").
barrons.rule2704:: isa(A4S1074-property, "chemical properties") -> example(A12S1074-ability, A4S1074-property), isa(A12S1074-ability, "the ability").
english(barrons.rule2705, "A scientist would use a graduated cylinder to measure the volume of a liquid").
pretty(barrons.rule2705, "EFFECT(use(Scientist, Cylinder), measure(Scientist, Volume)), Scientist = 'A scientist', Cylinder = 'a graduated cylinder', Volume = 'the volume of a liquid'.").
barrons.rule2705:: isa(E4S1075-use, "use"), agent(E4S1075-use, A2S1075-scientist), isa(A2S1075-scientist, "A scientist"), object(E4S1075-use, A7S1075-cylinder), isa(A7S1075-cylinder, "a graduated cylinder") -> effect(E4S1075-use, E9S1075-measure), of(A11S1075-volume, A14S1075-liquid), isa(A14S1075-liquid, "a liquid"), isa(E9S1075-measure, "measure"), agent(E9S1075-measure, A2S1075-scientist), object(E9S1075-measure, A11S1075-volume), isa(A11S1075-volume, "the volume").
english(barrons.rule2706, "A scientist would use a graduated cylinder to measure the volume of a liquid").
pretty(barrons.rule2706, "EFFECT(use(Scientist, Cylinder), measure(Scientist, Volume)), Scientist = 'A scientist', Cylinder = 'a graduated cylinder', Volume = 'the volume of a liquid'.").
barrons.rule2706:: of(A11S1075-volume, A14S1075-liquid), isa(A14S1075-liquid, "a liquid"), isa(E9S1075-measure, "measure"), agent(E9S1075-measure, A2S1075-scientist), isa(A2S1075-scientist, "A scientist"), object(E9S1075-measure, A11S1075-volume), isa(A11S1075-volume, "the volume") -> effect(E4S1075-use, E9S1075-measure), isa(E4S1075-use, "use"), agent(E4S1075-use, A2S1075-scientist), object(E4S1075-use, A7S1075-cylinder), isa(A7S1075-cylinder, "a graduated cylinder").
english(barrons.rule2707, "Rusting is an example of a chemical property").
pretty(barrons.rule2707, "EXAMPLE(Rusting, Property), Rusting = 'Rusting', Property = 'a chemical property'.").
barrons.rule2707:: isa(A1S1076-rusting, "Rusting") -> example(A1S1076-rusting, A8S1076-property), isa(A8S1076-property, "a chemical property").
english(barrons.rule2708, "Rusting is an example of a chemical property").
pretty(barrons.rule2708, "EXAMPLE(Rusting, Property), Rusting = 'Rusting', Property = 'a chemical property'.").
barrons.rule2708:: isa(A8S1076-property, "a chemical property") -> example(A1S1076-rusting, A8S1076-property), isa(A1S1076-rusting, "Rusting").
english(barrons.rule2709, "The particles of matter have the most definite shape in the solid phase").
pretty(barrons.rule2709, "isa(Matter, 'matter') -> have(Particle, Shape).").
barrons.rule2709:: isa(A4S1077-matter, "matter") -> of(A2S1077-particle, A4S1077-matter), in(A9S1077-shape, A13S1077-phase), isa(A13S1077-phase, "the solid phase"), isa(E5S1077-have, "have"), agent(E5S1077-have, A2S1077-particle), isa(A2S1077-particle, "The particles"), object(E5S1077-have, A9S1077-shape), isa(A9S1077-shape, "the most definite shape").
english(barrons.rule2710, "The particles of matter have the most definite shape in the solid phase").
pretty(barrons.rule2710, "isa(Phase, 'the solid phase') -> have(Particle, Shape).").
barrons.rule2710:: isa(A13S1077-phase, "the solid phase") -> of(A2S1077-particle, A4S1077-matter), isa(A4S1077-matter, "matter"), in(A9S1077-shape, A13S1077-phase), isa(E5S1077-have, "have"), agent(E5S1077-have, A2S1077-particle), isa(A2S1077-particle, "The particles"), object(E5S1077-have, A9S1077-shape), isa(A9S1077-shape, "the most definite shape").
english(barrons.rule2711, "The particles of matter have the most definite shape in the solid phase").
pretty(barrons.rule2711, "isa(have, 'have') -> have(Particle, Shape).").
barrons.rule2711:: isa(E5S1077-have, "have") -> of(A2S1077-particle, A4S1077-matter), isa(A4S1077-matter, "matter"), in(A9S1077-shape, A13S1077-phase), isa(A13S1077-phase, "the solid phase"), agent(E5S1077-have, A2S1077-particle), isa(A2S1077-particle, "The particles"), object(E5S1077-have, A9S1077-shape), isa(A9S1077-shape, "the most definite shape").
english(barrons.rule2712, "The particles of matter have the most definite shape in the solid phase").
pretty(barrons.rule2712, "isa(Particle, 'The particles of matter') -> have(Particle, Shape).").
barrons.rule2712:: isa(A2S1077-particle, "The particles") -> of(A2S1077-particle, A4S1077-matter), isa(A4S1077-matter, "matter"), in(A9S1077-shape, A13S1077-phase), isa(A13S1077-phase, "the solid phase"), isa(E5S1077-have, "have"), agent(E5S1077-have, A2S1077-particle), object(E5S1077-have, A9S1077-shape), isa(A9S1077-shape, "the most definite shape").
english(barrons.rule2713, "The particles of matter have the most definite shape in the solid phase").
pretty(barrons.rule2713, "isa(Shape, 'the most definite shape in the solid phase') -> have(Particle, Shape).").
barrons.rule2713:: isa(A9S1077-shape, "the most definite shape") -> of(A2S1077-particle, A4S1077-matter), isa(A4S1077-matter, "matter"), in(A9S1077-shape, A13S1077-phase), isa(A13S1077-phase, "the solid phase"), isa(E5S1077-have, "have"), agent(E5S1077-have, A2S1077-particle), isa(A2S1077-particle, "The particles"), object(E5S1077-have, A9S1077-shape).
english(barrons.rule2714, "Using your eyes to see that a banana is yellow is an example of using your senses to make an observation").
pretty(barrons.rule2714, "EFFECT(use(Example, Eye), see(Example, Yellow)), Example = 'an example of using your senses to make an observation', Eye = 'your eyes', Yellow = 'that yellow'.").
barrons.rule2714:: of(A13S1078-example, A15S1078-use), isa(A15S1078-use, "using your senses"), isa(E1S1078-use, "use"), agent(E1S1078-use, A13S1078-example), isa(A13S1078-example, "an example"), object(E1S1078-use, A3S1078-eye), isa(A3S1078-eye, "your eyes") -> effect(E1S1078-use, E5S1078-see), isa(E5S1078-see, "see"), agent(E5S1078-see, A13S1078-example), arg(E5S1078-see, A10S1078-yellow), isa(A10S1078-yellow, "that a banana is yellow").
english(barrons.rule2715, "Using your eyes to see that a banana is yellow is an example of using your senses to make an observation").
pretty(barrons.rule2715, "EFFECT(use(Example, Eye), see(Example, Yellow)), Example = 'an example of using your senses to make an observation', Eye = 'your eyes', Yellow = 'that yellow'.").
barrons.rule2715:: of(A13S1078-example, A15S1078-use), isa(A15S1078-use, "using your senses"), isa(E5S1078-see, "see"), agent(E5S1078-see, A13S1078-example), isa(A13S1078-example, "an example"), arg(E5S1078-see, A10S1078-yellow), isa(A10S1078-yellow, "that a banana is yellow") -> effect(E1S1078-use, E5S1078-see), isa(E1S1078-use, "use"), agent(E1S1078-use, A13S1078-example), object(E1S1078-use, A3S1078-eye), isa(A3S1078-eye, "your eyes").
english(barrons.rule2716, "Using your eyes to see that a banana is yellow is an example of using your senses to make an observation").
pretty(barrons.rule2716, "EFFECT(use(Sens), make(Observation)), Sens = 'your senses', Observation = 'an observation'.").
barrons.rule2716:: isa(E15S1078-use, "use"), object(E15S1078-use, A17S1078-sens), isa(A17S1078-sens, "your senses") -> effect(E15S1078-use, E19S1078-make), isa(E19S1078-make, "make"), object(E19S1078-make, A21S1078-observation), isa(A21S1078-observation, "an observation").
english(barrons.rule2717, "Using your eyes to see that a banana is yellow is an example of using your senses to make an observation").
pretty(barrons.rule2717, "EFFECT(use(Sens), make(Observation)), Sens = 'your senses', Observation = 'an observation'.").
barrons.rule2717:: isa(E19S1078-make, "make"), object(E19S1078-make, A21S1078-observation), isa(A21S1078-observation, "an observation") -> effect(E15S1078-use, E19S1078-make), isa(E15S1078-use, "use"), object(E15S1078-use, A17S1078-sens), isa(A17S1078-sens, "your senses").
english(barrons.rule2718, "A balance measures mass").
pretty(barrons.rule2718, "isa(measure, 'measures') -> measure(Balance, Mass).").
barrons.rule2718:: isa(E3S1079-measure, "measure") -> agent(E3S1079-measure, A2S1079-balance), isa(A2S1079-balance, "A balance"), object(E3S1079-measure, A4S1079-mass), isa(A4S1079-mass, "mass").
english(barrons.rule2719, "A balance measures mass").
pretty(barrons.rule2719, "isa(Balance, 'A balance') -> measure(Balance, Mass).").
barrons.rule2719:: isa(A2S1079-balance, "A balance") -> isa(E3S1079-measure, "measure"), agent(E3S1079-measure, A2S1079-balance), object(E3S1079-measure, A4S1079-mass), isa(A4S1079-mass, "mass").
english(barrons.rule2720, "A balance measures mass").
pretty(barrons.rule2720, "isa(Mass, 'mass') -> measure(Balance, Mass).").
barrons.rule2720:: isa(A4S1079-mass, "mass") -> isa(E3S1079-measure, "measure"), agent(E3S1079-measure, A2S1079-balance), isa(A2S1079-balance, "A balance"), object(E3S1079-measure, A4S1079-mass).
english(barrons.rule2721, "A balance measures mass").
pretty(barrons.rule2721, "PURPOSE(Balance, measure(Balance, Mass)), Balance = 'A balance', Mass = 'mass'.").
barrons.rule2721:: isa(A2S1079-balance, "A balance") -> purpose(A2S1079-balance, E3S1079-measure), isa(E3S1079-measure, "measure"), agent(E3S1079-measure, A2S1079-balance), object(E3S1079-measure, A4S1079-mass), isa(A4S1079-mass, "mass").
english(barrons.rule2722, "A balance measures mass").
pretty(barrons.rule2722, "PURPOSE(Balance, measure(Balance, Mass)), Balance = 'A balance', Mass = 'mass'.").
barrons.rule2722:: isa(E3S1079-measure, "measure"), agent(E3S1079-measure, A2S1079-balance), isa(A2S1079-balance, "A balance"), object(E3S1079-measure, A4S1079-mass), isa(A4S1079-mass, "mass") -> purpose(A2S1079-balance, E3S1079-measure).
english(barrons.rule2723, "Melting of ice is a physical change not a chemical change").
pretty(barrons.rule2723, "EXAMPLE(Melting, Change), Melting = 'Melting of ice', Change = 'a physical change not'.").
barrons.rule2723:: of(A1S1080-melting, A3S1080-ice), isa(A3S1080-ice, "ice"), isa(A1S1080-melting, "Melting") -> example(A1S1080-melting, A7S1080-change), isa(A7S1080-change, "a physical change not").
english(barrons.rule2724, "Melting of ice is a physical change not a chemical change").
pretty(barrons.rule2724, "EXAMPLE(Melting, Change), Melting = 'Melting of ice', Change = 'a physical change not'.").
barrons.rule2724:: isa(A7S1080-change, "a physical change not") -> example(A1S1080-melting, A7S1080-change), of(A1S1080-melting, A3S1080-ice), isa(A3S1080-ice, "ice"), isa(A1S1080-melting, "Melting").
english(barrons.rule2725, "The gas phase of matter will take the shape of a closed container").
pretty(barrons.rule2725, "isa(Matter, 'matter') -> take(Phase, Shape).").
barrons.rule2725:: isa(A5S1081-matter, "matter") -> of(A3S1081-phase, A5S1081-matter), of(A9S1081-shape, A13S1081-container), isa(A13S1081-container, "a closed container"), isa(E7S1081-take, "take"), agent(E7S1081-take, A3S1081-phase), isa(A3S1081-phase, "The gas phase"), object(E7S1081-take, A9S1081-shape), isa(A9S1081-shape, "the shape").
english(barrons.rule2726, "The gas phase of matter will take the shape of a closed container").
pretty(barrons.rule2726, "isa(Container, 'a closed container') -> take(Phase, Shape).").
barrons.rule2726:: isa(A13S1081-container, "a closed container") -> of(A3S1081-phase, A5S1081-matter), isa(A5S1081-matter, "matter"), of(A9S1081-shape, A13S1081-container), isa(E7S1081-take, "take"), agent(E7S1081-take, A3S1081-phase), isa(A3S1081-phase, "The gas phase"), object(E7S1081-take, A9S1081-shape), isa(A9S1081-shape, "the shape").
english(barrons.rule2727, "The gas phase of matter will take the shape of a closed container").
pretty(barrons.rule2727, "isa(take, 'take') -> take(Phase, Shape).").
barrons.rule2727:: isa(E7S1081-take, "take") -> of(A3S1081-phase, A5S1081-matter), isa(A5S1081-matter, "matter"), of(A9S1081-shape, A13S1081-container), isa(A13S1081-container, "a closed container"), agent(E7S1081-take, A3S1081-phase), isa(A3S1081-phase, "The gas phase"), object(E7S1081-take, A9S1081-shape), isa(A9S1081-shape, "the shape").
english(barrons.rule2728, "The gas phase of matter will take the shape of a closed container").
pretty(barrons.rule2728, "isa(Phase, 'The gas phase of matter') -> take(Phase, Shape).").
barrons.rule2728:: isa(A3S1081-phase, "The gas phase") -> of(A3S1081-phase, A5S1081-matter), isa(A5S1081-matter, "matter"), of(A9S1081-shape, A13S1081-container), isa(A13S1081-container, "a closed container"), isa(E7S1081-take, "take"), agent(E7S1081-take, A3S1081-phase), object(E7S1081-take, A9S1081-shape), isa(A9S1081-shape, "the shape").
english(barrons.rule2729, "The gas phase of matter will take the shape of a closed container").
pretty(barrons.rule2729, "isa(Shape, 'the shape of a closed container') -> take(Phase, Shape).").
barrons.rule2729:: isa(A9S1081-shape, "the shape") -> of(A3S1081-phase, A5S1081-matter), isa(A5S1081-matter, "matter"), of(A9S1081-shape, A13S1081-container), isa(A13S1081-container, "a closed container"), isa(E7S1081-take, "take"), agent(E7S1081-take, A3S1081-phase), isa(A3S1081-phase, "The gas phase"), object(E7S1081-take, A9S1081-shape).
english(barrons.rule2730, "A bike rolling down a hill is an example of kinetic energy").
pretty(barrons.rule2730, "EXAMPLE(Bike, Energy), Bike = 'A bike', Energy = 'kinetic energy'.").
barrons.rule2730:: isa(A2S1082-bike, "A bike") -> example(A2S1082-bike, A12S1082-energy), isa(A12S1082-energy, "kinetic energy").
english(barrons.rule2731, "A bike rolling down a hill is an example of kinetic energy").
pretty(barrons.rule2731, "EXAMPLE(Bike, Energy), Bike = 'A bike', Energy = 'kinetic energy'.").
barrons.rule2731:: isa(A12S1082-energy, "kinetic energy") -> example(A2S1082-bike, A12S1082-energy), isa(A2S1082-bike, "A bike").
english(barrons.rule2732, "A bike rolling down a hill is an example of kinetic energy").
pretty(barrons.rule2732, "EFFECT(roll(Bike, Hill, Down), be_of(Bike, Example, Energy)), Bike = 'A bike', Hill = 'a hill', Down = 'down', Example = 'an example of kinetic energy', Energy = 'kinetic energy'.").
barrons.rule2732:: isa(E3S1082-roll, "roll"), agent(E3S1082-roll, A2S1082-bike), isa(A2S1082-bike, "A bike"), object(E3S1082-roll, A6S1082-hill), isa(A6S1082-hill, "a hill"), arg(E3S1082-roll, A4S1082-down), isa(A4S1082-down, "down") -> effect(E3S1082-roll, E7S1082-be), isa(E7S1082-be, "be"), agent(E7S1082-be, A2S1082-bike), object(E7S1082-be, A9S1082-example), isa(A9S1082-example, "exemplify"), of(E7S1082-be, A12S1082-energy), isa(A12S1082-energy, "kinetic energy").
english(barrons.rule2733, "A bike rolling down a hill is an example of kinetic energy").
pretty(barrons.rule2733, "EFFECT(roll(Bike, Hill, Down), be_of(Bike, Example, Energy)), Bike = 'A bike', Hill = 'a hill', Down = 'down', Example = 'an example of kinetic energy', Energy = 'kinetic energy'.").
barrons.rule2733:: isa(E7S1082-be, "be"), agent(E7S1082-be, A2S1082-bike), isa(A2S1082-bike, "A bike"), object(E7S1082-be, A9S1082-example), isa(A9S1082-example, "exemplify"), of(E7S1082-be, A12S1082-energy), isa(A12S1082-energy, "kinetic energy") -> effect(E3S1082-roll, E7S1082-be), isa(E3S1082-roll, "roll"), agent(E3S1082-roll, A2S1082-bike), object(E3S1082-roll, A6S1082-hill), isa(A6S1082-hill, "a hill"), arg(E3S1082-roll, A4S1082-down), isa(A4S1082-down, "down").
english(barrons.rule2734, "A plane flying is an example of kinetic energy").
pretty(barrons.rule2734, "EXAMPLE(Plane, Energy), Plane = 'A plane', Energy = 'kinetic energy'.").
barrons.rule2734:: isa(A2S1083-plane, "A plane") -> example(A2S1083-plane, A9S1083-energy), isa(A9S1083-energy, "kinetic energy").
english(barrons.rule2735, "A plane flying is an example of kinetic energy").
pretty(barrons.rule2735, "EXAMPLE(Plane, Energy), Plane = 'A plane', Energy = 'kinetic energy'.").
barrons.rule2735:: isa(A9S1083-energy, "kinetic energy") -> example(A2S1083-plane, A9S1083-energy), isa(A2S1083-plane, "A plane").
english(barrons.rule2736, "A plane flying is an example of kinetic energy").
pretty(barrons.rule2736, "EFFECT(fly(Plane), be_of(Plane, Example, Energy)), Plane = 'A plane', Example = 'an example of kinetic energy', Energy = 'kinetic energy'.").
barrons.rule2736:: isa(E3S1083-fly, "fly"), agent(E3S1083-fly, A2S1083-plane), isa(A2S1083-plane, "A plane") -> effect(E3S1083-fly, E4S1083-be), isa(E4S1083-be, "be"), agent(E4S1083-be, A2S1083-plane), object(E4S1083-be, A6S1083-example), isa(A6S1083-example, "exemplify"), of(E4S1083-be, A9S1083-energy), isa(A9S1083-energy, "kinetic energy").
english(barrons.rule2737, "A plane flying is an example of kinetic energy").
pretty(barrons.rule2737, "EFFECT(fly(Plane), be_of(Plane, Example, Energy)), Plane = 'A plane', Example = 'an example of kinetic energy', Energy = 'kinetic energy'.").
barrons.rule2737:: isa(E4S1083-be, "be"), agent(E4S1083-be, A2S1083-plane), isa(A2S1083-plane, "A plane"), object(E4S1083-be, A6S1083-example), isa(A6S1083-example, "exemplify"), of(E4S1083-be, A9S1083-energy), isa(A9S1083-energy, "kinetic energy") -> effect(E3S1083-fly, E4S1083-be), isa(E3S1083-fly, "fly"), agent(E3S1083-fly, A2S1083-plane).
english(barrons.rule2738, "A snowball melting in your hand is an example of heat energy").
pretty(barrons.rule2738, "EXAMPLE(Snowball, Energy), Snowball = 'A snowball melting in your hand', Energy = 'heat energy'.").
barrons.rule2738:: isa(A2S1084-snowball, "A snowball melting in your hand") -> example(A2S1084-snowball, A12S1084-energy), isa(A12S1084-energy, "heat energy").
english(barrons.rule2739, "A snowball melting in your hand is an example of heat energy").
pretty(barrons.rule2739, "EXAMPLE(Snowball, Energy), Snowball = 'A snowball melting in your hand', Energy = 'heat energy'.").
barrons.rule2739:: isa(A12S1084-energy, "heat energy") -> example(A2S1084-snowball, A12S1084-energy), isa(A2S1084-snowball, "A snowball melting in your hand").
english(barrons.rule2740, "Banging a drum is an example of mechanical energy").
pretty(barrons.rule2740, "EXAMPLE(bang(A), Energy), A = 'a', Energy = 'mechanical energy'.").
barrons.rule2740:: isa(E1S1085-bang, "bang"), object(E1S1085-bang, A2S1085-a), isa(A2S1085-a, "a") -> example(E1S1085-bang, A9S1085-energy), isa(A9S1085-energy, "mechanical energy").
english(barrons.rule2741, "Banging a drum is an example of mechanical energy").
pretty(barrons.rule2741, "EXAMPLE(bang(A), Energy), A = 'a', Energy = 'mechanical energy'.").
barrons.rule2741:: isa(A9S1085-energy, "mechanical energy") -> example(E1S1085-bang, A9S1085-energy), isa(E1S1085-bang, "bang"), object(E1S1085-bang, A2S1085-a), isa(A2S1085-a, "a").
english(barrons.rule2742, "Pounding a fist on a table is an example of mechanical energy changing to to sound energy").
pretty(barrons.rule2742, "EXAMPLE(pound_on(Fist, Table), Energy), Fist = 'a fist', Table = 'a table', Energy = 'mechanical energy'.").
barrons.rule2742:: isa(E1S1086-pound, "pound"), object(E1S1086-pound, A3S1086-fist), isa(A3S1086-fist, "a fist"), on(E1S1086-pound, A6S1086-table), isa(A6S1086-table, "a table") -> example(E1S1086-pound, A12S1086-energy), isa(A12S1086-energy, "mechanical energy").
english(barrons.rule2743, "Pounding a fist on a table is an example of mechanical energy changing to to sound energy").
pretty(barrons.rule2743, "EXAMPLE(pound_on(Fist, Table), Energy), Fist = 'a fist', Table = 'a table', Energy = 'mechanical energy'.").
barrons.rule2743:: isa(A12S1086-energy, "mechanical energy") -> example(E1S1086-pound, A12S1086-energy), isa(E1S1086-pound, "pound"), object(E1S1086-pound, A3S1086-fist), isa(A3S1086-fist, "a fist"), on(E1S1086-pound, A6S1086-table), isa(A6S1086-table, "a table").
english(barrons.rule2744, "Drying clothes in a clothes dryer is an example of electrical energy changing to heat energy").
pretty(barrons.rule2744, "EXAMPLE(dry_in(Clothes, Dryer), Energy), Clothes = 'clothes', Dryer = 'a clothes dryer', Energy = 'electrical energy changing to heat energy'.").
barrons.rule2744:: isa(E1S1087-dry, "dry"), object(E1S1087-dry, A2S1087-clothes), isa(A2S1087-clothes, "clothes"), in(E1S1087-dry, A6S1087-dryer), isa(A6S1087-dryer, "a clothes dryer") -> example(E1S1087-dry, A12S1087-energy), isa(A12S1087-energy, "electrical energy changing to heat energy").
english(barrons.rule2745, "Drying clothes in a clothes dryer is an example of electrical energy changing to heat energy").
pretty(barrons.rule2745, "EXAMPLE(dry_in(Clothes, Dryer), Energy), Clothes = 'clothes', Dryer = 'a clothes dryer', Energy = 'electrical energy changing to heat energy'.").
barrons.rule2745:: isa(A12S1087-energy, "electrical energy changing to heat energy") -> example(E1S1087-dry, A12S1087-energy), isa(E1S1087-dry, "dry"), object(E1S1087-dry, A2S1087-clothes), isa(A2S1087-clothes, "clothes"), in(E1S1087-dry, A6S1087-dryer), isa(A6S1087-dryer, "a clothes dryer").
english(barrons.rule2746, "A battery is an example of chemical energy changing to electrical energy").
pretty(barrons.rule2746, "EXAMPLE(Battery, Energy), Battery = 'A battery', Energy = 'chemical energy changing to electrical energy'.").
barrons.rule2746:: isa(A2S1088-battery, "A battery") -> example(A2S1088-battery, A8S1088-energy), isa(A8S1088-energy, "chemical energy changing to electrical energy").
english(barrons.rule2747, "A battery is an example of chemical energy changing to electrical energy").
pretty(barrons.rule2747, "EXAMPLE(Battery, Energy), Battery = 'A battery', Energy = 'chemical energy changing to electrical energy'.").
barrons.rule2747:: isa(A8S1088-energy, "chemical energy changing to electrical energy") -> example(A2S1088-battery, A8S1088-energy), isa(A2S1088-battery, "A battery").
english(barrons.rule2748, "Playing a guitar is an example of mechanical energy changing to sound energy").
pretty(barrons.rule2748, "isa(Energy, 'mechanical energy') -> play(Example, Guitar).").
barrons.rule2748:: isa(A9S1089-energy, "mechanical energy") -> of(A6S1089-example, A9S1089-energy), isa(E1S1089-play, "play"), agent(E1S1089-play, A6S1089-example), isa(A6S1089-example, "an example"), object(E1S1089-play, A3S1089-guitar), isa(A3S1089-guitar, "a guitar").
english(barrons.rule2749, "Playing a guitar is an example of mechanical energy changing to sound energy").
pretty(barrons.rule2749, "isa(play, 'Playing') -> play(Example, Guitar).").
barrons.rule2749:: isa(E1S1089-play, "play") -> of(A6S1089-example, A9S1089-energy), isa(A9S1089-energy, "mechanical energy"), agent(E1S1089-play, A6S1089-example), isa(A6S1089-example, "an example"), object(E1S1089-play, A3S1089-guitar), isa(A3S1089-guitar, "a guitar").
english(barrons.rule2750, "Playing a guitar is an example of mechanical energy changing to sound energy").
pretty(barrons.rule2750, "isa(Example, 'an example of mechanical energy changing to sound energy') -> play(Example, Guitar).").
barrons.rule2750:: isa(A6S1089-example, "an example") -> of(A6S1089-example, A9S1089-energy), isa(A9S1089-energy, "mechanical energy"), isa(E1S1089-play, "play"), agent(E1S1089-play, A6S1089-example), object(E1S1089-play, A3S1089-guitar), isa(A3S1089-guitar, "a guitar").
english(barrons.rule2751, "Playing a guitar is an example of mechanical energy changing to sound energy").
pretty(barrons.rule2751, "isa(Guitar, 'a guitar') -> play(Example, Guitar).").
barrons.rule2751:: isa(A3S1089-guitar, "a guitar") -> of(A6S1089-example, A9S1089-energy), isa(A9S1089-energy, "mechanical energy"), isa(E1S1089-play, "play"), agent(E1S1089-play, A6S1089-example), isa(A6S1089-example, "an example"), object(E1S1089-play, A3S1089-guitar).
english(barrons.rule2752, "A blender is an example of electrical energy changing to mechanical energy").
pretty(barrons.rule2752, "EXAMPLE(Blender, Energy), Blender = 'A blender', Energy = 'electrical energy changing to mechanical energy'.").
barrons.rule2752:: isa(A2S1090-blender, "A blender") -> example(A2S1090-blender, A8S1090-energy), isa(A8S1090-energy, "electrical energy changing to mechanical energy").
english(barrons.rule2753, "A blender is an example of electrical energy changing to mechanical energy").
pretty(barrons.rule2753, "EXAMPLE(Blender, Energy), Blender = 'A blender', Energy = 'electrical energy changing to mechanical energy'.").
barrons.rule2753:: isa(A8S1090-energy, "electrical energy changing to mechanical energy") -> example(A2S1090-blender, A8S1090-energy), isa(A2S1090-blender, "A blender").
english(barrons.rule2754, "A car engine is an example of chemical energy changing to mechanical energy").
pretty(barrons.rule2754, "EXAMPLE(Engine, Energy), Engine = 'A car engine', Energy = 'chemical energy changing to mechanical energy'.").
barrons.rule2754:: isa(A3S1091-engine, "A car engine") -> example(A3S1091-engine, A9S1091-energy), isa(A9S1091-energy, "chemical energy changing to mechanical energy").
english(barrons.rule2755, "A car engine is an example of chemical energy changing to mechanical energy").
pretty(barrons.rule2755, "EXAMPLE(Engine, Energy), Engine = 'A car engine', Energy = 'chemical energy changing to mechanical energy'.").
barrons.rule2755:: isa(A9S1091-energy, "chemical energy changing to mechanical energy") -> example(A3S1091-engine, A9S1091-energy), isa(A3S1091-engine, "A car engine").
english(barrons.rule2756, "A ball rolling down a hill is an example of kinetic energy").
pretty(barrons.rule2756, "EXAMPLE(Ball, Energy), Ball = 'A ball', Energy = 'kinetic energy'.").
barrons.rule2756:: isa(A2S1092-ball, "A ball") -> example(A2S1092-ball, A12S1092-energy), isa(A12S1092-energy, "kinetic energy").
english(barrons.rule2757, "A ball rolling down a hill is an example of kinetic energy").
pretty(barrons.rule2757, "EXAMPLE(Ball, Energy), Ball = 'A ball', Energy = 'kinetic energy'.").
barrons.rule2757:: isa(A12S1092-energy, "kinetic energy") -> example(A2S1092-ball, A12S1092-energy), isa(A2S1092-ball, "A ball").
english(barrons.rule2758, "A ball rolling down a hill is an example of kinetic energy").
pretty(barrons.rule2758, "EFFECT(roll(Ball, Hill, Down), be_of(Ball, Example, Energy)), Ball = 'A ball', Hill = 'a hill', Down = 'down', Example = 'an example of kinetic energy', Energy = 'kinetic energy'.").
barrons.rule2758:: isa(E3S1092-roll, "roll"), agent(E3S1092-roll, A2S1092-ball), isa(A2S1092-ball, "A ball"), object(E3S1092-roll, A6S1092-hill), isa(A6S1092-hill, "a hill"), arg(E3S1092-roll, A4S1092-down), isa(A4S1092-down, "down") -> effect(E3S1092-roll, E7S1092-be), isa(E7S1092-be, "be"), agent(E7S1092-be, A2S1092-ball), object(E7S1092-be, A9S1092-example), isa(A9S1092-example, "exemplify"), of(E7S1092-be, A12S1092-energy), isa(A12S1092-energy, "kinetic energy").
english(barrons.rule2759, "A ball rolling down a hill is an example of kinetic energy").
pretty(barrons.rule2759, "EFFECT(roll(Ball, Hill, Down), be_of(Ball, Example, Energy)), Ball = 'A ball', Hill = 'a hill', Down = 'down', Example = 'an example of kinetic energy', Energy = 'kinetic energy'.").
barrons.rule2759:: isa(E7S1092-be, "be"), agent(E7S1092-be, A2S1092-ball), isa(A2S1092-ball, "A ball"), object(E7S1092-be, A9S1092-example), isa(A9S1092-example, "exemplify"), of(E7S1092-be, A12S1092-energy), isa(A12S1092-energy, "kinetic energy") -> effect(E3S1092-roll, E7S1092-be), isa(E3S1092-roll, "roll"), agent(E3S1092-roll, A2S1092-ball), object(E3S1092-roll, A6S1092-hill), isa(A6S1092-hill, "a hill"), arg(E3S1092-roll, A4S1092-down), isa(A4S1092-down, "down").
english(barrons.rule2760, "Energy from the sun is called solar energy").
pretty(barrons.rule2760, "EXAMPLE(Energy, Energy), Energy = 'Energy from the sun', Energy = 'solar energy'.").
barrons.rule2760:: from(A1S1093-Energy, A4S1093-sun), isa(A4S1093-sun, "the sun"), isa(A1S1093-Energy, "Energy") -> example(A1S1093-Energy, A8S1093-energy), isa(A8S1093-energy, "solar energy").
english(barrons.rule2761, "Energy from the sun is called solar energy").
pretty(barrons.rule2761, "EXAMPLE(Energy, Energy), Energy = 'Energy from the sun', Energy = 'solar energy'.").
barrons.rule2761:: isa(A8S1093-energy, "solar energy") -> example(A1S1093-Energy, A8S1093-energy), from(A1S1093-Energy, A4S1093-sun), isa(A4S1093-sun, "the sun"), isa(A1S1093-Energy, "Energy").
english(barrons.rule2762, "The energy transformation that occurs when you ring a door bell is electrical energy to sound").
pretty(barrons.rule2762, "WHEN(occur(Transformation), ring(You, Bell)), Transformation = 'The energy transformation', You = 'you', Bell = 'a door bell'.").
barrons.rule2762:: isa(E5S1094-occur, "occur"), agent(E5S1094-occur, A3S1094-transformation), isa(A3S1094-transformation, "The energy transformation") -> when(E5S1094-occur, E8S1094-ring), isa(E8S1094-ring, "ring"), agent(E8S1094-ring, A7S1094-you), isa(A7S1094-you, "you"), object(E8S1094-ring, A11S1094-bell), isa(A11S1094-bell, "a door bell").
english(barrons.rule2763, "The energy transformation that occurs when you ring a door bell is electrical energy to sound").
pretty(barrons.rule2763, "WHEN(occur(Transformation), ring(You, Bell)), Transformation = 'The energy transformation', You = 'you', Bell = 'a door bell'.").
barrons.rule2763:: isa(E8S1094-ring, "ring"), agent(E8S1094-ring, A7S1094-you), isa(A7S1094-you, "you"), object(E8S1094-ring, A11S1094-bell), isa(A11S1094-bell, "a door bell") -> when(E5S1094-occur, E8S1094-ring), isa(E5S1094-occur, "occur"), agent(E5S1094-occur, A3S1094-transformation), isa(A3S1094-transformation, "The energy transformation").
english(barrons.rule2764, "Stored energy is called potential energy").
pretty(barrons.rule2764, "EXAMPLE(store(Energy), Energy), Energy = 'energy', Energy = 'potential energy'.").
barrons.rule2764:: isa(E1S1096-store, "store"), object(E1S1096-store, A2S1096-energy), isa(A2S1096-energy, "energy") -> example(E1S1096-store, A6S1096-energy), isa(A6S1096-energy, "potential energy").
english(barrons.rule2765, "Stored energy is called potential energy").
pretty(barrons.rule2765, "EXAMPLE(store(Energy), Energy), Energy = 'energy', Energy = 'potential energy'.").
barrons.rule2765:: isa(A6S1096-energy, "potential energy") -> example(E1S1096-store, A6S1096-energy), isa(E1S1096-store, "store"), object(E1S1096-store, A2S1096-energy), isa(A2S1096-energy, "energy").
english(barrons.rule2766, "Friction is the force that slows down or stops the motion of a bicycle").
pretty(barrons.rule2766, "EXAMPLE(Friction, slow(Force, Motion, Down)), Friction = 'Friction', Force = 'the force', Motion = 'the motion of a bicycle', Down = 'down'.").
barrons.rule2766:: isa(A1S1097-friction, "Friction") -> example(A1S1097-friction, A4S1097-force), of(A11S1097-motion, A14S1097-bicycle), isa(A14S1097-bicycle, "a bicycle"), isa(E6S1097-slow, "slow"), agent(E6S1097-slow, A4S1097-force), isa(A4S1097-force, "the force"), object(E6S1097-slow, A11S1097-motion), isa(A11S1097-motion, "the motion"), arg(E6S1097-slow, A7S1097-down), isa(A7S1097-down, "down"), isa(A1S1097-friction, A4S1097-force).
english(barrons.rule2767, "Friction is the force that slows down or stops the motion of a bicycle").
pretty(barrons.rule2767, "EXAMPLE(Friction, slow(Force, Motion, Down)), Friction = 'Friction', Force = 'the force', Motion = 'the motion of a bicycle', Down = 'down'.").
barrons.rule2767:: of(A11S1097-motion, A14S1097-bicycle), isa(A14S1097-bicycle, "a bicycle"), isa(E6S1097-slow, "slow"), agent(E6S1097-slow, A4S1097-force), isa(A4S1097-force, "the force"), object(E6S1097-slow, A11S1097-motion), isa(A11S1097-motion, "the motion"), arg(E6S1097-slow, A7S1097-down), isa(A7S1097-down, "down") -> example(A1S1097-friction, A4S1097-force), isa(A1S1097-friction, "Friction"), isa(A1S1097-friction, A4S1097-force).
english(barrons.rule2768, "Friction is the force that slows down or stops the motion of a bicycle").
pretty(barrons.rule2768, "EXAMPLE(Friction, stop(Force)), Friction = 'Friction', Force = 'the force'.").
barrons.rule2768:: isa(A1S1097-friction, "Friction") -> example(A1S1097-friction, A4S1097-force), isa(E9S1097-stop, "stop"), agent(E9S1097-stop, A4S1097-force), isa(A4S1097-force, "the force"), isa(A1S1097-friction, A4S1097-force).
english(barrons.rule2769, "Friction is the force that slows down or stops the motion of a bicycle").
pretty(barrons.rule2769, "EXAMPLE(Friction, stop(Force)), Friction = 'Friction', Force = 'the force'.").
barrons.rule2769:: isa(E9S1097-stop, "stop"), agent(E9S1097-stop, A4S1097-force), isa(A4S1097-force, "the force") -> example(A1S1097-friction, A4S1097-force), isa(A1S1097-friction, "Friction"), isa(A1S1097-friction, A4S1097-force).
english(barrons.rule2770, "Friction is the force that slows down or stops the motion of a bicycle").
pretty(barrons.rule2770, "EXAMPLE(Friction, Force), Friction = 'Friction', Force = 'the force'.").
barrons.rule2770:: isa(A1S1097-friction, "Friction") -> example(A1S1097-friction, A4S1097-force), isa(A4S1097-force, "the force").
english(barrons.rule2771, "Friction is the force that slows down or stops the motion of a bicycle").
pretty(barrons.rule2771, "EXAMPLE(Friction, Force), Friction = 'Friction', Force = 'the force'.").
barrons.rule2771:: isa(A4S1097-force, "the force") -> example(A1S1097-friction, A4S1097-force), isa(A1S1097-friction, "Friction").
english(barrons.rule2772, "The seesaw in a playground is an example of a lever").
pretty(barrons.rule2772, "EXAMPLE(Seesaw, Lever), Seesaw = 'The seesaw in a playground', Lever = 'a lever'.").
barrons.rule2772:: in(A2S1098-seesaw, A5S1098-playground), isa(A5S1098-playground, "a playground"), isa(A2S1098-seesaw, "The seesaw") -> example(A2S1098-seesaw, A11S1098-lever), isa(A11S1098-lever, "a lever").
english(barrons.rule2773, "The seesaw in a playground is an example of a lever").
pretty(barrons.rule2773, "EXAMPLE(Seesaw, Lever), Seesaw = 'The seesaw in a playground', Lever = 'a lever'.").
barrons.rule2773:: isa(A11S1098-lever, "a lever") -> example(A2S1098-seesaw, A11S1098-lever), in(A2S1098-seesaw, A5S1098-playground), isa(A5S1098-playground, "a playground"), isa(A2S1098-seesaw, "The seesaw").
english(barrons.rule2774, "Gravity is the force that brings objects toward the Earth").
pretty(barrons.rule2774, "EXAMPLE(Gravity, bring_toward(Force, Object, Earth)), Gravity = 'Gravity', Force = 'the force', Object = 'objects', Earth = 'the Earth'.").
barrons.rule2774:: isa(A1S1099-gravity, "Gravity") -> example(A1S1099-gravity, A4S1099-force), isa(E6S1099-bring, "bring"), agent(E6S1099-bring, A4S1099-force), isa(A4S1099-force, "the force"), object(E6S1099-bring, A7S1099-object), isa(A7S1099-object, "objects"), toward(E6S1099-bring, A10S1099-Earth), isa(A10S1099-Earth, "the Earth"), isa(A1S1099-gravity, A4S1099-force).
english(barrons.rule2775, "Gravity is the force that brings objects toward the Earth").
pretty(barrons.rule2775, "EXAMPLE(Gravity, bring_toward(Force, Object, Earth)), Gravity = 'Gravity', Force = 'the force', Object = 'objects', Earth = 'the Earth'.").
barrons.rule2775:: isa(E6S1099-bring, "bring"), agent(E6S1099-bring, A4S1099-force), isa(A4S1099-force, "the force"), object(E6S1099-bring, A7S1099-object), isa(A7S1099-object, "objects"), toward(E6S1099-bring, A10S1099-Earth), isa(A10S1099-Earth, "the Earth") -> example(A1S1099-gravity, A4S1099-force), isa(A1S1099-gravity, "Gravity"), isa(A1S1099-gravity, A4S1099-force).
english(barrons.rule2776, "Gravity is the force that brings objects toward the Earth").
pretty(barrons.rule2776, "EXAMPLE(Gravity, Force), Gravity = 'Gravity', Force = 'the force'.").
barrons.rule2776:: isa(A1S1099-gravity, "Gravity") -> example(A1S1099-gravity, A4S1099-force), isa(A4S1099-force, "the force").
english(barrons.rule2777, "Gravity is the force that brings objects toward the Earth").
pretty(barrons.rule2777, "EXAMPLE(Gravity, Force), Gravity = 'Gravity', Force = 'the force'.").
barrons.rule2777:: isa(A4S1099-force, "the force") -> example(A1S1099-gravity, A4S1099-force), isa(A1S1099-gravity, "Gravity").
english(barrons.rule2778, "A push or a pull is called a force").
pretty(barrons.rule2778, "EXAMPLE(push, Force), Force = 'a force'.").
barrons.rule2778:: isa(E2S1100-push, "a push") -> example(E2S1100-push, A9S1100-force), isa(A9S1100-force, "a force").
english(barrons.rule2779, "A push or a pull is called a force").
pretty(barrons.rule2779, "EXAMPLE(push, Force), Force = 'a force'.").
barrons.rule2779:: isa(A9S1100-force, "a force") -> example(E2S1100-push, A9S1100-force), isa(E2S1100-push, "a push").
english(barrons.rule2780, "A push or a pull is called a force").
pretty(barrons.rule2780, "EXAMPLE(pull, Force), Force = 'a force'.").
barrons.rule2780:: isa(E5S1100-pull, "a pull") -> example(E5S1100-pull, A9S1100-force), isa(A9S1100-force, "a force").
english(barrons.rule2781, "A push or a pull is called a force").
pretty(barrons.rule2781, "EXAMPLE(pull, Force), Force = 'a force'.").
barrons.rule2781:: isa(A9S1100-force, "a force") -> example(E5S1100-pull, A9S1100-force), isa(E5S1100-pull, "a pull").
english(barrons.rule2782, "When two objects slide over one another friction can occur").
pretty(barrons.rule2782, "WHEN(occur(Friction), slide_over(Object, One)), Friction = 'another friction', Object = 'two objects', One = 'one'.").
barrons.rule2782:: isa(E10S1101-occur, "occur"), agent(E10S1101-occur, A8S1101-friction), isa(A8S1101-friction, "another friction") -> when(E10S1101-occur, E4S1101-slide), isa(E4S1101-slide, "slide"), agent(E4S1101-slide, A3S1101-object), isa(A3S1101-object, "two objects"), over(E4S1101-slide, A6S1101-one), isa(A6S1101-one, "one").
english(barrons.rule2783, "When two objects slide over one another friction can occur").
pretty(barrons.rule2783, "WHEN(occur(Friction), slide_over(Object, One)), Friction = 'another friction', Object = 'two objects', One = 'one'.").
barrons.rule2783:: isa(E4S1101-slide, "slide"), agent(E4S1101-slide, A3S1101-object), isa(A3S1101-object, "two objects"), over(E4S1101-slide, A6S1101-one), isa(A6S1101-one, "one") -> when(E10S1101-occur, E4S1101-slide), isa(E10S1101-occur, "occur"), agent(E10S1101-occur, A8S1101-friction), isa(A8S1101-friction, "another friction").
english(barrons.rule2784, "Examples of objects that are attracted by magnet are a staple an iron nail and a pin").
pretty(barrons.rule2784, "EXAMPLE(Staple, attract(Magnet, Object)), Staple = 'a staple', Magnet = 'magnet', Object = 'objects'.").
barrons.rule2784:: isa(A11S1102-staple, "a staple") -> example(A11S1102-staple, E6S1102-attract), isa(E6S1102-attract, "attract"), agent(E6S1102-attract, A8S1102-magnet), isa(A8S1102-magnet, "magnet"), object(E6S1102-attract, A3S1102-object), isa(A3S1102-object, "objects").
english(barrons.rule2785, "Examples of objects that are attracted by magnet are a staple an iron nail and a pin").
pretty(barrons.rule2785, "EXAMPLE(Staple, attract(Magnet, Object)), Staple = 'a staple', Magnet = 'magnet', Object = 'objects'.").
barrons.rule2785:: isa(E6S1102-attract, "attract"), agent(E6S1102-attract, A8S1102-magnet), isa(A8S1102-magnet, "magnet"), object(E6S1102-attract, A3S1102-object), isa(A3S1102-object, "objects") -> example(A11S1102-staple, E6S1102-attract), isa(A11S1102-staple, "a staple").
english(barrons.rule2786, "Examples of objects that are attracted by magnet are a staple an iron nail and a pin").
pretty(barrons.rule2786, "EXAMPLE(Staple, Object), Staple = 'a staple', Object = 'objects'.").
barrons.rule2786:: isa(A11S1102-staple, "a staple") -> example(A11S1102-staple, A3S1102-object), isa(A3S1102-object, "objects").
english(barrons.rule2787, "Examples of objects that are attracted by magnet are a staple an iron nail and a pin").
pretty(barrons.rule2787, "EXAMPLE(Staple, Object), Staple = 'a staple', Object = 'objects'.").
barrons.rule2787:: isa(A3S1102-object, "objects") -> example(A11S1102-staple, A3S1102-object), isa(A11S1102-staple, "a staple").
english(barrons.rule2788, "Examples of objects that are attracted by magnet are a staple an iron nail and a pin").
pretty(barrons.rule2788, "EXAMPLE(Example, Staple), Example = 'Examples of objects that are attracted by magnet', Staple = 'a staple'.").
barrons.rule2788:: of(A1S1102-example, A3S1102-object), isa(A3S1102-object, "objects"), isa(A1S1102-example, "Examples") -> example(A1S1102-example, A11S1102-staple), isa(A11S1102-staple, "a staple").
english(barrons.rule2789, "Examples of objects that are attracted by magnet are a staple an iron nail and a pin").
pretty(barrons.rule2789, "EXAMPLE(Example, Staple), Example = 'Examples of objects that are attracted by magnet', Staple = 'a staple'.").
barrons.rule2789:: isa(A11S1102-staple, "a staple") -> example(A1S1102-example, A11S1102-staple), of(A1S1102-example, A3S1102-object), isa(A3S1102-object, "objects"), isa(A1S1102-example, "Examples").
english(barrons.rule2790, "Examples of objects that are attracted by magnet are a staple an iron nail and a pin").
pretty(barrons.rule2790, "EXAMPLE(Nail, attract(Magnet, Object)), Nail = 'an iron nail', Magnet = 'magnet', Object = 'objects'.").
barrons.rule2790:: isa(A15S1102-nail, "an iron nail") -> example(A15S1102-nail, E6S1102-attract), isa(E6S1102-attract, "attract"), agent(E6S1102-attract, A8S1102-magnet), isa(A8S1102-magnet, "magnet"), object(E6S1102-attract, A3S1102-object), isa(A3S1102-object, "objects").
english(barrons.rule2791, "Examples of objects that are attracted by magnet are a staple an iron nail and a pin").
pretty(barrons.rule2791, "EXAMPLE(Nail, attract(Magnet, Object)), Nail = 'an iron nail', Magnet = 'magnet', Object = 'objects'.").
barrons.rule2791:: isa(E6S1102-attract, "attract"), agent(E6S1102-attract, A8S1102-magnet), isa(A8S1102-magnet, "magnet"), object(E6S1102-attract, A3S1102-object), isa(A3S1102-object, "objects") -> example(A15S1102-nail, E6S1102-attract), isa(A15S1102-nail, "an iron nail").
english(barrons.rule2792, "Examples of objects that are attracted by magnet are a staple an iron nail and a pin").
pretty(barrons.rule2792, "EXAMPLE(Nail, Object), Nail = 'an iron nail', Object = 'objects'.").
barrons.rule2792:: isa(A15S1102-nail, "an iron nail") -> example(A15S1102-nail, A3S1102-object), isa(A3S1102-object, "objects").
english(barrons.rule2793, "Examples of objects that are attracted by magnet are a staple an iron nail and a pin").
pretty(barrons.rule2793, "EXAMPLE(Nail, Object), Nail = 'an iron nail', Object = 'objects'.").
barrons.rule2793:: isa(A3S1102-object, "objects") -> example(A15S1102-nail, A3S1102-object), isa(A15S1102-nail, "an iron nail").
english(barrons.rule2794, "Examples of objects that are attracted by magnet are a staple an iron nail and a pin").
pretty(barrons.rule2794, "EXAMPLE(Pin, attract(Magnet, Object)), Pin = 'a pin', Magnet = 'magnet', Object = 'objects'.").
barrons.rule2794:: isa(A19S1102-pin, "a pin") -> example(A19S1102-pin, E6S1102-attract), isa(E6S1102-attract, "attract"), agent(E6S1102-attract, A8S1102-magnet), isa(A8S1102-magnet, "magnet"), object(E6S1102-attract, A3S1102-object), isa(A3S1102-object, "objects").
english(barrons.rule2795, "Examples of objects that are attracted by magnet are a staple an iron nail and a pin").
pretty(barrons.rule2795, "EXAMPLE(Pin, attract(Magnet, Object)), Pin = 'a pin', Magnet = 'magnet', Object = 'objects'.").
barrons.rule2795:: isa(E6S1102-attract, "attract"), agent(E6S1102-attract, A8S1102-magnet), isa(A8S1102-magnet, "magnet"), object(E6S1102-attract, A3S1102-object), isa(A3S1102-object, "objects") -> example(A19S1102-pin, E6S1102-attract), isa(A19S1102-pin, "a pin").
english(barrons.rule2796, "Examples of objects that are attracted by magnet are a staple an iron nail and a pin").
pretty(barrons.rule2796, "EXAMPLE(Pin, Object), Pin = 'a pin', Object = 'objects'.").
barrons.rule2796:: isa(A19S1102-pin, "a pin") -> example(A19S1102-pin, A3S1102-object), isa(A3S1102-object, "objects").
english(barrons.rule2797, "Examples of objects that are attracted by magnet are a staple an iron nail and a pin").
pretty(barrons.rule2797, "EXAMPLE(Pin, Object), Pin = 'a pin', Object = 'objects'.").
barrons.rule2797:: isa(A3S1102-object, "objects") -> example(A19S1102-pin, A3S1102-object), isa(A19S1102-pin, "a pin").
english(barrons.rule2798, "The Earth makes a complete rotation on its[the Earth 's] axis once every 24 hours").
pretty(barrons.rule2798, "isa(Axis, 'its[the Earth ’s] axis 24 hours') -> make(Earth, Rotation).").
barrons.rule2798:: isa(A9S1103-axis, "its[the Earth 's] axis 24 hours") -> on(A6S1103-rotation, A9S1103-axis), isa(E3S1103-make, "make"), agent(E3S1103-make, A2S1103-Earth), isa(A2S1103-Earth, "The Earth"), object(E3S1103-make, A6S1103-rotation), isa(A6S1103-rotation, "a complete rotation").
english(barrons.rule2799, "The Earth makes a complete rotation on its[the Earth 's] axis once every 24 hours").
pretty(barrons.rule2799, "isa(make, 'makes') -> make(Earth, Rotation).").
barrons.rule2799:: isa(E3S1103-make, "make") -> on(A6S1103-rotation, A9S1103-axis), isa(A9S1103-axis, "its[the Earth 's] axis 24 hours"), agent(E3S1103-make, A2S1103-Earth), isa(A2S1103-Earth, "The Earth"), object(E3S1103-make, A6S1103-rotation), isa(A6S1103-rotation, "a complete rotation").
english(barrons.rule2800, "The Earth makes a complete rotation on its[the Earth 's] axis once every 24 hours").
pretty(barrons.rule2800, "isa(Earth, 'The Earth') -> make(Earth, Rotation).").
barrons.rule2800:: isa(A2S1103-Earth, "The Earth") -> on(A6S1103-rotation, A9S1103-axis), isa(A9S1103-axis, "its[the Earth 's] axis 24 hours"), isa(E3S1103-make, "make"), agent(E3S1103-make, A2S1103-Earth), object(E3S1103-make, A6S1103-rotation), isa(A6S1103-rotation, "a complete rotation").
english(barrons.rule2801, "The Earth makes a complete rotation on its[the Earth 's] axis once every 24 hours").
pretty(barrons.rule2801, "isa(Rotation, 'a complete rotation on its[the Earth ’s] axis once every 24 hours') -> make(Earth, Rotation).").
barrons.rule2801:: isa(A6S1103-rotation, "a complete rotation") -> on(A6S1103-rotation, A9S1103-axis), isa(A9S1103-axis, "its[the Earth 's] axis 24 hours"), isa(E3S1103-make, "make"), agent(E3S1103-make, A2S1103-Earth), isa(A2S1103-Earth, "The Earth"), object(E3S1103-make, A6S1103-rotation).
english(barrons.rule2802, "We are able to see the moon in the sky because the sun 's light is reflected off of the moon").
pretty(barrons.rule2802, "EFFECT(reflect_off(Light, Of), see(Moon)), Light = 'the sun ’s light', Of = 'of the moon', Moon = 'the moon in the sky'.").
barrons.rule2802:: isa(E17S1105-reflect, "reflect"), object(E17S1105-reflect, A15S1105-light), isa(A15S1105-light, "the sun 's light"), off(E17S1105-reflect, A19S1105-of), isa(A19S1105-of, "of the moon") -> effect(E17S1105-reflect, E5S1105-see), in(A7S1105-moon, A10S1105-sky), isa(A10S1105-sky, "the sky"), isa(E5S1105-see, "see"), object(E5S1105-see, A7S1105-moon), isa(A7S1105-moon, "the moon").
english(barrons.rule2803, "We are able to see the moon in the sky because the sun 's light is reflected off of the moon").
pretty(barrons.rule2803, "EFFECT(reflect_off(Light, Of), see(Moon)), Light = 'the sun ’s light', Of = 'of the moon', Moon = 'the moon in the sky'.").
barrons.rule2803:: in(A7S1105-moon, A10S1105-sky), isa(A10S1105-sky, "the sky"), isa(E5S1105-see, "see"), object(E5S1105-see, A7S1105-moon), isa(A7S1105-moon, "the moon") -> effect(E17S1105-reflect, E5S1105-see), isa(E17S1105-reflect, "reflect"), object(E17S1105-reflect, A15S1105-light), isa(A15S1105-light, "the sun 's light"), off(E17S1105-reflect, A19S1105-of), isa(A19S1105-of, "of the moon").
english(barrons.rule2804, "The rising and setting of the sun as viewed from Earth is the result of the Earth 's rotation").
pretty(barrons.rule2804, "EXAMPLE(The, Result), The = 'The rising of the sun as viewed from Earth', Result = 'the result of the Earth ’s rotation'.").
barrons.rule2804:: of(A1S1112-the, A7S1112-sun), isa(A7S1112-sun, "the sun"), from(A9S1112-view, A11S1112-Earth), isa(A11S1112-Earth, "Earth"), as(A1S1112-the, A9S1112-view), isa(A9S1112-view, "viewed"), isa(A1S1112-the, "The rising") -> example(A1S1112-the, A14S1112-result), of(A14S1112-result, A19S1112-rotation), isa(A19S1112-rotation, "the Earth 's rotation"), isa(A14S1112-result, "the result").
english(barrons.rule2805, "The rising and setting of the sun as viewed from Earth is the result of the Earth 's rotation").
pretty(barrons.rule2805, "EXAMPLE(The, Result), The = 'The rising of the sun as viewed from Earth', Result = 'the result of the Earth ’s rotation'.").
barrons.rule2805:: of(A14S1112-result, A19S1112-rotation), isa(A19S1112-rotation, "the Earth 's rotation"), isa(A14S1112-result, "the result") -> example(A1S1112-the, A14S1112-result), of(A1S1112-the, A7S1112-sun), isa(A7S1112-sun, "the sun"), from(A9S1112-view, A11S1112-Earth), isa(A11S1112-Earth, "Earth"), as(A1S1112-the, A9S1112-view), isa(A9S1112-view, "viewed"), isa(A1S1112-the, "The rising").
english(barrons.rule2806, "The rising and setting of the sun as viewed from Earth is the result of the Earth 's rotation").
pretty(barrons.rule2806, "EXAMPLE(Set, Result), Set = 'setting', Result = 'the result of the Earth ’s rotation'.").
barrons.rule2806:: isa(A4S1112-set, "setting") -> example(A4S1112-set, A14S1112-result), of(A14S1112-result, A19S1112-rotation), isa(A19S1112-rotation, "the Earth 's rotation"), isa(A14S1112-result, "the result").
english(barrons.rule2807, "The rising and setting of the sun as viewed from Earth is the result of the Earth 's rotation").
pretty(barrons.rule2807, "EXAMPLE(Set, Result), Set = 'setting', Result = 'the result of the Earth ’s rotation'.").
barrons.rule2807:: of(A14S1112-result, A19S1112-rotation), isa(A19S1112-rotation, "the Earth 's rotation"), isa(A14S1112-result, "the result") -> example(A4S1112-set, A14S1112-result), isa(A4S1112-set, "setting").
english(barrons.rule2808, "Tracking the weather is most important for people who plant crops").
pretty(barrons.rule2808, "PURPOSE(be(Important, Most), People), Important = 'Tracking the weather important for people who plant crops', Most = 'most', People = 'people'.").
barrons.rule2808:: isa(E4S1114-be, "be"), object(E4S1114-be, A6S1114-important), isa(A6S1114-important, "important"), arg(E4S1114-be, A5S1114-most), isa(A5S1114-most, "most") -> purpose(E4S1114-be, A8S1114-people), isa(A8S1114-people, "people").
english(barrons.rule2809, "Tracking the weather is most important for people who plant crops").
pretty(barrons.rule2809, "PURPOSE(be(Important, Most), People), Important = 'Tracking the weather important for people who plant crops', Most = 'most', People = 'people'.").
barrons.rule2809:: isa(A8S1114-people, "people") -> purpose(E4S1114-be, A8S1114-people), isa(E4S1114-be, "be"), object(E4S1114-be, A6S1114-important), isa(A6S1114-important, "important"), arg(E4S1114-be, A5S1114-most), isa(A5S1114-most, "most").
english(barrons.rule2810, "A barometer is used to measure air pressure").
pretty(barrons.rule2810, "PURPOSE(Barometer, measure(Barometer, Pressure)), Barometer = 'A barometer', Pressure = 'air pressure'.").
barrons.rule2810:: isa(A2S1116-barometer, "A barometer") -> purpose(A2S1116-barometer, E6S1116-measure), isa(E6S1116-measure, "measure"), agent(E6S1116-measure, A2S1116-barometer), object(E6S1116-measure, A8S1116-pressure), isa(A8S1116-pressure, "air pressure").
english(barrons.rule2811, "A barometer is used to measure air pressure").
pretty(barrons.rule2811, "PURPOSE(Barometer, measure(Barometer, Pressure)), Barometer = 'A barometer', Pressure = 'air pressure'.").
barrons.rule2811:: isa(E6S1116-measure, "measure"), agent(E6S1116-measure, A2S1116-barometer), isa(A2S1116-barometer, "A barometer"), object(E6S1116-measure, A8S1116-pressure), isa(A8S1116-pressure, "air pressure") -> purpose(A2S1116-barometer, E6S1116-measure).
english(barrons.rule2812, "Precipitation is the term used to describe water falling from the sky").
pretty(barrons.rule2812, "PURPOSE(Term, describe(Term)), Term = 'the term'.").
barrons.rule2812:: isa(A4S1117-term, "the term") -> purpose(A4S1117-term, E7S1117-describe), isa(E7S1117-describe, "describe"), agent(E7S1117-describe, A4S1117-term).
english(barrons.rule2813, "Precipitation is the term used to describe water falling from the sky").
pretty(barrons.rule2813, "PURPOSE(Term, describe(Term)), Term = 'the term'.").
barrons.rule2813:: isa(E7S1117-describe, "describe"), agent(E7S1117-describe, A4S1117-term), isa(A4S1117-term, "the term") -> purpose(A4S1117-term, E7S1117-describe).
english(barrons.rule2814, "Precipitation is the term used to describe water falling from the sky").
pretty(barrons.rule2814, "PURPOSE(precipitate, describe).").
barrons.rule2814:: isa(E1S1117-precipitation, "precipitate") -> purpose(E1S1117-precipitation, E7S1117-describe), isa(E7S1117-describe, "describe").
english(barrons.rule2815, "Precipitation is the term used to describe water falling from the sky").
pretty(barrons.rule2815, "PURPOSE(precipitate, describe).").
barrons.rule2815:: isa(E7S1117-describe, "describe") -> purpose(E1S1117-precipitation, E7S1117-describe), isa(E1S1117-precipitation, "precipitate").
english(barrons.rule2816, "Precipitation is the term used to describe water falling from the sky").
pretty(barrons.rule2816, "EXAMPLE(Precipitation, use(Term)), Precipitation = 'Precipitation', Term = 'the term'.").
barrons.rule2816:: isa(A1S1117-precipitation, "Precipitation") -> example(A1S1117-precipitation, E5S1117-use), isa(E5S1117-use, "use"), agent(E5S1117-use, A4S1117-term), isa(A4S1117-term, "the term").
english(barrons.rule2817, "Precipitation is the term used to describe water falling from the sky").
pretty(barrons.rule2817, "EXAMPLE(Precipitation, use(Term)), Precipitation = 'Precipitation', Term = 'the term'.").
barrons.rule2817:: isa(E5S1117-use, "use"), agent(E5S1117-use, A4S1117-term), isa(A4S1117-term, "the term") -> example(A1S1117-precipitation, E5S1117-use), isa(A1S1117-precipitation, "Precipitation").
english(barrons.rule2818, "Precipitation is the term used to describe water falling from the sky").
pretty(barrons.rule2818, "EXAMPLE(Precipitation, Term), Precipitation = 'Precipitation', Term = 'the term'.").
barrons.rule2818:: isa(A1S1117-precipitation, "Precipitation") -> example(A1S1117-precipitation, A4S1117-term), isa(A4S1117-term, "the term").
english(barrons.rule2819, "Precipitation is the term used to describe water falling from the sky").
pretty(barrons.rule2819, "EXAMPLE(Precipitation, Term), Precipitation = 'Precipitation', Term = 'the term'.").
barrons.rule2819:: isa(A4S1117-term, "the term") -> example(A1S1117-precipitation, A4S1117-term), isa(A1S1117-precipitation, "Precipitation").
english(barrons.rule2820, "A meteorologist is a scientist who studies weather").
pretty(barrons.rule2820, "EXAMPLE(Meteorologist, study(Who, Weather)), Meteorologist = 'A meteorologist', Who = 'who', Weather = 'weather'.").
barrons.rule2820:: isa(A2S1119-meteorologist, "A meteorologist") -> example(A2S1119-meteorologist, E7S1119-study), isa(E7S1119-study, "study"), agent(E7S1119-study, A6S1119-who), isa(A6S1119-who, "who"), arg(E7S1119-study, A8S1119-weather), isa(A8S1119-weather, "weather").
english(barrons.rule2821, "A meteorologist is a scientist who studies weather").
pretty(barrons.rule2821, "EXAMPLE(Meteorologist, study(Who, Weather)), Meteorologist = 'A meteorologist', Who = 'who', Weather = 'weather'.").
barrons.rule2821:: isa(E7S1119-study, "study"), agent(E7S1119-study, A6S1119-who), isa(A6S1119-who, "who"), arg(E7S1119-study, A8S1119-weather), isa(A8S1119-weather, "weather") -> example(A2S1119-meteorologist, E7S1119-study), isa(A2S1119-meteorologist, "A meteorologist").
english(barrons.rule2822, "A meteorologist is a scientist who studies weather").
pretty(barrons.rule2822, "EXAMPLE(Meteorologist, Scientist), Meteorologist = 'A meteorologist', Scientist = 'a scientist'.").
barrons.rule2822:: isa(A2S1119-meteorologist, "A meteorologist") -> example(A2S1119-meteorologist, A5S1119-scientist), isa(A5S1119-scientist, "a scientist").
english(barrons.rule2823, "A meteorologist is a scientist who studies weather").
pretty(barrons.rule2823, "EXAMPLE(Meteorologist, Scientist), Meteorologist = 'A meteorologist', Scientist = 'a scientist'.").
barrons.rule2823:: isa(A5S1119-scientist, "a scientist") -> example(A2S1119-meteorologist, A5S1119-scientist), isa(A2S1119-meteorologist, "A meteorologist").
english(barrons.rule2824, "Water falling from the sky is called precipitation").
pretty(barrons.rule2824, "EXAMPLE(Water, Precipitation), Water = 'Water falling from the sky', Precipitation = 'precipitation'.").
barrons.rule2824:: from(A1S1128-water, A5S1128-sky), isa(A5S1128-sky, "the sky"), isa(A1S1128-water, "Water falling") -> example(A1S1128-water, A8S1128-precipitation), isa(A8S1128-precipitation, "precipitation").
english(barrons.rule2825, "Water falling from the sky is called precipitation").
pretty(barrons.rule2825, "EXAMPLE(Water, Precipitation), Water = 'Water falling from the sky', Precipitation = 'precipitation'.").
barrons.rule2825:: isa(A8S1128-precipitation, "precipitation") -> example(A1S1128-water, A8S1128-precipitation), from(A1S1128-water, A5S1128-sky), isa(A5S1128-sky, "the sky"), isa(A1S1128-water, "Water falling").
english(barrons.rule2826, "The water cycle involves movement of water between air and land").
pretty(barrons.rule2826, "isa(Air, 'air') -> involve(Cycle, Movement).").
barrons.rule2826:: isa(A9S1130-air, "air") -> between(A7S1130-water, A9S1130-air), between(A7S1130-water, A11S1130-land), isa(A11S1130-land, "land"), of(A5S1130-movement, A7S1130-water), isa(A7S1130-water, "water"), isa(E4S1130-involve, "involve"), agent(E4S1130-involve, A3S1130-cycle), isa(A3S1130-cycle, "The water cycle"), object(E4S1130-involve, A5S1130-movement), isa(A5S1130-movement, "movement").
english(barrons.rule2827, "The water cycle involves movement of water between air and land").
pretty(barrons.rule2827, "isa(Land, 'land') -> involve(Cycle, Movement).").
barrons.rule2827:: isa(A11S1130-land, "land") -> between(A7S1130-water, A9S1130-air), isa(A9S1130-air, "air"), between(A7S1130-water, A11S1130-land), of(A5S1130-movement, A7S1130-water), isa(A7S1130-water, "water"), isa(E4S1130-involve, "involve"), agent(E4S1130-involve, A3S1130-cycle), isa(A3S1130-cycle, "The water cycle"), object(E4S1130-involve, A5S1130-movement), isa(A5S1130-movement, "movement").
english(barrons.rule2828, "The water cycle involves movement of water between air and land").
pretty(barrons.rule2828, "isa(Water, 'water between air and land') -> involve(Cycle, Movement).").
barrons.rule2828:: isa(A7S1130-water, "water") -> between(A7S1130-water, A9S1130-air), isa(A9S1130-air, "air"), between(A7S1130-water, A11S1130-land), isa(A11S1130-land, "land"), of(A5S1130-movement, A7S1130-water), isa(E4S1130-involve, "involve"), agent(E4S1130-involve, A3S1130-cycle), isa(A3S1130-cycle, "The water cycle"), object(E4S1130-involve, A5S1130-movement), isa(A5S1130-movement, "movement").
english(barrons.rule2829, "The water cycle involves movement of water between air and land").
pretty(barrons.rule2829, "isa(involve, 'involves') -> involve(Cycle, Movement).").
barrons.rule2829:: isa(E4S1130-involve, "involve") -> between(A7S1130-water, A9S1130-air), isa(A9S1130-air, "air"), between(A7S1130-water, A11S1130-land), isa(A11S1130-land, "land"), of(A5S1130-movement, A7S1130-water), isa(A7S1130-water, "water"), agent(E4S1130-involve, A3S1130-cycle), isa(A3S1130-cycle, "The water cycle"), object(E4S1130-involve, A5S1130-movement), isa(A5S1130-movement, "movement").
english(barrons.rule2830, "The water cycle involves movement of water between air and land").
pretty(barrons.rule2830, "isa(Cycle, 'The water cycle') -> involve(Cycle, Movement).").
barrons.rule2830:: isa(A3S1130-cycle, "The water cycle") -> between(A7S1130-water, A9S1130-air), isa(A9S1130-air, "air"), between(A7S1130-water, A11S1130-land), isa(A11S1130-land, "land"), of(A5S1130-movement, A7S1130-water), isa(A7S1130-water, "water"), isa(E4S1130-involve, "involve"), agent(E4S1130-involve, A3S1130-cycle), object(E4S1130-involve, A5S1130-movement), isa(A5S1130-movement, "movement").
english(barrons.rule2831, "The water cycle involves movement of water between air and land").
pretty(barrons.rule2831, "isa(Movement, 'movement of water between air and land') -> involve(Cycle, Movement).").
barrons.rule2831:: isa(A5S1130-movement, "movement") -> between(A7S1130-water, A9S1130-air), isa(A9S1130-air, "air"), between(A7S1130-water, A11S1130-land), isa(A11S1130-land, "land"), of(A5S1130-movement, A7S1130-water), isa(A7S1130-water, "water"), isa(E4S1130-involve, "involve"), agent(E4S1130-involve, A3S1130-cycle), isa(A3S1130-cycle, "The water cycle"), object(E4S1130-involve, A5S1130-movement).
english(barrons.rule2832, "Fog is not a form of precipitation").
pretty(barrons.rule2832, "EXAMPLE(Fog, Form), Fog = 'Fog', Form = 'not a form of precipitation'.").
barrons.rule2832:: isa(A1S1131-fog, "Fog") -> example(A1S1131-fog, A5S1131-form), of(A5S1131-form, A7S1131-precipitation), isa(A7S1131-precipitation, "precipitation"), isa(A5S1131-form, "not a form").
english(barrons.rule2833, "Fog is not a form of precipitation").
pretty(barrons.rule2833, "EXAMPLE(Fog, Form), Fog = 'Fog', Form = 'not a form of precipitation'.").
barrons.rule2833:: of(A5S1131-form, A7S1131-precipitation), isa(A7S1131-precipitation, "precipitation"), isa(A5S1131-form, "not a form") -> example(A1S1131-fog, A5S1131-form), isa(A1S1131-fog, "Fog").
english(barrons.rule2834, "When water vapor changes to liquid water it is called condensation").
pretty(barrons.rule2834, "EXAMPLE(It, Condensation), It = 'it', Condensation = 'condensation'.").
barrons.rule2834:: isa(A8S1133-it, "it") -> example(A8S1133-it, A11S1133-condensation), isa(A11S1133-condensation, "condensation").
english(barrons.rule2835, "When water vapor changes to liquid water it is called condensation").
pretty(barrons.rule2835, "EXAMPLE(It, Condensation), It = 'it', Condensation = 'condensation'.").
barrons.rule2835:: isa(A11S1133-condensation, "condensation") -> example(A8S1133-it, A11S1133-condensation), isa(A8S1133-it, "it").
english(barrons.rule2836, "When liquid water falls to the Earth from the sky it is called precipitation").
pretty(barrons.rule2836, "EXAMPLE(fall_to(Water, Earth, from(Sky)), Precipitation), Water = 'liquid water', Earth = 'the Earth', Sky = 'the sky', Precipitation = 'precipitation'.").
barrons.rule2836:: isa(E4S1134-fall, "fall"), agent(E4S1134-fall, A3S1134-water), isa(A3S1134-water, "liquid water"), to(E4S1134-fall, A7S1134-Earth), isa(A7S1134-Earth, "the Earth"), from(E4S1134-fall, A10S1134-sky), isa(A10S1134-sky, "the sky") -> example(E4S1134-fall, A14S1134-precipitation), isa(A14S1134-precipitation, "precipitation").
english(barrons.rule2837, "When liquid water falls to the Earth from the sky it is called precipitation").
pretty(barrons.rule2837, "EXAMPLE(fall_to(Water, Earth, from(Sky)), Precipitation), Water = 'liquid water', Earth = 'the Earth', Sky = 'the sky', Precipitation = 'precipitation'.").
barrons.rule2837:: isa(A14S1134-precipitation, "precipitation") -> example(E4S1134-fall, A14S1134-precipitation), isa(E4S1134-fall, "fall"), agent(E4S1134-fall, A3S1134-water), isa(A3S1134-water, "liquid water"), to(E4S1134-fall, A7S1134-Earth), isa(A7S1134-Earth, "the Earth"), from(E4S1134-fall, A10S1134-sky), isa(A10S1134-sky, "the sky").
english(barrons.rule2838, "Water from the oceans enters the atmosphere through evaporation").
pretty(barrons.rule2838, "isa(Ocean, 'the oceans') -> enter_through(Water, Atmosphere, Evaporation).").
barrons.rule2838:: isa(A4S1135-ocean, "the oceans") -> from(A1S1135-water, A4S1135-ocean), isa(E5S1135-enter, "enter"), agent(E5S1135-enter, A1S1135-water), isa(A1S1135-water, "Water"), object(E5S1135-enter, A7S1135-atmosphere), isa(A7S1135-atmosphere, "the atmosphere"), through(E5S1135-enter, A9S1135-evaporation), isa(A9S1135-evaporation, "evaporation").
english(barrons.rule2839, "Water from the oceans enters the atmosphere through evaporation").
pretty(barrons.rule2839, "isa(enter, 'enters') -> enter_through(Water, Atmosphere, Evaporation).").
barrons.rule2839:: isa(E5S1135-enter, "enter") -> from(A1S1135-water, A4S1135-ocean), isa(A4S1135-ocean, "the oceans"), agent(E5S1135-enter, A1S1135-water), isa(A1S1135-water, "Water"), object(E5S1135-enter, A7S1135-atmosphere), isa(A7S1135-atmosphere, "the atmosphere"), through(E5S1135-enter, A9S1135-evaporation), isa(A9S1135-evaporation, "evaporation").
english(barrons.rule2840, "Water from the oceans enters the atmosphere through evaporation").
pretty(barrons.rule2840, "isa(Water, 'Water from the oceans') -> enter_through(Water, Atmosphere, Evaporation).").
barrons.rule2840:: isa(A1S1135-water, "Water") -> from(A1S1135-water, A4S1135-ocean), isa(A4S1135-ocean, "the oceans"), isa(E5S1135-enter, "enter"), agent(E5S1135-enter, A1S1135-water), object(E5S1135-enter, A7S1135-atmosphere), isa(A7S1135-atmosphere, "the atmosphere"), through(E5S1135-enter, A9S1135-evaporation), isa(A9S1135-evaporation, "evaporation").
english(barrons.rule2841, "Water from the oceans enters the atmosphere through evaporation").
pretty(barrons.rule2841, "isa(Atmosphere, 'the atmosphere') -> enter_through(Water, Atmosphere, Evaporation).").
barrons.rule2841:: isa(A7S1135-atmosphere, "the atmosphere") -> from(A1S1135-water, A4S1135-ocean), isa(A4S1135-ocean, "the oceans"), isa(E5S1135-enter, "enter"), agent(E5S1135-enter, A1S1135-water), isa(A1S1135-water, "Water"), object(E5S1135-enter, A7S1135-atmosphere), through(E5S1135-enter, A9S1135-evaporation), isa(A9S1135-evaporation, "evaporation").
english(barrons.rule2842, "Water from the oceans enters the atmosphere through evaporation").
pretty(barrons.rule2842, "isa(Evaporation, 'evaporation') -> enter_through(Water, Atmosphere, Evaporation).").
barrons.rule2842:: isa(A9S1135-evaporation, "evaporation") -> from(A1S1135-water, A4S1135-ocean), isa(A4S1135-ocean, "the oceans"), isa(E5S1135-enter, "enter"), agent(E5S1135-enter, A1S1135-water), isa(A1S1135-water, "Water"), object(E5S1135-enter, A7S1135-atmosphere), isa(A7S1135-atmosphere, "the atmosphere"), through(E5S1135-enter, A9S1135-evaporation).
english(barrons.rule2843, "When the molecules become too heavy to stay in the air they[water molecules] fall to the ground in the form of precipitation").
pretty(barrons.rule2843, "WHEN(fall_to(Molecule, Ground, in(Form)), become(Molecule, Heavy, Stay, Too)), Molecule = 'water molecules', Ground = 'the ground', Form = 'the form of precipitation', Molecule = 'the molecules', Heavy = 'heavy to stay in the air', Stay = 'stay in the air', Too = 'too'.").
barrons.rule2843:: isa(E13S1138-fall, "fall"), agent(E13S1138-fall, A23S1137-molecule), isa(A23S1137-molecule, "water molecules"), to(E13S1138-fall, A16S1138-ground), isa(A16S1138-ground, "the ground"), in(E13S1138-fall, A19S1138-form), isa(A19S1138-form, "the form of precipitation") -> when(E13S1138-fall, E4S1138-become), isa(E4S1138-become, "become"), agent(E4S1138-become, A3S1138-molecule), isa(A3S1138-molecule, "the molecules"), object(E4S1138-become, A6S1138-heavy), isa(A6S1138-heavy, "heavy"), arg(E4S1138-become, A8S1138-stay), isa(A8S1138-stay, "to stay in the air"), arg(E4S1138-become, A5S1138-too), isa(A5S1138-too, "too").
english(barrons.rule2844, "When the molecules become too heavy to stay in the air they[water molecules] fall to the ground in the form of precipitation").
pretty(barrons.rule2844, "WHEN(fall_to(Molecule, Ground, in(Form)), become(Molecule, Heavy, Stay, Too)), Molecule = 'water molecules', Ground = 'the ground', Form = 'the form of precipitation', Molecule = 'the molecules', Heavy = 'heavy to stay in the air', Stay = 'stay in the air', Too = 'too'.").
barrons.rule2844:: isa(E4S1138-become, "become"), agent(E4S1138-become, A3S1138-molecule), isa(A3S1138-molecule, "the molecules"), object(E4S1138-become, A6S1138-heavy), isa(A6S1138-heavy, "heavy"), arg(E4S1138-become, A8S1138-stay), isa(A8S1138-stay, "to stay in the air"), arg(E4S1138-become, A5S1138-too), isa(A5S1138-too, "too") -> when(E13S1138-fall, E4S1138-become), isa(E13S1138-fall, "fall"), agent(E13S1138-fall, A23S1137-molecule), isa(A23S1137-molecule, "water molecules"), to(E13S1138-fall, A16S1138-ground), isa(A16S1138-ground, "the ground"), in(E13S1138-fall, A19S1138-form), isa(A19S1138-form, "the form of precipitation").
english(barrons.rule2845, "Water trapped inside the cracks of rocks may freeze and cause the rocks to break apart").
pretty(barrons.rule2845, "CAUSE(Water, break apart(Rock)), Water = 'Water trapped inside the cracks of rocks', Rock = 'the rocks'.").
barrons.rule2845:: isa(A1S1139-water, "Water trapped inside the cracks of rocks") -> cause(A1S1139-water, E15S1139-break), isa(E15S1139-break, "break apart"), agent(E15S1139-break, A13S1139-rock), isa(A13S1139-rock, "the rocks").
english(barrons.rule2846, "Water trapped inside the cracks of rocks may freeze and cause the rocks to break apart").
pretty(barrons.rule2846, "CAUSE(Water, break apart(Rock)), Water = 'Water trapped inside the cracks of rocks', Rock = 'the rocks'.").
barrons.rule2846:: isa(E15S1139-break, "break apart"), agent(E15S1139-break, A13S1139-rock), isa(A13S1139-rock, "the rocks") -> cause(A1S1139-water, E15S1139-break), isa(A1S1139-water, "Water trapped inside the cracks of rocks").
english(barrons.rule2847, "Weathering is the process that breaks down rocks into small pieces").
pretty(barrons.rule2847, "EXAMPLE(Weather, break_into(Process, Rock, Down, Piece)), Weather = 'Weathering', Process = 'the process', Rock = 'rocks', Down = 'down', Piece = 'small pieces'.").
barrons.rule2847:: isa(A1S1140-weather, "Weathering") -> example(A1S1140-weather, A4S1140-process), isa(E6S1140-break, "break"), agent(E6S1140-break, A4S1140-process), isa(A4S1140-process, "the process"), object(E6S1140-break, A8S1140-rock), isa(A8S1140-rock, "rocks"), into(E6S1140-break, A11S1140-piece), isa(A11S1140-piece, "small pieces"), arg(E6S1140-break, A7S1140-down), isa(A7S1140-down, "down"), isa(A1S1140-weather, A4S1140-process).
english(barrons.rule2848, "Weathering is the process that breaks down rocks into small pieces").
pretty(barrons.rule2848, "EXAMPLE(Weather, break_into(Process, Rock, Down, Piece)), Weather = 'Weathering', Process = 'the process', Rock = 'rocks', Down = 'down', Piece = 'small pieces'.").
barrons.rule2848:: isa(E6S1140-break, "break"), agent(E6S1140-break, A4S1140-process), isa(A4S1140-process, "the process"), object(E6S1140-break, A8S1140-rock), isa(A8S1140-rock, "rocks"), into(E6S1140-break, A11S1140-piece), isa(A11S1140-piece, "small pieces"), arg(E6S1140-break, A7S1140-down), isa(A7S1140-down, "down") -> example(A1S1140-weather, A4S1140-process), isa(A1S1140-weather, "Weathering"), isa(A1S1140-weather, A4S1140-process).
english(barrons.rule2849, "Weathering is the process that breaks down rocks into small pieces").
pretty(barrons.rule2849, "EXAMPLE(Weather, Process), Weather = 'Weathering', Process = 'the process'.").
barrons.rule2849:: isa(A1S1140-weather, "Weathering") -> example(A1S1140-weather, A4S1140-process), isa(A4S1140-process, "the process").
english(barrons.rule2850, "Weathering is the process that breaks down rocks into small pieces").
pretty(barrons.rule2850, "EXAMPLE(Weather, Process), Weather = 'Weathering', Process = 'the process'.").
barrons.rule2850:: isa(A4S1140-process, "the process") -> example(A1S1140-weather, A4S1140-process), isa(A1S1140-weather, "Weathering").
english(barrons.rule2851, "A balance is used to determine the mass of an object").
pretty(barrons.rule2851, "PURPOSE(Balance, determine(Balance, Mass)), Balance = 'A balance', Mass = 'the mass of an object'.").
barrons.rule2851:: isa(A2S1143-balance, "A balance") -> purpose(A2S1143-balance, E6S1143-determine), isa(E6S1143-determine, "determine"), agent(E6S1143-determine, A2S1143-balance), arg(E6S1143-determine, A8S1143-mass), isa(A8S1143-mass, "the mass of an object").
english(barrons.rule2852, "A balance is used to determine the mass of an object").
pretty(barrons.rule2852, "PURPOSE(Balance, determine(Balance, Mass)), Balance = 'A balance', Mass = 'the mass of an object'.").
barrons.rule2852:: isa(E6S1143-determine, "determine"), agent(E6S1143-determine, A2S1143-balance), isa(A2S1143-balance, "A balance"), arg(E6S1143-determine, A8S1143-mass), isa(A8S1143-mass, "the mass of an object") -> purpose(A2S1143-balance, E6S1143-determine).
english(barrons.rule2853, "You can observe an orange 's color with your sense of sight").
pretty(barrons.rule2853, "isa(observe, 'observe') -> observe_with(You, Color, Sense).").
barrons.rule2853:: isa(E3S1144-observe, "observe") -> agent(E3S1144-observe, A1S1144-you), isa(A1S1144-you, "You"), object(E3S1144-observe, A7S1144-color), isa(A7S1144-color, "an orange 's color"), with(E3S1144-observe, A10S1144-sense), isa(A10S1144-sense, "your sense of sight").
english(barrons.rule2854, "You can observe an orange 's color with your sense of sight").
pretty(barrons.rule2854, "isa(You, 'You') -> observe_with(You, Color, Sense).").
barrons.rule2854:: isa(A1S1144-you, "You") -> isa(E3S1144-observe, "observe"), agent(E3S1144-observe, A1S1144-you), object(E3S1144-observe, A7S1144-color), isa(A7S1144-color, "an orange 's color"), with(E3S1144-observe, A10S1144-sense), isa(A10S1144-sense, "your sense of sight").
english(barrons.rule2855, "You can observe an orange 's color with your sense of sight").
pretty(barrons.rule2855, "isa(Color, 'an orange ’s color') -> observe_with(You, Color, Sense).").
barrons.rule2855:: isa(A7S1144-color, "an orange 's color") -> isa(E3S1144-observe, "observe"), agent(E3S1144-observe, A1S1144-you), isa(A1S1144-you, "You"), object(E3S1144-observe, A7S1144-color), with(E3S1144-observe, A10S1144-sense), isa(A10S1144-sense, "your sense of sight").
english(barrons.rule2856, "You can observe an orange 's color with your sense of sight").
pretty(barrons.rule2856, "isa(Sense, 'your sense of sight') -> observe_with(You, Color, Sense).").
barrons.rule2856:: isa(A10S1144-sense, "your sense of sight") -> isa(E3S1144-observe, "observe"), agent(E3S1144-observe, A1S1144-you), isa(A1S1144-you, "You"), object(E3S1144-observe, A7S1144-color), isa(A7S1144-color, "an orange 's color"), with(E3S1144-observe, A10S1144-sense).
english(barrons.rule2857, "You can observe an orange 's odor with your sense of smell").
pretty(barrons.rule2857, "isa(observe, 'observe') -> observe_with(You, Odor, Sense).").
barrons.rule2857:: isa(E3S1145-observe, "observe") -> agent(E3S1145-observe, A1S1145-you), isa(A1S1145-you, "You"), object(E3S1145-observe, A7S1145-odor), isa(A7S1145-odor, "an orange 's odor"), with(E3S1145-observe, A10S1145-sense), isa(A10S1145-sense, "your sense of smell").
english(barrons.rule2858, "You can observe an orange 's odor with your sense of smell").
pretty(barrons.rule2858, "isa(You, 'You') -> observe_with(You, Odor, Sense).").
barrons.rule2858:: isa(A1S1145-you, "You") -> isa(E3S1145-observe, "observe"), agent(E3S1145-observe, A1S1145-you), object(E3S1145-observe, A7S1145-odor), isa(A7S1145-odor, "an orange 's odor"), with(E3S1145-observe, A10S1145-sense), isa(A10S1145-sense, "your sense of smell").
english(barrons.rule2859, "You can observe an orange 's odor with your sense of smell").
pretty(barrons.rule2859, "isa(Odor, 'an orange ’s odor') -> observe_with(You, Odor, Sense).").
barrons.rule2859:: isa(A7S1145-odor, "an orange 's odor") -> isa(E3S1145-observe, "observe"), agent(E3S1145-observe, A1S1145-you), isa(A1S1145-you, "You"), object(E3S1145-observe, A7S1145-odor), with(E3S1145-observe, A10S1145-sense), isa(A10S1145-sense, "your sense of smell").
english(barrons.rule2860, "You can observe an orange 's odor with your sense of smell").
pretty(barrons.rule2860, "isa(Sense, 'your sense of smell') -> observe_with(You, Odor, Sense).").
barrons.rule2860:: isa(A10S1145-sense, "your sense of smell") -> isa(E3S1145-observe, "observe"), agent(E3S1145-observe, A1S1145-you), isa(A1S1145-you, "You"), object(E3S1145-observe, A7S1145-odor), isa(A7S1145-odor, "an orange 's odor"), with(E3S1145-observe, A10S1145-sense).
english(barrons.rule2861, "You can observe an orange 's texture with your sense of touch").
pretty(barrons.rule2861, "isa(observe, 'observe') -> observe_with(You, Texture, Sense).").
barrons.rule2861:: isa(E3S1146-observe, "observe") -> agent(E3S1146-observe, A1S1146-you), isa(A1S1146-you, "You"), object(E3S1146-observe, A7S1146-texture), isa(A7S1146-texture, "an orange 's texture"), with(E3S1146-observe, A10S1146-sense), isa(A10S1146-sense, "your sense of touch").
english(barrons.rule2862, "You can observe an orange 's texture with your sense of touch").
pretty(barrons.rule2862, "isa(You, 'You') -> observe_with(You, Texture, Sense).").
barrons.rule2862:: isa(A1S1146-you, "You") -> isa(E3S1146-observe, "observe"), agent(E3S1146-observe, A1S1146-you), object(E3S1146-observe, A7S1146-texture), isa(A7S1146-texture, "an orange 's texture"), with(E3S1146-observe, A10S1146-sense), isa(A10S1146-sense, "your sense of touch").
english(barrons.rule2863, "You can observe an orange 's texture with your sense of touch").
pretty(barrons.rule2863, "isa(Texture, 'an orange ’s texture') -> observe_with(You, Texture, Sense).").
barrons.rule2863:: isa(A7S1146-texture, "an orange 's texture") -> isa(E3S1146-observe, "observe"), agent(E3S1146-observe, A1S1146-you), isa(A1S1146-you, "You"), object(E3S1146-observe, A7S1146-texture), with(E3S1146-observe, A10S1146-sense), isa(A10S1146-sense, "your sense of touch").
english(barrons.rule2864, "You can observe an orange 's texture with your sense of touch").
pretty(barrons.rule2864, "isa(Sense, 'your sense of touch') -> observe_with(You, Texture, Sense).").
barrons.rule2864:: isa(A10S1146-sense, "your sense of touch") -> isa(E3S1146-observe, "observe"), agent(E3S1146-observe, A1S1146-you), isa(A1S1146-you, "You"), object(E3S1146-observe, A7S1146-texture), isa(A7S1146-texture, "an orange 's texture"), with(E3S1146-observe, A10S1146-sense).
english(barrons.rule2865, "You can observe an orange 's taste with your sense of taste").
pretty(barrons.rule2865, "isa(observe, 'observe') -> observe_with(You, Taste, Sense).").
barrons.rule2865:: isa(E3S1147-observe, "observe") -> agent(E3S1147-observe, A1S1147-you), isa(A1S1147-you, "You"), object(E3S1147-observe, A7S1147-taste), isa(A7S1147-taste, "an orange 's taste"), with(E3S1147-observe, A10S1147-sense), isa(A10S1147-sense, "your sense of taste").
english(barrons.rule2866, "You can observe an orange 's taste with your sense of taste").
pretty(barrons.rule2866, "isa(You, 'You') -> observe_with(You, Taste, Sense).").
barrons.rule2866:: isa(A1S1147-you, "You") -> isa(E3S1147-observe, "observe"), agent(E3S1147-observe, A1S1147-you), object(E3S1147-observe, A7S1147-taste), isa(A7S1147-taste, "an orange 's taste"), with(E3S1147-observe, A10S1147-sense), isa(A10S1147-sense, "your sense of taste").
english(barrons.rule2867, "You can observe an orange 's taste with your sense of taste").
pretty(barrons.rule2867, "isa(Taste, 'an orange ’s taste') -> observe_with(You, Taste, Sense).").
barrons.rule2867:: isa(A7S1147-taste, "an orange 's taste") -> isa(E3S1147-observe, "observe"), agent(E3S1147-observe, A1S1147-you), isa(A1S1147-you, "You"), object(E3S1147-observe, A7S1147-taste), with(E3S1147-observe, A10S1147-sense), isa(A10S1147-sense, "your sense of taste").
english(barrons.rule2868, "You can observe an orange 's taste with your sense of taste").
pretty(barrons.rule2868, "isa(Sense, 'your sense of taste') -> observe_with(You, Taste, Sense).").
barrons.rule2868:: isa(A10S1147-sense, "your sense of taste") -> isa(E3S1147-observe, "observe"), agent(E3S1147-observe, A1S1147-you), isa(A1S1147-you, "You"), object(E3S1147-observe, A7S1147-taste), isa(A7S1147-taste, "an orange 's taste"), with(E3S1147-observe, A10S1147-sense).
english(barrons.rule2869, "The best tool to use to measure temperature is a thermometer").
pretty(barrons.rule2869, "PURPOSE(Thermometer, measure(Thermometer, Temperature)), Thermometer = 'a thermometer', Temperature = 'temperature'.").
barrons.rule2869:: isa(A11S1148-thermometer, "a thermometer") -> purpose(A11S1148-thermometer, E7S1148-measure), isa(E7S1148-measure, "measure"), agent(E7S1148-measure, A11S1148-thermometer), object(E7S1148-measure, A8S1148-temperature), isa(A8S1148-temperature, "temperature").
english(barrons.rule2870, "The best tool to use to measure temperature is a thermometer").
pretty(barrons.rule2870, "PURPOSE(Thermometer, measure(Thermometer, Temperature)), Thermometer = 'a thermometer', Temperature = 'temperature'.").
barrons.rule2870:: isa(E7S1148-measure, "measure"), agent(E7S1148-measure, A11S1148-thermometer), isa(A11S1148-thermometer, "a thermometer"), object(E7S1148-measure, A8S1148-temperature), isa(A8S1148-temperature, "temperature") -> purpose(A11S1148-thermometer, E7S1148-measure).
english(barrons.rule2871, "The best tool to use to measure temperature is a thermometer").
pretty(barrons.rule2871, "PURPOSE(Tool, measure(Tool, Temperature)), Tool = 'The best tool', Temperature = 'temperature'.").
barrons.rule2871:: isa(A3S1148-tool, "The best tool") -> purpose(A3S1148-tool, E7S1148-measure), isa(E7S1148-measure, "measure"), agent(E7S1148-measure, A3S1148-tool), object(E7S1148-measure, A8S1148-temperature), isa(A8S1148-temperature, "temperature").
english(barrons.rule2872, "The best tool to use to measure temperature is a thermometer").
pretty(barrons.rule2872, "PURPOSE(Tool, measure(Tool, Temperature)), Tool = 'The best tool', Temperature = 'temperature'.").
barrons.rule2872:: isa(E7S1148-measure, "measure"), agent(E7S1148-measure, A3S1148-tool), isa(A3S1148-tool, "The best tool"), object(E7S1148-measure, A8S1148-temperature), isa(A8S1148-temperature, "temperature") -> purpose(A3S1148-tool, E7S1148-measure).
english(barrons.rule2873, "The best tool to use to measure temperature is a thermometer").
pretty(barrons.rule2873, "EXAMPLE(Tool, Thermometer), Tool = 'The best tool', Thermometer = 'a thermometer'.").
barrons.rule2873:: isa(A3S1148-tool, "The best tool") -> example(A3S1148-tool, A11S1148-thermometer), isa(A11S1148-thermometer, "a thermometer").
english(barrons.rule2874, "The best tool to use to measure temperature is a thermometer").
pretty(barrons.rule2874, "EXAMPLE(Tool, Thermometer), Tool = 'The best tool', Thermometer = 'a thermometer'.").
barrons.rule2874:: isa(A11S1148-thermometer, "a thermometer") -> example(A3S1148-tool, A11S1148-thermometer), isa(A3S1148-tool, "The best tool").
english(barrons.rule2875, "A thermometer is used to measure air temperature").
pretty(barrons.rule2875, "PURPOSE(Thermometer, measure(Thermometer, Temperature)), Thermometer = 'A thermometer', Temperature = 'air temperature'.").
barrons.rule2875:: isa(A2S1149-thermometer, "A thermometer") -> purpose(A2S1149-thermometer, E6S1149-measure), isa(E6S1149-measure, "measure"), agent(E6S1149-measure, A2S1149-thermometer), object(E6S1149-measure, A8S1149-temperature), isa(A8S1149-temperature, "air temperature").
english(barrons.rule2876, "A thermometer is used to measure air temperature").
pretty(barrons.rule2876, "PURPOSE(Thermometer, measure(Thermometer, Temperature)), Thermometer = 'A thermometer', Temperature = 'air temperature'.").
barrons.rule2876:: isa(E6S1149-measure, "measure"), agent(E6S1149-measure, A2S1149-thermometer), isa(A2S1149-thermometer, "A thermometer"), object(E6S1149-measure, A8S1149-temperature), isa(A8S1149-temperature, "air temperature") -> purpose(A2S1149-thermometer, E6S1149-measure).
english(barrons.rule2877, "A metric ruler can be used to measure the length of a stick").
pretty(barrons.rule2877, "PURPOSE(Ruler, measure(Ruler, Length)), Ruler = 'A metric ruler', Length = 'the length of a stick'.").
barrons.rule2877:: isa(A3S1150-ruler, "A metric ruler") -> purpose(A3S1150-ruler, E8S1150-measure), of(A10S1150-length, A13S1150-stick), isa(A13S1150-stick, "a stick"), isa(E8S1150-measure, "measure"), agent(E8S1150-measure, A3S1150-ruler), object(E8S1150-measure, A10S1150-length), isa(A10S1150-length, "the length").
english(barrons.rule2878, "A metric ruler can be used to measure the length of a stick").
pretty(barrons.rule2878, "PURPOSE(Ruler, measure(Ruler, Length)), Ruler = 'A metric ruler', Length = 'the length of a stick'.").
barrons.rule2878:: of(A10S1150-length, A13S1150-stick), isa(A13S1150-stick, "a stick"), isa(E8S1150-measure, "measure"), agent(E8S1150-measure, A3S1150-ruler), isa(A3S1150-ruler, "A metric ruler"), object(E8S1150-measure, A10S1150-length), isa(A10S1150-length, "the length") -> purpose(A3S1150-ruler, E8S1150-measure).
english(barrons.rule2879, "A metric ruler and a balance will measure the size and mass of an object").
pretty(barrons.rule2879, "PURPOSE(Ruler, measure(Ruler, Size, Mass)), Ruler = 'A metric ruler', Size = 'the size of an object', Mass = 'mass'.").
barrons.rule2879:: isa(A3S1151-ruler, "A metric ruler") -> purpose(A3S1151-ruler, E8S1151-measure), isa(E8S1151-measure, "measure"), agent(E8S1151-measure, A3S1151-ruler), arg(E8S1151-measure, A10S1151-size), isa(A10S1151-size, "the size of an object"), arg(E8S1151-measure, A12S1151-mass), isa(A12S1151-mass, "mass").
english(barrons.rule2880, "A metric ruler and a balance will measure the size and mass of an object").
pretty(barrons.rule2880, "PURPOSE(Ruler, measure(Ruler, Size, Mass)), Ruler = 'A metric ruler', Size = 'the size of an object', Mass = 'mass'.").
barrons.rule2880:: isa(E8S1151-measure, "measure"), agent(E8S1151-measure, A3S1151-ruler), isa(A3S1151-ruler, "A metric ruler"), arg(E8S1151-measure, A10S1151-size), isa(A10S1151-size, "the size of an object"), arg(E8S1151-measure, A12S1151-mass), isa(A12S1151-mass, "mass") -> purpose(A3S1151-ruler, E8S1151-measure).
english(barrons.rule2881, "A metric ruler and a balance will measure the size and mass of an object").
pretty(barrons.rule2881, "PURPOSE(Ruler, measure(Balance, Size, Mass)), Ruler = 'A metric ruler', Balance = 'a balance', Size = 'the size of an object', Mass = 'mass'.").
barrons.rule2881:: isa(A3S1151-ruler, "A metric ruler") -> purpose(A3S1151-ruler, E8S1151-measure), isa(E8S1151-measure, "measure"), agent(E8S1151-measure, A6S1151-balance), isa(A6S1151-balance, "a balance"), arg(E8S1151-measure, A10S1151-size), isa(A10S1151-size, "the size of an object"), arg(E8S1151-measure, A12S1151-mass), isa(A12S1151-mass, "mass").
english(barrons.rule2882, "A metric ruler and a balance will measure the size and mass of an object").
pretty(barrons.rule2882, "PURPOSE(Ruler, measure(Balance, Size, Mass)), Ruler = 'A metric ruler', Balance = 'a balance', Size = 'the size of an object', Mass = 'mass'.").
barrons.rule2882:: isa(E8S1151-measure, "measure"), agent(E8S1151-measure, A6S1151-balance), isa(A6S1151-balance, "a balance"), arg(E8S1151-measure, A10S1151-size), isa(A10S1151-size, "the size of an object"), arg(E8S1151-measure, A12S1151-mass), isa(A12S1151-mass, "mass") -> purpose(A3S1151-ruler, E8S1151-measure), isa(A3S1151-ruler, "A metric ruler").
english(barrons.rule2883, "A metric ruler and a balance will measure the size and mass of an object").
pretty(barrons.rule2883, "PURPOSE(Balance, measure(Ruler, Size, Mass)), Balance = 'a balance', Ruler = 'A metric ruler', Size = 'the size of an object', Mass = 'mass'.").
barrons.rule2883:: isa(A6S1151-balance, "a balance") -> purpose(A6S1151-balance, E8S1151-measure), isa(E8S1151-measure, "measure"), agent(E8S1151-measure, A3S1151-ruler), isa(A3S1151-ruler, "A metric ruler"), arg(E8S1151-measure, A10S1151-size), isa(A10S1151-size, "the size of an object"), arg(E8S1151-measure, A12S1151-mass), isa(A12S1151-mass, "mass").
english(barrons.rule2884, "A metric ruler and a balance will measure the size and mass of an object").
pretty(barrons.rule2884, "PURPOSE(Balance, measure(Ruler, Size, Mass)), Balance = 'a balance', Ruler = 'A metric ruler', Size = 'the size of an object', Mass = 'mass'.").
barrons.rule2884:: isa(E8S1151-measure, "measure"), agent(E8S1151-measure, A3S1151-ruler), isa(A3S1151-ruler, "A metric ruler"), arg(E8S1151-measure, A10S1151-size), isa(A10S1151-size, "the size of an object"), arg(E8S1151-measure, A12S1151-mass), isa(A12S1151-mass, "mass") -> purpose(A6S1151-balance, E8S1151-measure), isa(A6S1151-balance, "a balance").
english(barrons.rule2885, "A metric ruler and a balance will measure the size and mass of an object").
pretty(barrons.rule2885, "PURPOSE(Balance, measure(Balance, Size, Mass)), Balance = 'a balance', Size = 'the size of an object', Mass = 'mass'.").
barrons.rule2885:: isa(A6S1151-balance, "a balance") -> purpose(A6S1151-balance, E8S1151-measure), isa(E8S1151-measure, "measure"), agent(E8S1151-measure, A6S1151-balance), arg(E8S1151-measure, A10S1151-size), isa(A10S1151-size, "the size of an object"), arg(E8S1151-measure, A12S1151-mass), isa(A12S1151-mass, "mass").
english(barrons.rule2886, "A metric ruler and a balance will measure the size and mass of an object").
pretty(barrons.rule2886, "PURPOSE(Balance, measure(Balance, Size, Mass)), Balance = 'a balance', Size = 'the size of an object', Mass = 'mass'.").
barrons.rule2886:: isa(E8S1151-measure, "measure"), agent(E8S1151-measure, A6S1151-balance), isa(A6S1151-balance, "a balance"), arg(E8S1151-measure, A10S1151-size), isa(A10S1151-size, "the size of an object"), arg(E8S1151-measure, A12S1151-mass), isa(A12S1151-mass, "mass") -> purpose(A6S1151-balance, E8S1151-measure).
english(barrons.rule2887, "A journal is useful to a scientist to record observations made during an experiment").
pretty(barrons.rule2887, "EFFECT(be_to(Journal, Useful, Scientist), record(Journal, Observation)), Journal = 'A journal', Useful = 'useful to a scientist to record observations made during an experiment', Scientist = 'a scientist', Observation = 'observations'.").
barrons.rule2887:: isa(E3S1152-be, "be"), agent(E3S1152-be, A2S1152-journal), isa(A2S1152-journal, "A journal"), object(E3S1152-be, A4S1152-useful), isa(A4S1152-useful, "useful"), to(E3S1152-be, A7S1152-scientist), isa(A7S1152-scientist, "a scientist") -> effect(E3S1152-be, E9S1152-record), isa(E9S1152-record, "record"), agent(E9S1152-record, A2S1152-journal), object(E9S1152-record, A10S1152-observation), isa(A10S1152-observation, "observations").
english(barrons.rule2888, "A journal is useful to a scientist to record observations made during an experiment").
pretty(barrons.rule2888, "EFFECT(be_to(Journal, Useful, Scientist), record(Journal, Observation)), Journal = 'A journal', Useful = 'useful to a scientist to record observations made during an experiment', Scientist = 'a scientist', Observation = 'observations'.").
barrons.rule2888:: isa(E9S1152-record, "record"), agent(E9S1152-record, A2S1152-journal), isa(A2S1152-journal, "A journal"), object(E9S1152-record, A10S1152-observation), isa(A10S1152-observation, "observations") -> effect(E3S1152-be, E9S1152-record), isa(E3S1152-be, "be"), agent(E3S1152-be, A2S1152-journal), object(E3S1152-be, A4S1152-useful), isa(A4S1152-useful, "useful"), to(E3S1152-be, A7S1152-scientist), isa(A7S1152-scientist, "a scientist").
english(barrons.rule2889, "The best instrument to measure the growth of a plant 's stem is a ruler").
pretty(barrons.rule2889, "EXAMPLE(Instrument, Ruler), Instrument = 'The best instrument', Ruler = 'a ruler'.").
barrons.rule2889:: isa(A3S1153-instrument, "The best instrument") -> example(A3S1153-instrument, A15S1153-ruler), isa(A15S1153-ruler, "a ruler").
english(barrons.rule2890, "The best instrument to measure the growth of a plant 's stem is a ruler").
pretty(barrons.rule2890, "EXAMPLE(Instrument, Ruler), Instrument = 'The best instrument', Ruler = 'a ruler'.").
barrons.rule2890:: isa(A15S1153-ruler, "a ruler") -> example(A3S1153-instrument, A15S1153-ruler), isa(A3S1153-instrument, "The best instrument").
english(barrons.rule2891, "Students should wear safety goggles in the laboratory when they[the students] are using fire or handling chemicals").
pretty(barrons.rule2891, "WHEN(wear_in(Student, Goggles, Handle, Laboratory), use(Student, Fire)), Student = 'Students', Goggles = 'safety goggles', Handle = 'handling chemicals', Laboratory = 'the laboratory', Student = 'the students', Fire = 'fire'.").
barrons.rule2891:: isa(E3S1155-wear, "wear"), agent(E3S1155-wear, A1S1155-student), isa(A1S1155-student, "Students"), object(E3S1155-wear, A5S1155-goggles), isa(A5S1155-goggles, "safety goggles"), in(E3S1155-wear, A8S1155-laboratory), isa(A8S1155-laboratory, "the laboratory"), arg(E3S1155-wear, A15S1155-handle), isa(A15S1155-handle, "handling chemicals") -> when(E3S1155-wear, E12S1155-use), isa(E12S1155-use, "use"), agent(E12S1155-use, A9S880-student), isa(A9S880-student, "the students"), object(E12S1155-use, A13S1155-fire), isa(A13S1155-fire, "fire").
english(barrons.rule2892, "Students should wear safety goggles in the laboratory when they[the students] are using fire or handling chemicals").
pretty(barrons.rule2892, "WHEN(wear_in(Student, Goggles, Handle, Laboratory), use(Student, Fire)), Student = 'Students', Goggles = 'safety goggles', Handle = 'handling chemicals', Laboratory = 'the laboratory', Student = 'the students', Fire = 'fire'.").
barrons.rule2892:: isa(E12S1155-use, "use"), agent(E12S1155-use, A9S880-student), isa(A9S880-student, "the students"), object(E12S1155-use, A13S1155-fire), isa(A13S1155-fire, "fire") -> when(E3S1155-wear, E12S1155-use), isa(E3S1155-wear, "wear"), agent(E3S1155-wear, A1S1155-student), isa(A1S1155-student, "Students"), object(E3S1155-wear, A5S1155-goggles), isa(A5S1155-goggles, "safety goggles"), in(E3S1155-wear, A8S1155-laboratory), isa(A8S1155-laboratory, "the laboratory"), arg(E3S1155-wear, A15S1155-handle), isa(A15S1155-handle, "handling chemicals").
english(barrons.rule2893, "Snow and rain are forms of precipitation").
pretty(barrons.rule2893, "EXAMPLE(Snow, Form), Snow = 'Snow', Form = 'forms of precipitation'.").
barrons.rule2893:: isa(A1S1156-Snow, "Snow") -> example(A1S1156-Snow, A5S1156-form), of(A5S1156-form, A7S1156-precipitation), isa(A7S1156-precipitation, "precipitation"), isa(A5S1156-form, "forms").
english(barrons.rule2894, "Snow and rain are forms of precipitation").
pretty(barrons.rule2894, "EXAMPLE(Snow, Form), Snow = 'Snow', Form = 'forms of precipitation'.").
barrons.rule2894:: of(A5S1156-form, A7S1156-precipitation), isa(A7S1156-precipitation, "precipitation"), isa(A5S1156-form, "forms") -> example(A1S1156-Snow, A5S1156-form), isa(A1S1156-Snow, "Snow").
english(barrons.rule2895, "Snow and rain are forms of precipitation").
pretty(barrons.rule2895, "EXAMPLE(Rain, Form), Rain = 'rain', Form = 'forms of precipitation'.").
barrons.rule2895:: isa(A3S1156-rain, "rain") -> example(A3S1156-rain, A5S1156-form), of(A5S1156-form, A7S1156-precipitation), isa(A7S1156-precipitation, "precipitation"), isa(A5S1156-form, "forms").
english(barrons.rule2896, "Snow and rain are forms of precipitation").
pretty(barrons.rule2896, "EXAMPLE(Rain, Form), Rain = 'rain', Form = 'forms of precipitation'.").
barrons.rule2896:: of(A5S1156-form, A7S1156-precipitation), isa(A7S1156-precipitation, "precipitation"), isa(A5S1156-form, "forms") -> example(A3S1156-rain, A5S1156-form), isa(A3S1156-rain, "rain").
english(barrons.rule2897, "The main function of a turtle 's shell is to protect the turtle").
pretty(barrons.rule2897, "PURPOSE(Shell, protect(Function, Turtle)), Shell = 'a turtle ’s shell', Function = 'The main function of a turtle ’s shell', Turtle = 'the turtle'.").
barrons.rule2897:: isa(A8S1157-shell, "a turtle 's shell") -> purpose(A8S1157-shell, E11S1157-protect), of(A3S1157-function, A8S1157-shell), isa(E11S1157-protect, "protect"), agent(E11S1157-protect, A3S1157-function), isa(A3S1157-function, "The main function"), object(E11S1157-protect, A13S1157-turtle), isa(A13S1157-turtle, "the turtle").
english(barrons.rule2898, "The main function of a turtle 's shell is to protect the turtle").
pretty(barrons.rule2898, "PURPOSE(Shell, protect(Function, Turtle)), Shell = 'a turtle ’s shell', Function = 'The main function of a turtle ’s shell', Turtle = 'the turtle'.").
barrons.rule2898:: of(A3S1157-function, A8S1157-shell), isa(A8S1157-shell, "a turtle 's shell"), isa(E11S1157-protect, "protect"), agent(E11S1157-protect, A3S1157-function), isa(A3S1157-function, "The main function"), object(E11S1157-protect, A13S1157-turtle), isa(A13S1157-turtle, "the turtle") -> purpose(A8S1157-shell, E11S1157-protect).
english(barrons.rule2899, "The Earth 's main source of energy is the sun").
pretty(barrons.rule2899, "EXAMPLE(Source, Sun), Source = 'The Earth ’s main source of energy', Sun = 'the sun'.").
barrons.rule2899:: of(A5S1159-source, A7S1159-energy), isa(A7S1159-energy, "energy"), isa(A5S1159-source, "The Earth 's main source") -> example(A5S1159-source, A10S1159-sun), isa(A10S1159-sun, "the sun").
english(barrons.rule2900, "The Earth 's main source of energy is the sun").
pretty(barrons.rule2900, "EXAMPLE(Source, Sun), Source = 'The Earth ’s main source of energy', Sun = 'the sun'.").
barrons.rule2900:: isa(A10S1159-sun, "the sun") -> example(A5S1159-source, A10S1159-sun), of(A5S1159-source, A7S1159-energy), isa(A7S1159-energy, "energy"), isa(A5S1159-source, "The Earth 's main source").
english(barrons.rule2901, "When you jump up in the air you come back down to the ground due to gravity").
pretty(barrons.rule2901, "WHEN(come_to(You, Back, Down, Ground), jump up_in(You, Air)), You = 'you', Back = 'back', Down = 'down', Ground = 'the ground due to gravity', You = 'you', Air = 'the air'.").
barrons.rule2901:: isa(E10S1161-come, "come"), agent(E10S1161-come, A9S1161-you), isa(A9S1161-you, "you"), to(E10S1161-come, A15S1161-ground), isa(A15S1161-ground, "the ground due to gravity"), arg(E10S1161-come, A11S1161-back), isa(A11S1161-back, "back"), arg(E10S1161-come, A12S1161-down), isa(A12S1161-down, "down") -> when(E10S1161-come, E3S1161-jump), isa(E3S1161-jump, "jump up"), agent(E3S1161-jump, A2S1161-you), isa(A2S1161-you, "you"), in(E3S1161-jump, A7S1161-air), isa(A7S1161-air, "the air").
english(barrons.rule2902, "When you jump up in the air you come back down to the ground due to gravity").
pretty(barrons.rule2902, "WHEN(come_to(You, Back, Down, Ground), jump up_in(You, Air)), You = 'you', Back = 'back', Down = 'down', Ground = 'the ground due to gravity', You = 'you', Air = 'the air'.").
barrons.rule2902:: isa(E3S1161-jump, "jump up"), agent(E3S1161-jump, A2S1161-you), isa(A2S1161-you, "you"), in(E3S1161-jump, A7S1161-air), isa(A7S1161-air, "the air") -> when(E10S1161-come, E3S1161-jump), isa(E10S1161-come, "come"), agent(E10S1161-come, A9S1161-you), isa(A9S1161-you, "you"), to(E10S1161-come, A15S1161-ground), isa(A15S1161-ground, "the ground due to gravity"), arg(E10S1161-come, A11S1161-back), isa(A11S1161-back, "back"), arg(E10S1161-come, A12S1161-down), isa(A12S1161-down, "down").
english(barrons.rule2903, "A ramp is a simple machine known as an inclined plane").
pretty(barrons.rule2903, "EXAMPLE(Ramp, know_as(Machine, Plane)), Ramp = 'A ramp', Machine = 'a simple machine', Plane = 'an inclined plane'.").
barrons.rule2903:: isa(A2S1162-ramp, "A ramp") -> example(A2S1162-ramp, E7S1162-know), isa(E7S1162-know, "know"), agent(E7S1162-know, A6S1162-machine), isa(A6S1162-machine, "a simple machine"), as(E7S1162-know, A11S1162-plane), isa(A11S1162-plane, "an inclined plane").
english(barrons.rule2904, "A ramp is a simple machine known as an inclined plane").
pretty(barrons.rule2904, "EXAMPLE(Ramp, know_as(Machine, Plane)), Ramp = 'A ramp', Machine = 'a simple machine', Plane = 'an inclined plane'.").
barrons.rule2904:: isa(E7S1162-know, "know"), agent(E7S1162-know, A6S1162-machine), isa(A6S1162-machine, "a simple machine"), as(E7S1162-know, A11S1162-plane), isa(A11S1162-plane, "an inclined plane") -> example(A2S1162-ramp, E7S1162-know), isa(A2S1162-ramp, "A ramp").
english(barrons.rule2905, "A ramp is a simple machine known as an inclined plane").
pretty(barrons.rule2905, "EXAMPLE(Ramp, Machine), Ramp = 'A ramp', Machine = 'a simple machine'.").
barrons.rule2905:: isa(A2S1162-ramp, "A ramp") -> example(A2S1162-ramp, A6S1162-machine), isa(A6S1162-machine, "a simple machine").
english(barrons.rule2906, "A ramp is a simple machine known as an inclined plane").
pretty(barrons.rule2906, "EXAMPLE(Ramp, Machine), Ramp = 'A ramp', Machine = 'a simple machine'.").
barrons.rule2906:: isa(A6S1162-machine, "a simple machine") -> example(A2S1162-ramp, A6S1162-machine), isa(A2S1162-ramp, "A ramp").
english(barrons.rule2907, "A plant in a food chain is called the producer").
pretty(barrons.rule2907, "EXAMPLE(Plant, Producer), Plant = 'A plant in a food chain', Producer = 'the producer'.").
barrons.rule2907:: in(A2S1166-plant, A6S1166-chain), isa(A6S1166-chain, "a food chain"), isa(A2S1166-plant, "A plant") -> example(A2S1166-plant, A10S1166-producer), isa(A10S1166-producer, "the producer").
english(barrons.rule2908, "A plant in a food chain is called the producer").
pretty(barrons.rule2908, "EXAMPLE(Plant, Producer), Plant = 'A plant in a food chain', Producer = 'the producer'.").
barrons.rule2908:: isa(A10S1166-producer, "the producer") -> example(A2S1166-plant, A10S1166-producer), in(A2S1166-plant, A6S1166-chain), isa(A6S1166-chain, "a food chain"), isa(A2S1166-plant, "A plant").
english(barrons.rule2909, "Sound waves and light energy are similar because they[Sound waves and light energy] move energy from one place to another").
pretty(barrons.rule2909, "EFFECT(move_from(Wave, Energy, Place, to(Another)), be(Wave, Similar)), Wave = 'Sound waves', Energy = 'energy', Place = 'one place', Another = 'another', Similar = 'similar because they[Sound waves and light energy] move energy from one place to another'.").
barrons.rule2909:: isa(E10S1171-move, "move"), agent(E10S1171-move, A2S1171-wave), isa(A2S1171-wave, "Sound waves"), object(E10S1171-move, A11S1171-energy), isa(A11S1171-energy, "energy"), from(E10S1171-move, A14S1171-place), isa(A14S1171-place, "one place"), to(E10S1171-move, A16S1171-another), isa(A16S1171-another, "another") -> effect(E10S1171-move, E6S1171-be), isa(E6S1171-be, "be"), agent(E6S1171-be, A2S1171-wave), object(E6S1171-be, A7S1171-similar), isa(A7S1171-similar, "similar").
english(barrons.rule2910, "Sound waves and light energy are similar because they[Sound waves and light energy] move energy from one place to another").
pretty(barrons.rule2910, "EFFECT(move_from(Wave, Energy, Place, to(Another)), be(Wave, Similar)), Wave = 'Sound waves', Energy = 'energy', Place = 'one place', Another = 'another', Similar = 'similar because they[Sound waves and light energy] move energy from one place to another'.").
barrons.rule2910:: isa(E6S1171-be, "be"), agent(E6S1171-be, A2S1171-wave), isa(A2S1171-wave, "Sound waves"), object(E6S1171-be, A7S1171-similar), isa(A7S1171-similar, "similar") -> effect(E10S1171-move, E6S1171-be), isa(E10S1171-move, "move"), agent(E10S1171-move, A2S1171-wave), object(E10S1171-move, A11S1171-energy), isa(A11S1171-energy, "energy"), from(E10S1171-move, A14S1171-place), isa(A14S1171-place, "one place"), to(E10S1171-move, A16S1171-another), isa(A16S1171-another, "another").
english(barrons.rule2911, "Sound waves and light energy are similar because they[Sound waves and light energy] move energy from one place to another").
pretty(barrons.rule2911, "EFFECT(move_from(Wave, Energy, Place, to(Another)), be(Energy, Similar)), Wave = 'Sound waves', Energy = 'energy', Place = 'one place', Another = 'another', Energy = 'light energy', Similar = 'similar because they[Sound waves and light energy] move energy from one place to another'.").
barrons.rule2911:: isa(E10S1171-move, "move"), agent(E10S1171-move, A2S1171-wave), isa(A2S1171-wave, "Sound waves"), object(E10S1171-move, A11S1171-energy), isa(A11S1171-energy, "energy"), from(E10S1171-move, A14S1171-place), isa(A14S1171-place, "one place"), to(E10S1171-move, A16S1171-another), isa(A16S1171-another, "another") -> effect(E10S1171-move, E6S1171-be), isa(E6S1171-be, "be"), agent(E6S1171-be, A5S1171-energy), isa(A5S1171-energy, "light energy"), object(E6S1171-be, A7S1171-similar), isa(A7S1171-similar, "similar").
english(barrons.rule2912, "Sound waves and light energy are similar because they[Sound waves and light energy] move energy from one place to another").
pretty(barrons.rule2912, "EFFECT(move_from(Wave, Energy, Place, to(Another)), be(Energy, Similar)), Wave = 'Sound waves', Energy = 'energy', Place = 'one place', Another = 'another', Energy = 'light energy', Similar = 'similar because they[Sound waves and light energy] move energy from one place to another'.").
barrons.rule2912:: isa(E6S1171-be, "be"), agent(E6S1171-be, A5S1171-energy), isa(A5S1171-energy, "light energy"), object(E6S1171-be, A7S1171-similar), isa(A7S1171-similar, "similar") -> effect(E10S1171-move, E6S1171-be), isa(E10S1171-move, "move"), agent(E10S1171-move, A2S1171-wave), isa(A2S1171-wave, "Sound waves"), object(E10S1171-move, A11S1171-energy), isa(A11S1171-energy, "energy"), from(E10S1171-move, A14S1171-place), isa(A14S1171-place, "one place"), to(E10S1171-move, A16S1171-another), isa(A16S1171-another, "another").
english(barrons.rule2913, "Sound waves and light energy are similar because they[Sound waves and light energy] move energy from one place to another").
pretty(barrons.rule2913, "EFFECT(move_from(Energy, Energy, Place, to(Another)), be(Wave, Similar)), Energy = 'light energy', Energy = 'energy', Place = 'one place', Another = 'another', Wave = 'Sound waves', Similar = 'similar because they[Sound waves and light energy] move energy from one place to another'.").
barrons.rule2913:: isa(E10S1171-move, "move"), agent(E10S1171-move, A5S1171-energy), isa(A5S1171-energy, "light energy"), object(E10S1171-move, A11S1171-energy), isa(A11S1171-energy, "energy"), from(E10S1171-move, A14S1171-place), isa(A14S1171-place, "one place"), to(E10S1171-move, A16S1171-another), isa(A16S1171-another, "another") -> effect(E10S1171-move, E6S1171-be), isa(E6S1171-be, "be"), agent(E6S1171-be, A2S1171-wave), isa(A2S1171-wave, "Sound waves"), object(E6S1171-be, A7S1171-similar), isa(A7S1171-similar, "similar").
english(barrons.rule2914, "Sound waves and light energy are similar because they[Sound waves and light energy] move energy from one place to another").
pretty(barrons.rule2914, "EFFECT(move_from(Energy, Energy, Place, to(Another)), be(Wave, Similar)), Energy = 'light energy', Energy = 'energy', Place = 'one place', Another = 'another', Wave = 'Sound waves', Similar = 'similar because they[Sound waves and light energy] move energy from one place to another'.").
barrons.rule2914:: isa(E6S1171-be, "be"), agent(E6S1171-be, A2S1171-wave), isa(A2S1171-wave, "Sound waves"), object(E6S1171-be, A7S1171-similar), isa(A7S1171-similar, "similar") -> effect(E10S1171-move, E6S1171-be), isa(E10S1171-move, "move"), agent(E10S1171-move, A5S1171-energy), isa(A5S1171-energy, "light energy"), object(E10S1171-move, A11S1171-energy), isa(A11S1171-energy, "energy"), from(E10S1171-move, A14S1171-place), isa(A14S1171-place, "one place"), to(E10S1171-move, A16S1171-another), isa(A16S1171-another, "another").
english(barrons.rule2915, "Sound waves and light energy are similar because they[Sound waves and light energy] move energy from one place to another").
pretty(barrons.rule2915, "EFFECT(move_from(Energy, Energy, Place, to(Another)), be(Energy, Similar)), Energy = 'light energy', Energy = 'energy', Place = 'one place', Another = 'another', Similar = 'similar because they[Sound waves and light energy] move energy from one place to another'.").
barrons.rule2915:: isa(E10S1171-move, "move"), agent(E10S1171-move, A5S1171-energy), isa(A5S1171-energy, "light energy"), object(E10S1171-move, A11S1171-energy), isa(A11S1171-energy, "energy"), from(E10S1171-move, A14S1171-place), isa(A14S1171-place, "one place"), to(E10S1171-move, A16S1171-another), isa(A16S1171-another, "another") -> effect(E10S1171-move, E6S1171-be), isa(E6S1171-be, "be"), agent(E6S1171-be, A5S1171-energy), object(E6S1171-be, A7S1171-similar), isa(A7S1171-similar, "similar").
english(barrons.rule2916, "Sound waves and light energy are similar because they[Sound waves and light energy] move energy from one place to another").
pretty(barrons.rule2916, "EFFECT(move_from(Energy, Energy, Place, to(Another)), be(Energy, Similar)), Energy = 'light energy', Energy = 'energy', Place = 'one place', Another = 'another', Similar = 'similar because they[Sound waves and light energy] move energy from one place to another'.").
barrons.rule2916:: isa(E6S1171-be, "be"), agent(E6S1171-be, A5S1171-energy), isa(A5S1171-energy, "light energy"), object(E6S1171-be, A7S1171-similar), isa(A7S1171-similar, "similar") -> effect(E10S1171-move, E6S1171-be), isa(E10S1171-move, "move"), agent(E10S1171-move, A5S1171-energy), object(E10S1171-move, A11S1171-energy), isa(A11S1171-energy, "energy"), from(E10S1171-move, A14S1171-place), isa(A14S1171-place, "one place"), to(E10S1171-move, A16S1171-another), isa(A16S1171-another, "another").
english(barrons.rule2917, "A pulley is a simple machine that moves a sail up the mast of a ship").
pretty(barrons.rule2917, "EXAMPLE(Pulley, move(Machine, Up)), Pulley = 'A pulley', Machine = 'a simple machine', Up = 'a sail up the mast of a ship'.").
barrons.rule2917:: isa(A2S1173-pulley, "A pulley") -> example(A2S1173-pulley, A6S1173-machine), isa(E8S1173-move, "move"), agent(E8S1173-move, A6S1173-machine), isa(A6S1173-machine, "a simple machine"), arg(E8S1173-move, A11S1173-up), isa(A11S1173-up, "a sail up the mast of a ship"), isa(A2S1173-pulley, A6S1173-machine).
english(barrons.rule2918, "A pulley is a simple machine that moves a sail up the mast of a ship").
pretty(barrons.rule2918, "EXAMPLE(Pulley, move(Machine, Up)), Pulley = 'A pulley', Machine = 'a simple machine', Up = 'a sail up the mast of a ship'.").
barrons.rule2918:: isa(E8S1173-move, "move"), agent(E8S1173-move, A6S1173-machine), isa(A6S1173-machine, "a simple machine"), arg(E8S1173-move, A11S1173-up), isa(A11S1173-up, "a sail up the mast of a ship") -> example(A2S1173-pulley, A6S1173-machine), isa(A2S1173-pulley, "A pulley"), isa(A2S1173-pulley, A6S1173-machine).
english(barrons.rule2919, "A pulley is a simple machine that moves a sail up the mast of a ship").
pretty(barrons.rule2919, "EXAMPLE(Pulley, Machine), Pulley = 'A pulley', Machine = 'a simple machine'.").
barrons.rule2919:: isa(A2S1173-pulley, "A pulley") -> example(A2S1173-pulley, A6S1173-machine), isa(A6S1173-machine, "a simple machine").
english(barrons.rule2920, "A pulley is a simple machine that moves a sail up the mast of a ship").
pretty(barrons.rule2920, "EXAMPLE(Pulley, Machine), Pulley = 'A pulley', Machine = 'a simple machine'.").
barrons.rule2920:: isa(A6S1173-machine, "a simple machine") -> example(A2S1173-pulley, A6S1173-machine), isa(A2S1173-pulley, "A pulley").
english(barrons.rule2921, "The length of time from an animal 's birth until its[an animal 's] death is called its[The length of time from an animal 's birth to its death] life span").
pretty(barrons.rule2921, "EXAMPLE(Length, Span), Length = 'The length of time from an animal ’s birth until its[an animal 's] death', Span = 'its[The length of time from an animal ’s birth to its death] life span'.").
barrons.rule2921:: until(A9S1174-birth, A12S1174-death), isa(A12S1174-death, "its[an animal 's] death"), from(A4S1174-time, A9S1174-birth), isa(A9S1174-birth, "an animal 's birth"), of(A2S1174-length, A4S1174-time), isa(A4S1174-time, "time"), isa(A2S1174-length, "The length") -> example(A2S1174-length, A17S1174-span), isa(A17S1174-span, "its[The length of time from an animal 's birth to its death] life span").
english(barrons.rule2922, "The length of time from an animal 's birth until its[an animal 's] death is called its[The length of time from an animal 's birth to its death] life span").
pretty(barrons.rule2922, "EXAMPLE(Length, Span), Length = 'The length of time from an animal ’s birth until its[an animal 's] death', Span = 'its[The length of time from an animal ’s birth to its death] life span'.").
barrons.rule2922:: isa(A17S1174-span, "its[The length of time from an animal 's birth to its death] life span") -> example(A2S1174-length, A17S1174-span), until(A9S1174-birth, A12S1174-death), isa(A12S1174-death, "its[an animal 's] death"), from(A4S1174-time, A9S1174-birth), isa(A9S1174-birth, "an animal 's birth"), of(A2S1174-length, A4S1174-time), isa(A4S1174-time, "time"), isa(A2S1174-length, "The length").
english(barrons.rule2923, "Living things need food water and air to survive").
pretty(barrons.rule2923, "EFFECT(need(Thing, Food), survive(Thing)), Thing = 'Living things', Food = 'food'.").
barrons.rule2923:: isa(E3S1175-need, "need"), agent(E3S1175-need, A2S1175-thing), isa(A2S1175-thing, "Living things"), object(E3S1175-need, A4S1175-food), isa(A4S1175-food, "food") -> effect(E3S1175-need, E11S1175-survive), isa(E11S1175-survive, "survive"), agent(E11S1175-survive, A2S1175-thing).
english(barrons.rule2924, "Living things need food water and air to survive").
pretty(barrons.rule2924, "EFFECT(need(Thing, Food), survive(Thing)), Thing = 'Living things', Food = 'food'.").
barrons.rule2924:: isa(E11S1175-survive, "survive"), agent(E11S1175-survive, A2S1175-thing), isa(A2S1175-thing, "Living things") -> effect(E3S1175-need, E11S1175-survive), isa(E3S1175-need, "need"), agent(E3S1175-need, A2S1175-thing), object(E3S1175-need, A4S1175-food), isa(A4S1175-food, "food").
english(barrons.rule2925, "Living things need food water and air to survive").
pretty(barrons.rule2925, "EFFECT(need(Thing, Water), survive(Thing)), Thing = 'Living things', Water = 'water'.").
barrons.rule2925:: isa(E3S1175-need, "need"), agent(E3S1175-need, A2S1175-thing), isa(A2S1175-thing, "Living things"), object(E3S1175-need, A6S1175-water), isa(A6S1175-water, "water") -> effect(E3S1175-need, E11S1175-survive), isa(E11S1175-survive, "survive"), agent(E11S1175-survive, A2S1175-thing).
english(barrons.rule2926, "Living things need food water and air to survive").
pretty(barrons.rule2926, "EFFECT(need(Thing, Water), survive(Thing)), Thing = 'Living things', Water = 'water'.").
barrons.rule2926:: isa(E11S1175-survive, "survive"), agent(E11S1175-survive, A2S1175-thing), isa(A2S1175-thing, "Living things") -> effect(E3S1175-need, E11S1175-survive), isa(E3S1175-need, "need"), agent(E3S1175-need, A2S1175-thing), object(E3S1175-need, A6S1175-water), isa(A6S1175-water, "water").
english(barrons.rule2927, "Living things need food water and air to survive").
pretty(barrons.rule2927, "EFFECT(need(Thing, Air), survive(Thing)), Thing = 'Living things', Air = 'air'.").
barrons.rule2927:: isa(E3S1175-need, "need"), agent(E3S1175-need, A2S1175-thing), isa(A2S1175-thing, "Living things"), object(E3S1175-need, A9S1175-air), isa(A9S1175-air, "air") -> effect(E3S1175-need, E11S1175-survive), isa(E11S1175-survive, "survive"), agent(E11S1175-survive, A2S1175-thing).
english(barrons.rule2928, "Living things need food water and air to survive").
pretty(barrons.rule2928, "EFFECT(need(Thing, Air), survive(Thing)), Thing = 'Living things', Air = 'air'.").
barrons.rule2928:: isa(E11S1175-survive, "survive"), agent(E11S1175-survive, A2S1175-thing), isa(A2S1175-thing, "Living things") -> effect(E3S1175-need, E11S1175-survive), isa(E3S1175-need, "need"), agent(E3S1175-need, A2S1175-thing), object(E3S1175-need, A9S1175-air), isa(A9S1175-air, "air").
english(barrons.rule2929, "When you turn on your television electrical energy is transferred into sound and light energy").
pretty(barrons.rule2929, "WHEN(transfer_into(You, Energy, Energy), turn(You)), You = 'you', Energy = 'electrical energy', Energy = 'sound and light energy'.").
barrons.rule2929:: isa(E11S1178-transfer, "transfer"), agent(E11S1178-transfer, A2S1178-you), isa(A2S1178-you, "you"), object(E11S1178-transfer, A9S1178-energy), isa(A9S1178-energy, "electrical energy"), into(E11S1178-transfer, A16S1178-energy), isa(A16S1178-energy, "sound and light energy") -> when(E11S1178-transfer, E3S1178-turn), isa(E3S1178-turn, "turn"), agent(E3S1178-turn, A2S1178-you).
english(barrons.rule2930, "When you turn on your television electrical energy is transferred into sound and light energy").
pretty(barrons.rule2930, "WHEN(transfer_into(You, Energy, Energy), turn(You)), You = 'you', Energy = 'electrical energy', Energy = 'sound and light energy'.").
barrons.rule2930:: isa(E3S1178-turn, "turn"), agent(E3S1178-turn, A2S1178-you), isa(A2S1178-you, "you") -> when(E11S1178-transfer, E3S1178-turn), isa(E11S1178-transfer, "transfer"), agent(E11S1178-transfer, A2S1178-you), object(E11S1178-transfer, A9S1178-energy), isa(A9S1178-energy, "electrical energy"), into(E11S1178-transfer, A16S1178-energy), isa(A16S1178-energy, "sound and light energy").
english(barrons.rule2931, "A thermometer is used to measure heat energy").
pretty(barrons.rule2931, "PURPOSE(Thermometer, measure(Thermometer, Energy)), Thermometer = 'A thermometer', Energy = 'heat energy'.").
barrons.rule2931:: isa(A2S1179-thermometer, "A thermometer") -> purpose(A2S1179-thermometer, E6S1179-measure), isa(E6S1179-measure, "measure"), agent(E6S1179-measure, A2S1179-thermometer), object(E6S1179-measure, A8S1179-energy), isa(A8S1179-energy, "heat energy").
english(barrons.rule2932, "A thermometer is used to measure heat energy").
pretty(barrons.rule2932, "PURPOSE(Thermometer, measure(Thermometer, Energy)), Thermometer = 'A thermometer', Energy = 'heat energy'.").
barrons.rule2932:: isa(E6S1179-measure, "measure"), agent(E6S1179-measure, A2S1179-thermometer), isa(A2S1179-thermometer, "A thermometer"), object(E6S1179-measure, A8S1179-energy), isa(A8S1179-energy, "heat energy") -> purpose(A2S1179-thermometer, E6S1179-measure).
english(barrons.rule2933, "The flower is the part of the plant responsible for the production of seeds").
pretty(barrons.rule2933, "EXAMPLE(Flower, Part), Flower = 'The flower', Part = 'the part of the plant responsible for the production of seeds'.").
barrons.rule2933:: isa(A2S1180-flower, "The flower") -> example(A2S1180-flower, A5S1180-part), of(A5S1180-part, A8S1180-plant), isa(A8S1180-plant, "the plant responsible for the production of seeds"), isa(A5S1180-part, "the part").
english(barrons.rule2934, "The flower is the part of the plant responsible for the production of seeds").
pretty(barrons.rule2934, "EXAMPLE(Flower, Part), Flower = 'The flower', Part = 'the part of the plant responsible for the production of seeds'.").
barrons.rule2934:: of(A5S1180-part, A8S1180-plant), isa(A8S1180-plant, "the plant responsible for the production of seeds"), isa(A5S1180-part, "the part") -> example(A2S1180-flower, A5S1180-part), isa(A2S1180-flower, "The flower").
english(barrons.rule2935, "Photosynthesis takes place in the leaves of the plant").
pretty(barrons.rule2935, "isa(take, 'takes') -> take_in(Photosynthesis, Place, Leaf).").
barrons.rule2935:: isa(E2S1181-take, "take") -> agent(E2S1181-take, A1S1181-photosynthesis), isa(A1S1181-photosynthesis, "Photosynthesis"), object(E2S1181-take, A3S1181-place), isa(A3S1181-place, "place"), in(E2S1181-take, A6S1181-leaf), isa(A6S1181-leaf, "the leaves of the plant").
english(barrons.rule2936, "Photosynthesis takes place in the leaves of the plant").
pretty(barrons.rule2936, "isa(Photosynthesis, 'Photosynthesis') -> take_in(Photosynthesis, Place, Leaf).").
barrons.rule2936:: isa(A1S1181-photosynthesis, "Photosynthesis") -> isa(E2S1181-take, "take"), agent(E2S1181-take, A1S1181-photosynthesis), object(E2S1181-take, A3S1181-place), isa(A3S1181-place, "place"), in(E2S1181-take, A6S1181-leaf), isa(A6S1181-leaf, "the leaves of the plant").
english(barrons.rule2937, "Photosynthesis takes place in the leaves of the plant").
pretty(barrons.rule2937, "isa(Place, 'place') -> take_in(Photosynthesis, Place, Leaf).").
barrons.rule2937:: isa(A3S1181-place, "place") -> isa(E2S1181-take, "take"), agent(E2S1181-take, A1S1181-photosynthesis), isa(A1S1181-photosynthesis, "Photosynthesis"), object(E2S1181-take, A3S1181-place), in(E2S1181-take, A6S1181-leaf), isa(A6S1181-leaf, "the leaves of the plant").
english(barrons.rule2938, "Photosynthesis takes place in the leaves of the plant").
pretty(barrons.rule2938, "isa(Leaf, 'the leaves of the plant') -> take_in(Photosynthesis, Place, Leaf).").
barrons.rule2938:: isa(A6S1181-leaf, "the leaves of the plant") -> isa(E2S1181-take, "take"), agent(E2S1181-take, A1S1181-photosynthesis), isa(A1S1181-photosynthesis, "Photosynthesis"), object(E2S1181-take, A3S1181-place), isa(A3S1181-place, "place"), in(E2S1181-take, A6S1181-leaf).
english(barrons.rule2939, "A rock is not a living thing").
pretty(barrons.rule2939, "EXAMPLE(Rock, Thing), Rock = 'A rock', Thing = 'not a living thing'.").
barrons.rule2939:: isa(A2S1182-rock, "A rock") -> example(A2S1182-rock, A7S1182-thing), isa(A7S1182-thing, "not a living thing").
english(barrons.rule2940, "A rock is not a living thing").
pretty(barrons.rule2940, "EXAMPLE(Rock, Thing), Rock = 'A rock', Thing = 'not a living thing'.").
barrons.rule2940:: isa(A7S1182-thing, "not a living thing") -> example(A2S1182-rock, A7S1182-thing), isa(A2S1182-rock, "A rock").
english(barrons.rule2941, "Hail is a form of precipitation").
pretty(barrons.rule2941, "EXAMPLE(Hail, Form), Hail = 'Hail', Form = 'a form of precipitation'.").
barrons.rule2941:: isa(A1S1183-hail, "Hail") -> example(A1S1183-hail, A4S1183-form), of(A4S1183-form, A6S1183-precipitation), isa(A6S1183-precipitation, "precipitation"), isa(A4S1183-form, "a form").
english(barrons.rule2942, "Hail is a form of precipitation").
pretty(barrons.rule2942, "EXAMPLE(Hail, Form), Hail = 'Hail', Form = 'a form of precipitation'.").
barrons.rule2942:: of(A4S1183-form, A6S1183-precipitation), isa(A6S1183-precipitation, "precipitation"), isa(A4S1183-form, "a form") -> example(A1S1183-hail, A4S1183-form), isa(A1S1183-hail, "Hail").
english(barrons.rule2943, "An example of a predator and prey is a hawk and a mouse").
pretty(barrons.rule2943, "EXAMPLE(Hawk, Predator), Hawk = 'a hawk', Predator = 'a predator'.").
barrons.rule2943:: isa(A10S1184-hawk, "a hawk") -> example(A10S1184-hawk, A5S1184-predator), isa(A5S1184-predator, "a predator").
english(barrons.rule2944, "An example of a predator and prey is a hawk and a mouse").
pretty(barrons.rule2944, "EXAMPLE(Hawk, Predator), Hawk = 'a hawk', Predator = 'a predator'.").
barrons.rule2944:: isa(A5S1184-predator, "a predator") -> example(A10S1184-hawk, A5S1184-predator), isa(A10S1184-hawk, "a hawk").
english(barrons.rule2945, "An example of a predator and prey is a hawk and a mouse").
pretty(barrons.rule2945, "EXAMPLE(Hawk, Prey), Hawk = 'a hawk', Prey = 'prey'.").
barrons.rule2945:: isa(A10S1184-hawk, "a hawk") -> example(A10S1184-hawk, A7S1184-prey), isa(A7S1184-prey, "prey").
english(barrons.rule2946, "An example of a predator and prey is a hawk and a mouse").
pretty(barrons.rule2946, "EXAMPLE(Hawk, Prey), Hawk = 'a hawk', Prey = 'prey'.").
barrons.rule2946:: isa(A7S1184-prey, "prey") -> example(A10S1184-hawk, A7S1184-prey), isa(A10S1184-hawk, "a hawk").
english(barrons.rule2947, "An example of a predator and prey is a hawk and a mouse").
pretty(barrons.rule2947, "EXAMPLE(Example, Hawk), Example = 'An example of a predator and prey', Hawk = 'a hawk'.").
barrons.rule2947:: of(A2S1184-example, A5S1184-predator), isa(A5S1184-predator, "a predator"), of(A2S1184-example, A7S1184-prey), isa(A7S1184-prey, "prey"), isa(A2S1184-example, "An example") -> example(A2S1184-example, A10S1184-hawk), isa(A10S1184-hawk, "a hawk").
english(barrons.rule2948, "An example of a predator and prey is a hawk and a mouse").
pretty(barrons.rule2948, "EXAMPLE(Example, Hawk), Example = 'An example of a predator and prey', Hawk = 'a hawk'.").
barrons.rule2948:: isa(A10S1184-hawk, "a hawk") -> example(A2S1184-example, A10S1184-hawk), of(A2S1184-example, A5S1184-predator), isa(A5S1184-predator, "a predator"), of(A2S1184-example, A7S1184-prey), isa(A7S1184-prey, "prey"), isa(A2S1184-example, "An example").
english(barrons.rule2949, "Growth is a process by which plants and animals increase in size").
pretty(barrons.rule2949, "PURPOSE(grow(Plant), increase_in(Plant, Size)), Plant = 'plants', Size = 'size'.").
barrons.rule2949:: isa(E1S1186-growth, "grow"), agent(E1S1186-growth, A7S1186-plant), isa(A7S1186-plant, "plants") -> purpose(E1S1186-growth, E10S1186-increase), isa(E10S1186-increase, "increase"), agent(E10S1186-increase, A7S1186-plant), in(E10S1186-increase, A12S1186-size), isa(A12S1186-size, "size").
english(barrons.rule2950, "Growth is a process by which plants and animals increase in size").
pretty(barrons.rule2950, "PURPOSE(grow(Plant), increase_in(Plant, Size)), Plant = 'plants', Size = 'size'.").
barrons.rule2950:: isa(E10S1186-increase, "increase"), agent(E10S1186-increase, A7S1186-plant), isa(A7S1186-plant, "plants"), in(E10S1186-increase, A12S1186-size), isa(A12S1186-size, "size") -> purpose(E1S1186-growth, E10S1186-increase), isa(E1S1186-growth, "grow"), agent(E1S1186-growth, A7S1186-plant).
english(barrons.rule2951, "Growth is a process by which plants and animals increase in size").
pretty(barrons.rule2951, "PURPOSE(grow(Animal), increase_in(Animal, Size)), Animal = 'animals', Size = 'size'.").
barrons.rule2951:: isa(E1S1186-growth, "grow"), agent(E1S1186-growth, A9S1186-animal), isa(A9S1186-animal, "animals") -> purpose(E1S1186-growth, E10S1186-increase), isa(E10S1186-increase, "increase"), agent(E10S1186-increase, A9S1186-animal), in(E10S1186-increase, A12S1186-size), isa(A12S1186-size, "size").
english(barrons.rule2952, "Growth is a process by which plants and animals increase in size").
pretty(barrons.rule2952, "PURPOSE(grow(Animal), increase_in(Animal, Size)), Animal = 'animals', Size = 'size'.").
barrons.rule2952:: isa(E10S1186-increase, "increase"), agent(E10S1186-increase, A9S1186-animal), isa(A9S1186-animal, "animals"), in(E10S1186-increase, A12S1186-size), isa(A12S1186-size, "size") -> purpose(E1S1186-growth, E10S1186-increase), isa(E1S1186-growth, "grow"), agent(E1S1186-growth, A9S1186-animal).
english(barrons.rule2953, "Growth is a process by which plants and animals increase in size").
pretty(barrons.rule2953, "EXAMPLE(Growth, increase_in(Plant, Size)), Growth = 'Growth', Plant = 'plants', Size = 'size'.").
barrons.rule2953:: isa(A1S1186-growth, "Growth") -> example(A1S1186-growth, E10S1186-increase), isa(E10S1186-increase, "increase"), agent(E10S1186-increase, A7S1186-plant), isa(A7S1186-plant, "plants"), in(E10S1186-increase, A12S1186-size), isa(A12S1186-size, "size").
english(barrons.rule2954, "Growth is a process by which plants and animals increase in size").
pretty(barrons.rule2954, "EXAMPLE(Growth, increase_in(Plant, Size)), Growth = 'Growth', Plant = 'plants', Size = 'size'.").
barrons.rule2954:: isa(E10S1186-increase, "increase"), agent(E10S1186-increase, A7S1186-plant), isa(A7S1186-plant, "plants"), in(E10S1186-increase, A12S1186-size), isa(A12S1186-size, "size") -> example(A1S1186-growth, E10S1186-increase), isa(A1S1186-growth, "Growth").
english(barrons.rule2955, "Growth is a process by which plants and animals increase in size").
pretty(barrons.rule2955, "EXAMPLE(Growth, increase_in(Animal, Size)), Growth = 'Growth', Animal = 'animals', Size = 'size'.").
barrons.rule2955:: isa(A1S1186-growth, "Growth") -> example(A1S1186-growth, E10S1186-increase), isa(E10S1186-increase, "increase"), agent(E10S1186-increase, A9S1186-animal), isa(A9S1186-animal, "animals"), in(E10S1186-increase, A12S1186-size), isa(A12S1186-size, "size").
english(barrons.rule2956, "Growth is a process by which plants and animals increase in size").
pretty(barrons.rule2956, "EXAMPLE(Growth, increase_in(Animal, Size)), Growth = 'Growth', Animal = 'animals', Size = 'size'.").
barrons.rule2956:: isa(E10S1186-increase, "increase"), agent(E10S1186-increase, A9S1186-animal), isa(A9S1186-animal, "animals"), in(E10S1186-increase, A12S1186-size), isa(A12S1186-size, "size") -> example(A1S1186-growth, E10S1186-increase), isa(A1S1186-growth, "Growth").
english(barrons.rule2957, "Growth is a process by which plants and animals increase in size").
pretty(barrons.rule2957, "EXAMPLE(Growth, Process), Growth = 'Growth', Process = 'a process'.").
barrons.rule2957:: isa(A1S1186-growth, "Growth") -> example(A1S1186-growth, A4S1186-process), isa(A4S1186-process, "a process").
english(barrons.rule2958, "Growth is a process by which plants and animals increase in size").
pretty(barrons.rule2958, "EXAMPLE(Growth, Process), Growth = 'Growth', Process = 'a process'.").
barrons.rule2958:: isa(A4S1186-process, "a process") -> example(A1S1186-growth, A4S1186-process), isa(A1S1186-growth, "Growth").
english(barrons.rule2959, "The leaves are the part of the plant that is responsible for making food").
pretty(barrons.rule2959, "EXAMPLE(Leaf, Part), Leaf = 'The leaves', Part = 'the part of the plant that is responsible for making food'.").
barrons.rule2959:: isa(A2S1189-leaf, "The leaves") -> example(A2S1189-leaf, A5S1189-part), of(A5S1189-part, A8S1189-plant), isa(A8S1189-plant, "the plant"), isa(A5S1189-part, "the part").
english(barrons.rule2960, "The leaves are the part of the plant that is responsible for making food").
pretty(barrons.rule2960, "EXAMPLE(Leaf, Part), Leaf = 'The leaves', Part = 'the part of the plant that is responsible for making food'.").
barrons.rule2960:: of(A5S1189-part, A8S1189-plant), isa(A8S1189-plant, "the plant"), isa(A5S1189-part, "the part") -> example(A2S1189-leaf, A5S1189-part), isa(A2S1189-leaf, "The leaves").
english(barrons.rule2961, "The leaves are the part of the plant that is responsible for making food").
pretty(barrons.rule2961, "PURPOSE(That, make(That, Food)), That = 'that', Food = 'food'.").
barrons.rule2961:: isa(A9S1189-that, "that") -> purpose(A9S1189-that, E13S1189-make), isa(E13S1189-make, "make"), agent(E13S1189-make, A9S1189-that), object(E13S1189-make, A14S1189-food), isa(A14S1189-food, "food").
english(barrons.rule2962, "The leaves are the part of the plant that is responsible for making food").
pretty(barrons.rule2962, "PURPOSE(That, make(That, Food)), That = 'that', Food = 'food'.").
barrons.rule2962:: isa(E13S1189-make, "make"), agent(E13S1189-make, A9S1189-that), isa(A9S1189-that, "that"), object(E13S1189-make, A14S1189-food), isa(A14S1189-food, "food") -> purpose(A9S1189-that, E13S1189-make).
english(barrons.rule2963, "Growth taking in nutrients breathing and reproduction are the life processes of all living things").
pretty(barrons.rule2963, "EFFECT(take in(Growth, Nutrient), breathe(Growth)), Growth = 'Growth', Nutrient = 'nutrients'.").
barrons.rule2963:: isa(E3S1190-take, "take in"), agent(E3S1190-take, A1S1190-growth), isa(A1S1190-growth, "Growth"), object(E3S1190-take, A5S1190-nutrient), isa(A5S1190-nutrient, "nutrients") -> effect(E3S1190-take, E7S1190-breathing), isa(E7S1190-breathing, "breathe"), agent(E7S1190-breathing, A1S1190-growth).
english(barrons.rule2964, "Growth taking in nutrients breathing and reproduction are the life processes of all living things").
pretty(barrons.rule2964, "EFFECT(take in(Growth, Nutrient), breathe(Growth)), Growth = 'Growth', Nutrient = 'nutrients'.").
barrons.rule2964:: isa(E7S1190-breathing, "breathe"), agent(E7S1190-breathing, A1S1190-growth), isa(A1S1190-growth, "Growth") -> effect(E3S1190-take, E7S1190-breathing), isa(E3S1190-take, "take in"), agent(E3S1190-take, A1S1190-growth), object(E3S1190-take, A5S1190-nutrient), isa(A5S1190-nutrient, "nutrients").
english(barrons.rule2965, "Growth taking in nutrients breathing and reproduction are the life processes of all living things").
pretty(barrons.rule2965, "EXAMPLE(Reproduction, Process), Reproduction = 'reproduction', Process = 'the life processes of all living things'.").
barrons.rule2965:: isa(A10S1190-reproduction, "reproduction") -> example(A10S1190-reproduction, A14S1190-process), of(A14S1190-process, A18S1190-thing), isa(A18S1190-thing, "all living things"), isa(A14S1190-process, "the life processes").
english(barrons.rule2966, "Growth taking in nutrients breathing and reproduction are the life processes of all living things").
pretty(barrons.rule2966, "EXAMPLE(Reproduction, Process), Reproduction = 'reproduction', Process = 'the life processes of all living things'.").
barrons.rule2966:: of(A14S1190-process, A18S1190-thing), isa(A18S1190-thing, "all living things"), isa(A14S1190-process, "the life processes") -> example(A10S1190-reproduction, A14S1190-process), isa(A10S1190-reproduction, "reproduction").
english(barrons.rule2967, "Growth taking in nutrients breathing and reproduction are the life processes of all living things").
pretty(barrons.rule2967, "EXAMPLE(Reproduction, Process), Reproduction = 'reproduction', Process = 'the life processes of all living things'.").
barrons.rule2967:: isa(A10S1190-reproduction, "reproduction") -> example(A10S1190-reproduction, A14S1190-process), of(A14S1190-process, A18S1190-thing), isa(A18S1190-thing, "all living things"), isa(A14S1190-process, "the life processes").
english(barrons.rule2968, "Growth taking in nutrients breathing and reproduction are the life processes of all living things").
pretty(barrons.rule2968, "EXAMPLE(Reproduction, Process), Reproduction = 'reproduction', Process = 'the life processes of all living things'.").
barrons.rule2968:: of(A14S1190-process, A18S1190-thing), isa(A18S1190-thing, "all living things"), isa(A14S1190-process, "the life processes") -> example(A10S1190-reproduction, A14S1190-process), isa(A10S1190-reproduction, "reproduction").
english(barrons.rule2969, "When an object travels slowly over a bumpy surface and fast over a smooth surface the difference is due to friction").
pretty(barrons.rule2969, "WHEN(be_to(Difference, Due, Friction), travel_over(Object, Slowly, Surface)), Difference = 'the difference', Due = 'When an object travels slowly over a bumpy surface and fast over a smooth surface due to friction', Friction = 'friction', Object = 'an object', Slowly = 'slowly', Surface = 'a bumpy surface over a smooth surface'.").
barrons.rule2969:: isa(E18S1192-be, "be"), agent(E18S1192-be, A17S1192-difference), isa(A17S1192-difference, "the difference"), object(E18S1192-be, A19S1192-due), isa(A19S1192-due, "due"), to(E18S1192-be, A21S1192-friction), isa(A21S1192-friction, "friction") -> when(E18S1192-be, E4S1192-travel), isa(E4S1192-travel, "travel"), agent(E4S1192-travel, A3S1192-object), isa(A3S1192-object, "an object"), over(E4S1192-travel, A9S1192-surface), isa(A9S1192-surface, "a bumpy surface and fast over a smooth surface"), arg(E4S1192-travel, A5S1192-slowly), isa(A5S1192-slowly, "slowly").
english(barrons.rule2970, "When an object travels slowly over a bumpy surface and fast over a smooth surface the difference is due to friction").
pretty(barrons.rule2970, "WHEN(be_to(Difference, Due, Friction), travel_over(Object, Slowly, Surface)), Difference = 'the difference', Due = 'When an object travels slowly over a bumpy surface and fast over a smooth surface due to friction', Friction = 'friction', Object = 'an object', Slowly = 'slowly', Surface = 'a bumpy surface over a smooth surface'.").
barrons.rule2970:: isa(E4S1192-travel, "travel"), agent(E4S1192-travel, A3S1192-object), isa(A3S1192-object, "an object"), over(E4S1192-travel, A9S1192-surface), isa(A9S1192-surface, "a bumpy surface and fast over a smooth surface"), arg(E4S1192-travel, A5S1192-slowly), isa(A5S1192-slowly, "slowly") -> when(E18S1192-be, E4S1192-travel), isa(E18S1192-be, "be"), agent(E18S1192-be, A17S1192-difference), isa(A17S1192-difference, "the difference"), object(E18S1192-be, A19S1192-due), isa(A19S1192-due, "due"), to(E18S1192-be, A21S1192-friction), isa(A21S1192-friction, "friction").
english(barrons.rule2971, "When some animals prepare for the long winters by storing food and going dormant it is called hibernation").
pretty(barrons.rule2971, "ENABLE(store(Animal, Food), prepare_for(Animal, Winter)), Animal = 'some animals', Food = 'food', Winter = 'the long winters'.").
barrons.rule2971:: isa(E10S1193-store, "store"), agent(E10S1193-store, A3S1193-animal), isa(A3S1193-animal, "some animals"), object(E10S1193-store, A11S1193-food), isa(A11S1193-food, "food") -> enable(E10S1193-store, E4S1193-prepare), isa(E4S1193-prepare, "prepare"), agent(E4S1193-prepare, A3S1193-animal), for(E4S1193-prepare, A8S1193-winter), isa(A8S1193-winter, "the long winters").
english(barrons.rule2972, "When some animals prepare for the long winters by storing food and going dormant it is called hibernation").
pretty(barrons.rule2972, "ENABLE(store(Animal, Food), prepare_for(Animal, Winter)), Animal = 'some animals', Food = 'food', Winter = 'the long winters'.").
barrons.rule2972:: isa(E4S1193-prepare, "prepare"), agent(E4S1193-prepare, A3S1193-animal), isa(A3S1193-animal, "some animals"), for(E4S1193-prepare, A8S1193-winter), isa(A8S1193-winter, "the long winters") -> enable(E10S1193-store, E4S1193-prepare), isa(E10S1193-store, "store"), agent(E10S1193-store, A3S1193-animal), object(E10S1193-store, A11S1193-food), isa(A11S1193-food, "food").
english(barrons.rule2973, "When some animals prepare for the long winters by storing food and going dormant it is called hibernation").
pretty(barrons.rule2973, "EXAMPLE(prepare_for(Animal, Winter), Hibernation), Animal = 'some animals', Winter = 'the long winters', Hibernation = 'hibernation'.").
barrons.rule2973:: isa(E4S1193-prepare, "prepare"), agent(E4S1193-prepare, A3S1193-animal), isa(A3S1193-animal, "some animals"), for(E4S1193-prepare, A8S1193-winter), isa(A8S1193-winter, "the long winters") -> example(E4S1193-prepare, A18S1193-hibernation), isa(A18S1193-hibernation, "hibernation").
english(barrons.rule2974, "When some animals prepare for the long winters by storing food and going dormant it is called hibernation").
pretty(barrons.rule2974, "EXAMPLE(prepare_for(Animal, Winter), Hibernation), Animal = 'some animals', Winter = 'the long winters', Hibernation = 'hibernation'.").
barrons.rule2974:: isa(A18S1193-hibernation, "hibernation") -> example(E4S1193-prepare, A18S1193-hibernation), isa(E4S1193-prepare, "prepare"), agent(E4S1193-prepare, A3S1193-animal), isa(A3S1193-animal, "some animals"), for(E4S1193-prepare, A8S1193-winter), isa(A8S1193-winter, "the long winters").
english(barrons.rule2975, "The length of time from an animal 's birth until its[an animal 's] death is called its[The length of time from an animal 's birth to its death] life span").
pretty(barrons.rule2975, "EXAMPLE(Length, Span), Length = 'The length of time from an animal ’s birth until its[an animal 's] death', Span = 'its[The length of time from an animal ’s birth to its death] life span'.").
barrons.rule2975:: until(A9S1194-birth, A12S1194-death), isa(A12S1194-death, "its[an animal 's] death"), from(A4S1194-time, A9S1194-birth), isa(A9S1194-birth, "an animal 's birth"), of(A2S1194-length, A4S1194-time), isa(A4S1194-time, "time"), isa(A2S1194-length, "The length") -> example(A2S1194-length, A17S1194-span), isa(A17S1194-span, "its[The length of time from an animal 's birth to its death] life span").
english(barrons.rule2976, "The length of time from an animal 's birth until its[an animal 's] death is called its[The length of time from an animal 's birth to its death] life span").
pretty(barrons.rule2976, "EXAMPLE(Length, Span), Length = 'The length of time from an animal ’s birth until its[an animal 's] death', Span = 'its[The length of time from an animal ’s birth to its death] life span'.").
barrons.rule2976:: isa(A17S1194-span, "its[The length of time from an animal 's birth to its death] life span") -> example(A2S1194-length, A17S1194-span), until(A9S1194-birth, A12S1194-death), isa(A12S1194-death, "its[an animal 's] death"), from(A4S1194-time, A9S1194-birth), isa(A9S1194-birth, "an animal 's birth"), of(A2S1194-length, A4S1194-time), isa(A4S1194-time, "time"), isa(A2S1194-length, "The length").
english(barrons.rule2977, "Some animals have claws spines or shells or give off a smell as a defense mechanism").
pretty(barrons.rule2977, "isa(have, 'have') -> have(Animal, Claw).").
barrons.rule2977:: isa(E3S1195-have, "have") -> agent(E3S1195-have, A2S1195-animal), isa(A2S1195-animal, "Some animals"), object(E3S1195-have, A4S1195-claw), isa(A4S1195-claw, "claws").
english(barrons.rule2978, "Some animals have claws spines or shells or give off a smell as a defense mechanism").
pretty(barrons.rule2978, "isa(Animal, 'Some animals') -> have(Animal, Claw).").
barrons.rule2978:: isa(A2S1195-animal, "Some animals") -> isa(E3S1195-have, "have"), agent(E3S1195-have, A2S1195-animal), object(E3S1195-have, A4S1195-claw), isa(A4S1195-claw, "claws").
english(barrons.rule2979, "Some animals have claws spines or shells or give off a smell as a defense mechanism").
pretty(barrons.rule2979, "isa(Claw, 'claws') -> have(Animal, Claw).").
barrons.rule2979:: isa(A4S1195-claw, "claws") -> isa(E3S1195-have, "have"), agent(E3S1195-have, A2S1195-animal), isa(A2S1195-animal, "Some animals"), object(E3S1195-have, A4S1195-claw).
english(barrons.rule2980, "Some animals have claws spines or shells or give off a smell as a defense mechanism").
pretty(barrons.rule2980, "isa(have, 'have') -> have(Animal, Spine).").
barrons.rule2980:: isa(E3S1195-have, "have") -> agent(E3S1195-have, A2S1195-animal), isa(A2S1195-animal, "Some animals"), object(E3S1195-have, A6S1195-spine), isa(A6S1195-spine, "spines").
english(barrons.rule2981, "Some animals have claws spines or shells or give off a smell as a defense mechanism").
pretty(barrons.rule2981, "isa(Animal, 'Some animals') -> have(Animal, Spine).").
barrons.rule2981:: isa(A2S1195-animal, "Some animals") -> isa(E3S1195-have, "have"), agent(E3S1195-have, A2S1195-animal), object(E3S1195-have, A6S1195-spine), isa(A6S1195-spine, "spines").
english(barrons.rule2982, "Some animals have claws spines or shells or give off a smell as a defense mechanism").
pretty(barrons.rule2982, "isa(Spine, 'spines') -> have(Animal, Spine).").
barrons.rule2982:: isa(A6S1195-spine, "spines") -> isa(E3S1195-have, "have"), agent(E3S1195-have, A2S1195-animal), isa(A2S1195-animal, "Some animals"), object(E3S1195-have, A6S1195-spine).
english(barrons.rule2983, "Some animals have claws spines or shells or give off a smell as a defense mechanism").
pretty(barrons.rule2983, "isa(have, 'have') -> have(Animal, Shell).").
barrons.rule2983:: isa(E3S1195-have, "have") -> agent(E3S1195-have, A2S1195-animal), isa(A2S1195-animal, "Some animals"), object(E3S1195-have, A9S1195-shell), isa(A9S1195-shell, "shells").
english(barrons.rule2984, "Some animals have claws spines or shells or give off a smell as a defense mechanism").
pretty(barrons.rule2984, "isa(Animal, 'Some animals') -> have(Animal, Shell).").
barrons.rule2984:: isa(A2S1195-animal, "Some animals") -> isa(E3S1195-have, "have"), agent(E3S1195-have, A2S1195-animal), object(E3S1195-have, A9S1195-shell), isa(A9S1195-shell, "shells").
english(barrons.rule2985, "Some animals have claws spines or shells or give off a smell as a defense mechanism").
pretty(barrons.rule2985, "isa(Shell, 'shells') -> have(Animal, Shell).").
barrons.rule2985:: isa(A9S1195-shell, "shells") -> isa(E3S1195-have, "have"), agent(E3S1195-have, A2S1195-animal), isa(A2S1195-animal, "Some animals"), object(E3S1195-have, A9S1195-shell).
english(barrons.rule2986, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule2986, "CAUSE(Dna, resemble_of(Plant, Parent, Closely, Dna)), Dna = 'their[plants and animals] DNA', Plant = 'Plants', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA', Closely = 'closely', Dna = 'their[plants and animals] DNA'.").
barrons.rule2986:: isa(A17S1197-dna, "their[plants and animals] DNA") -> cause(A17S1197-dna, E5S1197-resemble), isa(E5S1197-resemble, "resemble"), agent(E5S1197-resemble, A1S1197-plant), isa(A1S1197-plant, "Plants"), object(E5S1197-resemble, A7S1197-parent), isa(A7S1197-parent, "they parent"), of(E5S1197-resemble, A17S1197-dna), arg(E5S1197-resemble, A4S1197-closely), isa(A4S1197-closely, "closely").
english(barrons.rule2987, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule2987, "CAUSE(Dna, resemble_of(Plant, Parent, Closely, Dna)), Dna = 'their[plants and animals] DNA', Plant = 'Plants', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA', Closely = 'closely', Dna = 'their[plants and animals] DNA'.").
barrons.rule2987:: isa(E5S1197-resemble, "resemble"), agent(E5S1197-resemble, A1S1197-plant), isa(A1S1197-plant, "Plants"), object(E5S1197-resemble, A7S1197-parent), isa(A7S1197-parent, "they parent"), of(E5S1197-resemble, A17S1197-dna), isa(A17S1197-dna, "their[plants and animals] DNA"), arg(E5S1197-resemble, A4S1197-closely), isa(A4S1197-closely, "closely") -> cause(A17S1197-dna, E5S1197-resemble).
english(barrons.rule2988, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule2988, "CAUSE(Dna, resemble_of(Animal, Parent, Closely, Dna)), Dna = 'their[plants and animals] DNA', Animal = 'animals', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA', Closely = 'closely', Dna = 'their[plants and animals] DNA'.").
barrons.rule2988:: isa(A17S1197-dna, "their[plants and animals] DNA") -> cause(A17S1197-dna, E5S1197-resemble), isa(E5S1197-resemble, "resemble"), agent(E5S1197-resemble, A3S1197-animal), isa(A3S1197-animal, "animals"), object(E5S1197-resemble, A7S1197-parent), isa(A7S1197-parent, "they parent"), of(E5S1197-resemble, A17S1197-dna), arg(E5S1197-resemble, A4S1197-closely), isa(A4S1197-closely, "closely").
english(barrons.rule2989, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule2989, "CAUSE(Dna, resemble_of(Animal, Parent, Closely, Dna)), Dna = 'their[plants and animals] DNA', Animal = 'animals', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA', Closely = 'closely', Dna = 'their[plants and animals] DNA'.").
barrons.rule2989:: isa(E5S1197-resemble, "resemble"), agent(E5S1197-resemble, A3S1197-animal), isa(A3S1197-animal, "animals"), object(E5S1197-resemble, A7S1197-parent), isa(A7S1197-parent, "they parent"), of(E5S1197-resemble, A17S1197-dna), isa(A17S1197-dna, "their[plants and animals] DNA"), arg(E5S1197-resemble, A4S1197-closely), isa(A4S1197-closely, "closely") -> cause(A17S1197-dna, E5S1197-resemble).
english(barrons.rule2990, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule2990, "EXAMPLE(Plant, Parent), Plant = 'Plants', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA'.").
barrons.rule2990:: isa(A1S1197-plant, "Plants") -> example(A1S1197-plant, A7S1197-parent), because_of(A7S1197-parent, A17S1197-dna), isa(A17S1197-dna, "their[plants and animals] DNA"), isa(A7S1197-parent, "their[plants and animals] parents").
english(barrons.rule2991, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule2991, "EXAMPLE(Plant, Parent), Plant = 'Plants', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA'.").
barrons.rule2991:: because_of(A7S1197-parent, A17S1197-dna), isa(A17S1197-dna, "their[plants and animals] DNA"), isa(A7S1197-parent, "their[plants and animals] parents") -> example(A1S1197-plant, A7S1197-parent), isa(A1S1197-plant, "Plants").
english(barrons.rule2992, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule2992, "EXAMPLE(Animal, Parent), Animal = 'animals', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA'.").
barrons.rule2992:: isa(A3S1197-animal, "animals") -> example(A3S1197-animal, A7S1197-parent), because_of(A7S1197-parent, A17S1197-dna), isa(A17S1197-dna, "their[plants and animals] DNA"), isa(A7S1197-parent, "their[plants and animals] parents").
english(barrons.rule2993, "Plants and animals closely resemble their[plants and animals] parents and other individuals in their[plants and animals] species because of their[plants and animals] DNA").
pretty(barrons.rule2993, "EXAMPLE(Animal, Parent), Animal = 'animals', Parent = 'their[plants and animals] parents because of their[plants and animals] DNA'.").
barrons.rule2993:: because_of(A7S1197-parent, A17S1197-dna), isa(A17S1197-dna, "their[plants and animals] DNA"), isa(A7S1197-parent, "their[plants and animals] parents") -> example(A3S1197-animal, A7S1197-parent), isa(A3S1197-animal, "animals").
english(barrons.rule2994, "A ruler is used to measure the length of a piece of wood").
pretty(barrons.rule2994, "PURPOSE(Ruler, measure(Ruler, Length)), Ruler = 'A ruler', Length = 'the length of a piece of wood'.").
barrons.rule2994:: isa(A2S1199-ruler, "A ruler") -> purpose(A2S1199-ruler, E6S1199-measure), of(A11S1199-piece, A13S1199-wood), isa(A13S1199-wood, "wood"), of(A8S1199-length, A11S1199-piece), isa(A11S1199-piece, "a piece"), isa(E6S1199-measure, "measure"), agent(E6S1199-measure, A2S1199-ruler), object(E6S1199-measure, A8S1199-length), isa(A8S1199-length, "the length").
english(barrons.rule2995, "A ruler is used to measure the length of a piece of wood").
pretty(barrons.rule2995, "PURPOSE(Ruler, measure(Ruler, Length)), Ruler = 'A ruler', Length = 'the length of a piece of wood'.").
barrons.rule2995:: of(A11S1199-piece, A13S1199-wood), isa(A13S1199-wood, "wood"), of(A8S1199-length, A11S1199-piece), isa(A11S1199-piece, "a piece"), isa(E6S1199-measure, "measure"), agent(E6S1199-measure, A2S1199-ruler), isa(A2S1199-ruler, "A ruler"), object(E6S1199-measure, A8S1199-length), isa(A8S1199-length, "the length") -> purpose(A2S1199-ruler, E6S1199-measure).
english(barrons.rule2996, "The astronaut does not experience gravity while in outer space").
pretty(barrons.rule2996, "isa(not experience, 'not experience') -> not experience(Astronaut, Gravity, In).").
barrons.rule2996:: isa(E5S1201-experience, "not experience") -> agent(E5S1201-experience, A2S1201-astronaut), isa(A2S1201-astronaut, "The astronaut"), object(E5S1201-experience, A6S1201-gravity), isa(A6S1201-gravity, "gravity"), arg(E5S1201-experience, A8S1201-in), isa(A8S1201-in, "while in outer space").
english(barrons.rule2997, "The astronaut does not experience gravity while in outer space").
pretty(barrons.rule2997, "isa(Astronaut, 'The astronaut') -> not experience(Astronaut, Gravity, In).").
barrons.rule2997:: isa(A2S1201-astronaut, "The astronaut") -> isa(E5S1201-experience, "not experience"), agent(E5S1201-experience, A2S1201-astronaut), object(E5S1201-experience, A6S1201-gravity), isa(A6S1201-gravity, "gravity"), arg(E5S1201-experience, A8S1201-in), isa(A8S1201-in, "while in outer space").
english(barrons.rule2998, "The astronaut does not experience gravity while in outer space").
pretty(barrons.rule2998, "isa(Gravity, 'gravity') -> not experience(Astronaut, Gravity, In).").
barrons.rule2998:: isa(A6S1201-gravity, "gravity") -> isa(E5S1201-experience, "not experience"), agent(E5S1201-experience, A2S1201-astronaut), isa(A2S1201-astronaut, "The astronaut"), object(E5S1201-experience, A6S1201-gravity), arg(E5S1201-experience, A8S1201-in), isa(A8S1201-in, "while in outer space").
english(barrons.rule2999, "The astronaut does not experience gravity while in outer space").
pretty(barrons.rule2999, "isa(In, 'while in outer space') -> not experience(Astronaut, Gravity, In).").
barrons.rule2999:: isa(A8S1201-in, "while in outer space") -> isa(E5S1201-experience, "not experience"), agent(E5S1201-experience, A2S1201-astronaut), isa(A2S1201-astronaut, "The astronaut"), object(E5S1201-experience, A6S1201-gravity), isa(A6S1201-gravity, "gravity"), arg(E5S1201-experience, A8S1201-in).
