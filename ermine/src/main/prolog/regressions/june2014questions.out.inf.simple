english(june2014questions.out.rule1, "gravity causes rocks to roll downhill").
june2014questions.out.rule1:: agent(roll, rock), arg(roll, downhill) -> cause(gravity, roll).
english(june2014questions.out.rule1, "friction causes rocks to roll downhill").
june2014questions.out.rule1:: agent(roll, rock), arg(roll, downhill) -> cause(friction, roll).
english(june2014questions.out.rule1, "erosion causes rocks to roll downhill").
june2014questions.out.rule1:: agent(roll, rock), arg(roll, downhill) -> cause(erosion, roll).
english(june2014questions.out.rule1, "magnetism causes rocks to roll downhill").
june2014questions.out.rule1:: agent(roll, rock), arg(roll, downhill) -> cause(magnetism, roll).
english(june2014questions.out.rule1, "watching television is an example[watching television] of a good health habit").
june2014questions.out.rule1:: example(television, habit).
english(june2014questions.out.rule1, "smoking cigarettes is an example of a good health habit").
june2014questions.out.rule1:: example(cigarette, habit).
english(june2014questions.out.rule1, "eating candy is an example of a good health habit").
june2014questions.out.rule1:: example(eat, habit), object(eat, candy).
english(june2014questions.out.rule1, "exercising every day is an example of a good health habit").
june2014questions.out.rule1:: example(exercise, habit), arg(exercise, day).
english(june2014questions.out.rule1, "a decomposer is an organism[a decomposer] that hunts and eats animals").
june2014questions.out.rule1:: example(decomposer, organism), agent(hunt, organism), object(hunt, animal).
english(june2014questions.out.rule2, "a decomposer is an organism[a decomposer] that hunts and eats animals").
june2014questions.out.rule2:: example(decomposer, organism), agent(hunt, organism), object(hunt, animal), agent(eat, organism).
english(june2014questions.out.rule1, "a decomposer is an organism[a decomposer] that migrates for the winter").
june2014questions.out.rule1:: example(decomposer, organism), agent(migrate, organism), for(migrate, winter).
english(june2014questions.out.rule1, "a decomposer is an organism[a decomposer] that breaks down dead plants and animals").
june2014questions.out.rule1:: example(decomposer, organism), agent(break, organism).
english(june2014questions.out.rule1, "a decomposer is an organism[a decomposer] that uses water and sunlight to make food").
june2014questions.out.rule1:: example(decomposer, organism), agent(use, organism), object(use, water), arg(use, make).
english(june2014questions.out.rule2, "a decomposer is an organism[a decomposer] that uses water and sunlight to make food").
june2014questions.out.rule2:: example(decomposer, organism), agent(use, organism), object(use, water), arg(use, make), object(use, sunlight).
english(june2014questions.out.rule1, "decreasing the temperature is one way to change water from a liquid to a solid").
june2014questions.out.rule1:: object(change, water), from(change, liquid), to(change, solid) -> effect(decrease, change), object(decrease, temperature).
english(june2014questions.out.rule1, "increasing the temperature is one way to change water from a liquid to a solid").
june2014questions.out.rule1:: object(change, water), from(change, liquid), to(change, solid) -> effect(increase, change), object(increase, temperature).
english(june2014questions.out.rule1, "decreasing the mass is one way to change water from a liquid to a solid").
june2014questions.out.rule1:: object(change, water), from(change, liquid), to(change, solid) -> effect(decrease, change), object(decrease, mass).
english(june2014questions.out.rule1, "increasing the mass is one way to change water from a liquid to a solid").
june2014questions.out.rule1:: object(change, water), from(change, liquid), to(change, solid) -> effect(increase, change), object(increase, mass).
english(june2014questions.out.rule1, "A student drops a ball electricity causes the ball[a ball] to fall to the ground").
june2014questions.out.rule1:: agent(drop, student), object(drop, ball), agent(fall, ball), to(fall, ground) -> cause(electricity, fall).
english(june2014questions.out.rule1, "A student drops a ball friction causes the ball[a ball] to fall to the ground").
june2014questions.out.rule1:: agent(drop, student), object(drop, ball), agent(fall, ball), to(fall, ground) -> cause(friction, fall).
english(june2014questions.out.rule1, "A student drops a ball gravity causes the ball[a ball] to fall to the ground").
june2014questions.out.rule1:: agent(drop, student), object(drop, ball), agent(fall, ball), to(fall, ground) -> cause(gravity, fall).
english(june2014questions.out.rule1, "A student drops a ball magnetism causes the ball[a ball] to fall to the ground").
june2014questions.out.rule1:: agent(drop, student), object(drop, ball), agent(fall, ball), to(fall, ground) -> cause(magnetism, fall).
english(june2014questions.out.rule1, "electricity is the main source of energy for the water cycle").
june2014questions.out.rule1:: example(electricity, source).
english(june2014questions.out.rule1, "erosion is the main source of energy for the water cycle").
june2014questions.out.rule1:: example(erosion, source).
english(june2014questions.out.rule1, "gravity is the main source of energy for the water cycle").
june2014questions.out.rule1:: example(gravity, source).
english(june2014questions.out.rule1, "sunlight is the main source of energy for the water cycle").
june2014questions.out.rule1:: example(sunlight, source).
english(june2014questions.out.rule1, "a student should use a graduated cylinder to measure exactly 10 milliliters mL of water").
june2014questions.out.rule1:: agent(use, student), object(use, cylinder), agent(measure, student), object(measure, milliliter) -> effect(use, measure).
english(june2014questions.out.rule2, "a student should use a graduated cylinder to measure exactly 10 milliliters mL of water").
june2014questions.out.rule2:: agent(use, student), object(use, cylinder), agent(measure, student), object(measure, milliliter), object(measure, ml) -> effect(use, measure).
english(june2014questions.out.rule1, "a student should use pan balance to measure exactly 10 milliliters mL of water").
june2014questions.out.rule1:: agent(use, student), object(use, balance), agent(measure, student), object(measure, milliliter) -> effect(use, measure).
english(june2014questions.out.rule2, "a student should use pan balance to measure exactly 10 milliliters mL of water").
june2014questions.out.rule2:: agent(use, student), object(use, balance), agent(measure, student), object(measure, milliliter), object(measure, ml) -> effect(use, measure).
english(june2014questions.out.rule1, "a student should use a ruler to measure exactly 10 milliliters mL of water").
june2014questions.out.rule1:: agent(use, student), object(use, ruler), agent(measure, student), object(measure, milliliter) -> effect(use, measure).
english(june2014questions.out.rule2, "a student should use a ruler to measure exactly 10 milliliters mL of water").
june2014questions.out.rule2:: agent(use, student), object(use, ruler), agent(measure, student), object(measure, milliliter), object(measure, ml) -> effect(use, measure).
english(june2014questions.out.rule1, "a student should use a thermometer to measure exactly 10 milliliters mL of water").
june2014questions.out.rule1:: agent(use, student), object(use, thermometer), agent(measure, student), object(measure, milliliter) -> effect(use, measure).
english(june2014questions.out.rule2, "a student should use a thermometer to measure exactly 10 milliliters mL of water").
june2014questions.out.rule2:: agent(use, student), object(use, thermometer), agent(measure, student), object(measure, milliliter), object(measure, ml) -> effect(use, measure).
english(june2014questions.out.rule1, "reading is necessary for humans to maintain good health").
june2014questions.out.rule1:: agent(reading, human), agent(maintain, human), object(maintain, health) -> requirement(reading, maintain).
english(june2014questions.out.rule1, "resting is necessary for humans to maintain good health").
june2014questions.out.rule1:: agent(rest, human), agent(maintain, human), object(maintain, health) -> requirement(rest, maintain).
english(june2014questions.out.rule1, "green plants get the energy they[green plants] need to make food from air").
june2014questions.out.rule1:: agent(get, plant), object(get, energy), agent(make, plant), arg(make, food) -> effect(get, make).
english(june2014questions.out.rule1, "green plants get the energy they[green plants] need to make food from sunlight").
june2014questions.out.rule1:: agent(get, plant), object(get, energy), agent(make, plant), object(make, food), from(make, sunlight) -> effect(get, make).
english(june2014questions.out.rule1, "green plants get the energy they[green plants] need to make food from water").
june2014questions.out.rule1:: agent(get, plant), object(get, energy), agent(make, plant), arg(make, food) -> effect(get, make).
english(june2014questions.out.rule1, "green plants get the energy they[green plants] need to make food from soil").
june2014questions.out.rule1:: agent(get, plant), object(get, energy), agent(make, plant), arg(make, food) -> effect(get, make).
english(june2014questions.out.rule1, "when plants and animals die decomposers help return nutrients to the food chain").
june2014questions.out.rule1:: agent(return, decomposer), object(return, nutrient), to(return, chain) -> purpose(decomposer, return).
english(june2014questions.out.rule2, "when plants and animals die decomposers help return nutrients to the food chain").
june2014questions.out.rule2:: agent(return, decomposer), object(return, nutrient), to(return, chain), agent(die, plant) -> purpose(decomposer, return), when(return, die).
english(june2014questions.out.rule3, "when plants and animals die decomposers help return nutrients to the food chain").
june2014questions.out.rule3:: agent(return, decomposer), object(return, nutrient), to(return, chain), agent(die, plant), agent(die, animal) -> purpose(decomposer, return), when(return, die).
english(june2014questions.out.rule1, "when plants and animals die predators help return nutrients to the food chain").
june2014questions.out.rule1:: agent(return, predator), object(return, nutrient), to(return, chain) -> purpose(predator, return).
english(june2014questions.out.rule2, "when plants and animals die predators help return nutrients to the food chain").
june2014questions.out.rule2:: agent(return, predator), object(return, nutrient), to(return, chain), agent(die, plant) -> purpose(predator, return), when(return, die).
english(june2014questions.out.rule3, "when plants and animals die predators help return nutrients to the food chain").
june2014questions.out.rule3:: agent(return, predator), object(return, nutrient), to(return, chain), agent(die, plant), agent(die, animal) -> purpose(predator, return), when(return, die).
english(june2014questions.out.rule1, "when plants and animals die prey help return nutrients to the food chain").
june2014questions.out.rule1:: agent(die, plant) -> when(prey, die), agent(prey, plant), object(prey, help).
english(june2014questions.out.rule2, "when plants and animals die prey help return nutrients to the food chain").
june2014questions.out.rule2:: agent(die, plant), agent(die, animal) -> when(prey, die), agent(prey, plant), object(prey, help), agent(prey, animal).
english(june2014questions.out.rule1, "when plants and animals die producers help return nutrients to the food chain").
june2014questions.out.rule1:: agent(return, producer), object(return, nutrient), to(return, chain) -> purpose(producer, return).
english(june2014questions.out.rule2, "when plants and animals die producers help return nutrients to the food chain").
june2014questions.out.rule2:: agent(return, producer), object(return, nutrient), to(return, chain), agent(die, plant) -> purpose(producer, return), when(return, die).
english(june2014questions.out.rule3, "when plants and animals die producers help return nutrients to the food chain").
june2014questions.out.rule3:: agent(return, producer), object(return, nutrient), to(return, chain), agent(die, plant), agent(die, animal) -> purpose(producer, return), when(return, die).
english(june2014questions.out.rule1, "a bat flying at night is preparing for a seasonal change in the environment").
june2014questions.out.rule1:: agent(prepare, bat), for(prepare, change) -> effect(fly, prepare), agent(fly, bat), at(fly, night).
english(june2014questions.out.rule1, "an owl eating a mouse is preparing for a seasonal change in the environment").
june2014questions.out.rule1:: agent(prepare, owl), for(prepare, change) -> effect(eat, prepare), agent(eat, owl), object(eat, mouse).
english(june2014questions.out.rule1, "a squirrel storing nuts is preparing for a seasonal change in the environment").
june2014questions.out.rule1:: agent(prepare, squirrel), for(prepare, change) -> effect(store, prepare), agent(store, squirrel), object(store, nut).
english(june2014questions.out.rule1, "mechanical energy is being used when a person pushes a wooden block across the floor").
june2014questions.out.rule1:: agent(use, person), object(use, energy), agent(push, person), object(push, block), across(push, floor) -> when(use, push).
english(june2014questions.out.rule1, "magnetic energy is being used when a person pushes a wooden block across the floor").
june2014questions.out.rule1:: agent(use, person), object(use, energy), agent(push, person), object(push, block), across(push, floor) -> when(use, push).
english(june2014questions.out.rule1, "sound is being used when a person pushes a wooden block across the floor").
june2014questions.out.rule1:: agent(use, person), object(use, sound), agent(push, person), object(push, block), across(push, floor) -> when(use, push).
english(june2014questions.out.rule1, "electrical energy is being used when a person pushes a wooden block across the floor").
june2014questions.out.rule1:: agent(use, person), object(use, energy), agent(push, person), object(push, block), across(push, floor) -> when(use, push).
english(june2014questions.out.rule1, "since green plants make their[green plants] own food they[green plants] are called predators").
june2014questions.out.rule1:: agent(make, plant), object(make, food) -> example(make, predator).
english(june2014questions.out.rule1, "since green plants make their[green plants] own food they[green plants] are called decomposers").
june2014questions.out.rule1:: agent(make, plant), object(make, food) -> example(make, decomposer).
english(june2014questions.out.rule1, "since green plants make their[green plants] own food they[green plants] are called producers").
june2014questions.out.rule1:: agent(make, plant), object(make, food) -> example(make, producer).
english(june2014questions.out.rule1, "breathing most often has a harmful effect on the environment").
june2014questions.out.rule1:: on(effect, environment) -> effect(breathe, effect).
english(june2014questions.out.rule1, "growing most often has a harmful effect on the environment").
june2014questions.out.rule1:: agent(grow, effect).
english(june2014questions.out.rule1, "planting most often has a harmful effect on the environment").
june2014questions.out.rule1:: on(effect, environment) -> effect(plant, effect).
english(june2014questions.out.rule1, "polluting most often has a harmful effect on the environment").
june2014questions.out.rule1:: on(effect, environment) -> effect(pollute, effect).
english(june2014questions.out.rule1, "A dog opens its mouth and lets its[its mouth] tongue hang out A human 's body produces sweat these are two ways[these] that organisms may adjust to cold temperatures").
june2014questions.out.rule1:: agent(open, dog), object(open, mouth), agent(produce, body), object(produce, sweat), agent(adjust, organism), object(adjust, these), to(adjust, temperature) -> example(these, adjust).
english(june2014questions.out.rule2, "A dog opens its mouth and lets its[its mouth] tongue hang out A human 's body produces sweat these are two ways[these] that organisms may adjust to cold temperatures").
june2014questions.out.rule2:: agent(open, dog), object(open, mouth), agent(produce, body), object(produce, sweat), agent(adjust, organism), object(adjust, these), to(adjust, temperature), object(adjust, way) -> example(these, adjust).
english(june2014questions.out.rule1, "A dog opens its mouth and lets its[its mouth] tongue hang out A human 's body produces sweat these are two ways[these] that organisms may adjust to a shortage of food").
june2014questions.out.rule1:: agent(open, dog), object(open, mouth), agent(produce, body), arg(produce, sweat), agent(adjust, organism), object(adjust, these), to(adjust, shortage) -> example(these, adjust).
english(june2014questions.out.rule2, "A dog opens its mouth and lets its[its mouth] tongue hang out A human 's body produces sweat these are two ways[these] that organisms may adjust to a shortage of food").
june2014questions.out.rule2:: agent(open, dog), object(open, mouth), agent(produce, body), arg(produce, sweat), agent(adjust, organism), object(adjust, these), to(adjust, shortage), object(adjust, way) -> example(these, adjust).
english(june2014questions.out.rule1, "A student is growing some plants for an experiment She notices small white spots on the leaves she[She] should use a thermometer to get a better look at the spots[small white spots]").
june2014questions.out.rule1:: agent(grow, student), object(grow, plant), for(grow, experiment), agent(notice, she), object(notice, spot), on(notice, leaf), agent(use, she), object(use, thermometer), agent(get, she), object(get, look) -> effect(use, get).
english(june2014questions.out.rule1, "A student is growing some plants for an experiment She notices small white spots on the leaves she[She] should use a hand lens to get a better look at the spots[small white spots]").
june2014questions.out.rule1:: agent(grow, student), object(grow, plant), for(grow, experiment), agent(notice, she), object(notice, spot), on(notice, leaf), agent(use, she), object(use, lens), agent(get, she), object(get, look) -> effect(use, get).
english(june2014questions.out.rule1, "A student is growing some plants for an experiment She notices small white spots on the leaves she[She] should use a graduated cylinder to get a better look at the spots[small white spots]").
june2014questions.out.rule1:: agent(grow, student), object(grow, plant), for(grow, experiment), agent(notice, she), object(notice, spot), on(notice, leaf), agent(use, she), object(use, cylinder), agent(get, she), arg(get, look) -> effect(use, get).
english(june2014questions.out.rule1, "A student is growing some plants for an experiment She notices small white spots on the leaves she[She] should use a balance to get a better look at the spots[small white spots]").
june2014questions.out.rule1:: agent(grow, student), object(grow, plant), for(grow, experiment), agent(notice, she), object(notice, spot), on(notice, leaf), agent(use, she), object(use, balance), agent(get, she), object(get, look) -> effect(use, get).
english(june2014questions.out.rule1, "A fox grows thicker fur as a season changes this adaptation helps the fox[A fox] to find food").
june2014questions.out.rule1:: agent(grow, fox), object(grow, fur), as(grow, change), agent(adaptation, fox) -> purpose(adaptation, find), agent(find, fox), object(find, food).
english(june2014questions.out.rule1, "A fox grows thicker fur as a season changes this adaptation helps the fox[A fox] to keep warmer").
june2014questions.out.rule1:: agent(grow, fox), object(grow, fur), as(grow, change), agent(adaptation, fox) -> purpose(adaptation, keep), agent(keep, fox), arg(keep, warmer).
english(june2014questions.out.rule1, "A fox grows thicker fur as a season changes this adaptation helps the fox[A fox] to grow stronger").
june2014questions.out.rule1:: agent(grow, fox), object(grow, fur), as(grow, change), agent(adaptation, fox) -> purpose(adaptation, grow), agent(grow, fox), arg(grow, stronger).
english(june2014questions.out.rule1, "A fox grows thicker fur as a season changes this adaptation helps the fox[A fox] to escape from predators").
june2014questions.out.rule1:: agent(grow, fox), object(grow, fur), as(grow, change), agent(adaptation, fox) -> purpose(adaptation, escape), agent(escape, fox), object(escape, from).
english(june2014questions.out.rule1, "hibernation often helps an animal attract a mate").
june2014questions.out.rule1:: agent(hibernation, animal), agent(attract, animal), object(attract, mate) -> purpose(hibernation, attract).
english(june2014questions.out.rule1, "camouflage often helps an animal attract a mate").
june2014questions.out.rule1:: agent(attract, animal), object(attract, mate) -> purpose(camouflage, attract).
english(june2014questions.out.rule1, "coloration often helps an animal attract a mate").
june2014questions.out.rule1:: agent(coloration, animal), agent(attract, animal), object(attract, mate) -> purpose(coloration, attract).
english(june2014questions.out.rule1, "migration often helps an animal attract a mate").
june2014questions.out.rule1:: agent(migration, animal), agent(attract, animal), object(attract, mate) -> purpose(migration, attract).
english(june2014questions.out.rule1, "animals get energy for growth and repair from soil").
june2014questions.out.rule1:: agent(get, animal), object(get, energy), for(get, growth), for(get, repair).
english(june2014questions.out.rule1, "animals get energy for growth and repair from food").
june2014questions.out.rule1:: agent(get, animal), object(get, energy), for(get, growth), for(get, repair).
english(june2014questions.out.rule1, "animals get energy for growth and repair from water").
june2014questions.out.rule1:: agent(get, animal), object(get, energy), for(get, growth), for(get, repair).
english(june2014questions.out.rule1, "animals get energy for growth and repair from air").
june2014questions.out.rule1:: agent(get, animal), object(get, energy), for(get, growth), for(get, repair).
english(june2014questions.out.rule1, "A car skids along the road and smoke appears to be coming from under the tires the heat that produces the smoke is caused by magnetism").
june2014questions.out.rule1:: agent(appear, skid), agent(produce, heat), object(produce, smoke) -> cause(magnetism, produce).
english(june2014questions.out.rule1, "A car skids along the road and smoke appears to be coming from under the tires the heat that produces the smoke is caused by sound").
june2014questions.out.rule1:: agent(appear, skid), agent(produce, heat), object(produce, smoke) -> cause(sound, produce).
english(june2014questions.out.rule1, "A car skids along the road and smoke appears to be coming from under the tires the heat that produces the smoke is caused by light").
june2014questions.out.rule1:: agent(appear, skid), agent(produce, heat), object(produce, smoke) -> cause(light, produce).
english(june2014questions.out.rule1, "A car skids along the road and smoke appears to be coming from under the tires the heat that produces the smoke is caused by friction").
june2014questions.out.rule1:: agent(appear, skid), agent(produce, heat), object(produce, smoke) -> cause(friction, produce).
