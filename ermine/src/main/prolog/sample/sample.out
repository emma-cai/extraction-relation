% ("Some animals"/?x "grow" "fur" [ "in winter" ] )	"to"/EFFECT	("Some animals"/?x "keep" "" [ "warm" ] )

@prefix  rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix  rel: <http://aristo.allenai.org/rel/> .
@prefix pred: <http://aristo.allenai.org/pred/> .

# Named toplevel resources (4)

<http://aristo.allenai.org/id#1.2>
	a <entity> ;
	pred:isa "\"Some animals\"" .

<http://aristo.allenai.org/id#1.3>
	a <event> ;
	pred:agent <http://aristo.allenai.org/id#1.2> ;
	pred:in <http://aristo.allenai.org/id#1.6> ;
	pred:isa "\"grow\"" ;
	pred:object <http://aristo.allenai.org/id#1.4> ;
	rel:effect <http://aristo.allenai.org/id#1.8> .

<http://aristo.allenai.org/id#1.4>
	a <entity> ;
	pred:isa "\"fur\"" .

<http://aristo.allenai.org/id#1.6>
	pred:isa "\"winter\"" .

@prefix  rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix pred: <http://aristo.allenai.org/pred/> .

# Named toplevel resources (3)

<http://aristo.allenai.org/id#1.2>
	a <entity> ;
	pred:isa "\"Some animals\"" .

<http://aristo.allenai.org/id#1.8>
	a <event> ;
	pred:agent <http://aristo.allenai.org/id#1.2> ;
	pred:arg <http://aristo.allenai.org/id#1.9> ;
	pred:isa "\"keep\"" .

<http://aristo.allenai.org/id#1.9>
	pred:isa "\"warm\"" .
english(rule1, "Some animals grow fur in winter to keep warm").
pretty(rule1, "grow('Some animals', 'fur', in('winter')) -HAS_EFFECT-> keep('Some animals', 'warm').").
rule1:: isa(E3S1-grow, "grow"), agent(E3S1-grow, A2S1-animal), isa(A2S1-animal, "Some animals"), object(E3S1-grow, A4S1-fur), isa(A4S1-fur, "fur"), in(E3S1-grow, A6S1-winter), isa(A6S1-winter, "winter") -> effect(E3S1-grow, E8S1-keep), isa(E8S1-keep, "keep"), agent(E8S1-keep, A2S1-animal), arg(E8S1-keep, A9S1-warm), isa(A9S1-warm, "warm").
english(rule2, "Some animals grow fur in winter to keep warm").
pretty(rule2, "keep('Some animals', 'warm') -EFFECT_OF-> grow('Some animals', 'fur', in('winter')).").
rule2:: isa(E8S1-keep, "keep"), agent(E8S1-keep, A2S1-animal), isa(A2S1-animal, "Some animals"), arg(E8S1-keep, A9S1-warm), isa(A9S1-warm, "warm") -> effect(E3S1-grow, E8S1-keep), isa(E3S1-grow, "grow"), agent(E3S1-grow, A2S1-animal), object(E3S1-grow, A4S1-fur), isa(A4S1-fur, "fur"), in(E3S1-grow, A6S1-winter), isa(A6S1-winter, "winter").
{"class":"ExtractionRule", "antecedents": [ {"class":"ExtractionTuple", "subject": {"class":"NounPhrase", "string": [ {"token":"id:1.1", "text":"Some"},  {"token":"id:1.2", "text":"animals"} ], "isInferred":false, "coreferences": [ {"class":"Coreference", "label":"x", "sourceTokens": [ {"token":"id:1.1", "text":"Some"},  {"token":"id:1.2", "text":"animals"} ]} ]}, "verbPhrase": [ {"token":"id:1.3", "text":"grow"} ], "directObject": {"class":"NounPhrase", "string": [ {"token":"id:1.4", "text":"fur"} ], "isInferred":false, "coreferences": []}, "extraPhrases": [ [ {"token":"id:1.5", "text":"in"},  {"token":"id:1.6", "text":"winter"} ] ]} ], "relation": {"class":"Relation", "string": [ {"token":"id:1.7", "text":"to"} ], "normalizedRelation":"EFFECT"}, "consequents": [ {"class":"ExtractionTuple", "subject": {"class":"NounPhrase", "string": [], "isInferred":true, "coreferences": [ {"class":"Coreference", "label":"x", "sourceTokens": [ {"token":"id:1.1", "text":"Some"},  {"token":"id:1.2", "text":"animals"} ]} ]}, "verbPhrase": [ {"token":"id:1.8", "text":"keep"} ], "extraPhrases": [ [ {"token":"id:1.9", "text":"warm"} ] ]} ], "confidence":1.0}

