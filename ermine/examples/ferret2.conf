// Ferret-in-scala imlementation.
// This pipeline runs on the ie-target text dataset in src/main/prolog/regressions, and outputs to
// src/test/data.

// Base of our test / output directories, relative to app_home (set when running Ermine out of the
// universal staging directory).
baseDir = "file:///"${app_home}"/../../../../src/test/data"
regressionsBase = "file:///"${app_home}"/../../../../src/main/prolog/regressions"
ermine {
  pipeline {
    name: "Ferret2"
    processors = [
    // Main pipeline, processing to inference rules.
    {
      // Use the pre-parsed output in our prolog regressions directory.
      inputs: [ ${regressionsBase}"/ie-target.txt.rnn.ttl" ]
      name = "ClearSrl"
      outputs: [ "clear" ]
    },{
      name = "StanfordFixProcessor"
      outputs: [ "fixes" ]
    },{
      name = "StanfordExtractor"
      outputs: [ "relations" ]
    },{
      name = "ExtractionDenominalize"
      outputs: [ "denom" ]
    },{
      name = "ExtractionRoles"
      outputs: [ "roles" ]
    },{
      name = "ExtractionLabels"
      outputs: [ "labels" ]
    },{
      name = "InferenceRules"
      outputs: [ ${baseDir}"/ie-target.txt.rnn.ttl.out.inf" ]
    },
    // Secondary pipeline, processing diffs for debugging.
    {
      name = "TurtleGraphDiff"
      inputs: [ "clear", "fixes" ]
      outputs: [ ${baseDir}"/ie-target.txt.rnn.ttl.out.fix" ]
    },{
      name = "TurtleGraphDiff"
      inputs: [ "fixes", "relations" ]
      outputs: [ ${baseDir}"/ie-target.txt.rnn.ttl.out.rel" ]
    },{
      name = "TurtleGraphDiff"
      inputs: [ "relations", "denom" ]
      outputs: [ ${baseDir}"/ie-target.txt.rnn.ttl.out.denom" ]
    },{
      name = "TurtleGraphDiff"
      inputs: [ "denom", "roles" ]
      outputs: [ ${baseDir}"/ie-target.txt.rnn.ttl.out.pred" ]
    },{
      name = "TurtleGraphDiff"
      inputs: [ "roles", "labels" ]
      outputs: [ ${baseDir}"/ie-target.txt.rnn.ttl.label" ]
    }]
  }
}
