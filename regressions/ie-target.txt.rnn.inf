% ("our bodies"/?x "sweat" "perspiration" [ "In the hot weather" ] )	""/EFFECT	("our bodies"/?x "bring" "water" [ "to our[our] skin" ] )
english(rule1, "In the hot weather our bodies sweat perspiration bringing water to our[our] skin").
rule1:: isa(E7, "sweat"), isa(E6, "our bodies"), isa(E9, "perspiration"), agent(E7, E6), object(E7, E9), in(E7, "the hot weather") -> effect(E7, E12), isa(E12, "bring"), isa(E13, "water"), agent(E12, E6), object(E12, E13), to(E12, "our[our] skin").
english(rule2, "In the hot weather our bodies sweat perspiration bringing water to our[our] skin").
rule2:: isa(E12, "bring"), isa(E6, "our bodies"), isa(E13, "water"), agent(E12, E6), object(E12, E13), to(E12, "our[our] skin") -> effect(E7, E12), isa(E7, "sweat"), isa(E9, "perspiration"), agent(E7, E6), object(E7, E9), in(E7, "the hot weather").

% ("some animals"/?x "store" "food")	"by"/ENABLE	("some animals"/?x "prepare" "" [ "for the long winters" ] )
english(rule3, "When some animals prepare for the long winters by storing food and going dormant it is called hibernation").
rule3:: isa(E10, "store"), isa(E3, "some animals"), isa(E11, "food"), agent(E10, E3), object(E10, E11) -> enable(E10, E4), isa(E4, "prepare"), agent(E4, E3), for(E4, "the long winters").
english(rule4, "When some animals prepare for the long winters by storing food and going dormant it is called hibernation").
rule4:: isa(E4, "prepare"), isa(E3, "some animals"), agent(E4, E3), for(E4, "the long winters") -> enable(E10, E4), isa(E10, "store"), isa(E11, "food"), agent(E10, E3), object(E10, E11).

% ("some animals" "prepare" "" [ "for the long winters" ] )	"is called"/EXAMPLE	"hibernation"
english(rule5, "When some animals prepare for the long winters by storing food and going dormant it is called hibernation").
rule5:: isa(E4, "prepare"), isa(E3, "some animals"), agent(E4, E3), for(E4, "the long winters") -> example(E4, E18), isa(E18, "hibernation").
english(rule6, "When some animals prepare for the long winters by storing food and going dormant it is called hibernation").
rule6:: isa(E18, "hibernation") -> example(E4, E18), isa(E4, "prepare"), isa(E3, "some animals"), agent(E4, E3), for(E4, "the long winters").

% "A hand lens"/?x	"is used"/PURPOSE	("A hand lens"/?x "view" "objects" [ "in more detail" ] )
english(rule7, "A hand lens is used to view objects in more detail").
rule7:: isa(E3, "A hand lens") -> purpose(E3, E7), isa(E7, "view"), isa(E8, "objects"), agent(E7, E3), object(E7, E8), in(E7, "more detail").
english(rule8, "A hand lens is used to view objects in more detail").
rule8:: isa(E7, "view"), isa(E3, "A hand lens"), isa(E8, "objects"), agent(E7, E3), object(E7, E8), in(E7, "more detail") -> purpose(E3, E7), .

% ("Freezing"/?x "remove" "heat")	"by"/ENABLE	("Freezing"/?x "change" "water" [ "from its[A hand lens] liquid state", "to its[its liquid state] solid state" ] )
english(rule9, "Freezing involves changing water from its[A hand lens] liquid state to its[its liquid state] solid state ice by the removal of heat").
rule9:: isa(E18, "remove"), isa(E1, "Freezing"), isa(E20, "heat"), agent(E18, E1), object(E18, E20) -> enable(E18, E3), isa(E3, "change"), isa(E4, "water"), agent(E3, E1), object(E3, E4), from(E3, "its[A hand lens] liquid state"), to(E3, "its[its liquid state] solid state").
english(rule10, "Freezing involves changing water from its[A hand lens] liquid state to its[its liquid state] solid state ice by the removal of heat").
rule10:: isa(E3, "change"), isa(E1, "Freezing"), isa(E4, "water"), agent(E3, E1), object(E3, E4), from(E3, "its[A hand lens] liquid state"), to(E3, "its[its liquid state] solid state") -> enable(E18, E3), isa(E18, "remove"), isa(E20, "heat"), agent(E18, E1), object(E18, E20).

% ("Animals" "not make" "their[some animals] own food")	"so"/EFFECT	("some animals" "eat" "")
english(rule11, "Animals can not make their[some animals] own food so they[some animals] must eat to get nutrients").
rule11:: isa(E4, "not make"), isa(E1, "Animals"), isa(E7, "their[some animals] own food"), agent(E4, E1), object(E4, E7) -> effect(E4, E11), isa(E11, "eat"), isa(E3, "some animals"), agent(E11, E3).
english(rule12, "Animals can not make their[some animals] own food so they[some animals] must eat to get nutrients").
rule12:: isa(E11, "eat"), isa(E3, "some animals"), agent(E11, E3) -> effect(E4, E11), isa(E4, "not make"), isa(E1, "Animals"), isa(E7, "their[some animals] own food"), agent(E4, E1), object(E4, E7).

% ("some animals"/?x "eat" "")	"to"/REQUIREMENT	("some animals"/?x "get" "nutrients")
english(rule13, "Animals can not make their[some animals] own food so they[some animals] must eat to get nutrients").
rule13:: isa(E11, "eat"), isa(E3, "some animals"), agent(E11, E3) -> requirement(E11, E13), isa(E13, "get"), isa(E14, "nutrients"), agent(E13, E3), object(E13, E14).
english(rule14, "Animals can not make their[some animals] own food so they[some animals] must eat to get nutrients").
rule14:: isa(E13, "get"), isa(E3, "some animals"), isa(E14, "nutrients"), agent(E13, E3), object(E13, E14) -> requirement(E11, E13), isa(E11, "eat"), agent(E11, E3).

% ("The friction between the two surfaces" "convert" "kinetic energy" [ "into heat" ] )
english(rule15, "The friction between the two surfaces converts kinetic energy into heat").
rule15:: isa(E7, "convert") -> isa(E2, "The friction between the two surfaces"), isa(E9, "kinetic energy"), agent(E7, E2), object(E7, E9), into(E7, "heat").
english(rule16, "The friction between the two surfaces converts kinetic energy into heat").
rule16:: isa(E2, "The friction between the two surfaces") -> isa(E7, "convert"), isa(E9, "kinetic energy"), agent(E7, E2), object(E7, E9), into(E7, "heat").
english(rule17, "The friction between the two surfaces converts kinetic energy into heat").
rule17:: isa(E9, "kinetic energy") -> isa(E7, "convert"), isa(E2, "The friction between the two surfaces"), agent(E7, E2), object(E7, E9), into(E7, "heat").

% ("" "get" "rest")	"part of"/PART	("" "live" "a healthy life")
english(rule18, "Getting enough rest is also an important part of living a healthy life").
rule18:: isa(E1, "get"), isa(E3, "rest"), object(E1, E3) -> part(E1, E10), isa(E10, "live"), isa(E13, "a healthy life"), object(E10, E13).
english(rule19, "Getting enough rest is also an important part of living a healthy life").
rule19:: isa(E10, "live"), isa(E13, "a healthy life"), object(E10, E13) -> part(E1, E10), isa(E1, "get"), isa(E3, "rest"), object(E1, E3).

% "Decomposers"	"are"/EXAMPLE	("living things" "break down" "dead organisms")
english(rule20, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
rule20:: isa(E1, "Decomposers") -> example(E1, E6), isa(E6, "break down"), isa(E4, "living things"), isa(E9, "dead organisms"), agent(E6, E4), object(E6, E9), isa(E1, E4).
english(rule21, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
rule21:: isa(E6, "break down"), isa(E4, "living things"), isa(E9, "dead organisms"), agent(E6, E4), object(E6, E9) -> example(E1, E6), isa(E1, "Decomposers"), isa(E1, E4).

% "Decomposers"	"are"/EXAMPLE	("living things" "recycle" "their[dead organisms] nutrients" [ "into the soil" ] )
english(rule22, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
rule22:: isa(E1, "Decomposers") -> example(E1, E11), isa(E11, "recycle"), isa(E4, "living things"), isa(E13, "their[dead organisms] nutrients"), agent(E11, E4), object(E11, E13), into(E11, "the soil"), isa(E1, E4).
english(rule23, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
rule23:: isa(E11, "recycle"), isa(E4, "living things"), isa(E13, "their[dead organisms] nutrients"), agent(E11, E4), object(E11, E13), into(E11, "the soil") -> example(E1, E11), isa(E1, "Decomposers"), isa(E1, E4).

% "Decomposers"	"are"/EXAMPLE	"living things"
english(rule24, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
rule24:: isa(E1, "Decomposers") -> example(E1, E4), isa(E4, "living things").
english(rule25, "Decomposers are living things that break down dead organisms and recycle their[dead organisms] nutrients into the soil").
rule25:: isa(E4, "living things") -> example(E1, E4), isa(E1, "Decomposers").

% "Gravity"	"is"/EXAMPLE	("the force" "pull" "an object toward the center of the Earth")
english(rule26, "Gravity is the force that pulls an object toward the center of the Earth").
rule26:: isa(E1, "Gravity") -> example(E1, E6), isa(E6, "pull"), isa(E4, "the force"), isa(E8, "an object toward the center of the Earth"), agent(E6, E4), object(E6, E8), isa(E1, E4).
english(rule27, "Gravity is the force that pulls an object toward the center of the Earth").
rule27:: isa(E6, "pull"), isa(E4, "the force"), isa(E8, "an object toward the center of the Earth"), agent(E6, E4), object(E6, E8) -> example(E1, E6), isa(E1, "Gravity"), isa(E1, E4).

% "Gravity"	"is"/EXAMPLE	"the force"
english(rule28, "Gravity is the force that pulls an object toward the center of the Earth").
rule28:: isa(E1, "Gravity") -> example(E1, E4), isa(E4, "the force").
english(rule29, "Gravity is the force that pulls an object toward the center of the Earth").
rule29:: isa(E4, "the force") -> example(E1, E4), isa(E1, "Gravity").

% "sweat"	"is way"/EXAMPLE	("an organism" "adjust" "sweat" [ "to hot temperatures" ] )
english(rule30, "A human 's body produces sweat is a way that an organism may adjust to hot temperatures").
rule30:: isa(E6, "sweat") -> example(E6, E14), isa(E14, "adjust"), isa(E12, "an organism"), agent(E14, E12), object(E14, E6), to(E14, "hot temperatures").
english(rule31, "A human 's body produces sweat is a way that an organism may adjust to hot temperatures").
rule31:: isa(E14, "adjust"), isa(E12, "an organism"), isa(E6, "sweat"), agent(E14, E12), object(E14, E6), to(E14, "hot temperatures") -> example(E6, E14), .

% "sweat"	"is way"/EXAMPLE	("an organism" "adjust" "a way" [ "to hot temperatures" ] )
english(rule32, "A human 's body produces sweat is a way that an organism may adjust to hot temperatures").
rule32:: isa(E6, "sweat") -> example(E6, E14), isa(E14, "adjust"), isa(E12, "an organism"), isa(E9, "a way"), agent(E14, E12), object(E14, E9), to(E14, "hot temperatures").
english(rule33, "A human 's body produces sweat is a way that an organism may adjust to hot temperatures").
rule33:: isa(E14, "adjust"), isa(E12, "an organism"), isa(E9, "a way"), agent(E14, E12), object(E14, E9), to(E14, "hot temperatures") -> example(E6, E14), isa(E6, "sweat").

% ("A squirrel"/?x "store" "nuts")	""/EFFECT	("A squirrel"/?x "prepare" "" [ "for a seasonal change in the environment" ] )
english(rule34, "A squirrel storing nuts is preparing for a seasonal change in the environment").
rule34:: isa(E3, "store"), isa(E2, "A squirrel"), isa(E4, "nuts"), agent(E3, E2), object(E3, E4) -> effect(E3, E6), isa(E6, "prepare"), agent(E6, E2), for(E6, "a seasonal change in the environment").
english(rule35, "A squirrel storing nuts is preparing for a seasonal change in the environment").
rule35:: isa(E6, "prepare"), isa(E2, "A squirrel"), agent(E6, E2), for(E6, "a seasonal change in the environment") -> effect(E3, E6), isa(E3, "store"), isa(E4, "nuts"), agent(E3, E2), object(E3, E4).

% ("A student"/?x "use" "a hand lens")	"to"/EFFECT	("A student"/?x "get" "" [ "a better look at the spots" ] )
english(rule36, "A student should use a hand lens to get a better look at the spots").
rule36:: isa(E4, "use"), isa(E2, "A student"), isa(E7, "a hand lens"), agent(E4, E2), object(E4, E7) -> effect(E4, E9), isa(E9, "get"), agent(E9, E2), arg(E9, "a better look at the spots").
english(rule37, "A student should use a hand lens to get a better look at the spots").
rule37:: isa(E9, "get"), isa(E2, "A student"), agent(E9, E2), arg(E9, "a better look at the spots") -> effect(E4, E9), isa(E4, "use"), isa(E7, "a hand lens"), agent(E4, E2), object(E4, E7).

% ("" "decrease" "the temperature")	"is way"/EFFECT	("" "change" "water" [ "from a liquid", "to a solid" ] )
english(rule38, "Decreasing the temperature is one way to change water from a liquid to a solid").
rule38:: isa(E1, "decrease"), isa(E3, "the temperature"), object(E1, E3) -> effect(E1, E8), isa(E8, "change"), isa(E9, "water"), object(E8, E9), from(E8, "a liquid"), to(E8, "a solid").
english(rule39, "Decreasing the temperature is one way to change water from a liquid to a solid").
rule39:: isa(E8, "change"), isa(E9, "water"), object(E8, E9), from(E8, "a liquid"), to(E8, "a solid") -> effect(E1, E8), isa(E1, "decrease"), isa(E3, "the temperature"), object(E1, E3).

% ("Animals" "get" "energy" [ "for growth from food", "for growth from food" ] )
english(rule40, "Animals get energy for growth and repair from food").
rule40:: isa(E2, "get") -> isa(E1, "Animals"), isa(E3, "energy"), agent(E2, E1), object(E2, E3), for(E2, "growth from food").
english(rule41, "Animals get energy for growth and repair from food").
rule41:: isa(E1, "Animals") -> isa(E2, "get"), isa(E3, "energy"), agent(E2, E1), object(E2, E3), for(E2, "growth from food").
english(rule42, "Animals get energy for growth and repair from food").
rule42:: isa(E3, "energy") -> isa(E2, "get"), isa(E1, "Animals"), agent(E2, E1), object(E2, E3), for(E2, "growth from food").

% "friction"	"caused"/CAUSE	("The heat" "produce" "the smoke")
english(rule43, "The heat that produces the smoke is caused by friction").
rule43:: isa(E10, "friction") -> cause(E10, E4), isa(E4, "produce"), isa(E2, "The heat"), isa(E6, "the smoke"), agent(E4, E2), object(E4, E6).
english(rule44, "The heat that produces the smoke is caused by friction").
rule44:: isa(E4, "produce"), isa(E2, "The heat"), isa(E6, "the smoke"), agent(E4, E2), object(E4, E6) -> cause(E10, E4), isa(E10, "friction").

% ("humans"/?x "rest" "")	"necessary"/REQUIREMENT	("humans"/?x "maintain" "good health")
english(rule45, "Resting is necessary for humans to maintain good health").
rule45:: isa(E1, "rest"), isa(E5, "humans"), agent(E1, E5) -> requirement(E1, E7), isa(E7, "maintain"), isa(E9, "good health"), agent(E7, E5), object(E7, E9).
english(rule46, "Resting is necessary for humans to maintain good health").
rule46:: isa(E7, "maintain"), isa(E5, "humans"), isa(E9, "good health"), agent(E7, E5), object(E7, E9) -> requirement(E1, E7), isa(E1, "rest"), agent(E1, E5).

% ("A student"/?x "use" "a graduated cylinder")	"to"/EFFECT	("A student"/?x "measure" "10 milliliters of water")
english(rule47, "A student should use a graduated cylinder to measure exactly 10 milliliters mL of water").
rule47:: isa(E4, "use"), isa(E2, "A student"), isa(E7, "a graduated cylinder"), agent(E4, E2), object(E4, E7) -> effect(E4, E9), isa(E9, "measure"), isa(E12, "10 milliliters of water"), agent(E9, E2), object(E9, E12).
english(rule48, "A student should use a graduated cylinder to measure exactly 10 milliliters mL of water").
rule48:: isa(E9, "measure"), isa(E2, "A student"), isa(E12, "10 milliliters of water"), agent(E9, E2), object(E9, E12) -> effect(E4, E9), isa(E4, "use"), isa(E7, "a graduated cylinder"), agent(E4, E2), object(E4, E7).

% ("A student"/?x "use" "a graduated cylinder")	"to"/EFFECT	("A student"/?x "measure" "mL")
english(rule49, "A student should use a graduated cylinder to measure exactly 10 milliliters mL of water").
rule49:: isa(E4, "use"), isa(E2, "A student"), isa(E7, "a graduated cylinder"), agent(E4, E2), object(E4, E7) -> effect(E4, E9), isa(E9, "measure"), isa(E14, "mL"), agent(E9, E2), object(E9, E14).
english(rule50, "A student should use a graduated cylinder to measure exactly 10 milliliters mL of water").
rule50:: isa(E9, "measure"), isa(E2, "A student"), isa(E14, "mL"), agent(E9, E2), object(E9, E14) -> effect(E4, E9), isa(E4, "use"), isa(E7, "a graduated cylinder"), agent(E4, E2), object(E4, E7).

% "The white fur of an arctic fox blends"	"is called"/EXAMPLE	"camouflage"
english(rule51, "The white fur of an arctic fox blends in with the snow is called camouflage").
rule51:: isa(E3, "The white fur of an arctic fox blends") -> example(E3, E15), isa(E15, "camouflage").
english(rule52, "The white fur of an arctic fox blends in with the snow is called camouflage").
rule52:: isa(E15, "camouflage") -> example(E3, E15), isa(E3, "The white fur of an arctic fox blends").

% "decomposers"	"help"/PURPOSE	("decomposers" "return" "nutrients" [ "to the food chain" ] )
english(rule53, "When plants and animals die decomposers help return nutrients to the food chain").
rule53:: isa(E7, "decomposers") -> purpose(E7, E9), isa(E9, "return"), isa(E10, "nutrients"), agent(E9, E7), object(E9, E10), to(E9, "the food chain").
english(rule54, "When plants and animals die decomposers help return nutrients to the food chain").
rule54:: isa(E9, "return"), isa(E7, "decomposers"), isa(E10, "nutrients"), agent(E9, E7), object(E9, E10), to(E9, "the food chain") -> purpose(E7, E9), .

% ("decomposers" "return" "nutrients" [ "to the food chain" ] )	"When"/WHEN	("plants" "die" "")
english(rule55, "When plants and animals die decomposers help return nutrients to the food chain").
rule55:: isa(E9, "return"), isa(E7, "decomposers"), isa(E10, "nutrients"), agent(E9, E7), object(E9, E10), to(E9, "the food chain") -> when(E9, E5), isa(E5, "die"), isa(E2, "plants"), agent(E5, E2).
english(rule56, "When plants and animals die decomposers help return nutrients to the food chain").
rule56:: isa(E5, "die"), isa(E2, "plants"), agent(E5, E2) -> when(E9, E5), isa(E9, "return"), isa(E7, "decomposers"), isa(E10, "nutrients"), agent(E9, E7), object(E9, E10), to(E9, "the food chain").

% ("decomposers" "return" "nutrients" [ "to the food chain" ] )	"When"/WHEN	("animals" "die" "")
english(rule57, "When plants and animals die decomposers help return nutrients to the food chain").
rule57:: isa(E9, "return"), isa(E7, "decomposers"), isa(E10, "nutrients"), agent(E9, E7), object(E9, E10), to(E9, "the food chain") -> when(E9, E5), isa(E5, "die"), isa(E4, "animals"), agent(E5, E4).
english(rule58, "When plants and animals die decomposers help return nutrients to the food chain").
rule58:: isa(E5, "die"), isa(E4, "animals"), agent(E5, E4) -> when(E9, E5), isa(E9, "return"), isa(E7, "decomposers"), isa(E10, "nutrients"), agent(E9, E7), object(E9, E10), to(E9, "the food chain").

% "Gravity"	"causes"/CAUSE	("the ball" "fall" "" [ "to the ground" ] )
english(rule59, "Gravity causes the ball to fall to the ground").
rule59:: isa(E1, "Gravity") -> cause(E1, E6), isa(E6, "fall"), isa(E4, "the ball"), agent(E6, E4), to(E6, "the ground").
english(rule60, "Gravity causes the ball to fall to the ground").
rule60:: isa(E6, "fall"), isa(E4, "the ball"), agent(E6, E4), to(E6, "the ground") -> cause(E1, E6), isa(E1, "Gravity").

