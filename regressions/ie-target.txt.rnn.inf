% ("our bodies"/?x "sweat" "perspiration" [ "In the hot weather" ] )	""/EFFECT	("our bodies"/?x "bring" "water" [ "to our[our] skin" ] )
isa(E7, "sweat"), isa(E6, "our bodies"), isa(E9, "perspiration"), agent(E7, E6), object(E7, E9), in(E7, "the hot weather") -> effect(E7, E12), isa(E12, "bring"), isa(E13, "water"), agent(E12, E6), object(E12, E13), to(E12, "our[our] skin").
isa(E12, "bring"), isa(E6, "our bodies"), isa(E13, "water"), agent(E12, E6), object(E12, E13), to(E12, "our[our] skin") -> effect(E7, E12), isa(E7, "sweat"), isa(E9, "perspiration"), agent(E7, E6), object(E7, E9), in(E7, "the hot weather").

% ("some animals"/?x "store" "food")	"by"/ENABLE	("some animals"/?x "prepare" "" [ "for the long winters" ] )
isa(E10, "store"), isa(E3, "some animals"), isa(E11, "food"), agent(E10, E3), object(E10, E11) -> enable(E10, E4), isa(E4, "prepare"), agent(E4, E3), for(E4, "the long winters").
isa(E4, "prepare"), isa(E3, "some animals"), agent(E4, E3), for(E4, "the long winters") -> enable(E10, E4), isa(E10, "store"), isa(E11, "food"), agent(E10, E3), object(E10, E11).

% ("some animals" "prepare" "" [ "for the long winters" ] )	"is called"/EXAMPLE	"hibernation"
isa(E4, "prepare"), isa(E3, "some animals"), agent(E4, E3), for(E4, "the long winters") -> example(E4, E18), isa(E18, "hibernation").
isa(E18, "hibernation") -> example(E4, E18), isa(E4, "prepare"), isa(E3, "some animals"), agent(E4, E3), for(E4, "the long winters").

% "A hand lens"	"is used"/FUNCTION	("A hand lens"/?x "view" "objects" [ "in more detail" ] )
isa(E3, "A hand lens") -> function(E3, E7), isa(E7, "view"), isa(E3, "A hand lens"), isa(E8, "objects"), agent(E7, E3), object(E7, E8), in(E7, "more detail").
isa(E7, "view"), isa(E3, "A hand lens"), isa(E8, "objects"), agent(E7, E3), object(E7, E8), in(E7, "more detail") -> function(E3, E7), isa(E3, "A hand lens").

% ("" "remove" "heat")	"by"/ENABLE	("Freezing" "change" "water" [ "from its[A hand lens] liquid state", "to its[its liquid state] solid state" ] )
isa(E18, "remove"), isa(E20, "heat"), object(E18, E20) -> enable(E18, E3), isa(E3, "change"), isa(E1, "Freezing"), isa(E4, "water"), agent(E3, E1), object(E3, E4), from(E3, "its[A hand lens] liquid state"), to(E3, "its[its liquid state] solid state").
isa(E3, "change"), isa(E1, "Freezing"), isa(E4, "water"), agent(E3, E1), object(E3, E4), from(E3, "its[A hand lens] liquid state"), to(E3, "its[its liquid state] solid state") -> enable(E18, E3), isa(E18, "remove"), isa(E20, "heat"), object(E18, E20).

% ("Animals" "not make" "their[some animals] own food")	"so"/EFFECT	("some animals" "eat" "")
isa(E4, "not make"), isa(E1, "Animals"), isa(E7, "their[some animals] own food"), agent(E4, E1), object(E4, E7) -> effect(E4, E11), isa(E11, "eat"), isa(E3, "some animals"), agent(E11, E3).
isa(E11, "eat"), isa(E3, "some animals"), agent(E11, E3) -> effect(E4, E11), isa(E4, "not make"), isa(E1, "Animals"), isa(E7, "their[some animals] own food"), agent(E4, E1), object(E4, E7).

% ("some animals"/?x "eat" "")	"to"/REQUIREMENT	("some animals"/?x "get" "nutrients")
isa(E11, "eat"), isa(E3, "some animals"), agent(E11, E3) -> requirement(E11, E13), isa(E13, "get"), isa(E14, "nutrients"), agent(E13, E3), object(E13, E14).
isa(E13, "get"), isa(E3, "some animals"), isa(E14, "nutrients"), agent(E13, E3), object(E13, E14) -> requirement(E11, E13), isa(E11, "eat"), agent(E11, E3).

% ("The friction between the two surfaces" "convert" "kinetic energy" [ "into heat" ] )
isa(E7, "convert") -> isa(E2, "The friction between the two surfaces"), isa(E9, "kinetic energy"), agent(E7, E2), object(E7, E9), into(E7, "heat").
isa(E2, "The friction between the two surfaces") -> isa(E7, "convert"), isa(E9, "kinetic energy"), agent(E7, E2), object(E7, E9), into(E7, "heat").
isa(E9, "kinetic energy") -> isa(E7, "convert"), isa(E2, "The friction between the two surfaces"), agent(E7, E2), object(E7, E9), into(E7, "heat").

% ("" "get" "rest")	"part of"/PART	("" "live" "a healthy life")
isa(E1, "get"), isa(E3, "rest"), object(E1, E3) -> part(E1, E10), isa(E10, "live"), isa(E13, "a healthy life"), object(E10, E13).
isa(E10, "live"), isa(E13, "a healthy life"), object(E10, E13) -> part(E1, E10), isa(E1, "get"), isa(E3, "rest"), object(E1, E3).

% "Decomposers"	"are"/EXAMPLE	("living things" "break down" "dead organisms")
isa(E1, "Decomposers") -> example(E1, E6), isa(E6, "break down"), isa(E4, "living things"), isa(E9, "dead organisms"), agent(E6, E4), object(E6, E9).
isa(E6, "break down"), isa(E4, "living things"), isa(E9, "dead organisms"), agent(E6, E4), object(E6, E9) -> example(E1, E6), isa(E1, "Decomposers").

% "Decomposers"	"are"/EXAMPLE	("living things" "recycle" "their[dead organisms] nutrients" [ "into the soil" ] )
isa(E1, "Decomposers") -> example(E1, E11), isa(E11, "recycle"), isa(E4, "living things"), isa(E13, "their[dead organisms] nutrients"), agent(E11, E4), object(E11, E13), into(E11, "the soil").
isa(E11, "recycle"), isa(E4, "living things"), isa(E13, "their[dead organisms] nutrients"), agent(E11, E4), object(E11, E13), into(E11, "the soil") -> example(E1, E11), isa(E1, "Decomposers").

% "Decomposers"	"are"/EXAMPLE	"living things"
isa(E1, "Decomposers") -> example(E1, E4), isa(E4, "living things").
isa(E4, "living things") -> example(E1, E4), isa(E1, "Decomposers").

% "Gravity"	"is"/EXAMPLE	("the force" "pull" "an object toward the center of the Earth")
isa(E1, "Gravity") -> example(E1, E6), isa(E6, "pull"), isa(E4, "the force"), isa(E8, "an object toward the center of the Earth"), agent(E6, E4), object(E6, E8).
isa(E6, "pull"), isa(E4, "the force"), isa(E8, "an object toward the center of the Earth"), agent(E6, E4), object(E6, E8) -> example(E1, E6), isa(E1, "Gravity").

% "Gravity"	"is"/EXAMPLE	"the force"
isa(E1, "Gravity") -> example(E1, E4), isa(E4, "the force").
isa(E4, "the force") -> example(E1, E4), isa(E1, "Gravity").

% "sweat"	"is way"/EXAMPLE	("an organism" "adjust" "sweat" [ "to hot temperatures" ] )
isa(E6, "sweat") -> example(E6, E14), isa(E14, "adjust"), isa(E12, "an organism"), isa(E6, "sweat"), agent(E14, E12), object(E14, E6), to(E14, "hot temperatures").
isa(E14, "adjust"), isa(E12, "an organism"), isa(E6, "sweat"), agent(E14, E12), object(E14, E6), to(E14, "hot temperatures") -> example(E6, E14), isa(E6, "sweat").

% "sweat"	"is way"/EXAMPLE	("an organism" "adjust" "a way" [ "to hot temperatures" ] )
isa(E6, "sweat") -> example(E6, E14), isa(E14, "adjust"), isa(E12, "an organism"), isa(E9, "a way"), agent(E14, E12), object(E14, E9), to(E14, "hot temperatures").
isa(E14, "adjust"), isa(E12, "an organism"), isa(E9, "a way"), agent(E14, E12), object(E14, E9), to(E14, "hot temperatures") -> example(E6, E14), isa(E6, "sweat").

% ("A squirrel"/?x "store" "nuts")	""/EFFECT	("A squirrel"/?x "prepare" "" [ "for a seasonal change in the environment" ] )
isa(E3, "store"), isa(E2, "A squirrel"), isa(E4, "nuts"), agent(E3, E2), object(E3, E4) -> effect(E3, E6), isa(E6, "prepare"), agent(E6, E2), for(E6, "a seasonal change in the environment").
isa(E6, "prepare"), isa(E2, "A squirrel"), agent(E6, E2), for(E6, "a seasonal change in the environment") -> effect(E3, E6), isa(E3, "store"), isa(E4, "nuts"), agent(E3, E2), object(E3, E4).

% ("A student"/?x "use" "a hand lens")	"to"/EFFECT	("A student"/?x "get" "" [ "a better look at the spots" ] )
isa(E4, "use"), isa(E2, "A student"), isa(E7, "a hand lens"), agent(E4, E2), object(E4, E7) -> effect(E4, E9), isa(E9, "get"), agent(E9, E2), arg(E9, "a better look at the spots").
isa(E9, "get"), isa(E2, "A student"), agent(E9, E2), arg(E9, "a better look at the spots") -> effect(E4, E9), isa(E4, "use"), isa(E7, "a hand lens"), agent(E4, E2), object(E4, E7).

% ("" "decrease" "the temperature")	"is way"/EFFECT	("" "change" "water" [ "from a liquid", "to a solid" ] )
isa(E1, "decrease"), isa(E3, "the temperature"), object(E1, E3) -> effect(E1, E8), isa(E8, "change"), isa(E9, "water"), object(E8, E9), from(E8, "a liquid"), to(E8, "a solid").
isa(E8, "change"), isa(E9, "water"), object(E8, E9), from(E8, "a liquid"), to(E8, "a solid") -> effect(E1, E8), isa(E1, "decrease"), isa(E3, "the temperature"), object(E1, E3).

% ("Animals" "get" "energy" [ "for growth from food", "for growth from food" ] )
isa(E2, "get") -> isa(E1, "Animals"), isa(E3, "energy"), agent(E2, E1), object(E2, E3), for(E2, "growth from food").
isa(E1, "Animals") -> isa(E2, "get"), isa(E3, "energy"), agent(E2, E1), object(E2, E3), for(E2, "growth from food").
isa(E3, "energy") -> isa(E2, "get"), isa(E1, "Animals"), agent(E2, E1), object(E2, E3), for(E2, "growth from food").

% "friction"	"caused"/CAUSE	("The heat" "produce" "the smoke")
isa(E10, "friction") -> cause(E10, E4), isa(E4, "produce"), isa(E2, "The heat"), isa(E6, "the smoke"), agent(E4, E2), object(E4, E6).
isa(E4, "produce"), isa(E2, "The heat"), isa(E6, "the smoke"), agent(E4, E2), object(E4, E6) -> cause(E10, E4), isa(E10, "friction").

% ("" "rest" "")	"necessary"/REQUIREMENT	("humans" "maintain" "good health")
isa(E1, "rest") -> requirement(E1, E7), isa(E7, "maintain"), isa(E5, "humans"), isa(E9, "good health"), agent(E7, E5), object(E7, E9).
isa(E7, "maintain"), isa(E5, "humans"), isa(E9, "good health"), agent(E7, E5), object(E7, E9) -> requirement(E1, E7), isa(E1, "rest").

% ("A student"/?x "use" "a graduated cylinder")	"to"/EFFECT	("A student"/?x "measure" "10 milliliters of water")
isa(E4, "use"), isa(E2, "A student"), isa(E7, "a graduated cylinder"), agent(E4, E2), object(E4, E7) -> effect(E4, E9), isa(E9, "measure"), isa(E12, "10 milliliters of water"), agent(E9, E2), object(E9, E12).
isa(E9, "measure"), isa(E2, "A student"), isa(E12, "10 milliliters of water"), agent(E9, E2), object(E9, E12) -> effect(E4, E9), isa(E4, "use"), isa(E7, "a graduated cylinder"), agent(E4, E2), object(E4, E7).

% ("A student"/?x "use" "a graduated cylinder")	"to"/EFFECT	("A student"/?x "measure" "mL")
isa(E4, "use"), isa(E2, "A student"), isa(E7, "a graduated cylinder"), agent(E4, E2), object(E4, E7) -> effect(E4, E9), isa(E9, "measure"), isa(E14, "mL"), agent(E9, E2), object(E9, E14).
isa(E9, "measure"), isa(E2, "A student"), isa(E14, "mL"), agent(E9, E2), object(E9, E14) -> effect(E4, E9), isa(E4, "use"), isa(E7, "a graduated cylinder"), agent(E4, E2), object(E4, E7).

% "The white fur of an arctic fox blends"	"is called"/EXAMPLE	"camouflage"
isa(E3, "The white fur of an arctic fox blends") -> example(E3, E15), isa(E15, "camouflage").
isa(E15, "camouflage") -> example(E3, E15), isa(E3, "The white fur of an arctic fox blends").

% "decomposers"	"help"/FUNCTION	("decomposers" "return" "nutrients" [ "to the food chain" ] )
isa(E7, "decomposers") -> function(E7, E9), isa(E9, "return"), isa(E7, "decomposers"), isa(E10, "nutrients"), agent(E9, E7), object(E9, E10), to(E9, "the food chain").
isa(E9, "return"), isa(E7, "decomposers"), isa(E10, "nutrients"), agent(E9, E7), object(E9, E10), to(E9, "the food chain") -> function(E7, E9), isa(E7, "decomposers").

% ("decomposers" "return" "nutrients" [ "to the food chain" ] )	"When"/WHEN	("plants" "die" "")
isa(E9, "return"), isa(E7, "decomposers"), isa(E10, "nutrients"), agent(E9, E7), object(E9, E10), to(E9, "the food chain") -> when(E9, E5), isa(E5, "die"), isa(E2, "plants"), agent(E5, E2).
isa(E5, "die"), isa(E2, "plants"), agent(E5, E2) -> when(E9, E5), isa(E9, "return"), isa(E7, "decomposers"), isa(E10, "nutrients"), agent(E9, E7), object(E9, E10), to(E9, "the food chain").

% ("decomposers" "return" "nutrients" [ "to the food chain" ] )	"When"/WHEN	("animals" "die" "")
isa(E9, "return"), isa(E7, "decomposers"), isa(E10, "nutrients"), agent(E9, E7), object(E9, E10), to(E9, "the food chain") -> when(E9, E5), isa(E5, "die"), isa(E4, "animals"), agent(E5, E4).
isa(E5, "die"), isa(E4, "animals"), agent(E5, E4) -> when(E9, E5), isa(E9, "return"), isa(E7, "decomposers"), isa(E10, "nutrients"), agent(E9, E7), object(E9, E10), to(E9, "the food chain").

% "Gravity"	"causes"/CAUSE	("the ball" "fall" "" [ "to the ground" ] )
isa(E1, "Gravity") -> cause(E1, E6), isa(E6, "fall"), isa(E4, "the ball"), agent(E6, E4), to(E6, "the ground").
isa(E6, "fall"), isa(E4, "the ball"), agent(E6, E4), to(E6, "the ground") -> cause(E1, E6), isa(E1, "Gravity").

